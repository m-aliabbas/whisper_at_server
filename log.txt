2025-05-06 05:40:07,426 - server - INFO - Loading Whisper-AT model: base
2025-05-06 05:40:07,426 - server - INFO - Loading Whisper-AT model: base
2025-05-06 05:40:07,426 - server - INFO - Loading Whisper-AT model: base
2025-05-06 05:40:07,426 - server - INFO - Loading Whisper-AT model: base
2025-05-06 05:40:10,520 - server - INFO - Model loaded successfully
2025-05-06 05:40:10,595 - server - INFO - Model loaded successfully
2025-05-06 05:40:10,646 - server - INFO - Model loaded successfully
2025-05-06 05:40:10,648 - server - INFO - Model loaded successfully
2025-05-06 05:40:12,959 - server - INFO - Shutting down application
2025-05-06 05:40:12,960 - server - INFO - Shutting down application
2025-05-06 05:40:13,009 - server - INFO - Shutting down application
2025-05-06 05:40:13,034 - server - INFO - Shutting down application
2025-05-06 05:40:20,880 - server - INFO - Loading Whisper-AT model: base
2025-05-06 05:40:20,883 - server - INFO - Loading Whisper-AT model: base
2025-05-06 05:40:20,886 - server - INFO - Loading Whisper-AT model: base
2025-05-06 05:40:20,897 - server - INFO - Loading Whisper-AT model: base
2025-05-06 05:40:23,176 - server - INFO - Model loaded successfully
2025-05-06 05:40:23,578 - server - INFO - Model loaded successfully
2025-05-06 05:40:23,770 - server - INFO - Model loaded successfully
2025-05-06 05:40:23,781 - server - INFO - Model loaded successfully
2025-05-07 14:16:49,316 - server - INFO - Shutting down application
2025-05-07 14:16:49,320 - server - INFO - Shutting down application
2025-05-07 14:16:49,323 - server - INFO - Shutting down application
2025-05-07 14:16:49,381 - server - INFO - Shutting down application
2025-05-07 14:16:52,615 - server - INFO - Loading Whisper-AT model: base
2025-05-07 14:16:52,655 - server - INFO - Loading Whisper-AT model: base
2025-05-07 14:16:52,658 - server - INFO - Loading Whisper-AT model: base
2025-05-07 14:16:52,726 - server - INFO - Loading Whisper-AT model: base
2025-05-07 14:16:53,799 - server - INFO - Model loaded successfully
2025-05-07 14:16:53,969 - server - INFO - Model loaded successfully
2025-05-07 14:16:54,245 - server - INFO - Model loaded successfully
2025-05-07 14:16:54,263 - server - INFO - Model loaded successfully
2025-05-08 17:15:10,926 - server - INFO - Shutting down application
2025-05-08 17:15:10,926 - server - INFO - Shutting down application
2025-05-08 17:15:10,955 - server - INFO - Shutting down application
2025-05-08 17:15:10,963 - server - INFO - Shutting down application
2025-05-08 17:21:02,606 - server - INFO - Loading Whisper-AT model: base
2025-05-08 17:21:02,606 - server - INFO - Loading Whisper-AT model: base
2025-05-08 17:21:02,635 - server - INFO - Loading Whisper-AT model: base
2025-05-08 17:21:02,635 - server - INFO - Loading Whisper-AT model: base
2025-05-08 17:21:05,951 - server - INFO - Model loaded successfully
2025-05-08 17:21:06,068 - server - INFO - Model loaded successfully
2025-05-08 17:21:06,214 - server - INFO - Model loaded successfully
2025-05-08 17:21:06,220 - server - INFO - Model loaded successfully
2025-05-08 17:21:51,265 - server - INFO - Shutting down application
2025-05-08 17:21:51,286 - server - INFO - Shutting down application
2025-05-08 17:21:51,321 - server - INFO - Shutting down application
2025-05-08 17:21:51,324 - server - INFO - Shutting down application
2025-05-12 13:24:53,505 - server - INFO - Loading Whisper-AT model: base
2025-05-12 13:24:54,402 - server - INFO - Model loaded successfully
label 0:
2025-05-12 13:25:19,766 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
2025-05-12 13:25:19,766 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
2025-05-12 13:25:19,766 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-05-12 13:25:19,766 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-05-12 13:25:19,766 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
2025-05-12 13:25:19,766 - print_capture - INFO -     x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
2025-05-12 13:25:19,766 - print_capture - INFO -     $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
2025-05-12 13:25:19,766 - print_capture - INFO -     $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
2025-05-12 13:25:19,766 - print_capture - INFO -     bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
2025-05-12 13:25:19,766 - print_capture - INFO -     $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
2025-05-12 13:25:19,766 - print_capture - INFO -     $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
2025-05-12 13:25:19,766 - print_capture - INFO -     branch $22pred, 24, 32                   ['$22pred']
label 24:
2025-05-12 13:25:19,766 - print_capture - INFO - label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
2025-05-12 13:25:19,766 - print_capture - INFO -     $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
2025-05-12 13:25:19,766 - print_capture - INFO -     bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
2025-05-12 13:25:19,767 - print_capture - INFO -     $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
2025-05-12 13:25:19,767 - print_capture - INFO -     branch $28pred, 30, 40                   ['$28pred']
label 30:
2025-05-12 13:25:19,767 - print_capture - INFO - label 30:
    jump 36                                  []
2025-05-12 13:25:19,767 - print_capture - INFO -     jump 36                                  []
label 32:
2025-05-12 13:25:19,767 - print_capture - INFO - label 32:
    jump 40                                  []
2025-05-12 13:25:19,767 - print_capture - INFO -     jump 40                                  []
label 36:
2025-05-12 13:25:19,767 - print_capture - INFO - label 36:
    x0 = const(int, 0)                       ['x0']
2025-05-12 13:25:19,767 - print_capture - INFO -     x0 = const(int, 0)                       ['x0']
    jump 40                                  []
2025-05-12 13:25:19,767 - print_capture - INFO -     jump 40                                  []
label 40:
2025-05-12 13:25:19,767 - print_capture - INFO - label 40:
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
2025-05-12 13:25:19,767 - print_capture - INFO -     $const42.1.2 = const(int, -1)            ['$const42.1.2']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
2025-05-12 13:25:19,767 - print_capture - INFO -     x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
2025-05-12 13:25:19,767 - print_capture - INFO -     $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
2025-05-12 13:25:19,767 - print_capture - INFO -     $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
2025-05-12 13:25:19,767 - print_capture - INFO -     bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
2025-05-12 13:25:19,767 - print_capture - INFO -     $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
2025-05-12 13:25:19,767 - print_capture - INFO -     $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
2025-05-12 13:25:19,767 - print_capture - INFO -     branch $60pred, 62, 70                   ['$60pred']
label 62:
2025-05-12 13:25:19,767 - print_capture - INFO - label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
2025-05-12 13:25:19,767 - print_capture - INFO -     $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-05-12 13:25:19,767 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
2025-05-12 13:25:19,767 - print_capture - INFO -     $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
2025-05-12 13:25:19,767 - print_capture - INFO -     branch $66pred, 68, 78                   ['$66pred']
label 68:
2025-05-12 13:25:19,767 - print_capture - INFO - label 68:
    jump 74                                  []
2025-05-12 13:25:19,767 - print_capture - INFO -     jump 74                                  []
label 70:
2025-05-12 13:25:19,767 - print_capture - INFO - label 70:
    jump 78                                  []
2025-05-12 13:25:19,767 - print_capture - INFO -     jump 78                                  []
label 74:
2025-05-12 13:25:19,767 - print_capture - INFO - label 74:
    x1 = const(int, 0)                       ['x1']
2025-05-12 13:25:19,767 - print_capture - INFO -     x1 = const(int, 0)                       ['x1']
    jump 78                                  []
2025-05-12 13:25:19,767 - print_capture - INFO -     jump 78                                  []
label 78:
2025-05-12 13:25:19,767 - print_capture - INFO - label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
2025-05-12 13:25:19,767 - print_capture - INFO -     bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
2025-05-12 13:25:19,767 - print_capture - INFO -     $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
2025-05-12 13:25:19,767 - print_capture - INFO -     branch $80pred, 82, 102                  ['$80pred']
label 82:
2025-05-12 13:25:19,767 - print_capture - INFO - label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/whisper_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
2025-05-12 13:25:19,767 - print_capture - INFO -     $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/whisper_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
2025-05-12 13:25:19,767 - print_capture - INFO -     $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
2025-05-12 13:25:19,767 - print_capture - INFO -     $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/whisper_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
2025-05-12 13:25:19,767 - print_capture - INFO -     $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/whisper_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
2025-05-12 13:25:19,767 - print_capture - INFO -     $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
2025-05-12 13:25:19,767 - print_capture - INFO -     $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
2025-05-12 13:25:19,767 - print_capture - INFO -     $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
2025-05-12 13:25:19,768 - print_capture - INFO -     $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
2025-05-12 13:25:19,768 - print_capture - INFO -     return $100return_value.9                ['$100return_value.9']
label 102:
2025-05-12 13:25:19,768 - print_capture - INFO - label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/whisper_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
2025-05-12 13:25:19,768 - print_capture - INFO -     $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/whisper_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
2025-05-12 13:25:19,768 - print_capture - INFO -     $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
2025-05-12 13:25:19,768 - print_capture - INFO -     $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/whisper_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
2025-05-12 13:25:19,768 - print_capture - INFO -     $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/whisper_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
2025-05-12 13:25:19,768 - print_capture - INFO -     $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
2025-05-12 13:25:19,768 - print_capture - INFO -     $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
2025-05-12 13:25:19,768 - print_capture - INFO -     $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
2025-05-12 13:25:19,768 - print_capture - INFO -     $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
2025-05-12 13:25:19,768 - print_capture - INFO -     return $120return_value.9                ['$120return_value.9']
label 0:
2025-05-12 13:25:20,019 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
2025-05-12 13:25:20,019 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-05-12 13:25:20,019 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-05-12 13:25:20,019 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-05-12 13:25:20,019 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-05-12 13:25:20,019 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-05-12 13:25:20,019 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-05-12 13:25:20,019 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-05-12 13:25:20,019 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-05-12 13:25:20,019 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-05-12 13:25:20,019 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-05-12 13:25:20,019 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-05-12 13:25:20,019 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-05-12 13:25:20,019 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-05-12 13:25:20,019 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
label 0:
2025-05-12 13:25:20,020 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
2025-05-12 13:25:20,020 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-05-12 13:25:20,020 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-05-12 13:25:20,020 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-05-12 13:25:20,020 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-05-12 13:25:20,020 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-05-12 13:25:20,020 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-05-12 13:25:20,020 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-05-12 13:25:20,020 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-05-12 13:25:20,020 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-05-12 13:25:20,020 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-05-12 13:25:20,020 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-05-12 13:25:20,020 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-05-12 13:25:20,020 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-05-12 13:25:20,020 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
2025-05-12 13:25:20,158 - server - INFO - Original audio sampling rate: 44100 Hz
2025-05-12 13:25:20,158 - server - INFO - Converting audio to 16000 Hz...
2025-05-12 13:25:31,567 - server - INFO - Shutting down application
Starting Whisper-AT Transcription Server
2025-06-13 07:33:41,636 - print_capture - INFO - Starting Whisper-AT Transcription Server
2025-06-13 07:33:42,551 - server - INFO - Loading Whisper-AT model: base
2025-06-13 07:33:49,313 - server - INFO - Model loaded successfully
label 0:
label 0:
2025-06-13 07:34:42,245 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,245 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:42,245 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:42,245 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 07:34:42,245 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 07:34:42,245 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 07:34:42,245 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 07:34:42,245 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:34:42,245 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:34:42,245 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
2025-06-13 07:34:42,245 - print_capture - INFO -     x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
2025-06-13 07:34:42,245 - print_capture - INFO -     x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
2025-06-13 07:34:42,245 - print_capture - INFO -     $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
2025-06-13 07:34:42,246 - print_capture - INFO -     $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
2025-06-13 07:34:42,246 - print_capture - INFO -     $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
2025-06-13 07:34:42,246 - print_capture - INFO -     $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
2025-06-13 07:34:42,246 - print_capture - INFO -     bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
2025-06-13 07:34:42,246 - print_capture - INFO -     bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
2025-06-13 07:34:42,246 - print_capture - INFO -     $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
2025-06-13 07:34:42,246 - print_capture - INFO -     $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
2025-06-13 07:34:42,246 - print_capture - INFO -     $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
2025-06-13 07:34:42,246 - print_capture - INFO -     $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
2025-06-13 07:34:42,246 - print_capture - INFO -     branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
2025-06-13 07:34:42,246 - print_capture - INFO -     branch $22pred, 24, 32                   ['$22pred']
label 24:
label 24:
2025-06-13 07:34:42,246 - print_capture - INFO - label 24:
label 24:
label 24:
2025-06-13 07:34:42,246 - print_capture - INFO - label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
2025-06-13 07:34:42,246 - print_capture - INFO -     $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
2025-06-13 07:34:42,246 - print_capture - INFO -     $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
2025-06-13 07:34:42,246 - print_capture - INFO -     bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
2025-06-13 07:34:42,246 - print_capture - INFO -     bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
2025-06-13 07:34:42,246 - print_capture - INFO -     $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
2025-06-13 07:34:42,246 - print_capture - INFO -     $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
2025-06-13 07:34:42,246 - print_capture - INFO -     branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
2025-06-13 07:34:42,246 - print_capture - INFO -     branch $28pred, 30, 40                   ['$28pred']
label 30:
label 30:
2025-06-13 07:34:42,246 - print_capture - INFO - label 30:
label 30:
label 30:
2025-06-13 07:34:42,246 - print_capture - INFO - label 30:
    jump 36                                  []
    jump 36                                  []
2025-06-13 07:34:42,246 - print_capture - INFO -     jump 36                                  []
    jump 36                                  []
    jump 36                                  []
2025-06-13 07:34:42,246 - print_capture - INFO -     jump 36                                  []
label 32:
label 32:
2025-06-13 07:34:42,246 - print_capture - INFO - label 32:
label 32:
label 32:
2025-06-13 07:34:42,246 - print_capture - INFO - label 32:
    jump 40                                  []
    jump 40                                  []
2025-06-13 07:34:42,246 - print_capture - INFO -     jump 40                                  []
    jump 40                                  []
    jump 40                                  []
2025-06-13 07:34:42,246 - print_capture - INFO -     jump 40                                  []
label 36:
label 36:
2025-06-13 07:34:42,246 - print_capture - INFO - label 36:
label 36:
label 36:
2025-06-13 07:34:42,246 - print_capture - INFO - label 36:
    x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
2025-06-13 07:34:42,246 - print_capture - INFO -     x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
2025-06-13 07:34:42,246 - print_capture - INFO -     x0 = const(int, 0)                       ['x0']
    jump 40                                  []
    jump 40                                  []
2025-06-13 07:34:42,246 - print_capture - INFO -     jump 40                                  []
    jump 40                                  []
    jump 40                                  []
2025-06-13 07:34:42,246 - print_capture - INFO -     jump 40                                  []
label 40:
label 40:
2025-06-13 07:34:42,246 - print_capture - INFO - label 40:
label 40:
label 40:
2025-06-13 07:34:42,246 - print_capture - INFO - label 40:
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
2025-06-13 07:34:42,246 - print_capture - INFO -     $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
2025-06-13 07:34:42,246 - print_capture - INFO -     $const42.1.2 = const(int, -1)            ['$const42.1.2']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
2025-06-13 07:34:42,246 - print_capture - INFO -     x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
2025-06-13 07:34:42,246 - print_capture - INFO -     x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
2025-06-13 07:34:42,247 - print_capture - INFO -     $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
2025-06-13 07:34:42,247 - print_capture - INFO -     $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
2025-06-13 07:34:42,247 - print_capture - INFO -     $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
2025-06-13 07:34:42,247 - print_capture - INFO -     $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
2025-06-13 07:34:42,247 - print_capture - INFO -     bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
2025-06-13 07:34:42,247 - print_capture - INFO -     bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
2025-06-13 07:34:42,247 - print_capture - INFO -     $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
2025-06-13 07:34:42,247 - print_capture - INFO -     $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
2025-06-13 07:34:42,247 - print_capture - INFO -     $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
2025-06-13 07:34:42,247 - print_capture - INFO -     $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
2025-06-13 07:34:42,247 - print_capture - INFO -     branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
2025-06-13 07:34:42,247 - print_capture - INFO -     branch $60pred, 62, 70                   ['$60pred']
label 62:
label 62:
2025-06-13 07:34:42,247 - print_capture - INFO - label 62:
label 62:
label 62:
2025-06-13 07:34:42,247 - print_capture - INFO - label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
2025-06-13 07:34:42,247 - print_capture - INFO -     $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
2025-06-13 07:34:42,247 - print_capture - INFO -     $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 07:34:42,247 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 07:34:42,247 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
2025-06-13 07:34:42,247 - print_capture - INFO -     $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
2025-06-13 07:34:42,247 - print_capture - INFO -     $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
2025-06-13 07:34:42,247 - print_capture - INFO -     branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
2025-06-13 07:34:42,247 - print_capture - INFO -     branch $66pred, 68, 78                   ['$66pred']
label 68:
label 68:
2025-06-13 07:34:42,247 - print_capture - INFO - label 68:
label 68:
label 68:
2025-06-13 07:34:42,247 - print_capture - INFO - label 68:
    jump 74                                  []
    jump 74                                  []
2025-06-13 07:34:42,247 - print_capture - INFO -     jump 74                                  []
    jump 74                                  []
    jump 74                                  []
2025-06-13 07:34:42,247 - print_capture - INFO -     jump 74                                  []
label 70:
label 70:
2025-06-13 07:34:42,247 - print_capture - INFO - label 70:
label 70:
label 70:
2025-06-13 07:34:42,247 - print_capture - INFO - label 70:
    jump 78                                  []
    jump 78                                  []
2025-06-13 07:34:42,247 - print_capture - INFO -     jump 78                                  []
    jump 78                                  []
    jump 78                                  []
2025-06-13 07:34:42,247 - print_capture - INFO -     jump 78                                  []
label 74:
label 74:
2025-06-13 07:34:42,247 - print_capture - INFO - label 74:
label 74:
label 74:
2025-06-13 07:34:42,247 - print_capture - INFO - label 74:
    x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
2025-06-13 07:34:42,247 - print_capture - INFO -     x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
2025-06-13 07:34:42,247 - print_capture - INFO -     x1 = const(int, 0)                       ['x1']
    jump 78                                  []
    jump 78                                  []
2025-06-13 07:34:42,247 - print_capture - INFO -     jump 78                                  []
    jump 78                                  []
    jump 78                                  []
2025-06-13 07:34:42,247 - print_capture - INFO -     jump 78                                  []
label 78:
label 78:
2025-06-13 07:34:42,247 - print_capture - INFO - label 78:
label 78:
label 78:
2025-06-13 07:34:42,247 - print_capture - INFO - label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
2025-06-13 07:34:42,247 - print_capture - INFO -     bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
2025-06-13 07:34:42,247 - print_capture - INFO -     bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
2025-06-13 07:34:42,247 - print_capture - INFO -     $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
2025-06-13 07:34:42,248 - print_capture - INFO -     $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
2025-06-13 07:34:42,248 - print_capture - INFO -     branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
2025-06-13 07:34:42,248 - print_capture - INFO -     branch $80pred, 82, 102                  ['$80pred']
label 82:
label 82:
2025-06-13 07:34:42,248 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 07:34:42,248 - print_capture - INFO - label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
2025-06-13 07:34:42,248 - print_capture - INFO -     $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
2025-06-13 07:34:42,248 - print_capture - INFO -     $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
2025-06-13 07:34:42,248 - print_capture - INFO -     $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
2025-06-13 07:34:42,248 - print_capture - INFO -     $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
2025-06-13 07:34:42,248 - print_capture - INFO -     $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
2025-06-13 07:34:42,248 - print_capture - INFO -     $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
2025-06-13 07:34:42,248 - print_capture - INFO -     $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
2025-06-13 07:34:42,248 - print_capture - INFO -     $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
2025-06-13 07:34:42,248 - print_capture - INFO -     $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
2025-06-13 07:34:42,248 - print_capture - INFO -     $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
2025-06-13 07:34:42,248 - print_capture - INFO -     $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
2025-06-13 07:34:42,248 - print_capture - INFO -     $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
2025-06-13 07:34:42,248 - print_capture - INFO -     $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
2025-06-13 07:34:42,248 - print_capture - INFO -     $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
2025-06-13 07:34:42,248 - print_capture - INFO -     $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
2025-06-13 07:34:42,248 - print_capture - INFO -     $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
2025-06-13 07:34:42,248 - print_capture - INFO -     return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
2025-06-13 07:34:42,248 - print_capture - INFO -     return $100return_value.9                ['$100return_value.9']
label 102:
label 102:
2025-06-13 07:34:42,248 - print_capture - INFO - label 102:
label 102:
label 102:
2025-06-13 07:34:42,248 - print_capture - INFO - label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
2025-06-13 07:34:42,248 - print_capture - INFO -     $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
2025-06-13 07:34:42,248 - print_capture - INFO -     $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
2025-06-13 07:34:42,248 - print_capture - INFO -     $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
2025-06-13 07:34:42,248 - print_capture - INFO -     $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
2025-06-13 07:34:42,248 - print_capture - INFO -     $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
2025-06-13 07:34:42,248 - print_capture - INFO -     $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
2025-06-13 07:34:42,248 - print_capture - INFO -     $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
2025-06-13 07:34:42,248 - print_capture - INFO -     $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
2025-06-13 07:34:42,248 - print_capture - INFO -     $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
2025-06-13 07:34:42,248 - print_capture - INFO -     $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
2025-06-13 07:34:42,248 - print_capture - INFO -     $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
2025-06-13 07:34:42,248 - print_capture - INFO -     $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
2025-06-13 07:34:42,248 - print_capture - INFO -     $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
2025-06-13 07:34:42,248 - print_capture - INFO -     $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
2025-06-13 07:34:42,249 - print_capture - INFO -     $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
2025-06-13 07:34:42,249 - print_capture - INFO -     $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
2025-06-13 07:34:42,249 - print_capture - INFO -     return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
2025-06-13 07:34:42,249 - print_capture - INFO -     return $120return_value.9                ['$120return_value.9']
label 0:
label 0:
2025-06-13 07:34:42,348 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,348 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:42,348 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:42,348 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 07:34:42,349 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 07:34:42,349 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 07:34:42,349 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 07:34:42,349 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    y = arg(3, name=y)                       ['y']
2025-06-13 07:34:42,349 - print_capture - INFO -     y = arg(3, name=y)                       ['y']
    y = arg(3, name=y)                       ['y']
    y = arg(3, name=y)                       ['y']
2025-06-13 07:34:42,349 - print_capture - INFO -     y = arg(3, name=y)                       ['y']
    $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>) ['$2load_global.0']
    $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>) ['$2load_global.0']
2025-06-13 07:34:42,349 - print_capture - INFO -     $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>) ['$2load_global.0']
    $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>) ['$2load_global.0']
    $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>) ['$2load_global.0']
2025-06-13 07:34:42,349 - print_capture - INFO -     $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>) ['$2load_global.0']
    $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', 'threshold', 'x', 'zero_pos']
    $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', 'threshold', 'x', 'zero_pos']
2025-06-13 07:34:42,349 - print_capture - INFO -     $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', 'threshold', 'x', 'zero_pos']
    $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', 'threshold', 'x', 'zero_pos']
    $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', 'threshold', 'x', 'zero_pos']
2025-06-13 07:34:42,349 - print_capture - INFO -     $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', 'threshold', 'x', 'zero_pos']
    $const14.6.1 = const(NoneType, None)     ['$const14.6.1']
    $const14.6.1 = const(NoneType, None)     ['$const14.6.1']
2025-06-13 07:34:42,349 - print_capture - INFO -     $const14.6.1 = const(NoneType, None)     ['$const14.6.1']
    $const14.6.1 = const(NoneType, None)     ['$const14.6.1']
    $const14.6.1 = const(NoneType, None)     ['$const14.6.1']
2025-06-13 07:34:42,349 - print_capture - INFO -     $const14.6.1 = const(NoneType, None)     ['$const14.6.1']
    $const16.7.1 = const(NoneType, None)     ['$const16.7.1']
    $const16.7.1 = const(NoneType, None)     ['$const16.7.1']
2025-06-13 07:34:42,349 - print_capture - INFO -     $const16.7.1 = const(NoneType, None)     ['$const16.7.1']
    $const16.7.1 = const(NoneType, None)     ['$const16.7.1']
    $const16.7.1 = const(NoneType, None)     ['$const16.7.1']
2025-06-13 07:34:42,349 - print_capture - INFO -     $const16.7.1 = const(NoneType, None)     ['$const16.7.1']
    $18build_slice.8 = global(slice: <class 'slice'>) ['$18build_slice.8']
    $18build_slice.8 = global(slice: <class 'slice'>) ['$18build_slice.8']
2025-06-13 07:34:42,349 - print_capture - INFO -     $18build_slice.8 = global(slice: <class 'slice'>) ['$18build_slice.8']
    $18build_slice.8 = global(slice: <class 'slice'>) ['$18build_slice.8']
    $18build_slice.8 = global(slice: <class 'slice'>) ['$18build_slice.8']
2025-06-13 07:34:42,349 - print_capture - INFO -     $18build_slice.8 = global(slice: <class 'slice'>) ['$18build_slice.8']
    $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$18build_slice.8', '$18build_slice.9', '$const14.6.1', '$const16.7.1']
    $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$18build_slice.8', '$18build_slice.9', '$const14.6.1', '$const16.7.1']
2025-06-13 07:34:42,349 - print_capture - INFO -     $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$18build_slice.8', '$18build_slice.9', '$const14.6.1', '$const16.7.1']
    $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$18build_slice.8', '$18build_slice.9', '$const14.6.1', '$const16.7.1']
    $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$18build_slice.8', '$18build_slice.9', '$const14.6.1', '$const16.7.1']
2025-06-13 07:34:42,349 - print_capture - INFO -     $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$18build_slice.8', '$18build_slice.9', '$const14.6.1', '$const16.7.1']
    y[$18build_slice.9] = $10call_function.4 ['$10call_function.4', '$18build_slice.9', 'y']
    y[$18build_slice.9] = $10call_function.4 ['$10call_function.4', '$18build_slice.9', 'y']
2025-06-13 07:34:42,349 - print_capture - INFO -     y[$18build_slice.9] = $10call_function.4 ['$10call_function.4', '$18build_slice.9', 'y']
    y[$18build_slice.9] = $10call_function.4 ['$10call_function.4', '$18build_slice.9', 'y']
    y[$18build_slice.9] = $10call_function.4 ['$10call_function.4', '$18build_slice.9', 'y']
2025-06-13 07:34:42,349 - print_capture - INFO -     y[$18build_slice.9] = $10call_function.4 ['$10call_function.4', '$18build_slice.9', 'y']
    $const22.10.1 = const(NoneType, None)    ['$const22.10.1']
    $const22.10.1 = const(NoneType, None)    ['$const22.10.1']
2025-06-13 07:34:42,349 - print_capture - INFO -     $const22.10.1 = const(NoneType, None)    ['$const22.10.1']
    $const22.10.1 = const(NoneType, None)    ['$const22.10.1']
    $const22.10.1 = const(NoneType, None)    ['$const22.10.1']
2025-06-13 07:34:42,349 - print_capture - INFO -     $const22.10.1 = const(NoneType, None)    ['$const22.10.1']
    $24return_value.11 = cast(value=$const22.10.1) ['$24return_value.11', '$const22.10.1']
    $24return_value.11 = cast(value=$const22.10.1) ['$24return_value.11', '$const22.10.1']
2025-06-13 07:34:42,349 - print_capture - INFO -     $24return_value.11 = cast(value=$const22.10.1) ['$24return_value.11', '$const22.10.1']
    $24return_value.11 = cast(value=$const22.10.1) ['$24return_value.11', '$const22.10.1']
    $24return_value.11 = cast(value=$const22.10.1) ['$24return_value.11', '$const22.10.1']
2025-06-13 07:34:42,349 - print_capture - INFO -     $24return_value.11 = cast(value=$const22.10.1) ['$24return_value.11', '$const22.10.1']
    return $24return_value.11                ['$24return_value.11']
    return $24return_value.11                ['$24return_value.11']
2025-06-13 07:34:42,349 - print_capture - INFO -     return $24return_value.11                ['$24return_value.11']
    return $24return_value.11                ['$24return_value.11']
    return $24return_value.11                ['$24return_value.11']
2025-06-13 07:34:42,349 - print_capture - INFO -     return $24return_value.11                ['$24return_value.11']
label 0:
label 0:
2025-06-13 07:34:42,369 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,369 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:42,369 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:42,369 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 07:34:42,369 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 07:34:42,369 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 07:34:42,369 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 07:34:42,369 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:42,369 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:42,369 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:42,370 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:42,370 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:42,370 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:42,370 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:42,370 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:42,370 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:42,370 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:42,370 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:42,370 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:42,370 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:42,370 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:42,370 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:42,370 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:42,370 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:42,370 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:42,370 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:42,370 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:42,370 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:42,370 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:42,370 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:42,370 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:42,370 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:42,370 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:42,370 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const40.17.2 = const(int, 0)            ['$const40.17.2']
    $const40.17.2 = const(int, 0)            ['$const40.17.2']
2025-06-13 07:34:42,370 - print_capture - INFO -     $const40.17.2 = const(int, 0)            ['$const40.17.2']
    $const40.17.2 = const(int, 0)            ['$const40.17.2']
    $const40.17.2 = const(int, 0)            ['$const40.17.2']
2025-06-13 07:34:42,370 - print_capture - INFO -     $const40.17.2 = const(int, 0)            ['$const40.17.2']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:42,370 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:42,370 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:42,370 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:42,370 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17.2, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.2, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.2', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.2, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.2, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.2', '$const42.18.0']
2025-06-13 07:34:42,370 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.2, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.2, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.2', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.2, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.2, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.2', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.2, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.2, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.2', '$const42.18.0']
2025-06-13 07:34:42,370 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.2, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.2, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.2', '$const42.18.0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:42,370 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:42,370 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:42,370 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:42,370 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:42,370 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:42,370 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:42,370 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:42,370 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:42,370 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:42,371 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:42,371 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:42,371 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:42,371 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:42,371 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:42,371 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:42,371 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:42,371 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:42,371 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:42,371 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:42,371 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:42,371 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:42,371 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const70.32.2 = const(int, 0)            ['$const70.32.2']
    $const70.32.2 = const(int, 0)            ['$const70.32.2']
2025-06-13 07:34:42,371 - print_capture - INFO -     $const70.32.2 = const(int, 0)            ['$const70.32.2']
    $const70.32.2 = const(int, 0)            ['$const70.32.2']
    $const70.32.2 = const(int, 0)            ['$const70.32.2']
2025-06-13 07:34:42,371 - print_capture - INFO -     $const70.32.2 = const(int, 0)            ['$const70.32.2']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.2, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.2']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.2, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.2']
2025-06-13 07:34:42,371 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.2, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.2']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.2, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.2']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.2, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.2']
2025-06-13 07:34:42,371 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.2, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.2']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:42,371 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:42,371 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:42,371 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:42,371 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:42,371 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:42,371 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:42,371 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:42,371 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:42,371 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:42,371 - print_capture - INFO -     jump 80                                  []
label 80:
label 80:
2025-06-13 07:34:42,371 - print_capture - INFO - label 80:
label 80:
label 80:
2025-06-13 07:34:42,371 - print_capture - INFO - label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:42,371 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:42,371 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:42,371 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:42,371 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:42,371 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:42,371 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:42,371 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:42,371 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:42,371 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:42,371 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
label 82:
2025-06-13 07:34:42,371 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 07:34:42,372 - print_capture - INFO - label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:42,372 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:42,372 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:42,372 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:42,372 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:42,372 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:42,372 - print_capture - INFO -     jump 80                                  []
label 90:
label 90:
2025-06-13 07:34:42,372 - print_capture - INFO - label 90:
label 90:
label 90:
2025-06-13 07:34:42,372 - print_capture - INFO - label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:42,372 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:42,372 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:42,372 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:42,372 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
label 0:
label 0:
2025-06-13 07:34:42,382 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,382 - print_capture - INFO - label 0:
    shape = arg(0, name=shape)               ['shape']
    shape = arg(0, name=shape)               ['shape']
2025-06-13 07:34:42,382 - print_capture - INFO -     shape = arg(0, name=shape)               ['shape']
    shape = arg(0, name=shape)               ['shape']
    shape = arg(0, name=shape)               ['shape']
2025-06-13 07:34:42,382 - print_capture - INFO -     shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    dtype = arg(1, name=dtype)               ['dtype']
2025-06-13 07:34:42,382 - print_capture - INFO -     dtype = arg(1, name=dtype)               ['dtype']
    dtype = arg(1, name=dtype)               ['dtype']
    dtype = arg(1, name=dtype)               ['dtype']
2025-06-13 07:34:42,382 - print_capture - INFO -     dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
2025-06-13 07:34:42,382 - print_capture - INFO -     $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
2025-06-13 07:34:42,382 - print_capture - INFO -     $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(bool, 1d, C)) ['$8load_deref.3']
    $8load_deref.3 = freevar(retty: array(bool, 1d, C)) ['$8load_deref.3']
2025-06-13 07:34:42,382 - print_capture - INFO -     $8load_deref.3 = freevar(retty: array(bool, 1d, C)) ['$8load_deref.3']
    $8load_deref.3 = freevar(retty: array(bool, 1d, C)) ['$8load_deref.3']
    $8load_deref.3 = freevar(retty: array(bool, 1d, C)) ['$8load_deref.3']
2025-06-13 07:34:42,382 - print_capture - INFO -     $8load_deref.3 = freevar(retty: array(bool, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4420), Var(dtype, arrayobj.py:4420), Var($8load_deref.3, arrayobj.py:4421)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4420), Var(dtype, arrayobj.py:4420), Var($8load_deref.3, arrayobj.py:4421)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
2025-06-13 07:34:42,382 - print_capture - INFO -     $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4420), Var(dtype, arrayobj.py:4420), Var($8load_deref.3, arrayobj.py:4421)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4420), Var(dtype, arrayobj.py:4420), Var($8load_deref.3, arrayobj.py:4421)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4420), Var(dtype, arrayobj.py:4420), Var($8load_deref.3, arrayobj.py:4421)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
2025-06-13 07:34:42,382 - print_capture - INFO -     $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4420), Var(dtype, arrayobj.py:4420), Var($8load_deref.3, arrayobj.py:4421)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
2025-06-13 07:34:42,382 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
2025-06-13 07:34:42,382 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:42,382 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:42,382 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
label 0:
label 0:
2025-06-13 07:34:42,387 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,387 - print_capture - INFO - label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    arrtype = arg(0, name=arrtype)           ['arrtype']
2025-06-13 07:34:42,387 - print_capture - INFO -     arrtype = arg(0, name=arrtype)           ['arrtype']
    arrtype = arg(0, name=arrtype)           ['arrtype']
    arrtype = arg(0, name=arrtype)           ['arrtype']
2025-06-13 07:34:42,387 - print_capture - INFO -     arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    size = arg(1, name=size)                 ['size']
2025-06-13 07:34:42,387 - print_capture - INFO -     size = arg(1, name=size)                 ['size']
    size = arg(1, name=size)                 ['size']
    size = arg(1, name=size)                 ['size']
2025-06-13 07:34:42,387 - print_capture - INFO -     size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    align = arg(2, name=align)               ['align']
2025-06-13 07:34:42,387 - print_capture - INFO -     align = arg(2, name=align)               ['align']
    align = arg(2, name=align)               ['align']
    align = arg(2, name=align)               ['align']
2025-06-13 07:34:42,387 - print_capture - INFO -     align = arg(2, name=align)               ['align']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
2025-06-13 07:34:42,387 - print_capture - INFO -     $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
2025-06-13 07:34:42,387 - print_capture - INFO -     $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4296), Var(align, arrayobj.py:4296)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4296), Var(align, arrayobj.py:4296)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
2025-06-13 07:34:42,387 - print_capture - INFO -     $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4296), Var(align, arrayobj.py:4296)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4296), Var(align, arrayobj.py:4296)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4296), Var(align, arrayobj.py:4296)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
2025-06-13 07:34:42,387 - print_capture - INFO -     $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4296), Var(align, arrayobj.py:4296)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
2025-06-13 07:34:42,388 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
2025-06-13 07:34:42,388 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:42,388 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:42,388 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
label 0:
label 0:
2025-06-13 07:34:42,390 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,390 - print_capture - INFO - label 0:
    cls = arg(0, name=cls)                   ['cls']
    cls = arg(0, name=cls)                   ['cls']
2025-06-13 07:34:42,390 - print_capture - INFO -     cls = arg(0, name=cls)                   ['cls']
    cls = arg(0, name=cls)                   ['cls']
    cls = arg(0, name=cls)                   ['cls']
2025-06-13 07:34:42,390 - print_capture - INFO -     cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    allocsize = arg(1, name=allocsize)       ['allocsize']
2025-06-13 07:34:42,391 - print_capture - INFO -     allocsize = arg(1, name=allocsize)       ['allocsize']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    allocsize = arg(1, name=allocsize)       ['allocsize']
2025-06-13 07:34:42,391 - print_capture - INFO -     allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    align = arg(2, name=align)               ['align']
2025-06-13 07:34:42,391 - print_capture - INFO -     align = arg(2, name=align)               ['align']
    align = arg(2, name=align)               ['align']
    align = arg(2, name=align)               ['align']
2025-06-13 07:34:42,391 - print_capture - INFO -     align = arg(2, name=align)               ['align']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
2025-06-13 07:34:42,391 - print_capture - INFO -     $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
2025-06-13 07:34:42,391 - print_capture - INFO -     $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4291), Var(align, arrayobj.py:4291)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4291), Var(align, arrayobj.py:4291)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
2025-06-13 07:34:42,391 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4291), Var(align, arrayobj.py:4291)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4291), Var(align, arrayobj.py:4291)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4291), Var(align, arrayobj.py:4291)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
2025-06-13 07:34:42,391 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4291), Var(align, arrayobj.py:4291)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:42,391 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:42,391 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:42,391 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:42,391 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
label 0:
label 0:
2025-06-13 07:34:42,469 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,469 - print_capture - INFO - label 0:
    tup = arg(0, name=tup)                   ['tup']
    tup = arg(0, name=tup)                   ['tup']
2025-06-13 07:34:42,469 - print_capture - INFO -     tup = arg(0, name=tup)                   ['tup']
    tup = arg(0, name=tup)                   ['tup']
    tup = arg(0, name=tup)                   ['tup']
2025-06-13 07:34:42,469 - print_capture - INFO -     tup = arg(0, name=tup)                   ['tup']
    idx = arg(1, name=idx)                   ['idx']
    idx = arg(1, name=idx)                   ['idx']
2025-06-13 07:34:42,469 - print_capture - INFO -     idx = arg(1, name=idx)                   ['idx']
    idx = arg(1, name=idx)                   ['idx']
    idx = arg(1, name=idx)                   ['idx']
2025-06-13 07:34:42,469 - print_capture - INFO -     idx = arg(1, name=idx)                   ['idx']
    $4load_deref.1 = freevar(idx_val: 0)     ['$4load_deref.1']
    $4load_deref.1 = freevar(idx_val: 0)     ['$4load_deref.1']
2025-06-13 07:34:42,469 - print_capture - INFO -     $4load_deref.1 = freevar(idx_val: 0)     ['$4load_deref.1']
    $4load_deref.1 = freevar(idx_val: 0)     ['$4load_deref.1']
    $4load_deref.1 = freevar(idx_val: 0)     ['$4load_deref.1']
2025-06-13 07:34:42,469 - print_capture - INFO -     $4load_deref.1 = freevar(idx_val: 0)     ['$4load_deref.1']
    $6binary_subscr.2 = getitem(value=tup, index=$4load_deref.1, fn=<built-in function getitem>) ['$4load_deref.1', '$6binary_subscr.2', 'tup']
    $6binary_subscr.2 = getitem(value=tup, index=$4load_deref.1, fn=<built-in function getitem>) ['$4load_deref.1', '$6binary_subscr.2', 'tup']
2025-06-13 07:34:42,469 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=tup, index=$4load_deref.1, fn=<built-in function getitem>) ['$4load_deref.1', '$6binary_subscr.2', 'tup']
    $6binary_subscr.2 = getitem(value=tup, index=$4load_deref.1, fn=<built-in function getitem>) ['$4load_deref.1', '$6binary_subscr.2', 'tup']
    $6binary_subscr.2 = getitem(value=tup, index=$4load_deref.1, fn=<built-in function getitem>) ['$4load_deref.1', '$6binary_subscr.2', 'tup']
2025-06-13 07:34:42,469 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=tup, index=$4load_deref.1, fn=<built-in function getitem>) ['$4load_deref.1', '$6binary_subscr.2', 'tup']
    $8return_value.3 = cast(value=$6binary_subscr.2) ['$6binary_subscr.2', '$8return_value.3']
    $8return_value.3 = cast(value=$6binary_subscr.2) ['$6binary_subscr.2', '$8return_value.3']
2025-06-13 07:34:42,469 - print_capture - INFO -     $8return_value.3 = cast(value=$6binary_subscr.2) ['$6binary_subscr.2', '$8return_value.3']
    $8return_value.3 = cast(value=$6binary_subscr.2) ['$6binary_subscr.2', '$8return_value.3']
    $8return_value.3 = cast(value=$6binary_subscr.2) ['$6binary_subscr.2', '$8return_value.3']
2025-06-13 07:34:42,469 - print_capture - INFO -     $8return_value.3 = cast(value=$6binary_subscr.2) ['$6binary_subscr.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
2025-06-13 07:34:42,469 - print_capture - INFO -     return $8return_value.3                  ['$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
2025-06-13 07:34:42,469 - print_capture - INFO -     return $8return_value.3                  ['$8return_value.3']
label 0:
label 0:
2025-06-13 07:34:42,557 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,557 - print_capture - INFO - label 0:
    src_shapes = arg(0, name=src_shapes)     ['src_shapes']
    src_shapes = arg(0, name=src_shapes)     ['src_shapes']
2025-06-13 07:34:42,557 - print_capture - INFO -     src_shapes = arg(0, name=src_shapes)     ['src_shapes']
    src_shapes = arg(0, name=src_shapes)     ['src_shapes']
    src_shapes = arg(0, name=src_shapes)     ['src_shapes']
2025-06-13 07:34:42,557 - print_capture - INFO -     src_shapes = arg(0, name=src_shapes)     ['src_shapes']
    index_shape = arg(1, name=index_shape)   ['index_shape']
    index_shape = arg(1, name=index_shape)   ['index_shape']
2025-06-13 07:34:42,557 - print_capture - INFO -     index_shape = arg(1, name=index_shape)   ['index_shape']
    index_shape = arg(1, name=index_shape)   ['index_shape']
    index_shape = arg(1, name=index_shape)   ['index_shape']
2025-06-13 07:34:42,557 - print_capture - INFO -     index_shape = arg(1, name=index_shape)   ['index_shape']
    $const2.0.1 = const(str, cannot assign slice of shape ) ['$const2.0.1']
    $const2.0.1 = const(str, cannot assign slice of shape ) ['$const2.0.1']
2025-06-13 07:34:42,557 - print_capture - INFO -     $const2.0.1 = const(str, cannot assign slice of shape ) ['$const2.0.1']
    $const2.0.1 = const(str, cannot assign slice of shape ) ['$const2.0.1']
    $const2.0.1 = const(str, cannot assign slice of shape ) ['$const2.0.1']
2025-06-13 07:34:42,557 - print_capture - INFO -     $const2.0.1 = const(str, cannot assign slice of shape ) ['$const2.0.1']
    $const4.1.2 = const(str, ()              ['$const4.1.2']
    $const4.1.2 = const(str, ()              ['$const4.1.2']
2025-06-13 07:34:42,557 - print_capture - INFO -     $const4.1.2 = const(str, ()              ['$const4.1.2']
    $const4.1.2 = const(str, ()              ['$const4.1.2']
    $const4.1.2 = const(str, ()              ['$const4.1.2']
2025-06-13 07:34:42,557 - print_capture - INFO -     $const4.1.2 = const(str, ()              ['$const4.1.2']
    $const6.2.3 = const(str, , )             ['$const6.2.3']
    $const6.2.3 = const(str, , )             ['$const6.2.3']
2025-06-13 07:34:42,557 - print_capture - INFO -     $const6.2.3 = const(str, , )             ['$const6.2.3']
    $const6.2.3 = const(str, , )             ['$const6.2.3']
    $const6.2.3 = const(str, , )             ['$const6.2.3']
2025-06-13 07:34:42,557 - print_capture - INFO -     $const6.2.3 = const(str, , )             ['$const6.2.3']
    $8load_method.3 = getattr(value=$const6.2.3, attr=join) ['$8load_method.3', '$const6.2.3']
    $8load_method.3 = getattr(value=$const6.2.3, attr=join) ['$8load_method.3', '$const6.2.3']
2025-06-13 07:34:42,557 - print_capture - INFO -     $8load_method.3 = getattr(value=$const6.2.3, attr=join) ['$8load_method.3', '$const6.2.3']
    $8load_method.3 = getattr(value=$const6.2.3, attr=join) ['$8load_method.3', '$const6.2.3']
    $8load_method.3 = getattr(value=$const6.2.3, attr=join) ['$8load_method.3', '$const6.2.3']
2025-06-13 07:34:42,557 - print_capture - INFO -     $8load_method.3 = getattr(value=$const6.2.3, attr=join) ['$8load_method.3', '$const6.2.3']
    $const10.4.4 = const(code, <code object <listcomp> at 0x7f28abb17260, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1663>) ['$const10.4.4']
    $const10.4.4 = const(code, <code object <listcomp> at 0x7f28abb17260, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1663>) ['$const10.4.4']
2025-06-13 07:34:42,557 - print_capture - INFO -     $const10.4.4 = const(code, <code object <listcomp> at 0x7f28abb17260, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1663>) ['$const10.4.4']
    $const10.4.4 = const(code, <code object <listcomp> at 0x7f28abb17260, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1663>) ['$const10.4.4']
    $const10.4.4 = const(code, <code object <listcomp> at 0x7f28abb17260, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1663>) ['$const10.4.4']
2025-06-13 07:34:42,557 - print_capture - INFO -     $const10.4.4 = const(code, <code object <listcomp> at 0x7f28abb17260, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1663>) ['$const10.4.4']
    $const12.5.5 = const(str, fancy_setslice.<locals>.raise_impl.<locals>.<listcomp>) ['$const12.5.5']
    $const12.5.5 = const(str, fancy_setslice.<locals>.raise_impl.<locals>.<listcomp>) ['$const12.5.5']
2025-06-13 07:34:42,557 - print_capture - INFO -     $const12.5.5 = const(str, fancy_setslice.<locals>.raise_impl.<locals>.<listcomp>) ['$const12.5.5']
    $const12.5.5 = const(str, fancy_setslice.<locals>.raise_impl.<locals>.<listcomp>) ['$const12.5.5']
    $const12.5.5 = const(str, fancy_setslice.<locals>.raise_impl.<locals>.<listcomp>) ['$const12.5.5']
2025-06-13 07:34:42,557 - print_capture - INFO -     $const12.5.5 = const(str, fancy_setslice.<locals>.raise_impl.<locals>.<listcomp>) ['$const12.5.5']
    $14make_function.6 = make_function(name=$const12.5.5, code=<code object <listcomp> at 0x7f28abb17260, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1663>, closure=None, defaults=None) ['$14make_function.6', '$const12.5.5']
    $14make_function.6 = make_function(name=$const12.5.5, code=<code object <listcomp> at 0x7f28abb17260, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1663>, closure=None, defaults=None) ['$14make_function.6', '$const12.5.5']
2025-06-13 07:34:42,557 - print_capture - INFO -     $14make_function.6 = make_function(name=$const12.5.5, code=<code object <listcomp> at 0x7f28abb17260, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1663>, closure=None, defaults=None) ['$14make_function.6', '$const12.5.5']
    $14make_function.6 = make_function(name=$const12.5.5, code=<code object <listcomp> at 0x7f28abb17260, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1663>, closure=None, defaults=None) ['$14make_function.6', '$const12.5.5']
    $14make_function.6 = make_function(name=$const12.5.5, code=<code object <listcomp> at 0x7f28abb17260, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1663>, closure=None, defaults=None) ['$14make_function.6', '$const12.5.5']
2025-06-13 07:34:42,557 - print_capture - INFO -     $14make_function.6 = make_function(name=$const12.5.5, code=<code object <listcomp> at 0x7f28abb17260, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1663>, closure=None, defaults=None) ['$14make_function.6', '$const12.5.5']
    $18get_iter.8 = getiter(value=src_shapes) ['$18get_iter.8', 'src_shapes']
    $18get_iter.8 = getiter(value=src_shapes) ['$18get_iter.8', 'src_shapes']
2025-06-13 07:34:42,557 - print_capture - INFO -     $18get_iter.8 = getiter(value=src_shapes) ['$18get_iter.8', 'src_shapes']
    $18get_iter.8 = getiter(value=src_shapes) ['$18get_iter.8', 'src_shapes']
    $18get_iter.8 = getiter(value=src_shapes) ['$18get_iter.8', 'src_shapes']
2025-06-13 07:34:42,557 - print_capture - INFO -     $18get_iter.8 = getiter(value=src_shapes) ['$18get_iter.8', 'src_shapes']
    $20call_function.9 = call $14make_function.6($18get_iter.8, func=$14make_function.6, args=[Var($18get_iter.8, arrayobj.py:1663)], kws=(), vararg=None, varkwarg=None, target=None) ['$14make_function.6', '$18get_iter.8', '$20call_function.9']
    $20call_function.9 = call $14make_function.6($18get_iter.8, func=$14make_function.6, args=[Var($18get_iter.8, arrayobj.py:1663)], kws=(), vararg=None, varkwarg=None, target=None) ['$14make_function.6', '$18get_iter.8', '$20call_function.9']
2025-06-13 07:34:42,557 - print_capture - INFO -     $20call_function.9 = call $14make_function.6($18get_iter.8, func=$14make_function.6, args=[Var($18get_iter.8, arrayobj.py:1663)], kws=(), vararg=None, varkwarg=None, target=None) ['$14make_function.6', '$18get_iter.8', '$20call_function.9']
    $20call_function.9 = call $14make_function.6($18get_iter.8, func=$14make_function.6, args=[Var($18get_iter.8, arrayobj.py:1663)], kws=(), vararg=None, varkwarg=None, target=None) ['$14make_function.6', '$18get_iter.8', '$20call_function.9']
    $20call_function.9 = call $14make_function.6($18get_iter.8, func=$14make_function.6, args=[Var($18get_iter.8, arrayobj.py:1663)], kws=(), vararg=None, varkwarg=None, target=None) ['$14make_function.6', '$18get_iter.8', '$20call_function.9']
2025-06-13 07:34:42,557 - print_capture - INFO -     $20call_function.9 = call $14make_function.6($18get_iter.8, func=$14make_function.6, args=[Var($18get_iter.8, arrayobj.py:1663)], kws=(), vararg=None, varkwarg=None, target=None) ['$14make_function.6', '$18get_iter.8', '$20call_function.9']
    $22call_method.10 = call $8load_method.3($20call_function.9, func=$8load_method.3, args=[Var($20call_function.9, arrayobj.py:1663)], kws=(), vararg=None, varkwarg=None, target=None) ['$20call_function.9', '$22call_method.10', '$8load_method.3']
    $22call_method.10 = call $8load_method.3($20call_function.9, func=$8load_method.3, args=[Var($20call_function.9, arrayobj.py:1663)], kws=(), vararg=None, varkwarg=None, target=None) ['$20call_function.9', '$22call_method.10', '$8load_method.3']
2025-06-13 07:34:42,557 - print_capture - INFO -     $22call_method.10 = call $8load_method.3($20call_function.9, func=$8load_method.3, args=[Var($20call_function.9, arrayobj.py:1663)], kws=(), vararg=None, varkwarg=None, target=None) ['$20call_function.9', '$22call_method.10', '$8load_method.3']
    $22call_method.10 = call $8load_method.3($20call_function.9, func=$8load_method.3, args=[Var($20call_function.9, arrayobj.py:1663)], kws=(), vararg=None, varkwarg=None, target=None) ['$20call_function.9', '$22call_method.10', '$8load_method.3']
    $22call_method.10 = call $8load_method.3($20call_function.9, func=$8load_method.3, args=[Var($20call_function.9, arrayobj.py:1663)], kws=(), vararg=None, varkwarg=None, target=None) ['$20call_function.9', '$22call_method.10', '$8load_method.3']
2025-06-13 07:34:42,557 - print_capture - INFO -     $22call_method.10 = call $8load_method.3($20call_function.9, func=$8load_method.3, args=[Var($20call_function.9, arrayobj.py:1663)], kws=(), vararg=None, varkwarg=None, target=None) ['$20call_function.9', '$22call_method.10', '$8load_method.3']
    $24format_value.11 = global(str: <class 'str'>) ['$24format_value.11']
    $24format_value.11 = global(str: <class 'str'>) ['$24format_value.11']
2025-06-13 07:34:42,557 - print_capture - INFO -     $24format_value.11 = global(str: <class 'str'>) ['$24format_value.11']
    $24format_value.11 = global(str: <class 'str'>) ['$24format_value.11']
    $24format_value.11 = global(str: <class 'str'>) ['$24format_value.11']
2025-06-13 07:34:42,557 - print_capture - INFO -     $24format_value.11 = global(str: <class 'str'>) ['$24format_value.11']
    $24format_value.12 = call $24format_value.11($22call_method.10, func=$24format_value.11, args=(Var($22call_method.10, arrayobj.py:1663),), kws=(), vararg=None, varkwarg=None, target=None) ['$22call_method.10', '$24format_value.11', '$24format_value.12']
    $24format_value.12 = call $24format_value.11($22call_method.10, func=$24format_value.11, args=(Var($22call_method.10, arrayobj.py:1663),), kws=(), vararg=None, varkwarg=None, target=None) ['$22call_method.10', '$24format_value.11', '$24format_value.12']
2025-06-13 07:34:42,557 - print_capture - INFO -     $24format_value.12 = call $24format_value.11($22call_method.10, func=$24format_value.11, args=(Var($22call_method.10, arrayobj.py:1663),), kws=(), vararg=None, varkwarg=None, target=None) ['$22call_method.10', '$24format_value.11', '$24format_value.12']
    $24format_value.12 = call $24format_value.11($22call_method.10, func=$24format_value.11, args=(Var($22call_method.10, arrayobj.py:1663),), kws=(), vararg=None, varkwarg=None, target=None) ['$22call_method.10', '$24format_value.11', '$24format_value.12']
    $24format_value.12 = call $24format_value.11($22call_method.10, func=$24format_value.11, args=(Var($22call_method.10, arrayobj.py:1663),), kws=(), vararg=None, varkwarg=None, target=None) ['$22call_method.10', '$24format_value.11', '$24format_value.12']
2025-06-13 07:34:42,558 - print_capture - INFO -     $24format_value.12 = call $24format_value.11($22call_method.10, func=$24format_value.11, args=(Var($22call_method.10, arrayobj.py:1663),), kws=(), vararg=None, varkwarg=None, target=None) ['$22call_method.10', '$24format_value.11', '$24format_value.12']
    $const26.13.6 = const(str, ) from )      ['$const26.13.6']
    $const26.13.6 = const(str, ) from )      ['$const26.13.6']
2025-06-13 07:34:42,558 - print_capture - INFO -     $const26.13.6 = const(str, ) from )      ['$const26.13.6']
    $const26.13.6 = const(str, ) from )      ['$const26.13.6']
    $const26.13.6 = const(str, ) from )      ['$const26.13.6']
2025-06-13 07:34:42,558 - print_capture - INFO -     $const26.13.6 = const(str, ) from )      ['$const26.13.6']
    $28build_string.14 = $const4.1.2 + $24format_value.12 ['$24format_value.12', '$28build_string.14', '$const4.1.2']
    $28build_string.14 = $const4.1.2 + $24format_value.12 ['$24format_value.12', '$28build_string.14', '$const4.1.2']
2025-06-13 07:34:42,558 - print_capture - INFO -     $28build_string.14 = $const4.1.2 + $24format_value.12 ['$24format_value.12', '$28build_string.14', '$const4.1.2']
    $28build_string.14 = $const4.1.2 + $24format_value.12 ['$24format_value.12', '$28build_string.14', '$const4.1.2']
    $28build_string.14 = $const4.1.2 + $24format_value.12 ['$24format_value.12', '$28build_string.14', '$const4.1.2']
2025-06-13 07:34:42,558 - print_capture - INFO -     $28build_string.14 = $const4.1.2 + $24format_value.12 ['$24format_value.12', '$28build_string.14', '$const4.1.2']
    $28build_string.15 = $28build_string.14 + $const26.13.6 ['$28build_string.14', '$28build_string.15', '$const26.13.6']
    $28build_string.15 = $28build_string.14 + $const26.13.6 ['$28build_string.14', '$28build_string.15', '$const26.13.6']
2025-06-13 07:34:42,558 - print_capture - INFO -     $28build_string.15 = $28build_string.14 + $const26.13.6 ['$28build_string.14', '$28build_string.15', '$const26.13.6']
    $28build_string.15 = $28build_string.14 + $const26.13.6 ['$28build_string.14', '$28build_string.15', '$const26.13.6']
    $28build_string.15 = $28build_string.14 + $const26.13.6 ['$28build_string.14', '$28build_string.15', '$const26.13.6']
2025-06-13 07:34:42,558 - print_capture - INFO -     $28build_string.15 = $28build_string.14 + $const26.13.6 ['$28build_string.14', '$28build_string.15', '$const26.13.6']
    $30binary_add.16 = $const2.0.1 + $28build_string.15 ['$28build_string.15', '$30binary_add.16', '$const2.0.1']
    $30binary_add.16 = $const2.0.1 + $28build_string.15 ['$28build_string.15', '$30binary_add.16', '$const2.0.1']
2025-06-13 07:34:42,558 - print_capture - INFO -     $30binary_add.16 = $const2.0.1 + $28build_string.15 ['$28build_string.15', '$30binary_add.16', '$const2.0.1']
    $30binary_add.16 = $const2.0.1 + $28build_string.15 ['$28build_string.15', '$30binary_add.16', '$const2.0.1']
    $30binary_add.16 = $const2.0.1 + $28build_string.15 ['$28build_string.15', '$30binary_add.16', '$const2.0.1']
2025-06-13 07:34:42,558 - print_capture - INFO -     $30binary_add.16 = $const2.0.1 + $28build_string.15 ['$28build_string.15', '$30binary_add.16', '$const2.0.1']
    $const32.17.7 = const(str, input of shape ) ['$const32.17.7']
    $const32.17.7 = const(str, input of shape ) ['$const32.17.7']
2025-06-13 07:34:42,558 - print_capture - INFO -     $const32.17.7 = const(str, input of shape ) ['$const32.17.7']
    $const32.17.7 = const(str, input of shape ) ['$const32.17.7']
    $const32.17.7 = const(str, input of shape ) ['$const32.17.7']
2025-06-13 07:34:42,558 - print_capture - INFO -     $const32.17.7 = const(str, input of shape ) ['$const32.17.7']
    $34binary_add.18 = $30binary_add.16 + $const32.17.7 ['$30binary_add.16', '$34binary_add.18', '$const32.17.7']
    $34binary_add.18 = $30binary_add.16 + $const32.17.7 ['$30binary_add.16', '$34binary_add.18', '$const32.17.7']
2025-06-13 07:34:42,558 - print_capture - INFO -     $34binary_add.18 = $30binary_add.16 + $const32.17.7 ['$30binary_add.16', '$34binary_add.18', '$const32.17.7']
    $34binary_add.18 = $30binary_add.16 + $const32.17.7 ['$30binary_add.16', '$34binary_add.18', '$const32.17.7']
    $34binary_add.18 = $30binary_add.16 + $const32.17.7 ['$30binary_add.16', '$34binary_add.18', '$const32.17.7']
2025-06-13 07:34:42,558 - print_capture - INFO -     $34binary_add.18 = $30binary_add.16 + $const32.17.7 ['$30binary_add.16', '$34binary_add.18', '$const32.17.7']
    $const36.19.2 = const(str, ()            ['$const36.19.2']
    $const36.19.2 = const(str, ()            ['$const36.19.2']
2025-06-13 07:34:42,558 - print_capture - INFO -     $const36.19.2 = const(str, ()            ['$const36.19.2']
    $const36.19.2 = const(str, ()            ['$const36.19.2']
    $const36.19.2 = const(str, ()            ['$const36.19.2']
2025-06-13 07:34:42,558 - print_capture - INFO -     $const36.19.2 = const(str, ()            ['$const36.19.2']
    $const38.20.3 = const(str, , )           ['$const38.20.3']
    $const38.20.3 = const(str, , )           ['$const38.20.3']
2025-06-13 07:34:42,558 - print_capture - INFO -     $const38.20.3 = const(str, , )           ['$const38.20.3']
    $const38.20.3 = const(str, , )           ['$const38.20.3']
    $const38.20.3 = const(str, , )           ['$const38.20.3']
2025-06-13 07:34:42,558 - print_capture - INFO -     $const38.20.3 = const(str, , )           ['$const38.20.3']
    $40load_method.21 = getattr(value=$const38.20.3, attr=join) ['$40load_method.21', '$const38.20.3']
    $40load_method.21 = getattr(value=$const38.20.3, attr=join) ['$40load_method.21', '$const38.20.3']
2025-06-13 07:34:42,558 - print_capture - INFO -     $40load_method.21 = getattr(value=$const38.20.3, attr=join) ['$40load_method.21', '$const38.20.3']
    $40load_method.21 = getattr(value=$const38.20.3, attr=join) ['$40load_method.21', '$const38.20.3']
    $40load_method.21 = getattr(value=$const38.20.3, attr=join) ['$40load_method.21', '$const38.20.3']
2025-06-13 07:34:42,558 - print_capture - INFO -     $40load_method.21 = getattr(value=$const38.20.3, attr=join) ['$40load_method.21', '$const38.20.3']
    $const42.22.8 = const(code, <code object <listcomp> at 0x7f28abb17310, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1665>) ['$const42.22.8']
    $const42.22.8 = const(code, <code object <listcomp> at 0x7f28abb17310, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1665>) ['$const42.22.8']
2025-06-13 07:34:42,558 - print_capture - INFO -     $const42.22.8 = const(code, <code object <listcomp> at 0x7f28abb17310, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1665>) ['$const42.22.8']
    $const42.22.8 = const(code, <code object <listcomp> at 0x7f28abb17310, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1665>) ['$const42.22.8']
    $const42.22.8 = const(code, <code object <listcomp> at 0x7f28abb17310, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1665>) ['$const42.22.8']
2025-06-13 07:34:42,558 - print_capture - INFO -     $const42.22.8 = const(code, <code object <listcomp> at 0x7f28abb17310, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1665>) ['$const42.22.8']
    $const44.23.5 = const(str, fancy_setslice.<locals>.raise_impl.<locals>.<listcomp>) ['$const44.23.5']
    $const44.23.5 = const(str, fancy_setslice.<locals>.raise_impl.<locals>.<listcomp>) ['$const44.23.5']
2025-06-13 07:34:42,558 - print_capture - INFO -     $const44.23.5 = const(str, fancy_setslice.<locals>.raise_impl.<locals>.<listcomp>) ['$const44.23.5']
    $const44.23.5 = const(str, fancy_setslice.<locals>.raise_impl.<locals>.<listcomp>) ['$const44.23.5']
    $const44.23.5 = const(str, fancy_setslice.<locals>.raise_impl.<locals>.<listcomp>) ['$const44.23.5']
2025-06-13 07:34:42,558 - print_capture - INFO -     $const44.23.5 = const(str, fancy_setslice.<locals>.raise_impl.<locals>.<listcomp>) ['$const44.23.5']
    $46make_function.24 = make_function(name=$const44.23.5, code=<code object <listcomp> at 0x7f28abb17310, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1665>, closure=None, defaults=None) ['$46make_function.24', '$const44.23.5']
    $46make_function.24 = make_function(name=$const44.23.5, code=<code object <listcomp> at 0x7f28abb17310, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1665>, closure=None, defaults=None) ['$46make_function.24', '$const44.23.5']
2025-06-13 07:34:42,558 - print_capture - INFO -     $46make_function.24 = make_function(name=$const44.23.5, code=<code object <listcomp> at 0x7f28abb17310, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1665>, closure=None, defaults=None) ['$46make_function.24', '$const44.23.5']
    $46make_function.24 = make_function(name=$const44.23.5, code=<code object <listcomp> at 0x7f28abb17310, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1665>, closure=None, defaults=None) ['$46make_function.24', '$const44.23.5']
    $46make_function.24 = make_function(name=$const44.23.5, code=<code object <listcomp> at 0x7f28abb17310, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1665>, closure=None, defaults=None) ['$46make_function.24', '$const44.23.5']
2025-06-13 07:34:42,558 - print_capture - INFO -     $46make_function.24 = make_function(name=$const44.23.5, code=<code object <listcomp> at 0x7f28abb17310, file "/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/np/arrayobj.py", line 1665>, closure=None, defaults=None) ['$46make_function.24', '$const44.23.5']
    $50get_iter.26 = getiter(value=index_shape) ['$50get_iter.26', 'index_shape']
    $50get_iter.26 = getiter(value=index_shape) ['$50get_iter.26', 'index_shape']
2025-06-13 07:34:42,558 - print_capture - INFO -     $50get_iter.26 = getiter(value=index_shape) ['$50get_iter.26', 'index_shape']
    $50get_iter.26 = getiter(value=index_shape) ['$50get_iter.26', 'index_shape']
    $50get_iter.26 = getiter(value=index_shape) ['$50get_iter.26', 'index_shape']
2025-06-13 07:34:42,558 - print_capture - INFO -     $50get_iter.26 = getiter(value=index_shape) ['$50get_iter.26', 'index_shape']
    $52call_function.27 = call $46make_function.24($50get_iter.26, func=$46make_function.24, args=[Var($50get_iter.26, arrayobj.py:1665)], kws=(), vararg=None, varkwarg=None, target=None) ['$46make_function.24', '$50get_iter.26', '$52call_function.27']
    $52call_function.27 = call $46make_function.24($50get_iter.26, func=$46make_function.24, args=[Var($50get_iter.26, arrayobj.py:1665)], kws=(), vararg=None, varkwarg=None, target=None) ['$46make_function.24', '$50get_iter.26', '$52call_function.27']
2025-06-13 07:34:42,558 - print_capture - INFO -     $52call_function.27 = call $46make_function.24($50get_iter.26, func=$46make_function.24, args=[Var($50get_iter.26, arrayobj.py:1665)], kws=(), vararg=None, varkwarg=None, target=None) ['$46make_function.24', '$50get_iter.26', '$52call_function.27']
    $52call_function.27 = call $46make_function.24($50get_iter.26, func=$46make_function.24, args=[Var($50get_iter.26, arrayobj.py:1665)], kws=(), vararg=None, varkwarg=None, target=None) ['$46make_function.24', '$50get_iter.26', '$52call_function.27']
    $52call_function.27 = call $46make_function.24($50get_iter.26, func=$46make_function.24, args=[Var($50get_iter.26, arrayobj.py:1665)], kws=(), vararg=None, varkwarg=None, target=None) ['$46make_function.24', '$50get_iter.26', '$52call_function.27']
2025-06-13 07:34:42,558 - print_capture - INFO -     $52call_function.27 = call $46make_function.24($50get_iter.26, func=$46make_function.24, args=[Var($50get_iter.26, arrayobj.py:1665)], kws=(), vararg=None, varkwarg=None, target=None) ['$46make_function.24', '$50get_iter.26', '$52call_function.27']
    $54call_method.28 = call $40load_method.21($52call_function.27, func=$40load_method.21, args=[Var($52call_function.27, arrayobj.py:1665)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_method.21', '$52call_function.27', '$54call_method.28']
    $54call_method.28 = call $40load_method.21($52call_function.27, func=$40load_method.21, args=[Var($52call_function.27, arrayobj.py:1665)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_method.21', '$52call_function.27', '$54call_method.28']
2025-06-13 07:34:42,558 - print_capture - INFO -     $54call_method.28 = call $40load_method.21($52call_function.27, func=$40load_method.21, args=[Var($52call_function.27, arrayobj.py:1665)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_method.21', '$52call_function.27', '$54call_method.28']
    $54call_method.28 = call $40load_method.21($52call_function.27, func=$40load_method.21, args=[Var($52call_function.27, arrayobj.py:1665)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_method.21', '$52call_function.27', '$54call_method.28']
    $54call_method.28 = call $40load_method.21($52call_function.27, func=$40load_method.21, args=[Var($52call_function.27, arrayobj.py:1665)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_method.21', '$52call_function.27', '$54call_method.28']
2025-06-13 07:34:42,558 - print_capture - INFO -     $54call_method.28 = call $40load_method.21($52call_function.27, func=$40load_method.21, args=[Var($52call_function.27, arrayobj.py:1665)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_method.21', '$52call_function.27', '$54call_method.28']
    $56format_value.29 = global(str: <class 'str'>) ['$56format_value.29']
    $56format_value.29 = global(str: <class 'str'>) ['$56format_value.29']
2025-06-13 07:34:42,558 - print_capture - INFO -     $56format_value.29 = global(str: <class 'str'>) ['$56format_value.29']
    $56format_value.29 = global(str: <class 'str'>) ['$56format_value.29']
    $56format_value.29 = global(str: <class 'str'>) ['$56format_value.29']
2025-06-13 07:34:42,558 - print_capture - INFO -     $56format_value.29 = global(str: <class 'str'>) ['$56format_value.29']
    $56format_value.30 = call $56format_value.29($54call_method.28, func=$56format_value.29, args=(Var($54call_method.28, arrayobj.py:1665),), kws=(), vararg=None, varkwarg=None, target=None) ['$54call_method.28', '$56format_value.29', '$56format_value.30']
    $56format_value.30 = call $56format_value.29($54call_method.28, func=$56format_value.29, args=(Var($54call_method.28, arrayobj.py:1665),), kws=(), vararg=None, varkwarg=None, target=None) ['$54call_method.28', '$56format_value.29', '$56format_value.30']
2025-06-13 07:34:42,558 - print_capture - INFO -     $56format_value.30 = call $56format_value.29($54call_method.28, func=$56format_value.29, args=(Var($54call_method.28, arrayobj.py:1665),), kws=(), vararg=None, varkwarg=None, target=None) ['$54call_method.28', '$56format_value.29', '$56format_value.30']
    $56format_value.30 = call $56format_value.29($54call_method.28, func=$56format_value.29, args=(Var($54call_method.28, arrayobj.py:1665),), kws=(), vararg=None, varkwarg=None, target=None) ['$54call_method.28', '$56format_value.29', '$56format_value.30']
    $56format_value.30 = call $56format_value.29($54call_method.28, func=$56format_value.29, args=(Var($54call_method.28, arrayobj.py:1665),), kws=(), vararg=None, varkwarg=None, target=None) ['$54call_method.28', '$56format_value.29', '$56format_value.30']
2025-06-13 07:34:42,558 - print_capture - INFO -     $56format_value.30 = call $56format_value.29($54call_method.28, func=$56format_value.29, args=(Var($54call_method.28, arrayobj.py:1665),), kws=(), vararg=None, varkwarg=None, target=None) ['$54call_method.28', '$56format_value.29', '$56format_value.30']
    $const58.31.9 = const(str, ))            ['$const58.31.9']
    $const58.31.9 = const(str, ))            ['$const58.31.9']
2025-06-13 07:34:42,558 - print_capture - INFO -     $const58.31.9 = const(str, ))            ['$const58.31.9']
    $const58.31.9 = const(str, ))            ['$const58.31.9']
    $const58.31.9 = const(str, ))            ['$const58.31.9']
2025-06-13 07:34:42,558 - print_capture - INFO -     $const58.31.9 = const(str, ))            ['$const58.31.9']
    $60build_string.32 = $const36.19.2 + $56format_value.30 ['$56format_value.30', '$60build_string.32', '$const36.19.2']
    $60build_string.32 = $const36.19.2 + $56format_value.30 ['$56format_value.30', '$60build_string.32', '$const36.19.2']
2025-06-13 07:34:42,558 - print_capture - INFO -     $60build_string.32 = $const36.19.2 + $56format_value.30 ['$56format_value.30', '$60build_string.32', '$const36.19.2']
    $60build_string.32 = $const36.19.2 + $56format_value.30 ['$56format_value.30', '$60build_string.32', '$const36.19.2']
    $60build_string.32 = $const36.19.2 + $56format_value.30 ['$56format_value.30', '$60build_string.32', '$const36.19.2']
2025-06-13 07:34:42,558 - print_capture - INFO -     $60build_string.32 = $const36.19.2 + $56format_value.30 ['$56format_value.30', '$60build_string.32', '$const36.19.2']
    $60build_string.33 = $60build_string.32 + $const58.31.9 ['$60build_string.32', '$60build_string.33', '$const58.31.9']
    $60build_string.33 = $60build_string.32 + $const58.31.9 ['$60build_string.32', '$60build_string.33', '$const58.31.9']
2025-06-13 07:34:42,558 - print_capture - INFO -     $60build_string.33 = $60build_string.32 + $const58.31.9 ['$60build_string.32', '$60build_string.33', '$const58.31.9']
    $60build_string.33 = $60build_string.32 + $const58.31.9 ['$60build_string.32', '$60build_string.33', '$const58.31.9']
    $60build_string.33 = $60build_string.32 + $const58.31.9 ['$60build_string.32', '$60build_string.33', '$const58.31.9']
2025-06-13 07:34:42,559 - print_capture - INFO -     $60build_string.33 = $60build_string.32 + $const58.31.9 ['$60build_string.32', '$60build_string.33', '$const58.31.9']
    $62binary_add.34 = $34binary_add.18 + $60build_string.33 ['$34binary_add.18', '$60build_string.33', '$62binary_add.34']
    $62binary_add.34 = $34binary_add.18 + $60build_string.33 ['$34binary_add.18', '$60build_string.33', '$62binary_add.34']
2025-06-13 07:34:42,559 - print_capture - INFO -     $62binary_add.34 = $34binary_add.18 + $60build_string.33 ['$34binary_add.18', '$60build_string.33', '$62binary_add.34']
    $62binary_add.34 = $34binary_add.18 + $60build_string.33 ['$34binary_add.18', '$60build_string.33', '$62binary_add.34']
    $62binary_add.34 = $34binary_add.18 + $60build_string.33 ['$34binary_add.18', '$60build_string.33', '$62binary_add.34']
2025-06-13 07:34:42,559 - print_capture - INFO -     $62binary_add.34 = $34binary_add.18 + $60build_string.33 ['$34binary_add.18', '$60build_string.33', '$62binary_add.34']
    $64return_value.35 = cast(value=$62binary_add.34) ['$62binary_add.34', '$64return_value.35']
    $64return_value.35 = cast(value=$62binary_add.34) ['$62binary_add.34', '$64return_value.35']
2025-06-13 07:34:42,559 - print_capture - INFO -     $64return_value.35 = cast(value=$62binary_add.34) ['$62binary_add.34', '$64return_value.35']
    $64return_value.35 = cast(value=$62binary_add.34) ['$62binary_add.34', '$64return_value.35']
    $64return_value.35 = cast(value=$62binary_add.34) ['$62binary_add.34', '$64return_value.35']
2025-06-13 07:34:42,559 - print_capture - INFO -     $64return_value.35 = cast(value=$62binary_add.34) ['$62binary_add.34', '$64return_value.35']
    return $64return_value.35                ['$64return_value.35']
    return $64return_value.35                ['$64return_value.35']
2025-06-13 07:34:42,559 - print_capture - INFO -     return $64return_value.35                ['$64return_value.35']
    return $64return_value.35                ['$64return_value.35']
    return $64return_value.35                ['$64return_value.35']
2025-06-13 07:34:42,559 - print_capture - INFO -     return $64return_value.35                ['$64return_value.35']
label 0:
label 0:
2025-06-13 07:34:42,560 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,560 - print_capture - INFO - label 0:
    implicit0 = arg(0, name=implicit0)       ['implicit0']
    implicit0 = arg(0, name=implicit0)       ['implicit0']
2025-06-13 07:34:42,560 - print_capture - INFO -     implicit0 = arg(0, name=implicit0)       ['implicit0']
    implicit0 = arg(0, name=implicit0)       ['implicit0']
    implicit0 = arg(0, name=implicit0)       ['implicit0']
2025-06-13 07:34:42,560 - print_capture - INFO -     implicit0 = arg(0, name=implicit0)       ['implicit0']
    $2build_list.0 = build_list(items=[])    ['$2build_list.0']
    $2build_list.0 = build_list(items=[])    ['$2build_list.0']
2025-06-13 07:34:42,560 - print_capture - INFO -     $2build_list.0 = build_list(items=[])    ['$2build_list.0']
    $2build_list.0 = build_list(items=[])    ['$2build_list.0']
    $2build_list.0 = build_list(items=[])    ['$2build_list.0']
2025-06-13 07:34:42,560 - print_capture - INFO -     $2build_list.0 = build_list(items=[])    ['$2build_list.0']
    $phi20.0 = $2build_list.0                ['$2build_list.0', '$phi20.0']
    $phi20.0 = $2build_list.0                ['$2build_list.0', '$phi20.0']
2025-06-13 07:34:42,560 - print_capture - INFO -     $phi20.0 = $2build_list.0                ['$2build_list.0', '$phi20.0']
    $phi20.0 = $2build_list.0                ['$2build_list.0', '$phi20.0']
    $phi20.0 = $2build_list.0                ['$2build_list.0', '$phi20.0']
2025-06-13 07:34:42,560 - print_capture - INFO -     $phi20.0 = $2build_list.0                ['$2build_list.0', '$phi20.0']
    $phi8.0 = $2build_list.0                 ['$2build_list.0', '$phi8.0']
    $phi8.0 = $2build_list.0                 ['$2build_list.0', '$phi8.0']
2025-06-13 07:34:42,560 - print_capture - INFO -     $phi8.0 = $2build_list.0                 ['$2build_list.0', '$phi8.0']
    $phi8.0 = $2build_list.0                 ['$2build_list.0', '$phi8.0']
    $phi8.0 = $2build_list.0                 ['$2build_list.0', '$phi8.0']
2025-06-13 07:34:42,560 - print_capture - INFO -     $phi8.0 = $2build_list.0                 ['$2build_list.0', '$phi8.0']
    $phi6.1 = implicit0                      ['$phi6.1', 'implicit0']
    $phi6.1 = implicit0                      ['$phi6.1', 'implicit0']
2025-06-13 07:34:42,560 - print_capture - INFO -     $phi6.1 = implicit0                      ['$phi6.1', 'implicit0']
    $phi6.1 = implicit0                      ['$phi6.1', 'implicit0']
    $phi6.1 = implicit0                      ['$phi6.1', 'implicit0']
2025-06-13 07:34:42,560 - print_capture - INFO -     $phi6.1 = implicit0                      ['$phi6.1', 'implicit0']
    jump 6                                   []
    jump 6                                   []
2025-06-13 07:34:42,560 - print_capture - INFO -     jump 6                                   []
    jump 6                                   []
    jump 6                                   []
2025-06-13 07:34:42,560 - print_capture - INFO -     jump 6                                   []
label 6:
label 6:
2025-06-13 07:34:42,560 - print_capture - INFO - label 6:
label 6:
label 6:
2025-06-13 07:34:42,560 - print_capture - INFO - label 6:
    $6for_iter.2 = iternext(value=$phi6.1)   ['$6for_iter.2', '$phi6.1']
    $6for_iter.2 = iternext(value=$phi6.1)   ['$6for_iter.2', '$phi6.1']
2025-06-13 07:34:42,560 - print_capture - INFO -     $6for_iter.2 = iternext(value=$phi6.1)   ['$6for_iter.2', '$phi6.1']
    $6for_iter.2 = iternext(value=$phi6.1)   ['$6for_iter.2', '$phi6.1']
    $6for_iter.2 = iternext(value=$phi6.1)   ['$6for_iter.2', '$phi6.1']
2025-06-13 07:34:42,560 - print_capture - INFO -     $6for_iter.2 = iternext(value=$phi6.1)   ['$6for_iter.2', '$phi6.1']
    $6for_iter.3 = pair_first(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.3']
    $6for_iter.3 = pair_first(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.3']
2025-06-13 07:34:42,560 - print_capture - INFO -     $6for_iter.3 = pair_first(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.3']
    $6for_iter.3 = pair_first(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.3']
    $6for_iter.3 = pair_first(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.3']
2025-06-13 07:34:42,560 - print_capture - INFO -     $6for_iter.3 = pair_first(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.3']
    $6for_iter.4 = pair_second(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.4']
    $6for_iter.4 = pair_second(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.4']
2025-06-13 07:34:42,561 - print_capture - INFO -     $6for_iter.4 = pair_second(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.4']
    $6for_iter.4 = pair_second(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.4']
    $6for_iter.4 = pair_second(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.4']
2025-06-13 07:34:42,561 - print_capture - INFO -     $6for_iter.4 = pair_second(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.4']
    $phi8.2 = $6for_iter.3                   ['$6for_iter.3', '$phi8.2']
    $phi8.2 = $6for_iter.3                   ['$6for_iter.3', '$phi8.2']
2025-06-13 07:34:42,561 - print_capture - INFO -     $phi8.2 = $6for_iter.3                   ['$6for_iter.3', '$phi8.2']
    $phi8.2 = $6for_iter.3                   ['$6for_iter.3', '$phi8.2']
    $phi8.2 = $6for_iter.3                   ['$6for_iter.3', '$phi8.2']
2025-06-13 07:34:42,561 - print_capture - INFO -     $phi8.2 = $6for_iter.3                   ['$6for_iter.3', '$phi8.2']
    branch $6for_iter.4, 8, 20               ['$6for_iter.4']
    branch $6for_iter.4, 8, 20               ['$6for_iter.4']
2025-06-13 07:34:42,561 - print_capture - INFO -     branch $6for_iter.4, 8, 20               ['$6for_iter.4']
    branch $6for_iter.4, 8, 20               ['$6for_iter.4']
    branch $6for_iter.4, 8, 20               ['$6for_iter.4']
2025-06-13 07:34:42,561 - print_capture - INFO -     branch $6for_iter.4, 8, 20               ['$6for_iter.4']
label 8:
label 8:
2025-06-13 07:34:42,561 - print_capture - INFO - label 8:
label 8:
label 8:
2025-06-13 07:34:42,561 - print_capture - INFO - label 8:
    x = $phi8.2                              ['$phi8.2', 'x']
    x = $phi8.2                              ['$phi8.2', 'x']
2025-06-13 07:34:42,561 - print_capture - INFO -     x = $phi8.2                              ['$phi8.2', 'x']
    x = $phi8.2                              ['$phi8.2', 'x']
    x = $phi8.2                              ['$phi8.2', 'x']
2025-06-13 07:34:42,561 - print_capture - INFO -     x = $phi8.2                              ['$phi8.2', 'x']
    $10load_global.3 = global(str: <class 'str'>) ['$10load_global.3']
    $10load_global.3 = global(str: <class 'str'>) ['$10load_global.3']
2025-06-13 07:34:42,561 - print_capture - INFO -     $10load_global.3 = global(str: <class 'str'>) ['$10load_global.3']
    $10load_global.3 = global(str: <class 'str'>) ['$10load_global.3']
    $10load_global.3 = global(str: <class 'str'>) ['$10load_global.3']
2025-06-13 07:34:42,561 - print_capture - INFO -     $10load_global.3 = global(str: <class 'str'>) ['$10load_global.3']
    $14call_function.5 = call $10load_global.3(x, func=$10load_global.3, args=[Var(x, arrayobj.py:1663)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'x']
    $14call_function.5 = call $10load_global.3(x, func=$10load_global.3, args=[Var(x, arrayobj.py:1663)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'x']
2025-06-13 07:34:42,561 - print_capture - INFO -     $14call_function.5 = call $10load_global.3(x, func=$10load_global.3, args=[Var(x, arrayobj.py:1663)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'x']
    $14call_function.5 = call $10load_global.3(x, func=$10load_global.3, args=[Var(x, arrayobj.py:1663)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'x']
    $14call_function.5 = call $10load_global.3(x, func=$10load_global.3, args=[Var(x, arrayobj.py:1663)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'x']
2025-06-13 07:34:42,561 - print_capture - INFO -     $14call_function.5 = call $10load_global.3(x, func=$10load_global.3, args=[Var(x, arrayobj.py:1663)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'x']
    $16list_append.6 = getattr(value=$phi8.0, attr=append) ['$16list_append.6', '$phi8.0']
    $16list_append.6 = getattr(value=$phi8.0, attr=append) ['$16list_append.6', '$phi8.0']
2025-06-13 07:34:42,561 - print_capture - INFO -     $16list_append.6 = getattr(value=$phi8.0, attr=append) ['$16list_append.6', '$phi8.0']
    $16list_append.6 = getattr(value=$phi8.0, attr=append) ['$16list_append.6', '$phi8.0']
    $16list_append.6 = getattr(value=$phi8.0, attr=append) ['$16list_append.6', '$phi8.0']
2025-06-13 07:34:42,561 - print_capture - INFO -     $16list_append.6 = getattr(value=$phi8.0, attr=append) ['$16list_append.6', '$phi8.0']
    $16list_append.7 = call $16list_append.6($14call_function.5, func=$16list_append.6, args=(Var($14call_function.5, arrayobj.py:1663),), kws=(), vararg=None, varkwarg=None, target=None) ['$14call_function.5', '$16list_append.6', '$16list_append.7']
    $16list_append.7 = call $16list_append.6($14call_function.5, func=$16list_append.6, args=(Var($14call_function.5, arrayobj.py:1663),), kws=(), vararg=None, varkwarg=None, target=None) ['$14call_function.5', '$16list_append.6', '$16list_append.7']
2025-06-13 07:34:42,561 - print_capture - INFO -     $16list_append.7 = call $16list_append.6($14call_function.5, func=$16list_append.6, args=(Var($14call_function.5, arrayobj.py:1663),), kws=(), vararg=None, varkwarg=None, target=None) ['$14call_function.5', '$16list_append.6', '$16list_append.7']
    $16list_append.7 = call $16list_append.6($14call_function.5, func=$16list_append.6, args=(Var($14call_function.5, arrayobj.py:1663),), kws=(), vararg=None, varkwarg=None, target=None) ['$14call_function.5', '$16list_append.6', '$16list_append.7']
    $16list_append.7 = call $16list_append.6($14call_function.5, func=$16list_append.6, args=(Var($14call_function.5, arrayobj.py:1663),), kws=(), vararg=None, varkwarg=None, target=None) ['$14call_function.5', '$16list_append.6', '$16list_append.7']
2025-06-13 07:34:42,561 - print_capture - INFO -     $16list_append.7 = call $16list_append.6($14call_function.5, func=$16list_append.6, args=(Var($14call_function.5, arrayobj.py:1663),), kws=(), vararg=None, varkwarg=None, target=None) ['$14call_function.5', '$16list_append.6', '$16list_append.7']
    jump 6                                   []
    jump 6                                   []
2025-06-13 07:34:42,561 - print_capture - INFO -     jump 6                                   []
    jump 6                                   []
    jump 6                                   []
2025-06-13 07:34:42,561 - print_capture - INFO -     jump 6                                   []
label 20:
label 20:
2025-06-13 07:34:42,561 - print_capture - INFO - label 20:
label 20:
label 20:
2025-06-13 07:34:42,561 - print_capture - INFO - label 20:
    $20return_value.1 = cast(value=$phi20.0) ['$20return_value.1', '$phi20.0']
    $20return_value.1 = cast(value=$phi20.0) ['$20return_value.1', '$phi20.0']
2025-06-13 07:34:42,561 - print_capture - INFO -     $20return_value.1 = cast(value=$phi20.0) ['$20return_value.1', '$phi20.0']
    $20return_value.1 = cast(value=$phi20.0) ['$20return_value.1', '$phi20.0']
    $20return_value.1 = cast(value=$phi20.0) ['$20return_value.1', '$phi20.0']
2025-06-13 07:34:42,561 - print_capture - INFO -     $20return_value.1 = cast(value=$phi20.0) ['$20return_value.1', '$phi20.0']
    return $20return_value.1                 ['$20return_value.1']
    return $20return_value.1                 ['$20return_value.1']
2025-06-13 07:34:42,561 - print_capture - INFO -     return $20return_value.1                 ['$20return_value.1']
    return $20return_value.1                 ['$20return_value.1']
    return $20return_value.1                 ['$20return_value.1']
2025-06-13 07:34:42,561 - print_capture - INFO -     return $20return_value.1                 ['$20return_value.1']
label 0:
label 0:
2025-06-13 07:34:42,563 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,563 - print_capture - INFO - label 0:
    implicit0 = arg(0, name=implicit0)       ['implicit0']
    implicit0 = arg(0, name=implicit0)       ['implicit0']
2025-06-13 07:34:42,563 - print_capture - INFO -     implicit0 = arg(0, name=implicit0)       ['implicit0']
    implicit0 = arg(0, name=implicit0)       ['implicit0']
    implicit0 = arg(0, name=implicit0)       ['implicit0']
2025-06-13 07:34:42,563 - print_capture - INFO -     implicit0 = arg(0, name=implicit0)       ['implicit0']
    $2build_list.0 = build_list(items=[])    ['$2build_list.0']
    $2build_list.0 = build_list(items=[])    ['$2build_list.0']
2025-06-13 07:34:42,563 - print_capture - INFO -     $2build_list.0 = build_list(items=[])    ['$2build_list.0']
    $2build_list.0 = build_list(items=[])    ['$2build_list.0']
    $2build_list.0 = build_list(items=[])    ['$2build_list.0']
2025-06-13 07:34:42,563 - print_capture - INFO -     $2build_list.0 = build_list(items=[])    ['$2build_list.0']
    $phi20.0 = $2build_list.0                ['$2build_list.0', '$phi20.0']
    $phi20.0 = $2build_list.0                ['$2build_list.0', '$phi20.0']
2025-06-13 07:34:42,563 - print_capture - INFO -     $phi20.0 = $2build_list.0                ['$2build_list.0', '$phi20.0']
    $phi20.0 = $2build_list.0                ['$2build_list.0', '$phi20.0']
    $phi20.0 = $2build_list.0                ['$2build_list.0', '$phi20.0']
2025-06-13 07:34:42,563 - print_capture - INFO -     $phi20.0 = $2build_list.0                ['$2build_list.0', '$phi20.0']
    $phi8.0 = $2build_list.0                 ['$2build_list.0', '$phi8.0']
    $phi8.0 = $2build_list.0                 ['$2build_list.0', '$phi8.0']
2025-06-13 07:34:42,563 - print_capture - INFO -     $phi8.0 = $2build_list.0                 ['$2build_list.0', '$phi8.0']
    $phi8.0 = $2build_list.0                 ['$2build_list.0', '$phi8.0']
    $phi8.0 = $2build_list.0                 ['$2build_list.0', '$phi8.0']
2025-06-13 07:34:42,564 - print_capture - INFO -     $phi8.0 = $2build_list.0                 ['$2build_list.0', '$phi8.0']
    $phi6.1 = implicit0                      ['$phi6.1', 'implicit0']
    $phi6.1 = implicit0                      ['$phi6.1', 'implicit0']
2025-06-13 07:34:42,564 - print_capture - INFO -     $phi6.1 = implicit0                      ['$phi6.1', 'implicit0']
    $phi6.1 = implicit0                      ['$phi6.1', 'implicit0']
    $phi6.1 = implicit0                      ['$phi6.1', 'implicit0']
2025-06-13 07:34:42,564 - print_capture - INFO -     $phi6.1 = implicit0                      ['$phi6.1', 'implicit0']
    jump 6                                   []
    jump 6                                   []
2025-06-13 07:34:42,564 - print_capture - INFO -     jump 6                                   []
    jump 6                                   []
    jump 6                                   []
2025-06-13 07:34:42,564 - print_capture - INFO -     jump 6                                   []
label 6:
label 6:
2025-06-13 07:34:42,564 - print_capture - INFO - label 6:
label 6:
label 6:
2025-06-13 07:34:42,564 - print_capture - INFO - label 6:
    $6for_iter.2 = iternext(value=$phi6.1)   ['$6for_iter.2', '$phi6.1']
    $6for_iter.2 = iternext(value=$phi6.1)   ['$6for_iter.2', '$phi6.1']
2025-06-13 07:34:42,564 - print_capture - INFO -     $6for_iter.2 = iternext(value=$phi6.1)   ['$6for_iter.2', '$phi6.1']
    $6for_iter.2 = iternext(value=$phi6.1)   ['$6for_iter.2', '$phi6.1']
    $6for_iter.2 = iternext(value=$phi6.1)   ['$6for_iter.2', '$phi6.1']
2025-06-13 07:34:42,564 - print_capture - INFO -     $6for_iter.2 = iternext(value=$phi6.1)   ['$6for_iter.2', '$phi6.1']
    $6for_iter.3 = pair_first(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.3']
    $6for_iter.3 = pair_first(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.3']
2025-06-13 07:34:42,564 - print_capture - INFO -     $6for_iter.3 = pair_first(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.3']
    $6for_iter.3 = pair_first(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.3']
    $6for_iter.3 = pair_first(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.3']
2025-06-13 07:34:42,564 - print_capture - INFO -     $6for_iter.3 = pair_first(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.3']
    $6for_iter.4 = pair_second(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.4']
    $6for_iter.4 = pair_second(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.4']
2025-06-13 07:34:42,564 - print_capture - INFO -     $6for_iter.4 = pair_second(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.4']
    $6for_iter.4 = pair_second(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.4']
    $6for_iter.4 = pair_second(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.4']
2025-06-13 07:34:42,564 - print_capture - INFO -     $6for_iter.4 = pair_second(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.4']
    $phi8.2 = $6for_iter.3                   ['$6for_iter.3', '$phi8.2']
    $phi8.2 = $6for_iter.3                   ['$6for_iter.3', '$phi8.2']
2025-06-13 07:34:42,564 - print_capture - INFO -     $phi8.2 = $6for_iter.3                   ['$6for_iter.3', '$phi8.2']
    $phi8.2 = $6for_iter.3                   ['$6for_iter.3', '$phi8.2']
    $phi8.2 = $6for_iter.3                   ['$6for_iter.3', '$phi8.2']
2025-06-13 07:34:42,564 - print_capture - INFO -     $phi8.2 = $6for_iter.3                   ['$6for_iter.3', '$phi8.2']
    branch $6for_iter.4, 8, 20               ['$6for_iter.4']
    branch $6for_iter.4, 8, 20               ['$6for_iter.4']
2025-06-13 07:34:42,564 - print_capture - INFO -     branch $6for_iter.4, 8, 20               ['$6for_iter.4']
    branch $6for_iter.4, 8, 20               ['$6for_iter.4']
    branch $6for_iter.4, 8, 20               ['$6for_iter.4']
2025-06-13 07:34:42,564 - print_capture - INFO -     branch $6for_iter.4, 8, 20               ['$6for_iter.4']
label 8:
label 8:
2025-06-13 07:34:42,564 - print_capture - INFO - label 8:
label 8:
label 8:
2025-06-13 07:34:42,564 - print_capture - INFO - label 8:
    x = $phi8.2                              ['$phi8.2', 'x']
    x = $phi8.2                              ['$phi8.2', 'x']
2025-06-13 07:34:42,564 - print_capture - INFO -     x = $phi8.2                              ['$phi8.2', 'x']
    x = $phi8.2                              ['$phi8.2', 'x']
    x = $phi8.2                              ['$phi8.2', 'x']
2025-06-13 07:34:42,564 - print_capture - INFO -     x = $phi8.2                              ['$phi8.2', 'x']
    $10load_global.3 = global(str: <class 'str'>) ['$10load_global.3']
    $10load_global.3 = global(str: <class 'str'>) ['$10load_global.3']
2025-06-13 07:34:42,564 - print_capture - INFO -     $10load_global.3 = global(str: <class 'str'>) ['$10load_global.3']
    $10load_global.3 = global(str: <class 'str'>) ['$10load_global.3']
    $10load_global.3 = global(str: <class 'str'>) ['$10load_global.3']
2025-06-13 07:34:42,564 - print_capture - INFO -     $10load_global.3 = global(str: <class 'str'>) ['$10load_global.3']
    $14call_function.5 = call $10load_global.3(x, func=$10load_global.3, args=[Var(x, arrayobj.py:1665)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'x']
    $14call_function.5 = call $10load_global.3(x, func=$10load_global.3, args=[Var(x, arrayobj.py:1665)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'x']
2025-06-13 07:34:42,564 - print_capture - INFO -     $14call_function.5 = call $10load_global.3(x, func=$10load_global.3, args=[Var(x, arrayobj.py:1665)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'x']
    $14call_function.5 = call $10load_global.3(x, func=$10load_global.3, args=[Var(x, arrayobj.py:1665)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'x']
    $14call_function.5 = call $10load_global.3(x, func=$10load_global.3, args=[Var(x, arrayobj.py:1665)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'x']
2025-06-13 07:34:42,564 - print_capture - INFO -     $14call_function.5 = call $10load_global.3(x, func=$10load_global.3, args=[Var(x, arrayobj.py:1665)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'x']
    $16list_append.6 = getattr(value=$phi8.0, attr=append) ['$16list_append.6', '$phi8.0']
    $16list_append.6 = getattr(value=$phi8.0, attr=append) ['$16list_append.6', '$phi8.0']
2025-06-13 07:34:42,564 - print_capture - INFO -     $16list_append.6 = getattr(value=$phi8.0, attr=append) ['$16list_append.6', '$phi8.0']
    $16list_append.6 = getattr(value=$phi8.0, attr=append) ['$16list_append.6', '$phi8.0']
    $16list_append.6 = getattr(value=$phi8.0, attr=append) ['$16list_append.6', '$phi8.0']
2025-06-13 07:34:42,564 - print_capture - INFO -     $16list_append.6 = getattr(value=$phi8.0, attr=append) ['$16list_append.6', '$phi8.0']
    $16list_append.7 = call $16list_append.6($14call_function.5, func=$16list_append.6, args=(Var($14call_function.5, arrayobj.py:1665),), kws=(), vararg=None, varkwarg=None, target=None) ['$14call_function.5', '$16list_append.6', '$16list_append.7']
    $16list_append.7 = call $16list_append.6($14call_function.5, func=$16list_append.6, args=(Var($14call_function.5, arrayobj.py:1665),), kws=(), vararg=None, varkwarg=None, target=None) ['$14call_function.5', '$16list_append.6', '$16list_append.7']
2025-06-13 07:34:42,564 - print_capture - INFO -     $16list_append.7 = call $16list_append.6($14call_function.5, func=$16list_append.6, args=(Var($14call_function.5, arrayobj.py:1665),), kws=(), vararg=None, varkwarg=None, target=None) ['$14call_function.5', '$16list_append.6', '$16list_append.7']
    $16list_append.7 = call $16list_append.6($14call_function.5, func=$16list_append.6, args=(Var($14call_function.5, arrayobj.py:1665),), kws=(), vararg=None, varkwarg=None, target=None) ['$14call_function.5', '$16list_append.6', '$16list_append.7']
    $16list_append.7 = call $16list_append.6($14call_function.5, func=$16list_append.6, args=(Var($14call_function.5, arrayobj.py:1665),), kws=(), vararg=None, varkwarg=None, target=None) ['$14call_function.5', '$16list_append.6', '$16list_append.7']
2025-06-13 07:34:42,564 - print_capture - INFO -     $16list_append.7 = call $16list_append.6($14call_function.5, func=$16list_append.6, args=(Var($14call_function.5, arrayobj.py:1665),), kws=(), vararg=None, varkwarg=None, target=None) ['$14call_function.5', '$16list_append.6', '$16list_append.7']
    jump 6                                   []
    jump 6                                   []
2025-06-13 07:34:42,564 - print_capture - INFO -     jump 6                                   []
    jump 6                                   []
    jump 6                                   []
2025-06-13 07:34:42,564 - print_capture - INFO -     jump 6                                   []
label 20:
label 20:
2025-06-13 07:34:42,564 - print_capture - INFO - label 20:
label 20:
label 20:
2025-06-13 07:34:42,564 - print_capture - INFO - label 20:
    $20return_value.1 = cast(value=$phi20.0) ['$20return_value.1', '$phi20.0']
    $20return_value.1 = cast(value=$phi20.0) ['$20return_value.1', '$phi20.0']
2025-06-13 07:34:42,564 - print_capture - INFO -     $20return_value.1 = cast(value=$phi20.0) ['$20return_value.1', '$phi20.0']
    $20return_value.1 = cast(value=$phi20.0) ['$20return_value.1', '$phi20.0']
    $20return_value.1 = cast(value=$phi20.0) ['$20return_value.1', '$phi20.0']
2025-06-13 07:34:42,564 - print_capture - INFO -     $20return_value.1 = cast(value=$phi20.0) ['$20return_value.1', '$phi20.0']
    return $20return_value.1                 ['$20return_value.1']
    return $20return_value.1                 ['$20return_value.1']
2025-06-13 07:34:42,564 - print_capture - INFO -     return $20return_value.1                 ['$20return_value.1']
    return $20return_value.1                 ['$20return_value.1']
    return $20return_value.1                 ['$20return_value.1']
2025-06-13 07:34:42,564 - print_capture - INFO -     return $20return_value.1                 ['$20return_value.1']
label 0:
label 0:
2025-06-13 07:34:42,573 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,573 - print_capture - INFO - label 0:
    object = arg(0, name=object)             ['object']
    object = arg(0, name=object)             ['object']
2025-06-13 07:34:42,573 - print_capture - INFO -     object = arg(0, name=object)             ['object']
    object = arg(0, name=object)             ['object']
    object = arg(0, name=object)             ['object']
2025-06-13 07:34:42,573 - print_capture - INFO -     object = arg(0, name=object)             ['object']
    attr = const(str, __str__)               ['attr']
    attr = const(str, __str__)               ['attr']
2025-06-13 07:34:42,573 - print_capture - INFO -     attr = const(str, __str__)               ['attr']
    attr = const(str, __str__)               ['attr']
    attr = const(str, __str__)               ['attr']
2025-06-13 07:34:42,573 - print_capture - INFO -     attr = const(str, __str__)               ['attr']
    $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
    $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
2025-06-13 07:34:42,573 - print_capture - INFO -     $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
    $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
    $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
2025-06-13 07:34:42,573 - print_capture - INFO -     $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
    $12call_function.4 = call $6load_global.1(object, attr, func=$6load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'object']
    $12call_function.4 = call $6load_global.1(object, attr, func=$6load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'object']
2025-06-13 07:34:42,573 - print_capture - INFO -     $12call_function.4 = call $6load_global.1(object, attr, func=$6load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'object']
    $12call_function.4 = call $6load_global.1(object, attr, func=$6load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'object']
    $12call_function.4 = call $6load_global.1(object, attr, func=$6load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'object']
2025-06-13 07:34:42,573 - print_capture - INFO -     $12call_function.4 = call $6load_global.1(object, attr, func=$6load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'object']
    $const14.5.2 = const(bool, True)         ['$const14.5.2']
    $const14.5.2 = const(bool, True)         ['$const14.5.2']
2025-06-13 07:34:42,573 - print_capture - INFO -     $const14.5.2 = const(bool, True)         ['$const14.5.2']
    $const14.5.2 = const(bool, True)         ['$const14.5.2']
    $const14.5.2 = const(bool, True)         ['$const14.5.2']
2025-06-13 07:34:42,573 - print_capture - INFO -     $const14.5.2 = const(bool, True)         ['$const14.5.2']
    $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
    $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
2025-06-13 07:34:42,573 - print_capture - INFO -     $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
    $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
    $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
2025-06-13 07:34:42,573 - print_capture - INFO -     $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
2025-06-13 07:34:42,573 - print_capture - INFO -     bool18 = global(bool: <class 'bool'>)    ['bool18']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
2025-06-13 07:34:42,573 - print_capture - INFO -     bool18 = global(bool: <class 'bool'>)    ['bool18']
    $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
    $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
2025-06-13 07:34:42,573 - print_capture - INFO -     $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
    $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
    $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
2025-06-13 07:34:42,573 - print_capture - INFO -     $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
    branch $18pred, 20, 32                   ['$18pred']
    branch $18pred, 20, 32                   ['$18pred']
2025-06-13 07:34:42,573 - print_capture - INFO -     branch $18pred, 20, 32                   ['$18pred']
    branch $18pred, 20, 32                   ['$18pred']
    branch $18pred, 20, 32                   ['$18pred']
2025-06-13 07:34:42,573 - print_capture - INFO -     branch $18pred, 20, 32                   ['$18pred']
label 20:
label 20:
2025-06-13 07:34:42,573 - print_capture - INFO - label 20:
label 20:
label 20:
2025-06-13 07:34:42,573 - print_capture - INFO - label 20:
    $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
    $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
2025-06-13 07:34:42,573 - print_capture - INFO -     $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
    $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
    $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
2025-06-13 07:34:42,573 - print_capture - INFO -     $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
    $26call_function.3 = call $20load_global.0(object, attr, func=$20load_global.0, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'object']
    $26call_function.3 = call $20load_global.0(object, attr, func=$20load_global.0, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'object']
2025-06-13 07:34:42,573 - print_capture - INFO -     $26call_function.3 = call $20load_global.0(object, attr, func=$20load_global.0, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'object']
    $26call_function.3 = call $20load_global.0(object, attr, func=$20load_global.0, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'object']
    $26call_function.3 = call $20load_global.0(object, attr, func=$20load_global.0, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'object']
2025-06-13 07:34:42,573 - print_capture - INFO -     $26call_function.3 = call $20load_global.0(object, attr, func=$20load_global.0, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'object']
    $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
    $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
2025-06-13 07:34:42,573 - print_capture - INFO -     $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
    $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
    $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
2025-06-13 07:34:42,573 - print_capture - INFO -     $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
    $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
    $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
2025-06-13 07:34:42,573 - print_capture - INFO -     $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
    $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
    $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
2025-06-13 07:34:42,573 - print_capture - INFO -     $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
    return $30return_value.5                 ['$30return_value.5']
    return $30return_value.5                 ['$30return_value.5']
2025-06-13 07:34:42,573 - print_capture - INFO -     return $30return_value.5                 ['$30return_value.5']
    return $30return_value.5                 ['$30return_value.5']
    return $30return_value.5                 ['$30return_value.5']
2025-06-13 07:34:42,573 - print_capture - INFO -     return $30return_value.5                 ['$30return_value.5']
label 32:
label 32:
2025-06-13 07:34:42,573 - print_capture - INFO - label 32:
label 32:
label 32:
2025-06-13 07:34:42,573 - print_capture - INFO - label 32:
    $32load_global.0 = global(repr: <built-in function repr>) ['$32load_global.0']
    $32load_global.0 = global(repr: <built-in function repr>) ['$32load_global.0']
2025-06-13 07:34:42,574 - print_capture - INFO -     $32load_global.0 = global(repr: <built-in function repr>) ['$32load_global.0']
    $32load_global.0 = global(repr: <built-in function repr>) ['$32load_global.0']
    $32load_global.0 = global(repr: <built-in function repr>) ['$32load_global.0']
2025-06-13 07:34:42,574 - print_capture - INFO -     $32load_global.0 = global(repr: <built-in function repr>) ['$32load_global.0']
    $36call_function.2 = call $32load_global.0(object, func=$32load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_global.0', '$36call_function.2', 'object']
    $36call_function.2 = call $32load_global.0(object, func=$32load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_global.0', '$36call_function.2', 'object']
2025-06-13 07:34:42,574 - print_capture - INFO -     $36call_function.2 = call $32load_global.0(object, func=$32load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_global.0', '$36call_function.2', 'object']
    $36call_function.2 = call $32load_global.0(object, func=$32load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_global.0', '$36call_function.2', 'object']
    $36call_function.2 = call $32load_global.0(object, func=$32load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_global.0', '$36call_function.2', 'object']
2025-06-13 07:34:42,574 - print_capture - INFO -     $36call_function.2 = call $32load_global.0(object, func=$32load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_global.0', '$36call_function.2', 'object']
    $38return_value.3 = cast(value=$36call_function.2) ['$36call_function.2', '$38return_value.3']
    $38return_value.3 = cast(value=$36call_function.2) ['$36call_function.2', '$38return_value.3']
2025-06-13 07:34:42,574 - print_capture - INFO -     $38return_value.3 = cast(value=$36call_function.2) ['$36call_function.2', '$38return_value.3']
    $38return_value.3 = cast(value=$36call_function.2) ['$36call_function.2', '$38return_value.3']
    $38return_value.3 = cast(value=$36call_function.2) ['$36call_function.2', '$38return_value.3']
2025-06-13 07:34:42,574 - print_capture - INFO -     $38return_value.3 = cast(value=$36call_function.2) ['$36call_function.2', '$38return_value.3']
    return $38return_value.3                 ['$38return_value.3']
    return $38return_value.3                 ['$38return_value.3']
2025-06-13 07:34:42,574 - print_capture - INFO -     return $38return_value.3                 ['$38return_value.3']
    return $38return_value.3                 ['$38return_value.3']
    return $38return_value.3                 ['$38return_value.3']
2025-06-13 07:34:42,574 - print_capture - INFO -     return $38return_value.3                 ['$38return_value.3']
label 0:
label 0:
2025-06-13 07:34:42,577 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,577 - print_capture - INFO - label 0:
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:42,577 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:42,577 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:42,577 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:42,577 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:42,577 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:42,577 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:42,577 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:42,577 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:42,577 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:42,577 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:42,577 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:42,577 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
label 0:
label 0:
2025-06-13 07:34:42,581 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,581 - print_capture - INFO - label 0:
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:42,581 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:42,581 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:42,581 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:42,581 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:42,581 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:42,581 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:42,581 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:42,581 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:42,582 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:42,582 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:42,582 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:42,582 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
label 0:
label 0:
2025-06-13 07:34:42,593 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,593 - print_capture - INFO - label 0:
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:42,594 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:42,594 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:42,594 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:42,594 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
2025-06-13 07:34:42,594 - print_capture - INFO -     $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
2025-06-13 07:34:42,594 - print_capture - INFO -     $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
    $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
    $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
2025-06-13 07:34:42,594 - print_capture - INFO -     $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
    $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
    $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
2025-06-13 07:34:42,594 - print_capture - INFO -     $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
    $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
    $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
2025-06-13 07:34:42,594 - print_capture - INFO -     $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
    $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
    $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
2025-06-13 07:34:42,594 - print_capture - INFO -     $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
2025-06-13 07:34:42,594 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
2025-06-13 07:34:42,594 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:42,594 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:42,594 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
label 0:
label 0:
2025-06-13 07:34:42,606 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,606 - print_capture - INFO - label 0:
    n = arg(0, name=n)                       ['n']
    n = arg(0, name=n)                       ['n']
2025-06-13 07:34:42,606 - print_capture - INFO -     n = arg(0, name=n)                       ['n']
    n = arg(0, name=n)                       ['n']
    n = arg(0, name=n)                       ['n']
2025-06-13 07:34:42,606 - print_capture - INFO -     n = arg(0, name=n)                       ['n']
    flag = const(bool, False)                ['flag']
    flag = const(bool, False)                ['flag']
2025-06-13 07:34:42,606 - print_capture - INFO -     flag = const(bool, False)                ['flag']
    flag = const(bool, False)                ['flag']
    flag = const(bool, False)                ['flag']
2025-06-13 07:34:42,606 - print_capture - INFO -     flag = const(bool, False)                ['flag']
    $const8.2.2 = const(int, 0)              ['$const8.2.2']
    $const8.2.2 = const(int, 0)              ['$const8.2.2']
2025-06-13 07:34:42,606 - print_capture - INFO -     $const8.2.2 = const(int, 0)              ['$const8.2.2']
    $const8.2.2 = const(int, 0)              ['$const8.2.2']
    $const8.2.2 = const(int, 0)              ['$const8.2.2']
2025-06-13 07:34:42,606 - print_capture - INFO -     $const8.2.2 = const(int, 0)              ['$const8.2.2']
    $10compare_op.3 = n < $const8.2.2        ['$10compare_op.3', '$const8.2.2', 'n']
    $10compare_op.3 = n < $const8.2.2        ['$10compare_op.3', '$const8.2.2', 'n']
2025-06-13 07:34:42,606 - print_capture - INFO -     $10compare_op.3 = n < $const8.2.2        ['$10compare_op.3', '$const8.2.2', 'n']
    $10compare_op.3 = n < $const8.2.2        ['$10compare_op.3', '$const8.2.2', 'n']
    $10compare_op.3 = n < $const8.2.2        ['$10compare_op.3', '$const8.2.2', 'n']
2025-06-13 07:34:42,606 - print_capture - INFO -     $10compare_op.3 = n < $const8.2.2        ['$10compare_op.3', '$const8.2.2', 'n']
    bool12 = global(bool: <class 'bool'>)    ['bool12']
    bool12 = global(bool: <class 'bool'>)    ['bool12']
2025-06-13 07:34:42,606 - print_capture - INFO -     bool12 = global(bool: <class 'bool'>)    ['bool12']
    bool12 = global(bool: <class 'bool'>)    ['bool12']
    bool12 = global(bool: <class 'bool'>)    ['bool12']
2025-06-13 07:34:42,607 - print_capture - INFO -     bool12 = global(bool: <class 'bool'>)    ['bool12']
    $12pred = call bool12($10compare_op.3, func=bool12, args=(Var($10compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None) ['$10compare_op.3', '$12pred', 'bool12']
    $12pred = call bool12($10compare_op.3, func=bool12, args=(Var($10compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None) ['$10compare_op.3', '$12pred', 'bool12']
2025-06-13 07:34:42,607 - print_capture - INFO -     $12pred = call bool12($10compare_op.3, func=bool12, args=(Var($10compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None) ['$10compare_op.3', '$12pred', 'bool12']
    $12pred = call bool12($10compare_op.3, func=bool12, args=(Var($10compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None) ['$10compare_op.3', '$12pred', 'bool12']
    $12pred = call bool12($10compare_op.3, func=bool12, args=(Var($10compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None) ['$10compare_op.3', '$12pred', 'bool12']
2025-06-13 07:34:42,607 - print_capture - INFO -     $12pred = call bool12($10compare_op.3, func=bool12, args=(Var($10compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None) ['$10compare_op.3', '$12pred', 'bool12']
    branch $12pred, 14, 24                   ['$12pred']
    branch $12pred, 14, 24                   ['$12pred']
2025-06-13 07:34:42,607 - print_capture - INFO -     branch $12pred, 14, 24                   ['$12pred']
    branch $12pred, 14, 24                   ['$12pred']
    branch $12pred, 14, 24                   ['$12pred']
2025-06-13 07:34:42,607 - print_capture - INFO -     branch $12pred, 14, 24                   ['$12pred']
label 14:
label 14:
2025-06-13 07:34:42,607 - print_capture - INFO - label 14:
label 14:
label 14:
2025-06-13 07:34:42,607 - print_capture - INFO - label 14:
    n = unary(fn=<built-in function neg>, value=n) ['n', 'n']
    n = unary(fn=<built-in function neg>, value=n) ['n', 'n']
2025-06-13 07:34:42,607 - print_capture - INFO -     n = unary(fn=<built-in function neg>, value=n) ['n', 'n']
    n = unary(fn=<built-in function neg>, value=n) ['n', 'n']
    n = unary(fn=<built-in function neg>, value=n) ['n', 'n']
2025-06-13 07:34:42,607 - print_capture - INFO -     n = unary(fn=<built-in function neg>, value=n) ['n', 'n']
    flag = const(bool, True)                 ['flag']
    flag = const(bool, True)                 ['flag']
2025-06-13 07:34:42,607 - print_capture - INFO -     flag = const(bool, True)                 ['flag']
    flag = const(bool, True)                 ['flag']
    flag = const(bool, True)                 ['flag']
2025-06-13 07:34:42,607 - print_capture - INFO -     flag = const(bool, True)                 ['flag']
    jump 24                                  []
    jump 24                                  []
2025-06-13 07:34:42,607 - print_capture - INFO -     jump 24                                  []
    jump 24                                  []
    jump 24                                  []
2025-06-13 07:34:42,607 - print_capture - INFO -     jump 24                                  []
label 24:
label 24:
2025-06-13 07:34:42,607 - print_capture - INFO - label 24:
label 24:
label 24:
2025-06-13 07:34:42,607 - print_capture - INFO - label 24:
    $const26.1.2 = const(int, 0)             ['$const26.1.2']
    $const26.1.2 = const(int, 0)             ['$const26.1.2']
2025-06-13 07:34:42,607 - print_capture - INFO -     $const26.1.2 = const(int, 0)             ['$const26.1.2']
    $const26.1.2 = const(int, 0)             ['$const26.1.2']
    $const26.1.2 = const(int, 0)             ['$const26.1.2']
2025-06-13 07:34:42,607 - print_capture - INFO -     $const26.1.2 = const(int, 0)             ['$const26.1.2']
    $28compare_op.2 = n == $const26.1.2      ['$28compare_op.2', '$const26.1.2', 'n']
    $28compare_op.2 = n == $const26.1.2      ['$28compare_op.2', '$const26.1.2', 'n']
2025-06-13 07:34:42,607 - print_capture - INFO -     $28compare_op.2 = n == $const26.1.2      ['$28compare_op.2', '$const26.1.2', 'n']
    $28compare_op.2 = n == $const26.1.2      ['$28compare_op.2', '$const26.1.2', 'n']
    $28compare_op.2 = n == $const26.1.2      ['$28compare_op.2', '$const26.1.2', 'n']
2025-06-13 07:34:42,607 - print_capture - INFO -     $28compare_op.2 = n == $const26.1.2      ['$28compare_op.2', '$const26.1.2', 'n']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
2025-06-13 07:34:42,607 - print_capture - INFO -     bool30 = global(bool: <class 'bool'>)    ['bool30']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
2025-06-13 07:34:42,607 - print_capture - INFO -     bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($28compare_op.2, func=bool30, args=(Var($28compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None) ['$28compare_op.2', '$30pred', 'bool30']
    $30pred = call bool30($28compare_op.2, func=bool30, args=(Var($28compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None) ['$28compare_op.2', '$30pred', 'bool30']
2025-06-13 07:34:42,607 - print_capture - INFO -     $30pred = call bool30($28compare_op.2, func=bool30, args=(Var($28compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None) ['$28compare_op.2', '$30pred', 'bool30']
    $30pred = call bool30($28compare_op.2, func=bool30, args=(Var($28compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None) ['$28compare_op.2', '$30pred', 'bool30']
    $30pred = call bool30($28compare_op.2, func=bool30, args=(Var($28compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None) ['$28compare_op.2', '$30pred', 'bool30']
2025-06-13 07:34:42,607 - print_capture - INFO -     $30pred = call bool30($28compare_op.2, func=bool30, args=(Var($28compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None) ['$28compare_op.2', '$30pred', 'bool30']
    branch $30pred, 32, 36                   ['$30pred']
    branch $30pred, 32, 36                   ['$30pred']
2025-06-13 07:34:42,607 - print_capture - INFO -     branch $30pred, 32, 36                   ['$30pred']
    branch $30pred, 32, 36                   ['$30pred']
    branch $30pred, 32, 36                   ['$30pred']
2025-06-13 07:34:42,607 - print_capture - INFO -     branch $30pred, 32, 36                   ['$30pred']
label 32:
label 32:
2025-06-13 07:34:42,607 - print_capture - INFO - label 32:
label 32:
label 32:
2025-06-13 07:34:42,607 - print_capture - INFO - label 32:
    $const32.0.4 = const(str, 0)             ['$const32.0.4']
    $const32.0.4 = const(str, 0)             ['$const32.0.4']
2025-06-13 07:34:42,607 - print_capture - INFO -     $const32.0.4 = const(str, 0)             ['$const32.0.4']
    $const32.0.4 = const(str, 0)             ['$const32.0.4']
    $const32.0.4 = const(str, 0)             ['$const32.0.4']
2025-06-13 07:34:42,607 - print_capture - INFO -     $const32.0.4 = const(str, 0)             ['$const32.0.4']
    $34return_value.1 = cast(value=$const32.0.4) ['$34return_value.1', '$const32.0.4']
    $34return_value.1 = cast(value=$const32.0.4) ['$34return_value.1', '$const32.0.4']
2025-06-13 07:34:42,607 - print_capture - INFO -     $34return_value.1 = cast(value=$const32.0.4) ['$34return_value.1', '$const32.0.4']
    $34return_value.1 = cast(value=$const32.0.4) ['$34return_value.1', '$const32.0.4']
    $34return_value.1 = cast(value=$const32.0.4) ['$34return_value.1', '$const32.0.4']
2025-06-13 07:34:42,607 - print_capture - INFO -     $34return_value.1 = cast(value=$const32.0.4) ['$34return_value.1', '$const32.0.4']
    return $34return_value.1                 ['$34return_value.1']
    return $34return_value.1                 ['$34return_value.1']
2025-06-13 07:34:42,607 - print_capture - INFO -     return $34return_value.1                 ['$34return_value.1']
    return $34return_value.1                 ['$34return_value.1']
    return $34return_value.1                 ['$34return_value.1']
2025-06-13 07:34:42,607 - print_capture - INFO -     return $34return_value.1                 ['$34return_value.1']
label 36:
label 36:
2025-06-13 07:34:42,607 - print_capture - INFO - label 36:
label 36:
label 36:
2025-06-13 07:34:42,607 - print_capture - INFO - label 36:
    $const38.1.5 = const(int, 1)             ['$const38.1.5']
    $const38.1.5 = const(int, 1)             ['$const38.1.5']
2025-06-13 07:34:42,607 - print_capture - INFO -     $const38.1.5 = const(int, 1)             ['$const38.1.5']
    $const38.1.5 = const(int, 1)             ['$const38.1.5']
    $const38.1.5 = const(int, 1)             ['$const38.1.5']
2025-06-13 07:34:42,607 - print_capture - INFO -     $const38.1.5 = const(int, 1)             ['$const38.1.5']
    $40binary_add.2 = flag + $const38.1.5    ['$40binary_add.2', '$const38.1.5', 'flag']
    $40binary_add.2 = flag + $const38.1.5    ['$40binary_add.2', '$const38.1.5', 'flag']
2025-06-13 07:34:42,607 - print_capture - INFO -     $40binary_add.2 = flag + $const38.1.5    ['$40binary_add.2', '$const38.1.5', 'flag']
    $40binary_add.2 = flag + $const38.1.5    ['$40binary_add.2', '$const38.1.5', 'flag']
    $40binary_add.2 = flag + $const38.1.5    ['$40binary_add.2', '$const38.1.5', 'flag']
2025-06-13 07:34:42,607 - print_capture - INFO -     $40binary_add.2 = flag + $const38.1.5    ['$40binary_add.2', '$const38.1.5', 'flag']
    $42load_global.3 = global(int: <class 'int'>) ['$42load_global.3']
    $42load_global.3 = global(int: <class 'int'>) ['$42load_global.3']
2025-06-13 07:34:42,607 - print_capture - INFO -     $42load_global.3 = global(int: <class 'int'>) ['$42load_global.3']
    $42load_global.3 = global(int: <class 'int'>) ['$42load_global.3']
    $42load_global.3 = global(int: <class 'int'>) ['$42load_global.3']
2025-06-13 07:34:42,608 - print_capture - INFO -     $42load_global.3 = global(int: <class 'int'>) ['$42load_global.3']
    $44load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$44load_global.4']
    $44load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$44load_global.4']
2025-06-13 07:34:42,608 - print_capture - INFO -     $44load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$44load_global.4']
    $44load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$44load_global.4']
    $44load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$44load_global.4']
2025-06-13 07:34:42,608 - print_capture - INFO -     $44load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$44load_global.4']
    $46load_method.5 = getattr(value=$44load_global.4, attr=floor) ['$44load_global.4', '$46load_method.5']
    $46load_method.5 = getattr(value=$44load_global.4, attr=floor) ['$44load_global.4', '$46load_method.5']
2025-06-13 07:34:42,608 - print_capture - INFO -     $46load_method.5 = getattr(value=$44load_global.4, attr=floor) ['$44load_global.4', '$46load_method.5']
    $46load_method.5 = getattr(value=$44load_global.4, attr=floor) ['$44load_global.4', '$46load_method.5']
    $46load_method.5 = getattr(value=$44load_global.4, attr=floor) ['$44load_global.4', '$46load_method.5']
2025-06-13 07:34:42,608 - print_capture - INFO -     $46load_method.5 = getattr(value=$44load_global.4, attr=floor) ['$44load_global.4', '$46load_method.5']
    $48load_global.6 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$48load_global.6']
    $48load_global.6 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$48load_global.6']
2025-06-13 07:34:42,608 - print_capture - INFO -     $48load_global.6 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$48load_global.6']
    $48load_global.6 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$48load_global.6']
    $48load_global.6 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$48load_global.6']
2025-06-13 07:34:42,608 - print_capture - INFO -     $48load_global.6 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$48load_global.6']
    $50load_method.7 = getattr(value=$48load_global.6, attr=log10) ['$48load_global.6', '$50load_method.7']
    $50load_method.7 = getattr(value=$48load_global.6, attr=log10) ['$48load_global.6', '$50load_method.7']
2025-06-13 07:34:42,608 - print_capture - INFO -     $50load_method.7 = getattr(value=$48load_global.6, attr=log10) ['$48load_global.6', '$50load_method.7']
    $50load_method.7 = getattr(value=$48load_global.6, attr=log10) ['$48load_global.6', '$50load_method.7']
    $50load_method.7 = getattr(value=$48load_global.6, attr=log10) ['$48load_global.6', '$50load_method.7']
2025-06-13 07:34:42,608 - print_capture - INFO -     $50load_method.7 = getattr(value=$48load_global.6, attr=log10) ['$48load_global.6', '$50load_method.7']
    $54call_method.9 = call $50load_method.7(n, func=$50load_method.7, args=[Var(n, unicode.py:2572)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_method.7', '$54call_method.9', 'n']
    $54call_method.9 = call $50load_method.7(n, func=$50load_method.7, args=[Var(n, unicode.py:2572)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_method.7', '$54call_method.9', 'n']
2025-06-13 07:34:42,608 - print_capture - INFO -     $54call_method.9 = call $50load_method.7(n, func=$50load_method.7, args=[Var(n, unicode.py:2572)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_method.7', '$54call_method.9', 'n']
    $54call_method.9 = call $50load_method.7(n, func=$50load_method.7, args=[Var(n, unicode.py:2572)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_method.7', '$54call_method.9', 'n']
    $54call_method.9 = call $50load_method.7(n, func=$50load_method.7, args=[Var(n, unicode.py:2572)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_method.7', '$54call_method.9', 'n']
2025-06-13 07:34:42,608 - print_capture - INFO -     $54call_method.9 = call $50load_method.7(n, func=$50load_method.7, args=[Var(n, unicode.py:2572)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_method.7', '$54call_method.9', 'n']
    $56call_method.10 = call $46load_method.5($54call_method.9, func=$46load_method.5, args=[Var($54call_method.9, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_method.5', '$54call_method.9', '$56call_method.10']
    $56call_method.10 = call $46load_method.5($54call_method.9, func=$46load_method.5, args=[Var($54call_method.9, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_method.5', '$54call_method.9', '$56call_method.10']
2025-06-13 07:34:42,608 - print_capture - INFO -     $56call_method.10 = call $46load_method.5($54call_method.9, func=$46load_method.5, args=[Var($54call_method.9, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_method.5', '$54call_method.9', '$56call_method.10']
    $56call_method.10 = call $46load_method.5($54call_method.9, func=$46load_method.5, args=[Var($54call_method.9, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_method.5', '$54call_method.9', '$56call_method.10']
    $56call_method.10 = call $46load_method.5($54call_method.9, func=$46load_method.5, args=[Var($54call_method.9, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_method.5', '$54call_method.9', '$56call_method.10']
2025-06-13 07:34:42,608 - print_capture - INFO -     $56call_method.10 = call $46load_method.5($54call_method.9, func=$46load_method.5, args=[Var($54call_method.9, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_method.5', '$54call_method.9', '$56call_method.10']
    $58call_function.11 = call $42load_global.3($56call_method.10, func=$42load_global.3, args=[Var($56call_method.10, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.3', '$56call_method.10', '$58call_function.11']
    $58call_function.11 = call $42load_global.3($56call_method.10, func=$42load_global.3, args=[Var($56call_method.10, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.3', '$56call_method.10', '$58call_function.11']
2025-06-13 07:34:42,608 - print_capture - INFO -     $58call_function.11 = call $42load_global.3($56call_method.10, func=$42load_global.3, args=[Var($56call_method.10, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.3', '$56call_method.10', '$58call_function.11']
    $58call_function.11 = call $42load_global.3($56call_method.10, func=$42load_global.3, args=[Var($56call_method.10, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.3', '$56call_method.10', '$58call_function.11']
    $58call_function.11 = call $42load_global.3($56call_method.10, func=$42load_global.3, args=[Var($56call_method.10, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.3', '$56call_method.10', '$58call_function.11']
2025-06-13 07:34:42,608 - print_capture - INFO -     $58call_function.11 = call $42load_global.3($56call_method.10, func=$42load_global.3, args=[Var($56call_method.10, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.3', '$56call_method.10', '$58call_function.11']
    length = $40binary_add.2 + $58call_function.11 ['$40binary_add.2', '$58call_function.11', 'length']
    length = $40binary_add.2 + $58call_function.11 ['$40binary_add.2', '$58call_function.11', 'length']
2025-06-13 07:34:42,608 - print_capture - INFO -     length = $40binary_add.2 + $58call_function.11 ['$40binary_add.2', '$58call_function.11', 'length']
    length = $40binary_add.2 + $58call_function.11 ['$40binary_add.2', '$58call_function.11', 'length']
    length = $40binary_add.2 + $58call_function.11 ['$40binary_add.2', '$58call_function.11', 'length']
2025-06-13 07:34:42,608 - print_capture - INFO -     length = $40binary_add.2 + $58call_function.11 ['$40binary_add.2', '$58call_function.11', 'length']
    kind = global(PY_UNICODE_1BYTE_KIND: 1)  ['kind']
    kind = global(PY_UNICODE_1BYTE_KIND: 1)  ['kind']
2025-06-13 07:34:42,608 - print_capture - INFO -     kind = global(PY_UNICODE_1BYTE_KIND: 1)  ['kind']
    kind = global(PY_UNICODE_1BYTE_KIND: 1)  ['kind']
    kind = global(PY_UNICODE_1BYTE_KIND: 1)  ['kind']
2025-06-13 07:34:42,608 - print_capture - INFO -     kind = global(PY_UNICODE_1BYTE_KIND: 1)  ['kind']
    $68load_global.14 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x7f28ab7cb250>) ['$68load_global.14']
    $68load_global.14 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x7f28ab7cb250>) ['$68load_global.14']
2025-06-13 07:34:42,608 - print_capture - INFO -     $68load_global.14 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x7f28ab7cb250>) ['$68load_global.14']
    $68load_global.14 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x7f28ab7cb250>) ['$68load_global.14']
    $68load_global.14 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x7f28ab7cb250>) ['$68load_global.14']
2025-06-13 07:34:42,608 - print_capture - INFO -     $68load_global.14 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x7f28ab7cb250>) ['$68load_global.14']
    char_width = call $68load_global.14(kind, func=$68load_global.14, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.14', 'char_width', 'kind']
    char_width = call $68load_global.14(kind, func=$68load_global.14, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.14', 'char_width', 'kind']
2025-06-13 07:34:42,608 - print_capture - INFO -     char_width = call $68load_global.14(kind, func=$68load_global.14, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.14', 'char_width', 'kind']
    char_width = call $68load_global.14(kind, func=$68load_global.14, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.14', 'char_width', 'kind']
    char_width = call $68load_global.14(kind, func=$68load_global.14, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.14', 'char_width', 'kind']
2025-06-13 07:34:42,608 - print_capture - INFO -     char_width = call $68load_global.14(kind, func=$68load_global.14, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.14', 'char_width', 'kind']
    $76load_global.17 = global(_malloc_string: <intrinsic _malloc_string>) ['$76load_global.17']
    $76load_global.17 = global(_malloc_string: <intrinsic _malloc_string>) ['$76load_global.17']
2025-06-13 07:34:42,608 - print_capture - INFO -     $76load_global.17 = global(_malloc_string: <intrinsic _malloc_string>) ['$76load_global.17']
    $76load_global.17 = global(_malloc_string: <intrinsic _malloc_string>) ['$76load_global.17']
    $76load_global.17 = global(_malloc_string: <intrinsic _malloc_string>) ['$76load_global.17']
2025-06-13 07:34:42,608 - print_capture - INFO -     $76load_global.17 = global(_malloc_string: <intrinsic _malloc_string>) ['$76load_global.17']
    $const84.21.3 = const(bool, True)        ['$const84.21.3']
    $const84.21.3 = const(bool, True)        ['$const84.21.3']
2025-06-13 07:34:42,608 - print_capture - INFO -     $const84.21.3 = const(bool, True)        ['$const84.21.3']
    $const84.21.3 = const(bool, True)        ['$const84.21.3']
    $const84.21.3 = const(bool, True)        ['$const84.21.3']
2025-06-13 07:34:42,608 - print_capture - INFO -     $const84.21.3 = const(bool, True)        ['$const84.21.3']
    s = call $76load_global.17(kind, char_width, length, $const84.21.3, func=$76load_global.17, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const84.21.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.17', '$const84.21.3', 'char_width', 'kind', 'length', 's']
    s = call $76load_global.17(kind, char_width, length, $const84.21.3, func=$76load_global.17, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const84.21.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.17', '$const84.21.3', 'char_width', 'kind', 'length', 's']
2025-06-13 07:34:42,608 - print_capture - INFO -     s = call $76load_global.17(kind, char_width, length, $const84.21.3, func=$76load_global.17, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const84.21.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.17', '$const84.21.3', 'char_width', 'kind', 'length', 's']
    s = call $76load_global.17(kind, char_width, length, $const84.21.3, func=$76load_global.17, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const84.21.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.17', '$const84.21.3', 'char_width', 'kind', 'length', 's']
    s = call $76load_global.17(kind, char_width, length, $const84.21.3, func=$76load_global.17, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const84.21.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.17', '$const84.21.3', 'char_width', 'kind', 'length', 's']
2025-06-13 07:34:42,608 - print_capture - INFO -     s = call $76load_global.17(kind, char_width, length, $const84.21.3, func=$76load_global.17, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const84.21.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.17', '$const84.21.3', 'char_width', 'kind', 'length', 's']
    bool92 = global(bool: <class 'bool'>)    ['bool92']
    bool92 = global(bool: <class 'bool'>)    ['bool92']
2025-06-13 07:34:42,608 - print_capture - INFO -     bool92 = global(bool: <class 'bool'>)    ['bool92']
    bool92 = global(bool: <class 'bool'>)    ['bool92']
    bool92 = global(bool: <class 'bool'>)    ['bool92']
2025-06-13 07:34:42,608 - print_capture - INFO -     bool92 = global(bool: <class 'bool'>)    ['bool92']
    $92pred = call bool92(flag, func=bool92, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None) ['$92pred', 'bool92', 'flag']
    $92pred = call bool92(flag, func=bool92, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None) ['$92pred', 'bool92', 'flag']
2025-06-13 07:34:42,608 - print_capture - INFO -     $92pred = call bool92(flag, func=bool92, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None) ['$92pred', 'bool92', 'flag']
    $92pred = call bool92(flag, func=bool92, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None) ['$92pred', 'bool92', 'flag']
    $92pred = call bool92(flag, func=bool92, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None) ['$92pred', 'bool92', 'flag']
2025-06-13 07:34:42,608 - print_capture - INFO -     $92pred = call bool92(flag, func=bool92, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None) ['$92pred', 'bool92', 'flag']
    branch $92pred, 94, 110                  ['$92pred']
    branch $92pred, 94, 110                  ['$92pred']
2025-06-13 07:34:42,608 - print_capture - INFO -     branch $92pred, 94, 110                  ['$92pred']
    branch $92pred, 94, 110                  ['$92pred']
    branch $92pred, 94, 110                  ['$92pred']
2025-06-13 07:34:42,608 - print_capture - INFO -     branch $92pred, 94, 110                  ['$92pred']
label 94:
label 94:
2025-06-13 07:34:42,608 - print_capture - INFO - label 94:
label 94:
label 94:
2025-06-13 07:34:42,608 - print_capture - INFO - label 94:
    $94load_global.0 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$94load_global.0']
    $94load_global.0 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$94load_global.0']
2025-06-13 07:34:42,609 - print_capture - INFO -     $94load_global.0 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$94load_global.0']
    $94load_global.0 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$94load_global.0']
    $94load_global.0 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$94load_global.0']
2025-06-13 07:34:42,609 - print_capture - INFO -     $94load_global.0 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$94load_global.0']
    $const98.2.2 = const(int, 0)             ['$const98.2.2']
    $const98.2.2 = const(int, 0)             ['$const98.2.2']
2025-06-13 07:34:42,609 - print_capture - INFO -     $const98.2.2 = const(int, 0)             ['$const98.2.2']
    $const98.2.2 = const(int, 0)             ['$const98.2.2']
    $const98.2.2 = const(int, 0)             ['$const98.2.2']
2025-06-13 07:34:42,609 - print_capture - INFO -     $const98.2.2 = const(int, 0)             ['$const98.2.2']
    $100load_global.3 = global(ord: <built-in function ord>) ['$100load_global.3']
    $100load_global.3 = global(ord: <built-in function ord>) ['$100load_global.3']
2025-06-13 07:34:42,609 - print_capture - INFO -     $100load_global.3 = global(ord: <built-in function ord>) ['$100load_global.3']
    $100load_global.3 = global(ord: <built-in function ord>) ['$100load_global.3']
    $100load_global.3 = global(ord: <built-in function ord>) ['$100load_global.3']
2025-06-13 07:34:42,609 - print_capture - INFO -     $100load_global.3 = global(ord: <built-in function ord>) ['$100load_global.3']
    $const102.4.6 = const(str, -)            ['$const102.4.6']
    $const102.4.6 = const(str, -)            ['$const102.4.6']
2025-06-13 07:34:42,609 - print_capture - INFO -     $const102.4.6 = const(str, -)            ['$const102.4.6']
    $const102.4.6 = const(str, -)            ['$const102.4.6']
    $const102.4.6 = const(str, -)            ['$const102.4.6']
2025-06-13 07:34:42,609 - print_capture - INFO -     $const102.4.6 = const(str, -)            ['$const102.4.6']
    $104call_function.5 = call $100load_global.3($const102.4.6, func=$100load_global.3, args=[Var($const102.4.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_global.3', '$104call_function.5', '$const102.4.6']
    $104call_function.5 = call $100load_global.3($const102.4.6, func=$100load_global.3, args=[Var($const102.4.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_global.3', '$104call_function.5', '$const102.4.6']
2025-06-13 07:34:42,609 - print_capture - INFO -     $104call_function.5 = call $100load_global.3($const102.4.6, func=$100load_global.3, args=[Var($const102.4.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_global.3', '$104call_function.5', '$const102.4.6']
    $104call_function.5 = call $100load_global.3($const102.4.6, func=$100load_global.3, args=[Var($const102.4.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_global.3', '$104call_function.5', '$const102.4.6']
    $104call_function.5 = call $100load_global.3($const102.4.6, func=$100load_global.3, args=[Var($const102.4.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_global.3', '$104call_function.5', '$const102.4.6']
2025-06-13 07:34:42,609 - print_capture - INFO -     $104call_function.5 = call $100load_global.3($const102.4.6, func=$100load_global.3, args=[Var($const102.4.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_global.3', '$104call_function.5', '$const102.4.6']
    $106call_function.6 = call $94load_global.0(s, $const98.2.2, $104call_function.5, func=$94load_global.0, args=[Var(s, unicode.py:2582), Var($const98.2.2, unicode.py:2584), Var($104call_function.5, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None) ['$104call_function.5', '$106call_function.6', '$94load_global.0', '$const98.2.2', 's']
    $106call_function.6 = call $94load_global.0(s, $const98.2.2, $104call_function.5, func=$94load_global.0, args=[Var(s, unicode.py:2582), Var($const98.2.2, unicode.py:2584), Var($104call_function.5, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None) ['$104call_function.5', '$106call_function.6', '$94load_global.0', '$const98.2.2', 's']
2025-06-13 07:34:42,609 - print_capture - INFO -     $106call_function.6 = call $94load_global.0(s, $const98.2.2, $104call_function.5, func=$94load_global.0, args=[Var(s, unicode.py:2582), Var($const98.2.2, unicode.py:2584), Var($104call_function.5, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None) ['$104call_function.5', '$106call_function.6', '$94load_global.0', '$const98.2.2', 's']
    $106call_function.6 = call $94load_global.0(s, $const98.2.2, $104call_function.5, func=$94load_global.0, args=[Var(s, unicode.py:2582), Var($const98.2.2, unicode.py:2584), Var($104call_function.5, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None) ['$104call_function.5', '$106call_function.6', '$94load_global.0', '$const98.2.2', 's']
    $106call_function.6 = call $94load_global.0(s, $const98.2.2, $104call_function.5, func=$94load_global.0, args=[Var(s, unicode.py:2582), Var($const98.2.2, unicode.py:2584), Var($104call_function.5, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None) ['$104call_function.5', '$106call_function.6', '$94load_global.0', '$const98.2.2', 's']
2025-06-13 07:34:42,609 - print_capture - INFO -     $106call_function.6 = call $94load_global.0(s, $const98.2.2, $104call_function.5, func=$94load_global.0, args=[Var(s, unicode.py:2582), Var($const98.2.2, unicode.py:2584), Var($104call_function.5, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None) ['$104call_function.5', '$106call_function.6', '$94load_global.0', '$const98.2.2', 's']
    jump 110                                 []
    jump 110                                 []
2025-06-13 07:34:42,609 - print_capture - INFO -     jump 110                                 []
    jump 110                                 []
    jump 110                                 []
2025-06-13 07:34:42,609 - print_capture - INFO -     jump 110                                 []
label 110:
label 110:
2025-06-13 07:34:42,609 - print_capture - INFO - label 110:
label 110:
label 110:
2025-06-13 07:34:42,609 - print_capture - INFO - label 110:
    $const112.1.5 = const(int, 1)            ['$const112.1.5']
    $const112.1.5 = const(int, 1)            ['$const112.1.5']
2025-06-13 07:34:42,609 - print_capture - INFO -     $const112.1.5 = const(int, 1)            ['$const112.1.5']
    $const112.1.5 = const(int, 1)            ['$const112.1.5']
    $const112.1.5 = const(int, 1)            ['$const112.1.5']
2025-06-13 07:34:42,609 - print_capture - INFO -     $const112.1.5 = const(int, 1)            ['$const112.1.5']
    idx = length - $const112.1.5             ['$const112.1.5', 'idx', 'length']
    idx = length - $const112.1.5             ['$const112.1.5', 'idx', 'length']
2025-06-13 07:34:42,609 - print_capture - INFO -     idx = length - $const112.1.5             ['$const112.1.5', 'idx', 'length']
    idx = length - $const112.1.5             ['$const112.1.5', 'idx', 'length']
    idx = length - $const112.1.5             ['$const112.1.5', 'idx', 'length']
2025-06-13 07:34:42,609 - print_capture - INFO -     idx = length - $const112.1.5             ['$const112.1.5', 'idx', 'length']
    $const120.4.2 = const(int, 0)            ['$const120.4.2']
    $const120.4.2 = const(int, 0)            ['$const120.4.2']
2025-06-13 07:34:42,609 - print_capture - INFO -     $const120.4.2 = const(int, 0)            ['$const120.4.2']
    $const120.4.2 = const(int, 0)            ['$const120.4.2']
    $const120.4.2 = const(int, 0)            ['$const120.4.2']
2025-06-13 07:34:42,609 - print_capture - INFO -     $const120.4.2 = const(int, 0)            ['$const120.4.2']
    $122compare_op.5 = n > $const120.4.2     ['$122compare_op.5', '$const120.4.2', 'n']
    $122compare_op.5 = n > $const120.4.2     ['$122compare_op.5', '$const120.4.2', 'n']
2025-06-13 07:34:42,609 - print_capture - INFO -     $122compare_op.5 = n > $const120.4.2     ['$122compare_op.5', '$const120.4.2', 'n']
    $122compare_op.5 = n > $const120.4.2     ['$122compare_op.5', '$const120.4.2', 'n']
    $122compare_op.5 = n > $const120.4.2     ['$122compare_op.5', '$const120.4.2', 'n']
2025-06-13 07:34:42,609 - print_capture - INFO -     $122compare_op.5 = n > $const120.4.2     ['$122compare_op.5', '$const120.4.2', 'n']
    bool124 = global(bool: <class 'bool'>)   ['bool124']
    bool124 = global(bool: <class 'bool'>)   ['bool124']
2025-06-13 07:34:42,609 - print_capture - INFO -     bool124 = global(bool: <class 'bool'>)   ['bool124']
    bool124 = global(bool: <class 'bool'>)   ['bool124']
    bool124 = global(bool: <class 'bool'>)   ['bool124']
2025-06-13 07:34:42,609 - print_capture - INFO -     bool124 = global(bool: <class 'bool'>)   ['bool124']
    $124pred = call bool124($122compare_op.5, func=bool124, args=(Var($122compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None) ['$122compare_op.5', '$124pred', 'bool124']
    $124pred = call bool124($122compare_op.5, func=bool124, args=(Var($122compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None) ['$122compare_op.5', '$124pred', 'bool124']
2025-06-13 07:34:42,609 - print_capture - INFO -     $124pred = call bool124($122compare_op.5, func=bool124, args=(Var($122compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None) ['$122compare_op.5', '$124pred', 'bool124']
    $124pred = call bool124($122compare_op.5, func=bool124, args=(Var($122compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None) ['$122compare_op.5', '$124pred', 'bool124']
    $124pred = call bool124($122compare_op.5, func=bool124, args=(Var($122compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None) ['$122compare_op.5', '$124pred', 'bool124']
2025-06-13 07:34:42,609 - print_capture - INFO -     $124pred = call bool124($122compare_op.5, func=bool124, args=(Var($122compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None) ['$122compare_op.5', '$124pred', 'bool124']
    branch $124pred, 126, 180                ['$124pred']
    branch $124pred, 126, 180                ['$124pred']
2025-06-13 07:34:42,609 - print_capture - INFO -     branch $124pred, 126, 180                ['$124pred']
    branch $124pred, 126, 180                ['$124pred']
    branch $124pred, 126, 180                ['$124pred']
2025-06-13 07:34:42,609 - print_capture - INFO -     branch $124pred, 126, 180                ['$124pred']
label 126:
label 126:
2025-06-13 07:34:42,609 - print_capture - INFO - label 126:
label 126:
label 126:
2025-06-13 07:34:42,609 - print_capture - INFO - label 126:
    $126load_global.0 = global(divmod: <built-in function divmod>) ['$126load_global.0']
    $126load_global.0 = global(divmod: <built-in function divmod>) ['$126load_global.0']
2025-06-13 07:34:42,609 - print_capture - INFO -     $126load_global.0 = global(divmod: <built-in function divmod>) ['$126load_global.0']
    $126load_global.0 = global(divmod: <built-in function divmod>) ['$126load_global.0']
    $126load_global.0 = global(divmod: <built-in function divmod>) ['$126load_global.0']
2025-06-13 07:34:42,609 - print_capture - INFO -     $126load_global.0 = global(divmod: <built-in function divmod>) ['$126load_global.0']
    $130load_deref.2 = freevar(ten: 10)      ['$130load_deref.2']
    $130load_deref.2 = freevar(ten: 10)      ['$130load_deref.2']
2025-06-13 07:34:42,609 - print_capture - INFO -     $130load_deref.2 = freevar(ten: 10)      ['$130load_deref.2']
    $130load_deref.2 = freevar(ten: 10)      ['$130load_deref.2']
    $130load_deref.2 = freevar(ten: 10)      ['$130load_deref.2']
2025-06-13 07:34:42,609 - print_capture - INFO -     $130load_deref.2 = freevar(ten: 10)      ['$130load_deref.2']
    $132call_function.3 = call $126load_global.0(n, $130load_deref.2, func=$126load_global.0, args=[Var(n, unicode.py:2572), Var($130load_deref.2, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.0', '$130load_deref.2', '$132call_function.3', 'n']
    $132call_function.3 = call $126load_global.0(n, $130load_deref.2, func=$126load_global.0, args=[Var(n, unicode.py:2572), Var($130load_deref.2, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.0', '$130load_deref.2', '$132call_function.3', 'n']
2025-06-13 07:34:42,609 - print_capture - INFO -     $132call_function.3 = call $126load_global.0(n, $130load_deref.2, func=$126load_global.0, args=[Var(n, unicode.py:2572), Var($130load_deref.2, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.0', '$130load_deref.2', '$132call_function.3', 'n']
    $132call_function.3 = call $126load_global.0(n, $130load_deref.2, func=$126load_global.0, args=[Var(n, unicode.py:2572), Var($130load_deref.2, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.0', '$130load_deref.2', '$132call_function.3', 'n']
    $132call_function.3 = call $126load_global.0(n, $130load_deref.2, func=$126load_global.0, args=[Var(n, unicode.py:2572), Var($130load_deref.2, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.0', '$130load_deref.2', '$132call_function.3', 'n']
2025-06-13 07:34:42,609 - print_capture - INFO -     $132call_function.3 = call $126load_global.0(n, $130load_deref.2, func=$126load_global.0, args=[Var(n, unicode.py:2572), Var($130load_deref.2, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.0', '$130load_deref.2', '$132call_function.3', 'n']
    $134unpack_sequence.6 = exhaust_iter(value=$132call_function.3, count=2) ['$132call_function.3', '$134unpack_sequence.6']
    $134unpack_sequence.6 = exhaust_iter(value=$132call_function.3, count=2) ['$132call_function.3', '$134unpack_sequence.6']
2025-06-13 07:34:42,609 - print_capture - INFO -     $134unpack_sequence.6 = exhaust_iter(value=$132call_function.3, count=2) ['$132call_function.3', '$134unpack_sequence.6']
    $134unpack_sequence.6 = exhaust_iter(value=$132call_function.3, count=2) ['$132call_function.3', '$134unpack_sequence.6']
    $134unpack_sequence.6 = exhaust_iter(value=$132call_function.3, count=2) ['$132call_function.3', '$134unpack_sequence.6']
2025-06-13 07:34:42,609 - print_capture - INFO -     $134unpack_sequence.6 = exhaust_iter(value=$132call_function.3, count=2) ['$132call_function.3', '$134unpack_sequence.6']
    $134unpack_sequence.4 = static_getitem(value=$134unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>) ['$134unpack_sequence.4', '$134unpack_sequence.6']
    $134unpack_sequence.4 = static_getitem(value=$134unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>) ['$134unpack_sequence.4', '$134unpack_sequence.6']
2025-06-13 07:34:42,610 - print_capture - INFO -     $134unpack_sequence.4 = static_getitem(value=$134unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>) ['$134unpack_sequence.4', '$134unpack_sequence.6']
    $134unpack_sequence.4 = static_getitem(value=$134unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>) ['$134unpack_sequence.4', '$134unpack_sequence.6']
    $134unpack_sequence.4 = static_getitem(value=$134unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>) ['$134unpack_sequence.4', '$134unpack_sequence.6']
2025-06-13 07:34:42,610 - print_capture - INFO -     $134unpack_sequence.4 = static_getitem(value=$134unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>) ['$134unpack_sequence.4', '$134unpack_sequence.6']
    $134unpack_sequence.5 = static_getitem(value=$134unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>) ['$134unpack_sequence.5', '$134unpack_sequence.6']
    $134unpack_sequence.5 = static_getitem(value=$134unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>) ['$134unpack_sequence.5', '$134unpack_sequence.6']
2025-06-13 07:34:42,610 - print_capture - INFO -     $134unpack_sequence.5 = static_getitem(value=$134unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>) ['$134unpack_sequence.5', '$134unpack_sequence.6']
    $134unpack_sequence.5 = static_getitem(value=$134unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>) ['$134unpack_sequence.5', '$134unpack_sequence.6']
    $134unpack_sequence.5 = static_getitem(value=$134unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>) ['$134unpack_sequence.5', '$134unpack_sequence.6']
2025-06-13 07:34:42,610 - print_capture - INFO -     $134unpack_sequence.5 = static_getitem(value=$134unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>) ['$134unpack_sequence.5', '$134unpack_sequence.6']
    n = $134unpack_sequence.4                ['$134unpack_sequence.4', 'n']
    n = $134unpack_sequence.4                ['$134unpack_sequence.4', 'n']
2025-06-13 07:34:42,610 - print_capture - INFO -     n = $134unpack_sequence.4                ['$134unpack_sequence.4', 'n']
    n = $134unpack_sequence.4                ['$134unpack_sequence.4', 'n']
    n = $134unpack_sequence.4                ['$134unpack_sequence.4', 'n']
2025-06-13 07:34:42,610 - print_capture - INFO -     n = $134unpack_sequence.4                ['$134unpack_sequence.4', 'n']
    digit = $134unpack_sequence.5            ['$134unpack_sequence.5', 'digit']
    digit = $134unpack_sequence.5            ['$134unpack_sequence.5', 'digit']
2025-06-13 07:34:42,610 - print_capture - INFO -     digit = $134unpack_sequence.5            ['$134unpack_sequence.5', 'digit']
    digit = $134unpack_sequence.5            ['$134unpack_sequence.5', 'digit']
    digit = $134unpack_sequence.5            ['$134unpack_sequence.5', 'digit']
2025-06-13 07:34:42,610 - print_capture - INFO -     digit = $134unpack_sequence.5            ['$134unpack_sequence.5', 'digit']
    $140load_global.7 = global(ord: <built-in function ord>) ['$140load_global.7']
    $140load_global.7 = global(ord: <built-in function ord>) ['$140load_global.7']
2025-06-13 07:34:42,610 - print_capture - INFO -     $140load_global.7 = global(ord: <built-in function ord>) ['$140load_global.7']
    $140load_global.7 = global(ord: <built-in function ord>) ['$140load_global.7']
    $140load_global.7 = global(ord: <built-in function ord>) ['$140load_global.7']
2025-06-13 07:34:42,610 - print_capture - INFO -     $140load_global.7 = global(ord: <built-in function ord>) ['$140load_global.7']
    $const142.8.4 = const(str, 0)            ['$const142.8.4']
    $const142.8.4 = const(str, 0)            ['$const142.8.4']
2025-06-13 07:34:42,610 - print_capture - INFO -     $const142.8.4 = const(str, 0)            ['$const142.8.4']
    $const142.8.4 = const(str, 0)            ['$const142.8.4']
    $const142.8.4 = const(str, 0)            ['$const142.8.4']
2025-06-13 07:34:42,610 - print_capture - INFO -     $const142.8.4 = const(str, 0)            ['$const142.8.4']
    $144call_function.9 = call $140load_global.7($const142.8.4, func=$140load_global.7, args=[Var($const142.8.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.7', '$144call_function.9', '$const142.8.4']
    $144call_function.9 = call $140load_global.7($const142.8.4, func=$140load_global.7, args=[Var($const142.8.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.7', '$144call_function.9', '$const142.8.4']
2025-06-13 07:34:42,610 - print_capture - INFO -     $144call_function.9 = call $140load_global.7($const142.8.4, func=$140load_global.7, args=[Var($const142.8.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.7', '$144call_function.9', '$const142.8.4']
    $144call_function.9 = call $140load_global.7($const142.8.4, func=$140load_global.7, args=[Var($const142.8.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.7', '$144call_function.9', '$const142.8.4']
    $144call_function.9 = call $140load_global.7($const142.8.4, func=$140load_global.7, args=[Var($const142.8.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.7', '$144call_function.9', '$const142.8.4']
2025-06-13 07:34:42,610 - print_capture - INFO -     $144call_function.9 = call $140load_global.7($const142.8.4, func=$140load_global.7, args=[Var($const142.8.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.7', '$144call_function.9', '$const142.8.4']
    c = $144call_function.9 + digit          ['$144call_function.9', 'c', 'digit']
    c = $144call_function.9 + digit          ['$144call_function.9', 'c', 'digit']
2025-06-13 07:34:42,610 - print_capture - INFO -     c = $144call_function.9 + digit          ['$144call_function.9', 'c', 'digit']
    c = $144call_function.9 + digit          ['$144call_function.9', 'c', 'digit']
    c = $144call_function.9 + digit          ['$144call_function.9', 'c', 'digit']
2025-06-13 07:34:42,610 - print_capture - INFO -     c = $144call_function.9 + digit          ['$144call_function.9', 'c', 'digit']
    $152load_global.12 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$152load_global.12']
    $152load_global.12 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$152load_global.12']
2025-06-13 07:34:42,610 - print_capture - INFO -     $152load_global.12 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$152load_global.12']
    $152load_global.12 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$152load_global.12']
    $152load_global.12 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$152load_global.12']
2025-06-13 07:34:42,610 - print_capture - INFO -     $152load_global.12 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$152load_global.12']
    $160call_function.16 = call $152load_global.12(s, idx, c, func=$152load_global.12, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.12', '$160call_function.16', 'c', 'idx', 's']
    $160call_function.16 = call $152load_global.12(s, idx, c, func=$152load_global.12, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.12', '$160call_function.16', 'c', 'idx', 's']
2025-06-13 07:34:42,610 - print_capture - INFO -     $160call_function.16 = call $152load_global.12(s, idx, c, func=$152load_global.12, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.12', '$160call_function.16', 'c', 'idx', 's']
    $160call_function.16 = call $152load_global.12(s, idx, c, func=$152load_global.12, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.12', '$160call_function.16', 'c', 'idx', 's']
    $160call_function.16 = call $152load_global.12(s, idx, c, func=$152load_global.12, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.12', '$160call_function.16', 'c', 'idx', 's']
2025-06-13 07:34:42,610 - print_capture - INFO -     $160call_function.16 = call $152load_global.12(s, idx, c, func=$152load_global.12, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.12', '$160call_function.16', 'c', 'idx', 's']
    $const166.18.5 = const(int, 1)           ['$const166.18.5']
    $const166.18.5 = const(int, 1)           ['$const166.18.5']
2025-06-13 07:34:42,610 - print_capture - INFO -     $const166.18.5 = const(int, 1)           ['$const166.18.5']
    $const166.18.5 = const(int, 1)           ['$const166.18.5']
    $const166.18.5 = const(int, 1)           ['$const166.18.5']
2025-06-13 07:34:42,610 - print_capture - INFO -     $const166.18.5 = const(int, 1)           ['$const166.18.5']
    $168inplace_subtract.19 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const166.18.5, static_lhs=Undefined, static_rhs=Undefined) ['$168inplace_subtract.19', '$const166.18.5', 'idx']
    $168inplace_subtract.19 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const166.18.5, static_lhs=Undefined, static_rhs=Undefined) ['$168inplace_subtract.19', '$const166.18.5', 'idx']
2025-06-13 07:34:42,610 - print_capture - INFO -     $168inplace_subtract.19 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const166.18.5, static_lhs=Undefined, static_rhs=Undefined) ['$168inplace_subtract.19', '$const166.18.5', 'idx']
    $168inplace_subtract.19 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const166.18.5, static_lhs=Undefined, static_rhs=Undefined) ['$168inplace_subtract.19', '$const166.18.5', 'idx']
    $168inplace_subtract.19 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const166.18.5, static_lhs=Undefined, static_rhs=Undefined) ['$168inplace_subtract.19', '$const166.18.5', 'idx']
2025-06-13 07:34:42,610 - print_capture - INFO -     $168inplace_subtract.19 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const166.18.5, static_lhs=Undefined, static_rhs=Undefined) ['$168inplace_subtract.19', '$const166.18.5', 'idx']
    idx = $168inplace_subtract.19            ['$168inplace_subtract.19', 'idx']
    idx = $168inplace_subtract.19            ['$168inplace_subtract.19', 'idx']
2025-06-13 07:34:42,610 - print_capture - INFO -     idx = $168inplace_subtract.19            ['$168inplace_subtract.19', 'idx']
    idx = $168inplace_subtract.19            ['$168inplace_subtract.19', 'idx']
    idx = $168inplace_subtract.19            ['$168inplace_subtract.19', 'idx']
2025-06-13 07:34:42,610 - print_capture - INFO -     idx = $168inplace_subtract.19            ['$168inplace_subtract.19', 'idx']
    $const174.21.2 = const(int, 0)           ['$const174.21.2']
    $const174.21.2 = const(int, 0)           ['$const174.21.2']
2025-06-13 07:34:42,610 - print_capture - INFO -     $const174.21.2 = const(int, 0)           ['$const174.21.2']
    $const174.21.2 = const(int, 0)           ['$const174.21.2']
    $const174.21.2 = const(int, 0)           ['$const174.21.2']
2025-06-13 07:34:42,610 - print_capture - INFO -     $const174.21.2 = const(int, 0)           ['$const174.21.2']
    $176compare_op.22 = n > $const174.21.2   ['$176compare_op.22', '$const174.21.2', 'n']
    $176compare_op.22 = n > $const174.21.2   ['$176compare_op.22', '$const174.21.2', 'n']
2025-06-13 07:34:42,610 - print_capture - INFO -     $176compare_op.22 = n > $const174.21.2   ['$176compare_op.22', '$const174.21.2', 'n']
    $176compare_op.22 = n > $const174.21.2   ['$176compare_op.22', '$const174.21.2', 'n']
    $176compare_op.22 = n > $const174.21.2   ['$176compare_op.22', '$const174.21.2', 'n']
2025-06-13 07:34:42,610 - print_capture - INFO -     $176compare_op.22 = n > $const174.21.2   ['$176compare_op.22', '$const174.21.2', 'n']
    bool178 = global(bool: <class 'bool'>)   ['bool178']
    bool178 = global(bool: <class 'bool'>)   ['bool178']
2025-06-13 07:34:42,610 - print_capture - INFO -     bool178 = global(bool: <class 'bool'>)   ['bool178']
    bool178 = global(bool: <class 'bool'>)   ['bool178']
    bool178 = global(bool: <class 'bool'>)   ['bool178']
2025-06-13 07:34:42,610 - print_capture - INFO -     bool178 = global(bool: <class 'bool'>)   ['bool178']
    $178pred = call bool178($176compare_op.22, func=bool178, args=(Var($176compare_op.22, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None) ['$176compare_op.22', '$178pred', 'bool178']
    $178pred = call bool178($176compare_op.22, func=bool178, args=(Var($176compare_op.22, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None) ['$176compare_op.22', '$178pred', 'bool178']
2025-06-13 07:34:42,610 - print_capture - INFO -     $178pred = call bool178($176compare_op.22, func=bool178, args=(Var($176compare_op.22, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None) ['$176compare_op.22', '$178pred', 'bool178']
    $178pred = call bool178($176compare_op.22, func=bool178, args=(Var($176compare_op.22, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None) ['$176compare_op.22', '$178pred', 'bool178']
    $178pred = call bool178($176compare_op.22, func=bool178, args=(Var($176compare_op.22, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None) ['$176compare_op.22', '$178pred', 'bool178']
2025-06-13 07:34:42,610 - print_capture - INFO -     $178pred = call bool178($176compare_op.22, func=bool178, args=(Var($176compare_op.22, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None) ['$176compare_op.22', '$178pred', 'bool178']
    branch $178pred, 126, 180                ['$178pred']
    branch $178pred, 126, 180                ['$178pred']
2025-06-13 07:34:42,610 - print_capture - INFO -     branch $178pred, 126, 180                ['$178pred']
    branch $178pred, 126, 180                ['$178pred']
    branch $178pred, 126, 180                ['$178pred']
2025-06-13 07:34:42,610 - print_capture - INFO -     branch $178pred, 126, 180                ['$178pred']
label 180:
label 180:
2025-06-13 07:34:42,610 - print_capture - INFO - label 180:
label 180:
label 180:
2025-06-13 07:34:42,610 - print_capture - INFO - label 180:
    $182return_value.1 = cast(value=s)       ['$182return_value.1', 's']
    $182return_value.1 = cast(value=s)       ['$182return_value.1', 's']
2025-06-13 07:34:42,610 - print_capture - INFO -     $182return_value.1 = cast(value=s)       ['$182return_value.1', 's']
    $182return_value.1 = cast(value=s)       ['$182return_value.1', 's']
    $182return_value.1 = cast(value=s)       ['$182return_value.1', 's']
2025-06-13 07:34:42,611 - print_capture - INFO -     $182return_value.1 = cast(value=s)       ['$182return_value.1', 's']
    return $182return_value.1                ['$182return_value.1']
    return $182return_value.1                ['$182return_value.1']
2025-06-13 07:34:42,611 - print_capture - INFO -     return $182return_value.1                ['$182return_value.1']
    return $182return_value.1                ['$182return_value.1']
    return $182return_value.1                ['$182return_value.1']
2025-06-13 07:34:42,611 - print_capture - INFO -     return $182return_value.1                ['$182return_value.1']
label 0:
label 0:
2025-06-13 07:34:42,620 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,620 - print_capture - INFO - label 0:
    kind = arg(0, name=kind)                 ['kind']
    kind = arg(0, name=kind)                 ['kind']
2025-06-13 07:34:42,620 - print_capture - INFO -     kind = arg(0, name=kind)                 ['kind']
    kind = arg(0, name=kind)                 ['kind']
    kind = arg(0, name=kind)                 ['kind']
2025-06-13 07:34:42,620 - print_capture - INFO -     kind = arg(0, name=kind)                 ['kind']
    $4load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$4load_global.1']
    $4load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$4load_global.1']
2025-06-13 07:34:42,620 - print_capture - INFO -     $4load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$4load_global.1']
    $4load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$4load_global.1']
    $4load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$4load_global.1']
2025-06-13 07:34:42,620 - print_capture - INFO -     $4load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$4load_global.1']
    $6compare_op.2 = kind == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind']
    $6compare_op.2 = kind == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind']
2025-06-13 07:34:42,620 - print_capture - INFO -     $6compare_op.2 = kind == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind']
    $6compare_op.2 = kind == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind']
    $6compare_op.2 = kind == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind']
2025-06-13 07:34:42,620 - print_capture - INFO -     $6compare_op.2 = kind == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
2025-06-13 07:34:42,620 - print_capture - INFO -     bool8 = global(bool: <class 'bool'>)     ['bool8']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
2025-06-13 07:34:42,620 - print_capture - INFO -     bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
2025-06-13 07:34:42,620 - print_capture - INFO -     $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
2025-06-13 07:34:42,620 - print_capture - INFO -     $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    branch $8pred, 10, 14                    ['$8pred']
    branch $8pred, 10, 14                    ['$8pred']
2025-06-13 07:34:42,620 - print_capture - INFO -     branch $8pred, 10, 14                    ['$8pred']
    branch $8pred, 10, 14                    ['$8pred']
    branch $8pred, 10, 14                    ['$8pred']
2025-06-13 07:34:42,620 - print_capture - INFO -     branch $8pred, 10, 14                    ['$8pred']
label 10:
label 10:
2025-06-13 07:34:42,620 - print_capture - INFO - label 10:
label 10:
label 10:
2025-06-13 07:34:42,620 - print_capture - INFO - label 10:
    $const10.0.1 = const(int, 1)             ['$const10.0.1']
    $const10.0.1 = const(int, 1)             ['$const10.0.1']
2025-06-13 07:34:42,620 - print_capture - INFO -     $const10.0.1 = const(int, 1)             ['$const10.0.1']
    $const10.0.1 = const(int, 1)             ['$const10.0.1']
    $const10.0.1 = const(int, 1)             ['$const10.0.1']
2025-06-13 07:34:42,620 - print_capture - INFO -     $const10.0.1 = const(int, 1)             ['$const10.0.1']
    $12return_value.1 = cast(value=$const10.0.1) ['$12return_value.1', '$const10.0.1']
    $12return_value.1 = cast(value=$const10.0.1) ['$12return_value.1', '$const10.0.1']
2025-06-13 07:34:42,620 - print_capture - INFO -     $12return_value.1 = cast(value=$const10.0.1) ['$12return_value.1', '$const10.0.1']
    $12return_value.1 = cast(value=$const10.0.1) ['$12return_value.1', '$const10.0.1']
    $12return_value.1 = cast(value=$const10.0.1) ['$12return_value.1', '$const10.0.1']
2025-06-13 07:34:42,620 - print_capture - INFO -     $12return_value.1 = cast(value=$const10.0.1) ['$12return_value.1', '$const10.0.1']
    return $12return_value.1                 ['$12return_value.1']
    return $12return_value.1                 ['$12return_value.1']
2025-06-13 07:34:42,620 - print_capture - INFO -     return $12return_value.1                 ['$12return_value.1']
    return $12return_value.1                 ['$12return_value.1']
    return $12return_value.1                 ['$12return_value.1']
2025-06-13 07:34:42,620 - print_capture - INFO -     return $12return_value.1                 ['$12return_value.1']
label 14:
label 14:
2025-06-13 07:34:42,620 - print_capture - INFO - label 14:
label 14:
label 14:
2025-06-13 07:34:42,620 - print_capture - INFO - label 14:
    $16load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$16load_global.1']
    $16load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$16load_global.1']
2025-06-13 07:34:42,620 - print_capture - INFO -     $16load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$16load_global.1']
    $16load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$16load_global.1']
    $16load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$16load_global.1']
2025-06-13 07:34:42,620 - print_capture - INFO -     $16load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$16load_global.1']
    $18compare_op.2 = kind == $16load_global.1 ['$16load_global.1', '$18compare_op.2', 'kind']
    $18compare_op.2 = kind == $16load_global.1 ['$16load_global.1', '$18compare_op.2', 'kind']
2025-06-13 07:34:42,621 - print_capture - INFO -     $18compare_op.2 = kind == $16load_global.1 ['$16load_global.1', '$18compare_op.2', 'kind']
    $18compare_op.2 = kind == $16load_global.1 ['$16load_global.1', '$18compare_op.2', 'kind']
    $18compare_op.2 = kind == $16load_global.1 ['$16load_global.1', '$18compare_op.2', 'kind']
2025-06-13 07:34:42,621 - print_capture - INFO -     $18compare_op.2 = kind == $16load_global.1 ['$16load_global.1', '$18compare_op.2', 'kind']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
2025-06-13 07:34:42,621 - print_capture - INFO -     bool20 = global(bool: <class 'bool'>)    ['bool20']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
2025-06-13 07:34:42,621 - print_capture - INFO -     bool20 = global(bool: <class 'bool'>)    ['bool20']
    $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
    $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
2025-06-13 07:34:42,621 - print_capture - INFO -     $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
    $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
    $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
2025-06-13 07:34:42,621 - print_capture - INFO -     $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
    branch $20pred, 22, 26                   ['$20pred']
    branch $20pred, 22, 26                   ['$20pred']
2025-06-13 07:34:42,621 - print_capture - INFO -     branch $20pred, 22, 26                   ['$20pred']
    branch $20pred, 22, 26                   ['$20pred']
    branch $20pred, 22, 26                   ['$20pred']
2025-06-13 07:34:42,621 - print_capture - INFO -     branch $20pred, 22, 26                   ['$20pred']
label 22:
label 22:
2025-06-13 07:34:42,621 - print_capture - INFO - label 22:
label 22:
label 22:
2025-06-13 07:34:42,621 - print_capture - INFO - label 22:
    $const22.0.2 = const(int, 2)             ['$const22.0.2']
    $const22.0.2 = const(int, 2)             ['$const22.0.2']
2025-06-13 07:34:42,621 - print_capture - INFO -     $const22.0.2 = const(int, 2)             ['$const22.0.2']
    $const22.0.2 = const(int, 2)             ['$const22.0.2']
    $const22.0.2 = const(int, 2)             ['$const22.0.2']
2025-06-13 07:34:42,621 - print_capture - INFO -     $const22.0.2 = const(int, 2)             ['$const22.0.2']
    $24return_value.1 = cast(value=$const22.0.2) ['$24return_value.1', '$const22.0.2']
    $24return_value.1 = cast(value=$const22.0.2) ['$24return_value.1', '$const22.0.2']
2025-06-13 07:34:42,621 - print_capture - INFO -     $24return_value.1 = cast(value=$const22.0.2) ['$24return_value.1', '$const22.0.2']
    $24return_value.1 = cast(value=$const22.0.2) ['$24return_value.1', '$const22.0.2']
    $24return_value.1 = cast(value=$const22.0.2) ['$24return_value.1', '$const22.0.2']
2025-06-13 07:34:42,621 - print_capture - INFO -     $24return_value.1 = cast(value=$const22.0.2) ['$24return_value.1', '$const22.0.2']
    return $24return_value.1                 ['$24return_value.1']
    return $24return_value.1                 ['$24return_value.1']
2025-06-13 07:34:42,621 - print_capture - INFO -     return $24return_value.1                 ['$24return_value.1']
    return $24return_value.1                 ['$24return_value.1']
    return $24return_value.1                 ['$24return_value.1']
2025-06-13 07:34:42,621 - print_capture - INFO -     return $24return_value.1                 ['$24return_value.1']
label 26:
label 26:
2025-06-13 07:34:42,621 - print_capture - INFO - label 26:
label 26:
label 26:
2025-06-13 07:34:42,621 - print_capture - INFO - label 26:
    $28load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$28load_global.1']
    $28load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$28load_global.1']
2025-06-13 07:34:42,621 - print_capture - INFO -     $28load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$28load_global.1']
    $28load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$28load_global.1']
    $28load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$28load_global.1']
2025-06-13 07:34:42,621 - print_capture - INFO -     $28load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$28load_global.1']
    $30compare_op.2 = kind == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind']
    $30compare_op.2 = kind == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind']
2025-06-13 07:34:42,621 - print_capture - INFO -     $30compare_op.2 = kind == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind']
    $30compare_op.2 = kind == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind']
    $30compare_op.2 = kind == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind']
2025-06-13 07:34:42,621 - print_capture - INFO -     $30compare_op.2 = kind == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
2025-06-13 07:34:42,621 - print_capture - INFO -     bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
2025-06-13 07:34:42,621 - print_capture - INFO -     bool32 = global(bool: <class 'bool'>)    ['bool32']
    $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
2025-06-13 07:34:42,621 - print_capture - INFO -     $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
2025-06-13 07:34:42,621 - print_capture - INFO -     $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
    branch $32pred, 34, 38                   ['$32pred']
    branch $32pred, 34, 38                   ['$32pred']
2025-06-13 07:34:42,621 - print_capture - INFO -     branch $32pred, 34, 38                   ['$32pred']
    branch $32pred, 34, 38                   ['$32pred']
    branch $32pred, 34, 38                   ['$32pred']
2025-06-13 07:34:42,621 - print_capture - INFO -     branch $32pred, 34, 38                   ['$32pred']
label 34:
label 34:
2025-06-13 07:34:42,621 - print_capture - INFO - label 34:
label 34:
label 34:
2025-06-13 07:34:42,621 - print_capture - INFO - label 34:
    $const34.0.3 = const(int, 4)             ['$const34.0.3']
    $const34.0.3 = const(int, 4)             ['$const34.0.3']
2025-06-13 07:34:42,621 - print_capture - INFO -     $const34.0.3 = const(int, 4)             ['$const34.0.3']
    $const34.0.3 = const(int, 4)             ['$const34.0.3']
    $const34.0.3 = const(int, 4)             ['$const34.0.3']
2025-06-13 07:34:42,621 - print_capture - INFO -     $const34.0.3 = const(int, 4)             ['$const34.0.3']
    $36return_value.1 = cast(value=$const34.0.3) ['$36return_value.1', '$const34.0.3']
    $36return_value.1 = cast(value=$const34.0.3) ['$36return_value.1', '$const34.0.3']
2025-06-13 07:34:42,621 - print_capture - INFO -     $36return_value.1 = cast(value=$const34.0.3) ['$36return_value.1', '$const34.0.3']
    $36return_value.1 = cast(value=$const34.0.3) ['$36return_value.1', '$const34.0.3']
    $36return_value.1 = cast(value=$const34.0.3) ['$36return_value.1', '$const34.0.3']
2025-06-13 07:34:42,621 - print_capture - INFO -     $36return_value.1 = cast(value=$const34.0.3) ['$36return_value.1', '$const34.0.3']
    return $36return_value.1                 ['$36return_value.1']
    return $36return_value.1                 ['$36return_value.1']
2025-06-13 07:34:42,621 - print_capture - INFO -     return $36return_value.1                 ['$36return_value.1']
    return $36return_value.1                 ['$36return_value.1']
    return $36return_value.1                 ['$36return_value.1']
2025-06-13 07:34:42,621 - print_capture - INFO -     return $36return_value.1                 ['$36return_value.1']
label 38:
label 38:
2025-06-13 07:34:42,621 - print_capture - INFO - label 38:
label 38:
label 38:
2025-06-13 07:34:42,621 - print_capture - INFO - label 38:
    $40load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$40load_global.1']
    $40load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$40load_global.1']
2025-06-13 07:34:42,621 - print_capture - INFO -     $40load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$40load_global.1']
    $40load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$40load_global.1']
    $40load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$40load_global.1']
2025-06-13 07:34:42,621 - print_capture - INFO -     $40load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$40load_global.1']
    $42compare_op.2 = kind == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind']
    $42compare_op.2 = kind == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind']
2025-06-13 07:34:42,621 - print_capture - INFO -     $42compare_op.2 = kind == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind']
    $42compare_op.2 = kind == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind']
    $42compare_op.2 = kind == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind']
2025-06-13 07:34:42,621 - print_capture - INFO -     $42compare_op.2 = kind == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind']
    bool44 = global(bool: <class 'bool'>)    ['bool44']
    bool44 = global(bool: <class 'bool'>)    ['bool44']
2025-06-13 07:34:42,622 - print_capture - INFO -     bool44 = global(bool: <class 'bool'>)    ['bool44']
    bool44 = global(bool: <class 'bool'>)    ['bool44']
    bool44 = global(bool: <class 'bool'>)    ['bool44']
2025-06-13 07:34:42,622 - print_capture - INFO -     bool44 = global(bool: <class 'bool'>)    ['bool44']
    $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
    $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
2025-06-13 07:34:42,622 - print_capture - INFO -     $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
    $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
    $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
2025-06-13 07:34:42,622 - print_capture - INFO -     $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
    branch $44pred, 46, 54                   ['$44pred']
    branch $44pred, 46, 54                   ['$44pred']
2025-06-13 07:34:42,622 - print_capture - INFO -     branch $44pred, 46, 54                   ['$44pred']
    branch $44pred, 46, 54                   ['$44pred']
    branch $44pred, 46, 54                   ['$44pred']
2025-06-13 07:34:42,622 - print_capture - INFO -     branch $44pred, 46, 54                   ['$44pred']
label 46:
label 46:
2025-06-13 07:34:42,622 - print_capture - INFO - label 46:
label 46:
label 46:
2025-06-13 07:34:42,622 - print_capture - INFO - label 46:
    $46load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$46load_global.0']
    $46load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$46load_global.0']
2025-06-13 07:34:42,622 - print_capture - INFO -     $46load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$46load_global.0']
    $46load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$46load_global.0']
    $46load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$46load_global.0']
2025-06-13 07:34:42,622 - print_capture - INFO -     $46load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$46load_global.0']
    $const48.1.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const48.1.4']
    $const48.1.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const48.1.4']
2025-06-13 07:34:42,622 - print_capture - INFO -     $const48.1.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const48.1.4']
    $const48.1.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const48.1.4']
    $const48.1.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const48.1.4']
2025-06-13 07:34:42,622 - print_capture - INFO -     $const48.1.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const48.1.4']
    $50call_function.2 = call $46load_global.0($const48.1.4, func=$46load_global.0, args=[Var($const48.1.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.0', '$50call_function.2', '$const48.1.4']
    $50call_function.2 = call $46load_global.0($const48.1.4, func=$46load_global.0, args=[Var($const48.1.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.0', '$50call_function.2', '$const48.1.4']
2025-06-13 07:34:42,622 - print_capture - INFO -     $50call_function.2 = call $46load_global.0($const48.1.4, func=$46load_global.0, args=[Var($const48.1.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.0', '$50call_function.2', '$const48.1.4']
    $50call_function.2 = call $46load_global.0($const48.1.4, func=$46load_global.0, args=[Var($const48.1.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.0', '$50call_function.2', '$const48.1.4']
    $50call_function.2 = call $46load_global.0($const48.1.4, func=$46load_global.0, args=[Var($const48.1.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.0', '$50call_function.2', '$const48.1.4']
2025-06-13 07:34:42,622 - print_capture - INFO -     $50call_function.2 = call $46load_global.0($const48.1.4, func=$46load_global.0, args=[Var($const48.1.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.0', '$50call_function.2', '$const48.1.4']
    raise $50call_function.2                 ['$50call_function.2']
    raise $50call_function.2                 ['$50call_function.2']
2025-06-13 07:34:42,622 - print_capture - INFO -     raise $50call_function.2                 ['$50call_function.2']
    raise $50call_function.2                 ['$50call_function.2']
    raise $50call_function.2                 ['$50call_function.2']
2025-06-13 07:34:42,622 - print_capture - INFO -     raise $50call_function.2                 ['$50call_function.2']
label 54:
label 54:
2025-06-13 07:34:42,622 - print_capture - INFO - label 54:
label 54:
label 54:
2025-06-13 07:34:42,622 - print_capture - INFO - label 54:
    $54load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$54load_global.0']
    $54load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$54load_global.0']
2025-06-13 07:34:42,622 - print_capture - INFO -     $54load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$54load_global.0']
    $54load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$54load_global.0']
    $54load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$54load_global.0']
2025-06-13 07:34:42,622 - print_capture - INFO -     $54load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$54load_global.0']
    $const56.1.5 = const(str, Unexpected unicode encoding encountered) ['$const56.1.5']
    $const56.1.5 = const(str, Unexpected unicode encoding encountered) ['$const56.1.5']
2025-06-13 07:34:42,622 - print_capture - INFO -     $const56.1.5 = const(str, Unexpected unicode encoding encountered) ['$const56.1.5']
    $const56.1.5 = const(str, Unexpected unicode encoding encountered) ['$const56.1.5']
    $const56.1.5 = const(str, Unexpected unicode encoding encountered) ['$const56.1.5']
2025-06-13 07:34:42,622 - print_capture - INFO -     $const56.1.5 = const(str, Unexpected unicode encoding encountered) ['$const56.1.5']
    $58call_function.2 = call $54load_global.0($const56.1.5, func=$54load_global.0, args=[Var($const56.1.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$58call_function.2', '$const56.1.5']
    $58call_function.2 = call $54load_global.0($const56.1.5, func=$54load_global.0, args=[Var($const56.1.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$58call_function.2', '$const56.1.5']
2025-06-13 07:34:42,622 - print_capture - INFO -     $58call_function.2 = call $54load_global.0($const56.1.5, func=$54load_global.0, args=[Var($const56.1.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$58call_function.2', '$const56.1.5']
    $58call_function.2 = call $54load_global.0($const56.1.5, func=$54load_global.0, args=[Var($const56.1.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$58call_function.2', '$const56.1.5']
    $58call_function.2 = call $54load_global.0($const56.1.5, func=$54load_global.0, args=[Var($const56.1.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$58call_function.2', '$const56.1.5']
2025-06-13 07:34:42,622 - print_capture - INFO -     $58call_function.2 = call $54load_global.0($const56.1.5, func=$54load_global.0, args=[Var($const56.1.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$58call_function.2', '$const56.1.5']
    raise $58call_function.2                 ['$58call_function.2']
    raise $58call_function.2                 ['$58call_function.2']
2025-06-13 07:34:42,622 - print_capture - INFO -     raise $58call_function.2                 ['$58call_function.2']
    raise $58call_function.2                 ['$58call_function.2']
    raise $58call_function.2                 ['$58call_function.2']
2025-06-13 07:34:42,622 - print_capture - INFO -     raise $58call_function.2                 ['$58call_function.2']
label 0:
label 0:
2025-06-13 07:34:42,647 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,647 - print_capture - INFO - label 0:
    c = arg(0, name=c)                       ['c']
    c = arg(0, name=c)                       ['c']
2025-06-13 07:34:42,647 - print_capture - INFO -     c = arg(0, name=c)                       ['c']
    c = arg(0, name=c)                       ['c']
    c = arg(0, name=c)                       ['c']
2025-06-13 07:34:42,647 - print_capture - INFO -     c = arg(0, name=c)                       ['c']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
2025-06-13 07:34:42,647 - print_capture - INFO -     $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
2025-06-13 07:34:42,647 - print_capture - INFO -     $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    lc = call $2load_global.0(c, func=$2load_global.0, args=[Var(c, unicode.py:2510)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'c', 'lc']
    lc = call $2load_global.0(c, func=$2load_global.0, args=[Var(c, unicode.py:2510)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'c', 'lc']
2025-06-13 07:34:42,647 - print_capture - INFO -     lc = call $2load_global.0(c, func=$2load_global.0, args=[Var(c, unicode.py:2510)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'c', 'lc']
    lc = call $2load_global.0(c, func=$2load_global.0, args=[Var(c, unicode.py:2510)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'c', 'lc']
    lc = call $2load_global.0(c, func=$2load_global.0, args=[Var(c, unicode.py:2510)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'c', 'lc']
2025-06-13 07:34:42,647 - print_capture - INFO -     lc = call $2load_global.0(c, func=$2load_global.0, args=[Var(c, unicode.py:2510)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'c', 'lc']
    $const12.4.1 = const(int, 1)             ['$const12.4.1']
    $const12.4.1 = const(int, 1)             ['$const12.4.1']
2025-06-13 07:34:42,647 - print_capture - INFO -     $const12.4.1 = const(int, 1)             ['$const12.4.1']
    $const12.4.1 = const(int, 1)             ['$const12.4.1']
    $const12.4.1 = const(int, 1)             ['$const12.4.1']
2025-06-13 07:34:42,647 - print_capture - INFO -     $const12.4.1 = const(int, 1)             ['$const12.4.1']
    $14compare_op.5 = lc != $const12.4.1     ['$14compare_op.5', '$const12.4.1', 'lc']
    $14compare_op.5 = lc != $const12.4.1     ['$14compare_op.5', '$const12.4.1', 'lc']
2025-06-13 07:34:42,648 - print_capture - INFO -     $14compare_op.5 = lc != $const12.4.1     ['$14compare_op.5', '$const12.4.1', 'lc']
    $14compare_op.5 = lc != $const12.4.1     ['$14compare_op.5', '$const12.4.1', 'lc']
    $14compare_op.5 = lc != $const12.4.1     ['$14compare_op.5', '$const12.4.1', 'lc']
2025-06-13 07:34:42,648 - print_capture - INFO -     $14compare_op.5 = lc != $const12.4.1     ['$14compare_op.5', '$const12.4.1', 'lc']
    bool16 = global(bool: <class 'bool'>)    ['bool16']
    bool16 = global(bool: <class 'bool'>)    ['bool16']
2025-06-13 07:34:42,648 - print_capture - INFO -     bool16 = global(bool: <class 'bool'>)    ['bool16']
    bool16 = global(bool: <class 'bool'>)    ['bool16']
    bool16 = global(bool: <class 'bool'>)    ['bool16']
2025-06-13 07:34:42,648 - print_capture - INFO -     bool16 = global(bool: <class 'bool'>)    ['bool16']
    $16pred = call bool16($14compare_op.5, func=bool16, args=(Var($14compare_op.5, unicode.py:2512),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.5', '$16pred', 'bool16']
    $16pred = call bool16($14compare_op.5, func=bool16, args=(Var($14compare_op.5, unicode.py:2512),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.5', '$16pred', 'bool16']
2025-06-13 07:34:42,648 - print_capture - INFO -     $16pred = call bool16($14compare_op.5, func=bool16, args=(Var($14compare_op.5, unicode.py:2512),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.5', '$16pred', 'bool16']
    $16pred = call bool16($14compare_op.5, func=bool16, args=(Var($14compare_op.5, unicode.py:2512),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.5', '$16pred', 'bool16']
    $16pred = call bool16($14compare_op.5, func=bool16, args=(Var($14compare_op.5, unicode.py:2512),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.5', '$16pred', 'bool16']
2025-06-13 07:34:42,648 - print_capture - INFO -     $16pred = call bool16($14compare_op.5, func=bool16, args=(Var($14compare_op.5, unicode.py:2512),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.5', '$16pred', 'bool16']
    branch $16pred, 18, 26                   ['$16pred']
    branch $16pred, 18, 26                   ['$16pred']
2025-06-13 07:34:42,648 - print_capture - INFO -     branch $16pred, 18, 26                   ['$16pred']
    branch $16pred, 18, 26                   ['$16pred']
    branch $16pred, 18, 26                   ['$16pred']
2025-06-13 07:34:42,648 - print_capture - INFO -     branch $16pred, 18, 26                   ['$16pred']
label 18:
label 18:
2025-06-13 07:34:42,648 - print_capture - INFO - label 18:
label 18:
label 18:
2025-06-13 07:34:42,648 - print_capture - INFO - label 18:
    $18load_global.0 = global(TypeError: <class 'TypeError'>) ['$18load_global.0']
    $18load_global.0 = global(TypeError: <class 'TypeError'>) ['$18load_global.0']
2025-06-13 07:34:42,648 - print_capture - INFO -     $18load_global.0 = global(TypeError: <class 'TypeError'>) ['$18load_global.0']
    $18load_global.0 = global(TypeError: <class 'TypeError'>) ['$18load_global.0']
    $18load_global.0 = global(TypeError: <class 'TypeError'>) ['$18load_global.0']
2025-06-13 07:34:42,648 - print_capture - INFO -     $18load_global.0 = global(TypeError: <class 'TypeError'>) ['$18load_global.0']
    $const20.1.2 = const(str, ord() expected a character) ['$const20.1.2']
    $const20.1.2 = const(str, ord() expected a character) ['$const20.1.2']
2025-06-13 07:34:42,648 - print_capture - INFO -     $const20.1.2 = const(str, ord() expected a character) ['$const20.1.2']
    $const20.1.2 = const(str, ord() expected a character) ['$const20.1.2']
    $const20.1.2 = const(str, ord() expected a character) ['$const20.1.2']
2025-06-13 07:34:42,648 - print_capture - INFO -     $const20.1.2 = const(str, ord() expected a character) ['$const20.1.2']
    $22call_function.2 = call $18load_global.0($const20.1.2, func=$18load_global.0, args=[Var($const20.1.2, unicode.py:2514)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_global.0', '$22call_function.2', '$const20.1.2']
    $22call_function.2 = call $18load_global.0($const20.1.2, func=$18load_global.0, args=[Var($const20.1.2, unicode.py:2514)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_global.0', '$22call_function.2', '$const20.1.2']
2025-06-13 07:34:42,648 - print_capture - INFO -     $22call_function.2 = call $18load_global.0($const20.1.2, func=$18load_global.0, args=[Var($const20.1.2, unicode.py:2514)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_global.0', '$22call_function.2', '$const20.1.2']
    $22call_function.2 = call $18load_global.0($const20.1.2, func=$18load_global.0, args=[Var($const20.1.2, unicode.py:2514)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_global.0', '$22call_function.2', '$const20.1.2']
    $22call_function.2 = call $18load_global.0($const20.1.2, func=$18load_global.0, args=[Var($const20.1.2, unicode.py:2514)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_global.0', '$22call_function.2', '$const20.1.2']
2025-06-13 07:34:42,648 - print_capture - INFO -     $22call_function.2 = call $18load_global.0($const20.1.2, func=$18load_global.0, args=[Var($const20.1.2, unicode.py:2514)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_global.0', '$22call_function.2', '$const20.1.2']
    raise $22call_function.2                 ['$22call_function.2']
    raise $22call_function.2                 ['$22call_function.2']
2025-06-13 07:34:42,648 - print_capture - INFO -     raise $22call_function.2                 ['$22call_function.2']
    raise $22call_function.2                 ['$22call_function.2']
    raise $22call_function.2                 ['$22call_function.2']
2025-06-13 07:34:42,648 - print_capture - INFO -     raise $22call_function.2                 ['$22call_function.2']
label 26:
label 26:
2025-06-13 07:34:42,648 - print_capture - INFO - label 26:
label 26:
label 26:
2025-06-13 07:34:42,648 - print_capture - INFO - label 26:
    $26load_global.0 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$26load_global.0']
    $26load_global.0 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$26load_global.0']
2025-06-13 07:34:42,648 - print_capture - INFO -     $26load_global.0 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$26load_global.0']
    $26load_global.0 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$26load_global.0']
    $26load_global.0 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$26load_global.0']
2025-06-13 07:34:42,648 - print_capture - INFO -     $26load_global.0 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$26load_global.0']
    $const30.2.3 = const(int, 0)             ['$const30.2.3']
    $const30.2.3 = const(int, 0)             ['$const30.2.3']
2025-06-13 07:34:42,648 - print_capture - INFO -     $const30.2.3 = const(int, 0)             ['$const30.2.3']
    $const30.2.3 = const(int, 0)             ['$const30.2.3']
    $const30.2.3 = const(int, 0)             ['$const30.2.3']
2025-06-13 07:34:42,648 - print_capture - INFO -     $const30.2.3 = const(int, 0)             ['$const30.2.3']
    $32call_function.3 = call $26load_global.0(c, $const30.2.3, func=$26load_global.0, args=[Var(c, unicode.py:2510), Var($const30.2.3, unicode.py:2515)], kws=(), vararg=None, varkwarg=None, target=None) ['$26load_global.0', '$32call_function.3', '$const30.2.3', 'c']
    $32call_function.3 = call $26load_global.0(c, $const30.2.3, func=$26load_global.0, args=[Var(c, unicode.py:2510), Var($const30.2.3, unicode.py:2515)], kws=(), vararg=None, varkwarg=None, target=None) ['$26load_global.0', '$32call_function.3', '$const30.2.3', 'c']
2025-06-13 07:34:42,648 - print_capture - INFO -     $32call_function.3 = call $26load_global.0(c, $const30.2.3, func=$26load_global.0, args=[Var(c, unicode.py:2510), Var($const30.2.3, unicode.py:2515)], kws=(), vararg=None, varkwarg=None, target=None) ['$26load_global.0', '$32call_function.3', '$const30.2.3', 'c']
    $32call_function.3 = call $26load_global.0(c, $const30.2.3, func=$26load_global.0, args=[Var(c, unicode.py:2510), Var($const30.2.3, unicode.py:2515)], kws=(), vararg=None, varkwarg=None, target=None) ['$26load_global.0', '$32call_function.3', '$const30.2.3', 'c']
    $32call_function.3 = call $26load_global.0(c, $const30.2.3, func=$26load_global.0, args=[Var(c, unicode.py:2510), Var($const30.2.3, unicode.py:2515)], kws=(), vararg=None, varkwarg=None, target=None) ['$26load_global.0', '$32call_function.3', '$const30.2.3', 'c']
2025-06-13 07:34:42,648 - print_capture - INFO -     $32call_function.3 = call $26load_global.0(c, $const30.2.3, func=$26load_global.0, args=[Var(c, unicode.py:2510), Var($const30.2.3, unicode.py:2515)], kws=(), vararg=None, varkwarg=None, target=None) ['$26load_global.0', '$32call_function.3', '$const30.2.3', 'c']
    $34return_value.4 = cast(value=$32call_function.3) ['$32call_function.3', '$34return_value.4']
    $34return_value.4 = cast(value=$32call_function.3) ['$32call_function.3', '$34return_value.4']
2025-06-13 07:34:42,648 - print_capture - INFO -     $34return_value.4 = cast(value=$32call_function.3) ['$32call_function.3', '$34return_value.4']
    $34return_value.4 = cast(value=$32call_function.3) ['$32call_function.3', '$34return_value.4']
    $34return_value.4 = cast(value=$32call_function.3) ['$32call_function.3', '$34return_value.4']
2025-06-13 07:34:42,648 - print_capture - INFO -     $34return_value.4 = cast(value=$32call_function.3) ['$32call_function.3', '$34return_value.4']
    return $34return_value.4                 ['$34return_value.4']
    return $34return_value.4                 ['$34return_value.4']
2025-06-13 07:34:42,648 - print_capture - INFO -     return $34return_value.4                 ['$34return_value.4']
    return $34return_value.4                 ['$34return_value.4']
    return $34return_value.4                 ['$34return_value.4']
2025-06-13 07:34:42,648 - print_capture - INFO -     return $34return_value.4                 ['$34return_value.4']
label 0:
label 0:
2025-06-13 07:34:42,651 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,651 - print_capture - INFO - label 0:
    s = arg(0, name=s)                       ['s']
    s = arg(0, name=s)                       ['s']
2025-06-13 07:34:42,651 - print_capture - INFO -     s = arg(0, name=s)                       ['s']
    s = arg(0, name=s)                       ['s']
    s = arg(0, name=s)                       ['s']
2025-06-13 07:34:42,651 - print_capture - INFO -     s = arg(0, name=s)                       ['s']
    $4load_attr.1 = getattr(value=s, attr=_length) ['$4load_attr.1', 's']
    $4load_attr.1 = getattr(value=s, attr=_length) ['$4load_attr.1', 's']
2025-06-13 07:34:42,651 - print_capture - INFO -     $4load_attr.1 = getattr(value=s, attr=_length) ['$4load_attr.1', 's']
    $4load_attr.1 = getattr(value=s, attr=_length) ['$4load_attr.1', 's']
    $4load_attr.1 = getattr(value=s, attr=_length) ['$4load_attr.1', 's']
2025-06-13 07:34:42,651 - print_capture - INFO -     $4load_attr.1 = getattr(value=s, attr=_length) ['$4load_attr.1', 's']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
2025-06-13 07:34:42,651 - print_capture - INFO -     $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
2025-06-13 07:34:42,651 - print_capture - INFO -     $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']
2025-06-13 07:34:42,651 - print_capture - INFO -     return $6return_value.2                  ['$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']
2025-06-13 07:34:42,651 - print_capture - INFO -     return $6return_value.2                  ['$6return_value.2']
label 0:
label 0:
2025-06-13 07:34:42,663 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,663 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:42,663 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:42,663 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    i = arg(1, name=i)                       ['i']
    i = arg(1, name=i)                       ['i']
2025-06-13 07:34:42,663 - print_capture - INFO -     i = arg(1, name=i)                       ['i']
    i = arg(1, name=i)                       ['i']
    i = arg(1, name=i)                       ['i']
2025-06-13 07:34:42,663 - print_capture - INFO -     i = arg(1, name=i)                       ['i']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
2025-06-13 07:34:42,664 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
2025-06-13 07:34:42,664 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
2025-06-13 07:34:42,664 - print_capture - INFO -     $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
2025-06-13 07:34:42,664 - print_capture - INFO -     $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
2025-06-13 07:34:42,664 - print_capture - INFO -     $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
2025-06-13 07:34:42,664 - print_capture - INFO -     $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
2025-06-13 07:34:42,664 - print_capture - INFO -     bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
2025-06-13 07:34:42,664 - print_capture - INFO -     bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:292),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:292),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
2025-06-13 07:34:42,664 - print_capture - INFO -     $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:292),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:292),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:292),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
2025-06-13 07:34:42,664 - print_capture - INFO -     $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:292),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 24                   ['$10pred']
    branch $10pred, 12, 24                   ['$10pred']
2025-06-13 07:34:42,664 - print_capture - INFO -     branch $10pred, 12, 24                   ['$10pred']
    branch $10pred, 12, 24                   ['$10pred']
    branch $10pred, 12, 24                   ['$10pred']
2025-06-13 07:34:42,664 - print_capture - INFO -     branch $10pred, 12, 24                   ['$10pred']
label 12:
label 12:
2025-06-13 07:34:42,664 - print_capture - INFO - label 12:
label 12:
label 12:
2025-06-13 07:34:42,664 - print_capture - INFO - label 12:
    $12load_global.0 = global(deref_uint8: <intrinsic deref_uint8>) ['$12load_global.0']
    $12load_global.0 = global(deref_uint8: <intrinsic deref_uint8>) ['$12load_global.0']
2025-06-13 07:34:42,664 - print_capture - INFO -     $12load_global.0 = global(deref_uint8: <intrinsic deref_uint8>) ['$12load_global.0']
    $12load_global.0 = global(deref_uint8: <intrinsic deref_uint8>) ['$12load_global.0']
    $12load_global.0 = global(deref_uint8: <intrinsic deref_uint8>) ['$12load_global.0']
2025-06-13 07:34:42,664 - print_capture - INFO -     $12load_global.0 = global(deref_uint8: <intrinsic deref_uint8>) ['$12load_global.0']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
2025-06-13 07:34:42,664 - print_capture - INFO -     $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
2025-06-13 07:34:42,664 - print_capture - INFO -     $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $20call_function.4 = call $12load_global.0($16load_attr.2, i, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:293), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$20call_function.4', 'i']
    $20call_function.4 = call $12load_global.0($16load_attr.2, i, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:293), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$20call_function.4', 'i']
2025-06-13 07:34:42,664 - print_capture - INFO -     $20call_function.4 = call $12load_global.0($16load_attr.2, i, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:293), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$20call_function.4', 'i']
    $20call_function.4 = call $12load_global.0($16load_attr.2, i, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:293), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$20call_function.4', 'i']
    $20call_function.4 = call $12load_global.0($16load_attr.2, i, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:293), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$20call_function.4', 'i']
2025-06-13 07:34:42,664 - print_capture - INFO -     $20call_function.4 = call $12load_global.0($16load_attr.2, i, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:293), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$20call_function.4', 'i']
    $22return_value.5 = cast(value=$20call_function.4) ['$20call_function.4', '$22return_value.5']
    $22return_value.5 = cast(value=$20call_function.4) ['$20call_function.4', '$22return_value.5']
2025-06-13 07:34:42,664 - print_capture - INFO -     $22return_value.5 = cast(value=$20call_function.4) ['$20call_function.4', '$22return_value.5']
    $22return_value.5 = cast(value=$20call_function.4) ['$20call_function.4', '$22return_value.5']
    $22return_value.5 = cast(value=$20call_function.4) ['$20call_function.4', '$22return_value.5']
2025-06-13 07:34:42,664 - print_capture - INFO -     $22return_value.5 = cast(value=$20call_function.4) ['$20call_function.4', '$22return_value.5']
    return $22return_value.5                 ['$22return_value.5']
    return $22return_value.5                 ['$22return_value.5']
2025-06-13 07:34:42,664 - print_capture - INFO -     return $22return_value.5                 ['$22return_value.5']
    return $22return_value.5                 ['$22return_value.5']
    return $22return_value.5                 ['$22return_value.5']
2025-06-13 07:34:42,664 - print_capture - INFO -     return $22return_value.5                 ['$22return_value.5']
label 24:
label 24:
2025-06-13 07:34:42,664 - print_capture - INFO - label 24:
label 24:
label 24:
2025-06-13 07:34:42,664 - print_capture - INFO - label 24:
    $26load_attr.1 = getattr(value=a, attr=_kind) ['$26load_attr.1', 'a']
    $26load_attr.1 = getattr(value=a, attr=_kind) ['$26load_attr.1', 'a']
2025-06-13 07:34:42,664 - print_capture - INFO -     $26load_attr.1 = getattr(value=a, attr=_kind) ['$26load_attr.1', 'a']
    $26load_attr.1 = getattr(value=a, attr=_kind) ['$26load_attr.1', 'a']
    $26load_attr.1 = getattr(value=a, attr=_kind) ['$26load_attr.1', 'a']
2025-06-13 07:34:42,664 - print_capture - INFO -     $26load_attr.1 = getattr(value=a, attr=_kind) ['$26load_attr.1', 'a']
    $28load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$28load_global.2']
    $28load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$28load_global.2']
2025-06-13 07:34:42,664 - print_capture - INFO -     $28load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$28load_global.2']
    $28load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$28load_global.2']
    $28load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$28load_global.2']
2025-06-13 07:34:42,664 - print_capture - INFO -     $28load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$28load_global.2']
    $30compare_op.3 = $26load_attr.1 == $28load_global.2 ['$26load_attr.1', '$28load_global.2', '$30compare_op.3']
    $30compare_op.3 = $26load_attr.1 == $28load_global.2 ['$26load_attr.1', '$28load_global.2', '$30compare_op.3']
2025-06-13 07:34:42,664 - print_capture - INFO -     $30compare_op.3 = $26load_attr.1 == $28load_global.2 ['$26load_attr.1', '$28load_global.2', '$30compare_op.3']
    $30compare_op.3 = $26load_attr.1 == $28load_global.2 ['$26load_attr.1', '$28load_global.2', '$30compare_op.3']
    $30compare_op.3 = $26load_attr.1 == $28load_global.2 ['$26load_attr.1', '$28load_global.2', '$30compare_op.3']
2025-06-13 07:34:42,664 - print_capture - INFO -     $30compare_op.3 = $26load_attr.1 == $28load_global.2 ['$26load_attr.1', '$28load_global.2', '$30compare_op.3']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
2025-06-13 07:34:42,664 - print_capture - INFO -     bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
2025-06-13 07:34:42,664 - print_capture - INFO -     bool32 = global(bool: <class 'bool'>)    ['bool32']
    $32pred = call bool32($30compare_op.3, func=bool32, args=(Var($30compare_op.3, unicode.py:294),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.3', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.3, func=bool32, args=(Var($30compare_op.3, unicode.py:294),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.3', '$32pred', 'bool32']
2025-06-13 07:34:42,664 - print_capture - INFO -     $32pred = call bool32($30compare_op.3, func=bool32, args=(Var($30compare_op.3, unicode.py:294),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.3', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.3, func=bool32, args=(Var($30compare_op.3, unicode.py:294),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.3', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.3, func=bool32, args=(Var($30compare_op.3, unicode.py:294),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.3', '$32pred', 'bool32']
2025-06-13 07:34:42,664 - print_capture - INFO -     $32pred = call bool32($30compare_op.3, func=bool32, args=(Var($30compare_op.3, unicode.py:294),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.3', '$32pred', 'bool32']
    branch $32pred, 34, 46                   ['$32pred']
    branch $32pred, 34, 46                   ['$32pred']
2025-06-13 07:34:42,664 - print_capture - INFO -     branch $32pred, 34, 46                   ['$32pred']
    branch $32pred, 34, 46                   ['$32pred']
    branch $32pred, 34, 46                   ['$32pred']
2025-06-13 07:34:42,664 - print_capture - INFO -     branch $32pred, 34, 46                   ['$32pred']
label 34:
label 34:
2025-06-13 07:34:42,664 - print_capture - INFO - label 34:
label 34:
label 34:
2025-06-13 07:34:42,665 - print_capture - INFO - label 34:
    $34load_global.0 = global(deref_uint16: <intrinsic deref_uint16>) ['$34load_global.0']
    $34load_global.0 = global(deref_uint16: <intrinsic deref_uint16>) ['$34load_global.0']
2025-06-13 07:34:42,665 - print_capture - INFO -     $34load_global.0 = global(deref_uint16: <intrinsic deref_uint16>) ['$34load_global.0']
    $34load_global.0 = global(deref_uint16: <intrinsic deref_uint16>) ['$34load_global.0']
    $34load_global.0 = global(deref_uint16: <intrinsic deref_uint16>) ['$34load_global.0']
2025-06-13 07:34:42,665 - print_capture - INFO -     $34load_global.0 = global(deref_uint16: <intrinsic deref_uint16>) ['$34load_global.0']
    $38load_attr.2 = getattr(value=a, attr=_data) ['$38load_attr.2', 'a']
    $38load_attr.2 = getattr(value=a, attr=_data) ['$38load_attr.2', 'a']
2025-06-13 07:34:42,665 - print_capture - INFO -     $38load_attr.2 = getattr(value=a, attr=_data) ['$38load_attr.2', 'a']
    $38load_attr.2 = getattr(value=a, attr=_data) ['$38load_attr.2', 'a']
    $38load_attr.2 = getattr(value=a, attr=_data) ['$38load_attr.2', 'a']
2025-06-13 07:34:42,665 - print_capture - INFO -     $38load_attr.2 = getattr(value=a, attr=_data) ['$38load_attr.2', 'a']
    $42call_function.4 = call $34load_global.0($38load_attr.2, i, func=$34load_global.0, args=[Var($38load_attr.2, unicode.py:295), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.0', '$38load_attr.2', '$42call_function.4', 'i']
    $42call_function.4 = call $34load_global.0($38load_attr.2, i, func=$34load_global.0, args=[Var($38load_attr.2, unicode.py:295), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.0', '$38load_attr.2', '$42call_function.4', 'i']
2025-06-13 07:34:42,665 - print_capture - INFO -     $42call_function.4 = call $34load_global.0($38load_attr.2, i, func=$34load_global.0, args=[Var($38load_attr.2, unicode.py:295), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.0', '$38load_attr.2', '$42call_function.4', 'i']
    $42call_function.4 = call $34load_global.0($38load_attr.2, i, func=$34load_global.0, args=[Var($38load_attr.2, unicode.py:295), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.0', '$38load_attr.2', '$42call_function.4', 'i']
    $42call_function.4 = call $34load_global.0($38load_attr.2, i, func=$34load_global.0, args=[Var($38load_attr.2, unicode.py:295), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.0', '$38load_attr.2', '$42call_function.4', 'i']
2025-06-13 07:34:42,665 - print_capture - INFO -     $42call_function.4 = call $34load_global.0($38load_attr.2, i, func=$34load_global.0, args=[Var($38load_attr.2, unicode.py:295), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.0', '$38load_attr.2', '$42call_function.4', 'i']
    $44return_value.5 = cast(value=$42call_function.4) ['$42call_function.4', '$44return_value.5']
    $44return_value.5 = cast(value=$42call_function.4) ['$42call_function.4', '$44return_value.5']
2025-06-13 07:34:42,665 - print_capture - INFO -     $44return_value.5 = cast(value=$42call_function.4) ['$42call_function.4', '$44return_value.5']
    $44return_value.5 = cast(value=$42call_function.4) ['$42call_function.4', '$44return_value.5']
    $44return_value.5 = cast(value=$42call_function.4) ['$42call_function.4', '$44return_value.5']
2025-06-13 07:34:42,665 - print_capture - INFO -     $44return_value.5 = cast(value=$42call_function.4) ['$42call_function.4', '$44return_value.5']
    return $44return_value.5                 ['$44return_value.5']
    return $44return_value.5                 ['$44return_value.5']
2025-06-13 07:34:42,665 - print_capture - INFO -     return $44return_value.5                 ['$44return_value.5']
    return $44return_value.5                 ['$44return_value.5']
    return $44return_value.5                 ['$44return_value.5']
2025-06-13 07:34:42,665 - print_capture - INFO -     return $44return_value.5                 ['$44return_value.5']
label 46:
label 46:
2025-06-13 07:34:42,665 - print_capture - INFO - label 46:
label 46:
label 46:
2025-06-13 07:34:42,665 - print_capture - INFO - label 46:
    $48load_attr.1 = getattr(value=a, attr=_kind) ['$48load_attr.1', 'a']
    $48load_attr.1 = getattr(value=a, attr=_kind) ['$48load_attr.1', 'a']
2025-06-13 07:34:42,665 - print_capture - INFO -     $48load_attr.1 = getattr(value=a, attr=_kind) ['$48load_attr.1', 'a']
    $48load_attr.1 = getattr(value=a, attr=_kind) ['$48load_attr.1', 'a']
    $48load_attr.1 = getattr(value=a, attr=_kind) ['$48load_attr.1', 'a']
2025-06-13 07:34:42,665 - print_capture - INFO -     $48load_attr.1 = getattr(value=a, attr=_kind) ['$48load_attr.1', 'a']
    $50load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$50load_global.2']
    $50load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$50load_global.2']
2025-06-13 07:34:42,665 - print_capture - INFO -     $50load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$50load_global.2']
    $50load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$50load_global.2']
    $50load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$50load_global.2']
2025-06-13 07:34:42,665 - print_capture - INFO -     $50load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$50load_global.2']
    $52compare_op.3 = $48load_attr.1 == $50load_global.2 ['$48load_attr.1', '$50load_global.2', '$52compare_op.3']
    $52compare_op.3 = $48load_attr.1 == $50load_global.2 ['$48load_attr.1', '$50load_global.2', '$52compare_op.3']
2025-06-13 07:34:42,665 - print_capture - INFO -     $52compare_op.3 = $48load_attr.1 == $50load_global.2 ['$48load_attr.1', '$50load_global.2', '$52compare_op.3']
    $52compare_op.3 = $48load_attr.1 == $50load_global.2 ['$48load_attr.1', '$50load_global.2', '$52compare_op.3']
    $52compare_op.3 = $48load_attr.1 == $50load_global.2 ['$48load_attr.1', '$50load_global.2', '$52compare_op.3']
2025-06-13 07:34:42,665 - print_capture - INFO -     $52compare_op.3 = $48load_attr.1 == $50load_global.2 ['$48load_attr.1', '$50load_global.2', '$52compare_op.3']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
2025-06-13 07:34:42,665 - print_capture - INFO -     bool54 = global(bool: <class 'bool'>)    ['bool54']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
2025-06-13 07:34:42,665 - print_capture - INFO -     bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($52compare_op.3, func=bool54, args=(Var($52compare_op.3, unicode.py:296),), kws=(), vararg=None, varkwarg=None, target=None) ['$52compare_op.3', '$54pred', 'bool54']
    $54pred = call bool54($52compare_op.3, func=bool54, args=(Var($52compare_op.3, unicode.py:296),), kws=(), vararg=None, varkwarg=None, target=None) ['$52compare_op.3', '$54pred', 'bool54']
2025-06-13 07:34:42,665 - print_capture - INFO -     $54pred = call bool54($52compare_op.3, func=bool54, args=(Var($52compare_op.3, unicode.py:296),), kws=(), vararg=None, varkwarg=None, target=None) ['$52compare_op.3', '$54pred', 'bool54']
    $54pred = call bool54($52compare_op.3, func=bool54, args=(Var($52compare_op.3, unicode.py:296),), kws=(), vararg=None, varkwarg=None, target=None) ['$52compare_op.3', '$54pred', 'bool54']
    $54pred = call bool54($52compare_op.3, func=bool54, args=(Var($52compare_op.3, unicode.py:296),), kws=(), vararg=None, varkwarg=None, target=None) ['$52compare_op.3', '$54pred', 'bool54']
2025-06-13 07:34:42,665 - print_capture - INFO -     $54pred = call bool54($52compare_op.3, func=bool54, args=(Var($52compare_op.3, unicode.py:296),), kws=(), vararg=None, varkwarg=None, target=None) ['$52compare_op.3', '$54pred', 'bool54']
    branch $54pred, 56, 68                   ['$54pred']
    branch $54pred, 56, 68                   ['$54pred']
2025-06-13 07:34:42,665 - print_capture - INFO -     branch $54pred, 56, 68                   ['$54pred']
    branch $54pred, 56, 68                   ['$54pred']
    branch $54pred, 56, 68                   ['$54pred']
2025-06-13 07:34:42,665 - print_capture - INFO -     branch $54pred, 56, 68                   ['$54pred']
label 56:
label 56:
2025-06-13 07:34:42,665 - print_capture - INFO - label 56:
label 56:
label 56:
2025-06-13 07:34:42,665 - print_capture - INFO - label 56:
    $56load_global.0 = global(deref_uint32: <intrinsic deref_uint32>) ['$56load_global.0']
    $56load_global.0 = global(deref_uint32: <intrinsic deref_uint32>) ['$56load_global.0']
2025-06-13 07:34:42,665 - print_capture - INFO -     $56load_global.0 = global(deref_uint32: <intrinsic deref_uint32>) ['$56load_global.0']
    $56load_global.0 = global(deref_uint32: <intrinsic deref_uint32>) ['$56load_global.0']
    $56load_global.0 = global(deref_uint32: <intrinsic deref_uint32>) ['$56load_global.0']
2025-06-13 07:34:42,665 - print_capture - INFO -     $56load_global.0 = global(deref_uint32: <intrinsic deref_uint32>) ['$56load_global.0']
    $60load_attr.2 = getattr(value=a, attr=_data) ['$60load_attr.2', 'a']
    $60load_attr.2 = getattr(value=a, attr=_data) ['$60load_attr.2', 'a']
2025-06-13 07:34:42,665 - print_capture - INFO -     $60load_attr.2 = getattr(value=a, attr=_data) ['$60load_attr.2', 'a']
    $60load_attr.2 = getattr(value=a, attr=_data) ['$60load_attr.2', 'a']
    $60load_attr.2 = getattr(value=a, attr=_data) ['$60load_attr.2', 'a']
2025-06-13 07:34:42,665 - print_capture - INFO -     $60load_attr.2 = getattr(value=a, attr=_data) ['$60load_attr.2', 'a']
    $64call_function.4 = call $56load_global.0($60load_attr.2, i, func=$56load_global.0, args=[Var($60load_attr.2, unicode.py:297), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$60load_attr.2', '$64call_function.4', 'i']
    $64call_function.4 = call $56load_global.0($60load_attr.2, i, func=$56load_global.0, args=[Var($60load_attr.2, unicode.py:297), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$60load_attr.2', '$64call_function.4', 'i']
2025-06-13 07:34:42,665 - print_capture - INFO -     $64call_function.4 = call $56load_global.0($60load_attr.2, i, func=$56load_global.0, args=[Var($60load_attr.2, unicode.py:297), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$60load_attr.2', '$64call_function.4', 'i']
    $64call_function.4 = call $56load_global.0($60load_attr.2, i, func=$56load_global.0, args=[Var($60load_attr.2, unicode.py:297), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$60load_attr.2', '$64call_function.4', 'i']
    $64call_function.4 = call $56load_global.0($60load_attr.2, i, func=$56load_global.0, args=[Var($60load_attr.2, unicode.py:297), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$60load_attr.2', '$64call_function.4', 'i']
2025-06-13 07:34:42,665 - print_capture - INFO -     $64call_function.4 = call $56load_global.0($60load_attr.2, i, func=$56load_global.0, args=[Var($60load_attr.2, unicode.py:297), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$60load_attr.2', '$64call_function.4', 'i']
    $66return_value.5 = cast(value=$64call_function.4) ['$64call_function.4', '$66return_value.5']
    $66return_value.5 = cast(value=$64call_function.4) ['$64call_function.4', '$66return_value.5']
2025-06-13 07:34:42,665 - print_capture - INFO -     $66return_value.5 = cast(value=$64call_function.4) ['$64call_function.4', '$66return_value.5']
    $66return_value.5 = cast(value=$64call_function.4) ['$64call_function.4', '$66return_value.5']
    $66return_value.5 = cast(value=$64call_function.4) ['$64call_function.4', '$66return_value.5']
2025-06-13 07:34:42,665 - print_capture - INFO -     $66return_value.5 = cast(value=$64call_function.4) ['$64call_function.4', '$66return_value.5']
    return $66return_value.5                 ['$66return_value.5']
    return $66return_value.5                 ['$66return_value.5']
2025-06-13 07:34:42,665 - print_capture - INFO -     return $66return_value.5                 ['$66return_value.5']
    return $66return_value.5                 ['$66return_value.5']
    return $66return_value.5                 ['$66return_value.5']
2025-06-13 07:34:42,665 - print_capture - INFO -     return $66return_value.5                 ['$66return_value.5']
label 68:
label 68:
2025-06-13 07:34:42,665 - print_capture - INFO - label 68:
label 68:
label 68:
2025-06-13 07:34:42,665 - print_capture - INFO - label 68:
    $const68.0.1 = const(int, 0)             ['$const68.0.1']
    $const68.0.1 = const(int, 0)             ['$const68.0.1']
2025-06-13 07:34:42,665 - print_capture - INFO -     $const68.0.1 = const(int, 0)             ['$const68.0.1']
    $const68.0.1 = const(int, 0)             ['$const68.0.1']
    $const68.0.1 = const(int, 0)             ['$const68.0.1']
2025-06-13 07:34:42,665 - print_capture - INFO -     $const68.0.1 = const(int, 0)             ['$const68.0.1']
    $70return_value.1 = cast(value=$const68.0.1) ['$70return_value.1', '$const68.0.1']
    $70return_value.1 = cast(value=$const68.0.1) ['$70return_value.1', '$const68.0.1']
2025-06-13 07:34:42,666 - print_capture - INFO -     $70return_value.1 = cast(value=$const68.0.1) ['$70return_value.1', '$const68.0.1']
    $70return_value.1 = cast(value=$const68.0.1) ['$70return_value.1', '$const68.0.1']
    $70return_value.1 = cast(value=$const68.0.1) ['$70return_value.1', '$const68.0.1']
2025-06-13 07:34:42,666 - print_capture - INFO -     $70return_value.1 = cast(value=$const68.0.1) ['$70return_value.1', '$const68.0.1']
    return $70return_value.1                 ['$70return_value.1']
    return $70return_value.1                 ['$70return_value.1']
2025-06-13 07:34:42,666 - print_capture - INFO -     return $70return_value.1                 ['$70return_value.1']
    return $70return_value.1                 ['$70return_value.1']
    return $70return_value.1                 ['$70return_value.1']
2025-06-13 07:34:42,666 - print_capture - INFO -     return $70return_value.1                 ['$70return_value.1']
label 0:
label 0:
2025-06-13 07:34:42,706 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,706 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:42,706 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:42,706 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    i = arg(1, name=i)                       ['i']
    i = arg(1, name=i)                       ['i']
2025-06-13 07:34:42,706 - print_capture - INFO -     i = arg(1, name=i)                       ['i']
    i = arg(1, name=i)                       ['i']
    i = arg(1, name=i)                       ['i']
2025-06-13 07:34:42,706 - print_capture - INFO -     i = arg(1, name=i)                       ['i']
    ch = arg(2, name=ch)                     ['ch']
    ch = arg(2, name=ch)                     ['ch']
2025-06-13 07:34:42,706 - print_capture - INFO -     ch = arg(2, name=ch)                     ['ch']
    ch = arg(2, name=ch)                     ['ch']
    ch = arg(2, name=ch)                     ['ch']
2025-06-13 07:34:42,706 - print_capture - INFO -     ch = arg(2, name=ch)                     ['ch']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
2025-06-13 07:34:42,706 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
2025-06-13 07:34:42,706 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
2025-06-13 07:34:42,706 - print_capture - INFO -     $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
2025-06-13 07:34:42,706 - print_capture - INFO -     $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
2025-06-13 07:34:42,707 - print_capture - INFO -     $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
2025-06-13 07:34:42,707 - print_capture - INFO -     $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
2025-06-13 07:34:42,707 - print_capture - INFO -     bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
2025-06-13 07:34:42,707 - print_capture - INFO -     bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
2025-06-13 07:34:42,707 - print_capture - INFO -     $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
2025-06-13 07:34:42,707 - print_capture - INFO -     $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 30                   ['$10pred']
    branch $10pred, 12, 30                   ['$10pred']
2025-06-13 07:34:42,707 - print_capture - INFO -     branch $10pred, 12, 30                   ['$10pred']
    branch $10pred, 12, 30                   ['$10pred']
    branch $10pred, 12, 30                   ['$10pred']
2025-06-13 07:34:42,707 - print_capture - INFO -     branch $10pred, 12, 30                   ['$10pred']
label 12:
label 12:
2025-06-13 07:34:42,707 - print_capture - INFO - label 12:
label 12:
label 12:
2025-06-13 07:34:42,707 - print_capture - INFO - label 12:
    $12load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$12load_global.0']
    $12load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$12load_global.0']
2025-06-13 07:34:42,707 - print_capture - INFO -     $12load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$12load_global.0']
    $12load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$12load_global.0']
    $12load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$12load_global.0']
2025-06-13 07:34:42,707 - print_capture - INFO -     $12load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$12load_global.0']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
2025-06-13 07:34:42,707 - print_capture - INFO -     $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
2025-06-13 07:34:42,707 - print_capture - INFO -     $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $22call_function.5 = call $12load_global.0($16load_attr.2, i, ch, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$22call_function.5', 'ch', 'i']
    $22call_function.5 = call $12load_global.0($16load_attr.2, i, ch, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$22call_function.5', 'ch', 'i']
2025-06-13 07:34:42,707 - print_capture - INFO -     $22call_function.5 = call $12load_global.0($16load_attr.2, i, ch, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$22call_function.5', 'ch', 'i']
    $22call_function.5 = call $12load_global.0($16load_attr.2, i, ch, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$22call_function.5', 'ch', 'i']
    $22call_function.5 = call $12load_global.0($16load_attr.2, i, ch, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$22call_function.5', 'ch', 'i']
2025-06-13 07:34:42,707 - print_capture - INFO -     $22call_function.5 = call $12load_global.0($16load_attr.2, i, ch, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$22call_function.5', 'ch', 'i']
    $const26.6.0 = const(NoneType, None)     ['$const26.6.0']
    $const26.6.0 = const(NoneType, None)     ['$const26.6.0']
2025-06-13 07:34:42,707 - print_capture - INFO -     $const26.6.0 = const(NoneType, None)     ['$const26.6.0']
    $const26.6.0 = const(NoneType, None)     ['$const26.6.0']
    $const26.6.0 = const(NoneType, None)     ['$const26.6.0']
2025-06-13 07:34:42,707 - print_capture - INFO -     $const26.6.0 = const(NoneType, None)     ['$const26.6.0']
    $28return_value.7 = cast(value=$const26.6.0) ['$28return_value.7', '$const26.6.0']
    $28return_value.7 = cast(value=$const26.6.0) ['$28return_value.7', '$const26.6.0']
2025-06-13 07:34:42,707 - print_capture - INFO -     $28return_value.7 = cast(value=$const26.6.0) ['$28return_value.7', '$const26.6.0']
    $28return_value.7 = cast(value=$const26.6.0) ['$28return_value.7', '$const26.6.0']
    $28return_value.7 = cast(value=$const26.6.0) ['$28return_value.7', '$const26.6.0']
2025-06-13 07:34:42,707 - print_capture - INFO -     $28return_value.7 = cast(value=$const26.6.0) ['$28return_value.7', '$const26.6.0']
    return $28return_value.7                 ['$28return_value.7']
    return $28return_value.7                 ['$28return_value.7']
2025-06-13 07:34:42,707 - print_capture - INFO -     return $28return_value.7                 ['$28return_value.7']
    return $28return_value.7                 ['$28return_value.7']
    return $28return_value.7                 ['$28return_value.7']
2025-06-13 07:34:42,707 - print_capture - INFO -     return $28return_value.7                 ['$28return_value.7']
label 30:
label 30:
2025-06-13 07:34:42,707 - print_capture - INFO - label 30:
label 30:
label 30:
2025-06-13 07:34:42,707 - print_capture - INFO - label 30:
    $32load_attr.1 = getattr(value=a, attr=_kind) ['$32load_attr.1', 'a']
    $32load_attr.1 = getattr(value=a, attr=_kind) ['$32load_attr.1', 'a']
2025-06-13 07:34:42,707 - print_capture - INFO -     $32load_attr.1 = getattr(value=a, attr=_kind) ['$32load_attr.1', 'a']
    $32load_attr.1 = getattr(value=a, attr=_kind) ['$32load_attr.1', 'a']
    $32load_attr.1 = getattr(value=a, attr=_kind) ['$32load_attr.1', 'a']
2025-06-13 07:34:42,707 - print_capture - INFO -     $32load_attr.1 = getattr(value=a, attr=_kind) ['$32load_attr.1', 'a']
    $34load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$34load_global.2']
    $34load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$34load_global.2']
2025-06-13 07:34:42,707 - print_capture - INFO -     $34load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$34load_global.2']
    $34load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$34load_global.2']
    $34load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$34load_global.2']
2025-06-13 07:34:42,707 - print_capture - INFO -     $34load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$34load_global.2']
    $36compare_op.3 = $32load_attr.1 == $34load_global.2 ['$32load_attr.1', '$34load_global.2', '$36compare_op.3']
    $36compare_op.3 = $32load_attr.1 == $34load_global.2 ['$32load_attr.1', '$34load_global.2', '$36compare_op.3']
2025-06-13 07:34:42,707 - print_capture - INFO -     $36compare_op.3 = $32load_attr.1 == $34load_global.2 ['$32load_attr.1', '$34load_global.2', '$36compare_op.3']
    $36compare_op.3 = $32load_attr.1 == $34load_global.2 ['$32load_attr.1', '$34load_global.2', '$36compare_op.3']
    $36compare_op.3 = $32load_attr.1 == $34load_global.2 ['$32load_attr.1', '$34load_global.2', '$36compare_op.3']
2025-06-13 07:34:42,707 - print_capture - INFO -     $36compare_op.3 = $32load_attr.1 == $34load_global.2 ['$32load_attr.1', '$34load_global.2', '$36compare_op.3']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
2025-06-13 07:34:42,707 - print_capture - INFO -     bool38 = global(bool: <class 'bool'>)    ['bool38']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
2025-06-13 07:34:42,707 - print_capture - INFO -     bool38 = global(bool: <class 'bool'>)    ['bool38']
    $38pred = call bool38($36compare_op.3, func=bool38, args=(Var($36compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$38pred', 'bool38']
    $38pred = call bool38($36compare_op.3, func=bool38, args=(Var($36compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$38pred', 'bool38']
2025-06-13 07:34:42,707 - print_capture - INFO -     $38pred = call bool38($36compare_op.3, func=bool38, args=(Var($36compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$38pred', 'bool38']
    $38pred = call bool38($36compare_op.3, func=bool38, args=(Var($36compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$38pred', 'bool38']
    $38pred = call bool38($36compare_op.3, func=bool38, args=(Var($36compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$38pred', 'bool38']
2025-06-13 07:34:42,707 - print_capture - INFO -     $38pred = call bool38($36compare_op.3, func=bool38, args=(Var($36compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$38pred', 'bool38']
    branch $38pred, 40, 58                   ['$38pred']
    branch $38pred, 40, 58                   ['$38pred']
2025-06-13 07:34:42,707 - print_capture - INFO -     branch $38pred, 40, 58                   ['$38pred']
    branch $38pred, 40, 58                   ['$38pred']
    branch $38pred, 40, 58                   ['$38pred']
2025-06-13 07:34:42,707 - print_capture - INFO -     branch $38pred, 40, 58                   ['$38pred']
label 40:
label 40:
2025-06-13 07:34:42,707 - print_capture - INFO - label 40:
label 40:
label 40:
2025-06-13 07:34:42,707 - print_capture - INFO - label 40:
    $40load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$40load_global.0']
    $40load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$40load_global.0']
2025-06-13 07:34:42,707 - print_capture - INFO -     $40load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$40load_global.0']
    $40load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$40load_global.0']
    $40load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$40load_global.0']
2025-06-13 07:34:42,707 - print_capture - INFO -     $40load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$40load_global.0']
    $44load_attr.2 = getattr(value=a, attr=_data) ['$44load_attr.2', 'a']
    $44load_attr.2 = getattr(value=a, attr=_data) ['$44load_attr.2', 'a']
2025-06-13 07:34:42,708 - print_capture - INFO -     $44load_attr.2 = getattr(value=a, attr=_data) ['$44load_attr.2', 'a']
    $44load_attr.2 = getattr(value=a, attr=_data) ['$44load_attr.2', 'a']
    $44load_attr.2 = getattr(value=a, attr=_data) ['$44load_attr.2', 'a']
2025-06-13 07:34:42,708 - print_capture - INFO -     $44load_attr.2 = getattr(value=a, attr=_data) ['$44load_attr.2', 'a']
    $50call_function.5 = call $40load_global.0($44load_attr.2, i, ch, func=$40load_global.0, args=[Var($44load_attr.2, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.0', '$44load_attr.2', '$50call_function.5', 'ch', 'i']
    $50call_function.5 = call $40load_global.0($44load_attr.2, i, ch, func=$40load_global.0, args=[Var($44load_attr.2, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.0', '$44load_attr.2', '$50call_function.5', 'ch', 'i']
2025-06-13 07:34:42,708 - print_capture - INFO -     $50call_function.5 = call $40load_global.0($44load_attr.2, i, ch, func=$40load_global.0, args=[Var($44load_attr.2, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.0', '$44load_attr.2', '$50call_function.5', 'ch', 'i']
    $50call_function.5 = call $40load_global.0($44load_attr.2, i, ch, func=$40load_global.0, args=[Var($44load_attr.2, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.0', '$44load_attr.2', '$50call_function.5', 'ch', 'i']
    $50call_function.5 = call $40load_global.0($44load_attr.2, i, ch, func=$40load_global.0, args=[Var($44load_attr.2, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.0', '$44load_attr.2', '$50call_function.5', 'ch', 'i']
2025-06-13 07:34:42,708 - print_capture - INFO -     $50call_function.5 = call $40load_global.0($44load_attr.2, i, ch, func=$40load_global.0, args=[Var($44load_attr.2, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.0', '$44load_attr.2', '$50call_function.5', 'ch', 'i']
    $const54.6.0 = const(NoneType, None)     ['$const54.6.0']
    $const54.6.0 = const(NoneType, None)     ['$const54.6.0']
2025-06-13 07:34:42,708 - print_capture - INFO -     $const54.6.0 = const(NoneType, None)     ['$const54.6.0']
    $const54.6.0 = const(NoneType, None)     ['$const54.6.0']
    $const54.6.0 = const(NoneType, None)     ['$const54.6.0']
2025-06-13 07:34:42,708 - print_capture - INFO -     $const54.6.0 = const(NoneType, None)     ['$const54.6.0']
    $56return_value.7 = cast(value=$const54.6.0) ['$56return_value.7', '$const54.6.0']
    $56return_value.7 = cast(value=$const54.6.0) ['$56return_value.7', '$const54.6.0']
2025-06-13 07:34:42,708 - print_capture - INFO -     $56return_value.7 = cast(value=$const54.6.0) ['$56return_value.7', '$const54.6.0']
    $56return_value.7 = cast(value=$const54.6.0) ['$56return_value.7', '$const54.6.0']
    $56return_value.7 = cast(value=$const54.6.0) ['$56return_value.7', '$const54.6.0']
2025-06-13 07:34:42,708 - print_capture - INFO -     $56return_value.7 = cast(value=$const54.6.0) ['$56return_value.7', '$const54.6.0']
    return $56return_value.7                 ['$56return_value.7']
    return $56return_value.7                 ['$56return_value.7']
2025-06-13 07:34:42,708 - print_capture - INFO -     return $56return_value.7                 ['$56return_value.7']
    return $56return_value.7                 ['$56return_value.7']
    return $56return_value.7                 ['$56return_value.7']
2025-06-13 07:34:42,708 - print_capture - INFO -     return $56return_value.7                 ['$56return_value.7']
label 58:
label 58:
2025-06-13 07:34:42,708 - print_capture - INFO - label 58:
label 58:
label 58:
2025-06-13 07:34:42,708 - print_capture - INFO - label 58:
    $60load_attr.1 = getattr(value=a, attr=_kind) ['$60load_attr.1', 'a']
    $60load_attr.1 = getattr(value=a, attr=_kind) ['$60load_attr.1', 'a']
2025-06-13 07:34:42,708 - print_capture - INFO -     $60load_attr.1 = getattr(value=a, attr=_kind) ['$60load_attr.1', 'a']
    $60load_attr.1 = getattr(value=a, attr=_kind) ['$60load_attr.1', 'a']
    $60load_attr.1 = getattr(value=a, attr=_kind) ['$60load_attr.1', 'a']
2025-06-13 07:34:42,708 - print_capture - INFO -     $60load_attr.1 = getattr(value=a, attr=_kind) ['$60load_attr.1', 'a']
    $62load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$62load_global.2']
    $62load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$62load_global.2']
2025-06-13 07:34:42,708 - print_capture - INFO -     $62load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$62load_global.2']
    $62load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$62load_global.2']
    $62load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$62load_global.2']
2025-06-13 07:34:42,708 - print_capture - INFO -     $62load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$62load_global.2']
    $64compare_op.3 = $60load_attr.1 == $62load_global.2 ['$60load_attr.1', '$62load_global.2', '$64compare_op.3']
    $64compare_op.3 = $60load_attr.1 == $62load_global.2 ['$60load_attr.1', '$62load_global.2', '$64compare_op.3']
2025-06-13 07:34:42,708 - print_capture - INFO -     $64compare_op.3 = $60load_attr.1 == $62load_global.2 ['$60load_attr.1', '$62load_global.2', '$64compare_op.3']
    $64compare_op.3 = $60load_attr.1 == $62load_global.2 ['$60load_attr.1', '$62load_global.2', '$64compare_op.3']
    $64compare_op.3 = $60load_attr.1 == $62load_global.2 ['$60load_attr.1', '$62load_global.2', '$64compare_op.3']
2025-06-13 07:34:42,708 - print_capture - INFO -     $64compare_op.3 = $60load_attr.1 == $62load_global.2 ['$60load_attr.1', '$62load_global.2', '$64compare_op.3']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 07:34:42,708 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 07:34:42,708 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.3, func=bool66, args=(Var($64compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.3', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.3, func=bool66, args=(Var($64compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.3', '$66pred', 'bool66']
2025-06-13 07:34:42,708 - print_capture - INFO -     $66pred = call bool66($64compare_op.3, func=bool66, args=(Var($64compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.3', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.3, func=bool66, args=(Var($64compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.3', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.3, func=bool66, args=(Var($64compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.3', '$66pred', 'bool66']
2025-06-13 07:34:42,708 - print_capture - INFO -     $66pred = call bool66($64compare_op.3, func=bool66, args=(Var($64compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.3', '$66pred', 'bool66']
    branch $66pred, 68, 86                   ['$66pred']
    branch $66pred, 68, 86                   ['$66pred']
2025-06-13 07:34:42,708 - print_capture - INFO -     branch $66pred, 68, 86                   ['$66pred']
    branch $66pred, 68, 86                   ['$66pred']
    branch $66pred, 68, 86                   ['$66pred']
2025-06-13 07:34:42,708 - print_capture - INFO -     branch $66pred, 68, 86                   ['$66pred']
label 68:
label 68:
2025-06-13 07:34:42,708 - print_capture - INFO - label 68:
label 68:
label 68:
2025-06-13 07:34:42,708 - print_capture - INFO - label 68:
    $68load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$68load_global.0']
    $68load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$68load_global.0']
2025-06-13 07:34:42,708 - print_capture - INFO -     $68load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$68load_global.0']
    $68load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$68load_global.0']
    $68load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$68load_global.0']
2025-06-13 07:34:42,708 - print_capture - INFO -     $68load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$68load_global.0']
    $72load_attr.2 = getattr(value=a, attr=_data) ['$72load_attr.2', 'a']
    $72load_attr.2 = getattr(value=a, attr=_data) ['$72load_attr.2', 'a']
2025-06-13 07:34:42,708 - print_capture - INFO -     $72load_attr.2 = getattr(value=a, attr=_data) ['$72load_attr.2', 'a']
    $72load_attr.2 = getattr(value=a, attr=_data) ['$72load_attr.2', 'a']
    $72load_attr.2 = getattr(value=a, attr=_data) ['$72load_attr.2', 'a']
2025-06-13 07:34:42,708 - print_capture - INFO -     $72load_attr.2 = getattr(value=a, attr=_data) ['$72load_attr.2', 'a']
    $78call_function.5 = call $68load_global.0($72load_attr.2, i, ch, func=$68load_global.0, args=[Var($72load_attr.2, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72load_attr.2', '$78call_function.5', 'ch', 'i']
    $78call_function.5 = call $68load_global.0($72load_attr.2, i, ch, func=$68load_global.0, args=[Var($72load_attr.2, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72load_attr.2', '$78call_function.5', 'ch', 'i']
2025-06-13 07:34:42,708 - print_capture - INFO -     $78call_function.5 = call $68load_global.0($72load_attr.2, i, ch, func=$68load_global.0, args=[Var($72load_attr.2, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72load_attr.2', '$78call_function.5', 'ch', 'i']
    $78call_function.5 = call $68load_global.0($72load_attr.2, i, ch, func=$68load_global.0, args=[Var($72load_attr.2, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72load_attr.2', '$78call_function.5', 'ch', 'i']
    $78call_function.5 = call $68load_global.0($72load_attr.2, i, ch, func=$68load_global.0, args=[Var($72load_attr.2, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72load_attr.2', '$78call_function.5', 'ch', 'i']
2025-06-13 07:34:42,708 - print_capture - INFO -     $78call_function.5 = call $68load_global.0($72load_attr.2, i, ch, func=$68load_global.0, args=[Var($72load_attr.2, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72load_attr.2', '$78call_function.5', 'ch', 'i']
    $const82.6.0 = const(NoneType, None)     ['$const82.6.0']
    $const82.6.0 = const(NoneType, None)     ['$const82.6.0']
2025-06-13 07:34:42,708 - print_capture - INFO -     $const82.6.0 = const(NoneType, None)     ['$const82.6.0']
    $const82.6.0 = const(NoneType, None)     ['$const82.6.0']
    $const82.6.0 = const(NoneType, None)     ['$const82.6.0']
2025-06-13 07:34:42,708 - print_capture - INFO -     $const82.6.0 = const(NoneType, None)     ['$const82.6.0']
    $84return_value.7 = cast(value=$const82.6.0) ['$84return_value.7', '$const82.6.0']
    $84return_value.7 = cast(value=$const82.6.0) ['$84return_value.7', '$const82.6.0']
2025-06-13 07:34:42,708 - print_capture - INFO -     $84return_value.7 = cast(value=$const82.6.0) ['$84return_value.7', '$const82.6.0']
    $84return_value.7 = cast(value=$const82.6.0) ['$84return_value.7', '$const82.6.0']
    $84return_value.7 = cast(value=$const82.6.0) ['$84return_value.7', '$const82.6.0']
2025-06-13 07:34:42,708 - print_capture - INFO -     $84return_value.7 = cast(value=$const82.6.0) ['$84return_value.7', '$const82.6.0']
    return $84return_value.7                 ['$84return_value.7']
    return $84return_value.7                 ['$84return_value.7']
2025-06-13 07:34:42,708 - print_capture - INFO -     return $84return_value.7                 ['$84return_value.7']
    return $84return_value.7                 ['$84return_value.7']
    return $84return_value.7                 ['$84return_value.7']
2025-06-13 07:34:42,708 - print_capture - INFO -     return $84return_value.7                 ['$84return_value.7']
label 86:
label 86:
2025-06-13 07:34:42,708 - print_capture - INFO - label 86:
label 86:
label 86:
2025-06-13 07:34:42,708 - print_capture - INFO - label 86:
    $86load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$86load_global.0']
    $86load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$86load_global.0']
2025-06-13 07:34:42,708 - print_capture - INFO -     $86load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$86load_global.0']
    $86load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$86load_global.0']
    $86load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$86load_global.0']
2025-06-13 07:34:42,709 - print_capture - INFO -     $86load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$86load_global.0']
    $const88.1.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const88.1.1']
    $const88.1.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const88.1.1']
2025-06-13 07:34:42,709 - print_capture - INFO -     $const88.1.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const88.1.1']
    $const88.1.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const88.1.1']
    $const88.1.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const88.1.1']
2025-06-13 07:34:42,709 - print_capture - INFO -     $const88.1.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const88.1.1']
    $90call_function.2 = call $86load_global.0($const88.1.1, func=$86load_global.0, args=[Var($const88.1.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.0', '$90call_function.2', '$const88.1.1']
    $90call_function.2 = call $86load_global.0($const88.1.1, func=$86load_global.0, args=[Var($const88.1.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.0', '$90call_function.2', '$const88.1.1']
2025-06-13 07:34:42,709 - print_capture - INFO -     $90call_function.2 = call $86load_global.0($const88.1.1, func=$86load_global.0, args=[Var($const88.1.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.0', '$90call_function.2', '$const88.1.1']
    $90call_function.2 = call $86load_global.0($const88.1.1, func=$86load_global.0, args=[Var($const88.1.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.0', '$90call_function.2', '$const88.1.1']
    $90call_function.2 = call $86load_global.0($const88.1.1, func=$86load_global.0, args=[Var($const88.1.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.0', '$90call_function.2', '$const88.1.1']
2025-06-13 07:34:42,709 - print_capture - INFO -     $90call_function.2 = call $86load_global.0($const88.1.1, func=$86load_global.0, args=[Var($const88.1.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.0', '$90call_function.2', '$const88.1.1']
    raise $90call_function.2                 ['$90call_function.2']
    raise $90call_function.2                 ['$90call_function.2']
2025-06-13 07:34:42,709 - print_capture - INFO -     raise $90call_function.2                 ['$90call_function.2']
    raise $90call_function.2                 ['$90call_function.2']
    raise $90call_function.2                 ['$90call_function.2']
2025-06-13 07:34:42,709 - print_capture - INFO -     raise $90call_function.2                 ['$90call_function.2']
label 0:
label 0:
2025-06-13 07:34:42,775 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,775 - print_capture - INFO - label 0:
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:42,775 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:42,775 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    attr = const(str, __repr__)              ['attr']
    attr = const(str, __repr__)              ['attr']
2025-06-13 07:34:42,775 - print_capture - INFO -     attr = const(str, __repr__)              ['attr']
    attr = const(str, __repr__)              ['attr']
    attr = const(str, __repr__)              ['attr']
2025-06-13 07:34:42,775 - print_capture - INFO -     attr = const(str, __repr__)              ['attr']
    $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
    $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
2025-06-13 07:34:42,775 - print_capture - INFO -     $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
    $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
    $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
2025-06-13 07:34:42,775 - print_capture - INFO -     $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
    $12call_function.4 = call $6load_global.1(obj, attr, func=$6load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'obj']
    $12call_function.4 = call $6load_global.1(obj, attr, func=$6load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'obj']
2025-06-13 07:34:42,775 - print_capture - INFO -     $12call_function.4 = call $6load_global.1(obj, attr, func=$6load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'obj']
    $12call_function.4 = call $6load_global.1(obj, attr, func=$6load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'obj']
    $12call_function.4 = call $6load_global.1(obj, attr, func=$6load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'obj']
2025-06-13 07:34:42,775 - print_capture - INFO -     $12call_function.4 = call $6load_global.1(obj, attr, func=$6load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'obj']
    $const14.5.2 = const(bool, True)         ['$const14.5.2']
    $const14.5.2 = const(bool, True)         ['$const14.5.2']
2025-06-13 07:34:42,775 - print_capture - INFO -     $const14.5.2 = const(bool, True)         ['$const14.5.2']
    $const14.5.2 = const(bool, True)         ['$const14.5.2']
    $const14.5.2 = const(bool, True)         ['$const14.5.2']
2025-06-13 07:34:42,775 - print_capture - INFO -     $const14.5.2 = const(bool, True)         ['$const14.5.2']
    $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
    $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
2025-06-13 07:34:42,775 - print_capture - INFO -     $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
    $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
    $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
2025-06-13 07:34:42,775 - print_capture - INFO -     $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
2025-06-13 07:34:42,775 - print_capture - INFO -     bool18 = global(bool: <class 'bool'>)    ['bool18']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
2025-06-13 07:34:42,775 - print_capture - INFO -     bool18 = global(bool: <class 'bool'>)    ['bool18']
    $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
    $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
2025-06-13 07:34:42,775 - print_capture - INFO -     $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
    $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
    $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
2025-06-13 07:34:42,775 - print_capture - INFO -     $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
    branch $18pred, 20, 32                   ['$18pred']
    branch $18pred, 20, 32                   ['$18pred']
2025-06-13 07:34:42,775 - print_capture - INFO -     branch $18pred, 20, 32                   ['$18pred']
    branch $18pred, 20, 32                   ['$18pred']
    branch $18pred, 20, 32                   ['$18pred']
2025-06-13 07:34:42,775 - print_capture - INFO -     branch $18pred, 20, 32                   ['$18pred']
label 20:
label 20:
2025-06-13 07:34:42,775 - print_capture - INFO - label 20:
label 20:
label 20:
2025-06-13 07:34:42,775 - print_capture - INFO - label 20:
    $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
    $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
2025-06-13 07:34:42,775 - print_capture - INFO -     $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
    $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
    $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
2025-06-13 07:34:42,775 - print_capture - INFO -     $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
    $26call_function.3 = call $20load_global.0(obj, attr, func=$20load_global.0, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'obj']
    $26call_function.3 = call $20load_global.0(obj, attr, func=$20load_global.0, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'obj']
2025-06-13 07:34:42,775 - print_capture - INFO -     $26call_function.3 = call $20load_global.0(obj, attr, func=$20load_global.0, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'obj']
    $26call_function.3 = call $20load_global.0(obj, attr, func=$20load_global.0, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'obj']
    $26call_function.3 = call $20load_global.0(obj, attr, func=$20load_global.0, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'obj']
2025-06-13 07:34:42,775 - print_capture - INFO -     $26call_function.3 = call $20load_global.0(obj, attr, func=$20load_global.0, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'obj']
    $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
    $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
2025-06-13 07:34:42,775 - print_capture - INFO -     $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
    $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
    $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
2025-06-13 07:34:42,775 - print_capture - INFO -     $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
    $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
    $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
2025-06-13 07:34:42,775 - print_capture - INFO -     $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
    $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
    $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
2025-06-13 07:34:42,775 - print_capture - INFO -     $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
    return $30return_value.5                 ['$30return_value.5']
    return $30return_value.5                 ['$30return_value.5']
2025-06-13 07:34:42,775 - print_capture - INFO -     return $30return_value.5                 ['$30return_value.5']
    return $30return_value.5                 ['$30return_value.5']
    return $30return_value.5                 ['$30return_value.5']
2025-06-13 07:34:42,775 - print_capture - INFO -     return $30return_value.5                 ['$30return_value.5']
label 32:
label 32:
2025-06-13 07:34:42,775 - print_capture - INFO - label 32:
label 32:
label 32:
2025-06-13 07:34:42,775 - print_capture - INFO - label 32:
    $32load_deref.0 = freevar(missing_repr_format: <object type:int64>) ['$32load_deref.0']
    $32load_deref.0 = freevar(missing_repr_format: <object type:int64>) ['$32load_deref.0']
2025-06-13 07:34:42,775 - print_capture - INFO -     $32load_deref.0 = freevar(missing_repr_format: <object type:int64>) ['$32load_deref.0']
    $32load_deref.0 = freevar(missing_repr_format: <object type:int64>) ['$32load_deref.0']
    $32load_deref.0 = freevar(missing_repr_format: <object type:int64>) ['$32load_deref.0']
2025-06-13 07:34:42,776 - print_capture - INFO -     $32load_deref.0 = freevar(missing_repr_format: <object type:int64>) ['$32load_deref.0']
    $34return_value.1 = cast(value=$32load_deref.0) ['$32load_deref.0', '$34return_value.1']
    $34return_value.1 = cast(value=$32load_deref.0) ['$32load_deref.0', '$34return_value.1']
2025-06-13 07:34:42,776 - print_capture - INFO -     $34return_value.1 = cast(value=$32load_deref.0) ['$32load_deref.0', '$34return_value.1']
    $34return_value.1 = cast(value=$32load_deref.0) ['$32load_deref.0', '$34return_value.1']
    $34return_value.1 = cast(value=$32load_deref.0) ['$32load_deref.0', '$34return_value.1']
2025-06-13 07:34:42,776 - print_capture - INFO -     $34return_value.1 = cast(value=$32load_deref.0) ['$32load_deref.0', '$34return_value.1']
    return $34return_value.1                 ['$34return_value.1']
    return $34return_value.1                 ['$34return_value.1']
2025-06-13 07:34:42,776 - print_capture - INFO -     return $34return_value.1                 ['$34return_value.1']
    return $34return_value.1                 ['$34return_value.1']
    return $34return_value.1                 ['$34return_value.1']
2025-06-13 07:34:42,776 - print_capture - INFO -     return $34return_value.1                 ['$34return_value.1']
label 0:
label 0:
2025-06-13 07:34:42,779 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,779 - print_capture - INFO - label 0:
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:42,779 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:42,779 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:42,779 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:42,779 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:42,779 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:42,779 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:42,779 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:42,779 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:42,779 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:42,779 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:42,779 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:42,779 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
label 0:
label 0:
2025-06-13 07:34:42,782 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,782 - print_capture - INFO - label 0:
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:42,782 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:42,782 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:42,782 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:42,782 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:42,782 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:42,782 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:42,782 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:42,896 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:42,897 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:42,897 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:42,897 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:42,897 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
label 0:
label 0:
2025-06-13 07:34:42,913 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,913 - print_capture - INFO - label 0:
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:42,913 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:42,913 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:42,913 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:42,913 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
2025-06-13 07:34:42,913 - print_capture - INFO -     $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
2025-06-13 07:34:42,913 - print_capture - INFO -     $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
    $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
    $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
2025-06-13 07:34:42,913 - print_capture - INFO -     $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
    $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
    $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
2025-06-13 07:34:42,913 - print_capture - INFO -     $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
    $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
    $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
2025-06-13 07:34:42,913 - print_capture - INFO -     $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
    $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
    $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
2025-06-13 07:34:42,913 - print_capture - INFO -     $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
2025-06-13 07:34:42,913 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
2025-06-13 07:34:42,913 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:42,913 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:42,913 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
label 0:
label 0:
2025-06-13 07:34:42,923 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,923 - print_capture - INFO - label 0:
    n = arg(0, name=n)                       ['n']
    n = arg(0, name=n)                       ['n']
2025-06-13 07:34:42,923 - print_capture - INFO -     n = arg(0, name=n)                       ['n']
    n = arg(0, name=n)                       ['n']
    n = arg(0, name=n)                       ['n']
2025-06-13 07:34:42,923 - print_capture - INFO -     n = arg(0, name=n)                       ['n']
    $4load_method.1 = getattr(value=n, attr=__str__) ['$4load_method.1', 'n']
    $4load_method.1 = getattr(value=n, attr=__str__) ['$4load_method.1', 'n']
2025-06-13 07:34:42,923 - print_capture - INFO -     $4load_method.1 = getattr(value=n, attr=__str__) ['$4load_method.1', 'n']
    $4load_method.1 = getattr(value=n, attr=__str__) ['$4load_method.1', 'n']
    $4load_method.1 = getattr(value=n, attr=__str__) ['$4load_method.1', 'n']
2025-06-13 07:34:42,923 - print_capture - INFO -     $4load_method.1 = getattr(value=n, attr=__str__) ['$4load_method.1', 'n']
    $6call_method.2 = call $4load_method.1(func=$4load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$6call_method.2']
    $6call_method.2 = call $4load_method.1(func=$4load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$6call_method.2']
2025-06-13 07:34:42,923 - print_capture - INFO -     $6call_method.2 = call $4load_method.1(func=$4load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$6call_method.2']
    $6call_method.2 = call $4load_method.1(func=$4load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$6call_method.2']
    $6call_method.2 = call $4load_method.1(func=$4load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$6call_method.2']
2025-06-13 07:34:42,923 - print_capture - INFO -     $6call_method.2 = call $4load_method.1(func=$4load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$6call_method.2']
    $8return_value.3 = cast(value=$6call_method.2) ['$6call_method.2', '$8return_value.3']
    $8return_value.3 = cast(value=$6call_method.2) ['$6call_method.2', '$8return_value.3']
2025-06-13 07:34:42,923 - print_capture - INFO -     $8return_value.3 = cast(value=$6call_method.2) ['$6call_method.2', '$8return_value.3']
    $8return_value.3 = cast(value=$6call_method.2) ['$6call_method.2', '$8return_value.3']
    $8return_value.3 = cast(value=$6call_method.2) ['$6call_method.2', '$8return_value.3']
2025-06-13 07:34:42,923 - print_capture - INFO -     $8return_value.3 = cast(value=$6call_method.2) ['$6call_method.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
2025-06-13 07:34:42,923 - print_capture - INFO -     return $8return_value.3                  ['$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
2025-06-13 07:34:42,923 - print_capture - INFO -     return $8return_value.3                  ['$8return_value.3']
label 0:
label 0:
2025-06-13 07:34:42,944 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,944 - print_capture - INFO - label 0:
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:42,944 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:42,944 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:42,944 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:42,944 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:42,944 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:42,944 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:42,944 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:42,944 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:42,944 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:42,944 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:42,944 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:42,944 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
label 0:
label 0:
2025-06-13 07:34:42,968 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,968 - print_capture - INFO - label 0:
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:42,968 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:42,968 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:42,968 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:42,968 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:42,968 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:42,968 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:42,968 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:42,968 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:42,968 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:42,968 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:42,968 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:42,968 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
label 0:
label 0:
2025-06-13 07:34:42,993 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,993 - print_capture - INFO - label 0:
    sep = arg(0, name=sep)                   ['sep']
    sep = arg(0, name=sep)                   ['sep']
2025-06-13 07:34:42,993 - print_capture - INFO -     sep = arg(0, name=sep)                   ['sep']
    sep = arg(0, name=sep)                   ['sep']
    sep = arg(0, name=sep)                   ['sep']
2025-06-13 07:34:42,993 - print_capture - INFO -     sep = arg(0, name=sep)                   ['sep']
    parts = arg(1, name=parts)               ['parts']
    parts = arg(1, name=parts)               ['parts']
2025-06-13 07:34:42,993 - print_capture - INFO -     parts = arg(1, name=parts)               ['parts']
    parts = arg(1, name=parts)               ['parts']
    parts = arg(1, name=parts)               ['parts']
2025-06-13 07:34:42,993 - print_capture - INFO -     parts = arg(1, name=parts)               ['parts']
    $2load_global.0 = global(join_list: <function join_list at 0x7f28ab7f55a0>) ['$2load_global.0']
    $2load_global.0 = global(join_list: <function join_list at 0x7f28ab7f55a0>) ['$2load_global.0']
2025-06-13 07:34:42,993 - print_capture - INFO -     $2load_global.0 = global(join_list: <function join_list at 0x7f28ab7f55a0>) ['$2load_global.0']
    $2load_global.0 = global(join_list: <function join_list at 0x7f28ab7f55a0>) ['$2load_global.0']
    $2load_global.0 = global(join_list: <function join_list at 0x7f28ab7f55a0>) ['$2load_global.0']
2025-06-13 07:34:42,993 - print_capture - INFO -     $2load_global.0 = global(join_list: <function join_list at 0x7f28ab7f55a0>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(sep, parts, func=$2load_global.0, args=[Var(sep, unicode.py:1527), Var(parts, unicode.py:1527)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'parts', 'sep']
    $8call_function.3 = call $2load_global.0(sep, parts, func=$2load_global.0, args=[Var(sep, unicode.py:1527), Var(parts, unicode.py:1527)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'parts', 'sep']
2025-06-13 07:34:42,993 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(sep, parts, func=$2load_global.0, args=[Var(sep, unicode.py:1527), Var(parts, unicode.py:1527)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'parts', 'sep']
    $8call_function.3 = call $2load_global.0(sep, parts, func=$2load_global.0, args=[Var(sep, unicode.py:1527), Var(parts, unicode.py:1527)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'parts', 'sep']
    $8call_function.3 = call $2load_global.0(sep, parts, func=$2load_global.0, args=[Var(sep, unicode.py:1527), Var(parts, unicode.py:1527)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'parts', 'sep']
2025-06-13 07:34:42,994 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(sep, parts, func=$2load_global.0, args=[Var(sep, unicode.py:1527), Var(parts, unicode.py:1527)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'parts', 'sep']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:42,994 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:42,994 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:42,994 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:42,994 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
label 0:
label 0:
2025-06-13 07:34:42,997 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:42,997 - print_capture - INFO - label 0:
    sep = arg(0, name=sep)                   ['sep']
    sep = arg(0, name=sep)                   ['sep']
2025-06-13 07:34:42,997 - print_capture - INFO -     sep = arg(0, name=sep)                   ['sep']
    sep = arg(0, name=sep)                   ['sep']
    sep = arg(0, name=sep)                   ['sep']
2025-06-13 07:34:42,997 - print_capture - INFO -     sep = arg(0, name=sep)                   ['sep']
    parts = arg(1, name=parts)               ['parts']
    parts = arg(1, name=parts)               ['parts']
2025-06-13 07:34:42,997 - print_capture - INFO -     parts = arg(1, name=parts)               ['parts']
    parts = arg(1, name=parts)               ['parts']
    parts = arg(1, name=parts)               ['parts']
2025-06-13 07:34:42,997 - print_capture - INFO -     parts = arg(1, name=parts)               ['parts']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
2025-06-13 07:34:42,997 - print_capture - INFO -     $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
2025-06-13 07:34:42,997 - print_capture - INFO -     $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    parts_len = call $2load_global.0(parts, func=$2load_global.0, args=[Var(parts, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'parts', 'parts_len']
    parts_len = call $2load_global.0(parts, func=$2load_global.0, args=[Var(parts, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'parts', 'parts_len']
2025-06-13 07:34:42,997 - print_capture - INFO -     parts_len = call $2load_global.0(parts, func=$2load_global.0, args=[Var(parts, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'parts', 'parts_len']
    parts_len = call $2load_global.0(parts, func=$2load_global.0, args=[Var(parts, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'parts', 'parts_len']
    parts_len = call $2load_global.0(parts, func=$2load_global.0, args=[Var(parts, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'parts', 'parts_len']
2025-06-13 07:34:42,997 - print_capture - INFO -     parts_len = call $2load_global.0(parts, func=$2load_global.0, args=[Var(parts, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'parts', 'parts_len']
    $const12.4.1 = const(int, 0)             ['$const12.4.1']
    $const12.4.1 = const(int, 0)             ['$const12.4.1']
2025-06-13 07:34:42,997 - print_capture - INFO -     $const12.4.1 = const(int, 0)             ['$const12.4.1']
    $const12.4.1 = const(int, 0)             ['$const12.4.1']
    $const12.4.1 = const(int, 0)             ['$const12.4.1']
2025-06-13 07:34:42,997 - print_capture - INFO -     $const12.4.1 = const(int, 0)             ['$const12.4.1']
    $14compare_op.5 = parts_len == $const12.4.1 ['$14compare_op.5', '$const12.4.1', 'parts_len']
    $14compare_op.5 = parts_len == $const12.4.1 ['$14compare_op.5', '$const12.4.1', 'parts_len']
2025-06-13 07:34:42,997 - print_capture - INFO -     $14compare_op.5 = parts_len == $const12.4.1 ['$14compare_op.5', '$const12.4.1', 'parts_len']
    $14compare_op.5 = parts_len == $const12.4.1 ['$14compare_op.5', '$const12.4.1', 'parts_len']
    $14compare_op.5 = parts_len == $const12.4.1 ['$14compare_op.5', '$const12.4.1', 'parts_len']
2025-06-13 07:34:42,997 - print_capture - INFO -     $14compare_op.5 = parts_len == $const12.4.1 ['$14compare_op.5', '$const12.4.1', 'parts_len']
    bool16 = global(bool: <class 'bool'>)    ['bool16']
    bool16 = global(bool: <class 'bool'>)    ['bool16']
2025-06-13 07:34:42,997 - print_capture - INFO -     bool16 = global(bool: <class 'bool'>)    ['bool16']
    bool16 = global(bool: <class 'bool'>)    ['bool16']
    bool16 = global(bool: <class 'bool'>)    ['bool16']
2025-06-13 07:34:42,997 - print_capture - INFO -     bool16 = global(bool: <class 'bool'>)    ['bool16']
    $16pred = call bool16($14compare_op.5, func=bool16, args=(Var($14compare_op.5, unicode.py:1493),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.5', '$16pred', 'bool16']
    $16pred = call bool16($14compare_op.5, func=bool16, args=(Var($14compare_op.5, unicode.py:1493),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.5', '$16pred', 'bool16']
2025-06-13 07:34:42,997 - print_capture - INFO -     $16pred = call bool16($14compare_op.5, func=bool16, args=(Var($14compare_op.5, unicode.py:1493),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.5', '$16pred', 'bool16']
    $16pred = call bool16($14compare_op.5, func=bool16, args=(Var($14compare_op.5, unicode.py:1493),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.5', '$16pred', 'bool16']
    $16pred = call bool16($14compare_op.5, func=bool16, args=(Var($14compare_op.5, unicode.py:1493),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.5', '$16pred', 'bool16']
2025-06-13 07:34:42,997 - print_capture - INFO -     $16pred = call bool16($14compare_op.5, func=bool16, args=(Var($14compare_op.5, unicode.py:1493),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.5', '$16pred', 'bool16']
    branch $16pred, 18, 22                   ['$16pred']
    branch $16pred, 18, 22                   ['$16pred']
2025-06-13 07:34:42,997 - print_capture - INFO -     branch $16pred, 18, 22                   ['$16pred']
    branch $16pred, 18, 22                   ['$16pred']
    branch $16pred, 18, 22                   ['$16pred']
2025-06-13 07:34:42,997 - print_capture - INFO -     branch $16pred, 18, 22                   ['$16pred']
label 18:
label 18:
2025-06-13 07:34:42,998 - print_capture - INFO - label 18:
label 18:
label 18:
2025-06-13 07:34:42,998 - print_capture - INFO - label 18:
    $const18.0.2 = const(str, )              ['$const18.0.2']
    $const18.0.2 = const(str, )              ['$const18.0.2']
2025-06-13 07:34:42,998 - print_capture - INFO -     $const18.0.2 = const(str, )              ['$const18.0.2']
    $const18.0.2 = const(str, )              ['$const18.0.2']
    $const18.0.2 = const(str, )              ['$const18.0.2']
2025-06-13 07:34:42,998 - print_capture - INFO -     $const18.0.2 = const(str, )              ['$const18.0.2']
    $20return_value.1 = cast(value=$const18.0.2) ['$20return_value.1', '$const18.0.2']
    $20return_value.1 = cast(value=$const18.0.2) ['$20return_value.1', '$const18.0.2']
2025-06-13 07:34:42,998 - print_capture - INFO -     $20return_value.1 = cast(value=$const18.0.2) ['$20return_value.1', '$const18.0.2']
    $20return_value.1 = cast(value=$const18.0.2) ['$20return_value.1', '$const18.0.2']
    $20return_value.1 = cast(value=$const18.0.2) ['$20return_value.1', '$const18.0.2']
2025-06-13 07:34:42,998 - print_capture - INFO -     $20return_value.1 = cast(value=$const18.0.2) ['$20return_value.1', '$const18.0.2']
    return $20return_value.1                 ['$20return_value.1']
    return $20return_value.1                 ['$20return_value.1']
2025-06-13 07:34:42,998 - print_capture - INFO -     return $20return_value.1                 ['$20return_value.1']
    return $20return_value.1                 ['$20return_value.1']
    return $20return_value.1                 ['$20return_value.1']
2025-06-13 07:34:42,998 - print_capture - INFO -     return $20return_value.1                 ['$20return_value.1']
label 22:
label 22:
2025-06-13 07:34:42,998 - print_capture - INFO - label 22:
label 22:
label 22:
2025-06-13 07:34:42,998 - print_capture - INFO - label 22:
    $22load_global.0 = global(len: <built-in function len>) ['$22load_global.0']
    $22load_global.0 = global(len: <built-in function len>) ['$22load_global.0']
2025-06-13 07:34:42,998 - print_capture - INFO -     $22load_global.0 = global(len: <built-in function len>) ['$22load_global.0']
    $22load_global.0 = global(len: <built-in function len>) ['$22load_global.0']
    $22load_global.0 = global(len: <built-in function len>) ['$22load_global.0']
2025-06-13 07:34:42,998 - print_capture - INFO -     $22load_global.0 = global(len: <built-in function len>) ['$22load_global.0']
    sep_len = call $22load_global.0(sep, func=$22load_global.0, args=[Var(sep, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_global.0', 'sep', 'sep_len']
    sep_len = call $22load_global.0(sep, func=$22load_global.0, args=[Var(sep, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_global.0', 'sep', 'sep_len']
2025-06-13 07:34:42,998 - print_capture - INFO -     sep_len = call $22load_global.0(sep, func=$22load_global.0, args=[Var(sep, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_global.0', 'sep', 'sep_len']
    sep_len = call $22load_global.0(sep, func=$22load_global.0, args=[Var(sep, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_global.0', 'sep', 'sep_len']
    sep_len = call $22load_global.0(sep, func=$22load_global.0, args=[Var(sep, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_global.0', 'sep', 'sep_len']
2025-06-13 07:34:42,998 - print_capture - INFO -     sep_len = call $22load_global.0(sep, func=$22load_global.0, args=[Var(sep, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_global.0', 'sep', 'sep_len']
    $const32.4.3 = const(int, 1)             ['$const32.4.3']
    $const32.4.3 = const(int, 1)             ['$const32.4.3']
2025-06-13 07:34:42,998 - print_capture - INFO -     $const32.4.3 = const(int, 1)             ['$const32.4.3']
    $const32.4.3 = const(int, 1)             ['$const32.4.3']
    $const32.4.3 = const(int, 1)             ['$const32.4.3']
2025-06-13 07:34:42,998 - print_capture - INFO -     $const32.4.3 = const(int, 1)             ['$const32.4.3']
    $34binary_subtract.5 = parts_len - $const32.4.3 ['$34binary_subtract.5', '$const32.4.3', 'parts_len']
    $34binary_subtract.5 = parts_len - $const32.4.3 ['$34binary_subtract.5', '$const32.4.3', 'parts_len']
2025-06-13 07:34:42,998 - print_capture - INFO -     $34binary_subtract.5 = parts_len - $const32.4.3 ['$34binary_subtract.5', '$const32.4.3', 'parts_len']
    $34binary_subtract.5 = parts_len - $const32.4.3 ['$34binary_subtract.5', '$const32.4.3', 'parts_len']
    $34binary_subtract.5 = parts_len - $const32.4.3 ['$34binary_subtract.5', '$const32.4.3', 'parts_len']
2025-06-13 07:34:42,998 - print_capture - INFO -     $34binary_subtract.5 = parts_len - $const32.4.3 ['$34binary_subtract.5', '$const32.4.3', 'parts_len']
    length = $34binary_subtract.5 * sep_len  ['$34binary_subtract.5', 'length', 'sep_len']
    length = $34binary_subtract.5 * sep_len  ['$34binary_subtract.5', 'length', 'sep_len']
2025-06-13 07:34:42,998 - print_capture - INFO -     length = $34binary_subtract.5 * sep_len  ['$34binary_subtract.5', 'length', 'sep_len']
    length = $34binary_subtract.5 * sep_len  ['$34binary_subtract.5', 'length', 'sep_len']
    length = $34binary_subtract.5 * sep_len  ['$34binary_subtract.5', 'length', 'sep_len']
2025-06-13 07:34:42,998 - print_capture - INFO -     length = $34binary_subtract.5 * sep_len  ['$34binary_subtract.5', 'length', 'sep_len']
    kind = getattr(value=sep, attr=_kind)    ['kind', 'sep']
    kind = getattr(value=sep, attr=_kind)    ['kind', 'sep']
2025-06-13 07:34:42,998 - print_capture - INFO -     kind = getattr(value=sep, attr=_kind)    ['kind', 'sep']
    kind = getattr(value=sep, attr=_kind)    ['kind', 'sep']
    kind = getattr(value=sep, attr=_kind)    ['kind', 'sep']
2025-06-13 07:34:42,998 - print_capture - INFO -     kind = getattr(value=sep, attr=_kind)    ['kind', 'sep']
    is_ascii = getattr(value=sep, attr=_is_ascii) ['is_ascii', 'sep']
    is_ascii = getattr(value=sep, attr=_is_ascii) ['is_ascii', 'sep']
2025-06-13 07:34:42,998 - print_capture - INFO -     is_ascii = getattr(value=sep, attr=_is_ascii) ['is_ascii', 'sep']
    is_ascii = getattr(value=sep, attr=_is_ascii) ['is_ascii', 'sep']
    is_ascii = getattr(value=sep, attr=_is_ascii) ['is_ascii', 'sep']
2025-06-13 07:34:42,998 - print_capture - INFO -     is_ascii = getattr(value=sep, attr=_is_ascii) ['is_ascii', 'sep']
    $56get_iter.13 = getiter(value=parts)    ['$56get_iter.13', 'parts']
    $56get_iter.13 = getiter(value=parts)    ['$56get_iter.13', 'parts']
2025-06-13 07:34:42,998 - print_capture - INFO -     $56get_iter.13 = getiter(value=parts)    ['$56get_iter.13', 'parts']
    $56get_iter.13 = getiter(value=parts)    ['$56get_iter.13', 'parts']
    $56get_iter.13 = getiter(value=parts)    ['$56get_iter.13', 'parts']
2025-06-13 07:34:42,998 - print_capture - INFO -     $56get_iter.13 = getiter(value=parts)    ['$56get_iter.13', 'parts']
    $phi58.0 = $56get_iter.13                ['$56get_iter.13', '$phi58.0']
    $phi58.0 = $56get_iter.13                ['$56get_iter.13', '$phi58.0']
2025-06-13 07:34:42,998 - print_capture - INFO -     $phi58.0 = $56get_iter.13                ['$56get_iter.13', '$phi58.0']
    $phi58.0 = $56get_iter.13                ['$56get_iter.13', '$phi58.0']
    $phi58.0 = $56get_iter.13                ['$56get_iter.13', '$phi58.0']
2025-06-13 07:34:42,998 - print_capture - INFO -     $phi58.0 = $56get_iter.13                ['$56get_iter.13', '$phi58.0']
    jump 58                                  []
    jump 58                                  []
2025-06-13 07:34:42,998 - print_capture - INFO -     jump 58                                  []
    jump 58                                  []
    jump 58                                  []
2025-06-13 07:34:42,998 - print_capture - INFO -     jump 58                                  []
label 58:
label 58:
2025-06-13 07:34:42,998 - print_capture - INFO - label 58:
label 58:
label 58:
2025-06-13 07:34:42,998 - print_capture - INFO - label 58:
    $58for_iter.1 = iternext(value=$phi58.0) ['$58for_iter.1', '$phi58.0']
    $58for_iter.1 = iternext(value=$phi58.0) ['$58for_iter.1', '$phi58.0']
2025-06-13 07:34:42,998 - print_capture - INFO -     $58for_iter.1 = iternext(value=$phi58.0) ['$58for_iter.1', '$phi58.0']
    $58for_iter.1 = iternext(value=$phi58.0) ['$58for_iter.1', '$phi58.0']
    $58for_iter.1 = iternext(value=$phi58.0) ['$58for_iter.1', '$phi58.0']
2025-06-13 07:34:42,998 - print_capture - INFO -     $58for_iter.1 = iternext(value=$phi58.0) ['$58for_iter.1', '$phi58.0']
    $58for_iter.2 = pair_first(value=$58for_iter.1) ['$58for_iter.1', '$58for_iter.2']
    $58for_iter.2 = pair_first(value=$58for_iter.1) ['$58for_iter.1', '$58for_iter.2']
2025-06-13 07:34:42,998 - print_capture - INFO -     $58for_iter.2 = pair_first(value=$58for_iter.1) ['$58for_iter.1', '$58for_iter.2']
    $58for_iter.2 = pair_first(value=$58for_iter.1) ['$58for_iter.1', '$58for_iter.2']
    $58for_iter.2 = pair_first(value=$58for_iter.1) ['$58for_iter.1', '$58for_iter.2']
2025-06-13 07:34:42,998 - print_capture - INFO -     $58for_iter.2 = pair_first(value=$58for_iter.1) ['$58for_iter.1', '$58for_iter.2']
    $58for_iter.3 = pair_second(value=$58for_iter.1) ['$58for_iter.1', '$58for_iter.3']
    $58for_iter.3 = pair_second(value=$58for_iter.1) ['$58for_iter.1', '$58for_iter.3']
2025-06-13 07:34:42,998 - print_capture - INFO -     $58for_iter.3 = pair_second(value=$58for_iter.1) ['$58for_iter.1', '$58for_iter.3']
    $58for_iter.3 = pair_second(value=$58for_iter.1) ['$58for_iter.1', '$58for_iter.3']
    $58for_iter.3 = pair_second(value=$58for_iter.1) ['$58for_iter.1', '$58for_iter.3']
2025-06-13 07:34:42,998 - print_capture - INFO -     $58for_iter.3 = pair_second(value=$58for_iter.1) ['$58for_iter.1', '$58for_iter.3']
    $phi60.1 = $58for_iter.2                 ['$58for_iter.2', '$phi60.1']
    $phi60.1 = $58for_iter.2                 ['$58for_iter.2', '$phi60.1']
2025-06-13 07:34:42,998 - print_capture - INFO -     $phi60.1 = $58for_iter.2                 ['$58for_iter.2', '$phi60.1']
    $phi60.1 = $58for_iter.2                 ['$58for_iter.2', '$phi60.1']
    $phi60.1 = $58for_iter.2                 ['$58for_iter.2', '$phi60.1']
2025-06-13 07:34:42,998 - print_capture - INFO -     $phi60.1 = $58for_iter.2                 ['$58for_iter.2', '$phi60.1']
    branch $58for_iter.3, 60, 100            ['$58for_iter.3']
    branch $58for_iter.3, 60, 100            ['$58for_iter.3']
2025-06-13 07:34:42,998 - print_capture - INFO -     branch $58for_iter.3, 60, 100            ['$58for_iter.3']
    branch $58for_iter.3, 60, 100            ['$58for_iter.3']
    branch $58for_iter.3, 60, 100            ['$58for_iter.3']
2025-06-13 07:34:42,998 - print_capture - INFO -     branch $58for_iter.3, 60, 100            ['$58for_iter.3']
label 60:
label 60:
2025-06-13 07:34:42,998 - print_capture - INFO - label 60:
label 60:
label 60:
2025-06-13 07:34:42,998 - print_capture - INFO - label 60:
    p = $phi60.1                             ['$phi60.1', 'p']
    p = $phi60.1                             ['$phi60.1', 'p']
2025-06-13 07:34:42,999 - print_capture - INFO -     p = $phi60.1                             ['$phi60.1', 'p']
    p = $phi60.1                             ['$phi60.1', 'p']
    p = $phi60.1                             ['$phi60.1', 'p']
2025-06-13 07:34:42,999 - print_capture - INFO -     p = $phi60.1                             ['$phi60.1', 'p']
    $64load_global.3 = global(len: <built-in function len>) ['$64load_global.3']
    $64load_global.3 = global(len: <built-in function len>) ['$64load_global.3']
2025-06-13 07:34:42,999 - print_capture - INFO -     $64load_global.3 = global(len: <built-in function len>) ['$64load_global.3']
    $64load_global.3 = global(len: <built-in function len>) ['$64load_global.3']
    $64load_global.3 = global(len: <built-in function len>) ['$64load_global.3']
2025-06-13 07:34:42,999 - print_capture - INFO -     $64load_global.3 = global(len: <built-in function len>) ['$64load_global.3']
    $68call_function.5 = call $64load_global.3(p, func=$64load_global.3, args=[Var(p, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None) ['$64load_global.3', '$68call_function.5', 'p']
    $68call_function.5 = call $64load_global.3(p, func=$64load_global.3, args=[Var(p, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None) ['$64load_global.3', '$68call_function.5', 'p']
2025-06-13 07:34:42,999 - print_capture - INFO -     $68call_function.5 = call $64load_global.3(p, func=$64load_global.3, args=[Var(p, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None) ['$64load_global.3', '$68call_function.5', 'p']
    $68call_function.5 = call $64load_global.3(p, func=$64load_global.3, args=[Var(p, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None) ['$64load_global.3', '$68call_function.5', 'p']
    $68call_function.5 = call $64load_global.3(p, func=$64load_global.3, args=[Var(p, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None) ['$64load_global.3', '$68call_function.5', 'p']
2025-06-13 07:34:42,999 - print_capture - INFO -     $68call_function.5 = call $64load_global.3(p, func=$64load_global.3, args=[Var(p, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None) ['$64load_global.3', '$68call_function.5', 'p']
    $70inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length, rhs=$68call_function.5, static_lhs=Undefined, static_rhs=Undefined) ['$68call_function.5', '$70inplace_add.6', 'length']
    $70inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length, rhs=$68call_function.5, static_lhs=Undefined, static_rhs=Undefined) ['$68call_function.5', '$70inplace_add.6', 'length']
2025-06-13 07:34:42,999 - print_capture - INFO -     $70inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length, rhs=$68call_function.5, static_lhs=Undefined, static_rhs=Undefined) ['$68call_function.5', '$70inplace_add.6', 'length']
    $70inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length, rhs=$68call_function.5, static_lhs=Undefined, static_rhs=Undefined) ['$68call_function.5', '$70inplace_add.6', 'length']
    $70inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length, rhs=$68call_function.5, static_lhs=Undefined, static_rhs=Undefined) ['$68call_function.5', '$70inplace_add.6', 'length']
2025-06-13 07:34:42,999 - print_capture - INFO -     $70inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length, rhs=$68call_function.5, static_lhs=Undefined, static_rhs=Undefined) ['$68call_function.5', '$70inplace_add.6', 'length']
    length = $70inplace_add.6                ['$70inplace_add.6', 'length']
    length = $70inplace_add.6                ['$70inplace_add.6', 'length']
2025-06-13 07:34:42,999 - print_capture - INFO -     length = $70inplace_add.6                ['$70inplace_add.6', 'length']
    length = $70inplace_add.6                ['$70inplace_add.6', 'length']
    length = $70inplace_add.6                ['$70inplace_add.6', 'length']
2025-06-13 07:34:42,999 - print_capture - INFO -     length = $70inplace_add.6                ['$70inplace_add.6', 'length']
    $74load_global.7 = global(_pick_kind: <function _pick_kind at 0x7f28ab7cb010>) ['$74load_global.7']
    $74load_global.7 = global(_pick_kind: <function _pick_kind at 0x7f28ab7cb010>) ['$74load_global.7']
2025-06-13 07:34:42,999 - print_capture - INFO -     $74load_global.7 = global(_pick_kind: <function _pick_kind at 0x7f28ab7cb010>) ['$74load_global.7']
    $74load_global.7 = global(_pick_kind: <function _pick_kind at 0x7f28ab7cb010>) ['$74load_global.7']
    $74load_global.7 = global(_pick_kind: <function _pick_kind at 0x7f28ab7cb010>) ['$74load_global.7']
2025-06-13 07:34:42,999 - print_capture - INFO -     $74load_global.7 = global(_pick_kind: <function _pick_kind at 0x7f28ab7cb010>) ['$74load_global.7']
    $80load_attr.10 = getattr(value=p, attr=_kind) ['$80load_attr.10', 'p']
    $80load_attr.10 = getattr(value=p, attr=_kind) ['$80load_attr.10', 'p']
2025-06-13 07:34:42,999 - print_capture - INFO -     $80load_attr.10 = getattr(value=p, attr=_kind) ['$80load_attr.10', 'p']
    $80load_attr.10 = getattr(value=p, attr=_kind) ['$80load_attr.10', 'p']
    $80load_attr.10 = getattr(value=p, attr=_kind) ['$80load_attr.10', 'p']
2025-06-13 07:34:42,999 - print_capture - INFO -     $80load_attr.10 = getattr(value=p, attr=_kind) ['$80load_attr.10', 'p']
    kind = call $74load_global.7(kind, $80load_attr.10, func=$74load_global.7, args=[Var(kind, unicode.py:1499), Var($80load_attr.10, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.7', '$80load_attr.10', 'kind', 'kind']
    kind = call $74load_global.7(kind, $80load_attr.10, func=$74load_global.7, args=[Var(kind, unicode.py:1499), Var($80load_attr.10, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.7', '$80load_attr.10', 'kind', 'kind']
2025-06-13 07:34:42,999 - print_capture - INFO -     kind = call $74load_global.7(kind, $80load_attr.10, func=$74load_global.7, args=[Var(kind, unicode.py:1499), Var($80load_attr.10, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.7', '$80load_attr.10', 'kind', 'kind']
    kind = call $74load_global.7(kind, $80load_attr.10, func=$74load_global.7, args=[Var(kind, unicode.py:1499), Var($80load_attr.10, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.7', '$80load_attr.10', 'kind', 'kind']
    kind = call $74load_global.7(kind, $80load_attr.10, func=$74load_global.7, args=[Var(kind, unicode.py:1499), Var($80load_attr.10, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.7', '$80load_attr.10', 'kind', 'kind']
2025-06-13 07:34:42,999 - print_capture - INFO -     kind = call $74load_global.7(kind, $80load_attr.10, func=$74load_global.7, args=[Var(kind, unicode.py:1499), Var($80load_attr.10, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.7', '$80load_attr.10', 'kind', 'kind']
    $86load_global.12 = global(_pick_ascii: <function _pick_ascii at 0x7f28ab7cb130>) ['$86load_global.12']
    $86load_global.12 = global(_pick_ascii: <function _pick_ascii at 0x7f28ab7cb130>) ['$86load_global.12']
2025-06-13 07:34:42,999 - print_capture - INFO -     $86load_global.12 = global(_pick_ascii: <function _pick_ascii at 0x7f28ab7cb130>) ['$86load_global.12']
    $86load_global.12 = global(_pick_ascii: <function _pick_ascii at 0x7f28ab7cb130>) ['$86load_global.12']
    $86load_global.12 = global(_pick_ascii: <function _pick_ascii at 0x7f28ab7cb130>) ['$86load_global.12']
2025-06-13 07:34:42,999 - print_capture - INFO -     $86load_global.12 = global(_pick_ascii: <function _pick_ascii at 0x7f28ab7cb130>) ['$86load_global.12']
    $92load_attr.15 = getattr(value=p, attr=_is_ascii) ['$92load_attr.15', 'p']
    $92load_attr.15 = getattr(value=p, attr=_is_ascii) ['$92load_attr.15', 'p']
2025-06-13 07:34:42,999 - print_capture - INFO -     $92load_attr.15 = getattr(value=p, attr=_is_ascii) ['$92load_attr.15', 'p']
    $92load_attr.15 = getattr(value=p, attr=_is_ascii) ['$92load_attr.15', 'p']
    $92load_attr.15 = getattr(value=p, attr=_is_ascii) ['$92load_attr.15', 'p']
2025-06-13 07:34:42,999 - print_capture - INFO -     $92load_attr.15 = getattr(value=p, attr=_is_ascii) ['$92load_attr.15', 'p']
    is_ascii = call $86load_global.12(is_ascii, $92load_attr.15, func=$86load_global.12, args=[Var(is_ascii, unicode.py:1500), Var($92load_attr.15, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.12', '$92load_attr.15', 'is_ascii', 'is_ascii']
    is_ascii = call $86load_global.12(is_ascii, $92load_attr.15, func=$86load_global.12, args=[Var(is_ascii, unicode.py:1500), Var($92load_attr.15, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.12', '$92load_attr.15', 'is_ascii', 'is_ascii']
2025-06-13 07:34:42,999 - print_capture - INFO -     is_ascii = call $86load_global.12(is_ascii, $92load_attr.15, func=$86load_global.12, args=[Var(is_ascii, unicode.py:1500), Var($92load_attr.15, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.12', '$92load_attr.15', 'is_ascii', 'is_ascii']
    is_ascii = call $86load_global.12(is_ascii, $92load_attr.15, func=$86load_global.12, args=[Var(is_ascii, unicode.py:1500), Var($92load_attr.15, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.12', '$92load_attr.15', 'is_ascii', 'is_ascii']
    is_ascii = call $86load_global.12(is_ascii, $92load_attr.15, func=$86load_global.12, args=[Var(is_ascii, unicode.py:1500), Var($92load_attr.15, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.12', '$92load_attr.15', 'is_ascii', 'is_ascii']
2025-06-13 07:34:42,999 - print_capture - INFO -     is_ascii = call $86load_global.12(is_ascii, $92load_attr.15, func=$86load_global.12, args=[Var(is_ascii, unicode.py:1500), Var($92load_attr.15, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.12', '$92load_attr.15', 'is_ascii', 'is_ascii']
    jump 58                                  []
    jump 58                                  []
2025-06-13 07:34:42,999 - print_capture - INFO -     jump 58                                  []
    jump 58                                  []
    jump 58                                  []
2025-06-13 07:34:42,999 - print_capture - INFO -     jump 58                                  []
label 100:
label 100:
2025-06-13 07:34:42,999 - print_capture - INFO - label 100:
label 100:
label 100:
2025-06-13 07:34:42,999 - print_capture - INFO - label 100:
    $100load_global.0 = global(_empty_string: <function _empty_string at 0x7f28ab7cab90>) ['$100load_global.0']
    $100load_global.0 = global(_empty_string: <function _empty_string at 0x7f28ab7cab90>) ['$100load_global.0']
2025-06-13 07:34:42,999 - print_capture - INFO -     $100load_global.0 = global(_empty_string: <function _empty_string at 0x7f28ab7cab90>) ['$100load_global.0']
    $100load_global.0 = global(_empty_string: <function _empty_string at 0x7f28ab7cab90>) ['$100load_global.0']
    $100load_global.0 = global(_empty_string: <function _empty_string at 0x7f28ab7cab90>) ['$100load_global.0']
2025-06-13 07:34:42,999 - print_capture - INFO -     $100load_global.0 = global(_empty_string: <function _empty_string at 0x7f28ab7cab90>) ['$100load_global.0']
    result = call $100load_global.0(kind, length, is_ascii, func=$100load_global.0, args=[Var(kind, unicode.py:1499), Var(length, unicode.py:1498), Var(is_ascii, unicode.py:1500)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_global.0', 'is_ascii', 'kind', 'length', 'result']
    result = call $100load_global.0(kind, length, is_ascii, func=$100load_global.0, args=[Var(kind, unicode.py:1499), Var(length, unicode.py:1498), Var(is_ascii, unicode.py:1500)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_global.0', 'is_ascii', 'kind', 'length', 'result']
2025-06-13 07:34:42,999 - print_capture - INFO -     result = call $100load_global.0(kind, length, is_ascii, func=$100load_global.0, args=[Var(kind, unicode.py:1499), Var(length, unicode.py:1498), Var(is_ascii, unicode.py:1500)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_global.0', 'is_ascii', 'kind', 'length', 'result']
    result = call $100load_global.0(kind, length, is_ascii, func=$100load_global.0, args=[Var(kind, unicode.py:1499), Var(length, unicode.py:1498), Var(is_ascii, unicode.py:1500)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_global.0', 'is_ascii', 'kind', 'length', 'result']
    result = call $100load_global.0(kind, length, is_ascii, func=$100load_global.0, args=[Var(kind, unicode.py:1499), Var(length, unicode.py:1498), Var(is_ascii, unicode.py:1500)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_global.0', 'is_ascii', 'kind', 'length', 'result']
2025-06-13 07:34:42,999 - print_capture - INFO -     result = call $100load_global.0(kind, length, is_ascii, func=$100load_global.0, args=[Var(kind, unicode.py:1499), Var(length, unicode.py:1498), Var(is_ascii, unicode.py:1500)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_global.0', 'is_ascii', 'kind', 'length', 'result']
    $const114.6.1 = const(int, 0)            ['$const114.6.1']
    $const114.6.1 = const(int, 0)            ['$const114.6.1']
2025-06-13 07:34:42,999 - print_capture - INFO -     $const114.6.1 = const(int, 0)            ['$const114.6.1']
    $const114.6.1 = const(int, 0)            ['$const114.6.1']
    $const114.6.1 = const(int, 0)            ['$const114.6.1']
2025-06-13 07:34:42,999 - print_capture - INFO -     $const114.6.1 = const(int, 0)            ['$const114.6.1']
    part = getitem(value=parts, index=$const114.6.1, fn=<built-in function getitem>) ['$const114.6.1', 'part', 'parts']
    part = getitem(value=parts, index=$const114.6.1, fn=<built-in function getitem>) ['$const114.6.1', 'part', 'parts']
2025-06-13 07:34:42,999 - print_capture - INFO -     part = getitem(value=parts, index=$const114.6.1, fn=<built-in function getitem>) ['$const114.6.1', 'part', 'parts']
    part = getitem(value=parts, index=$const114.6.1, fn=<built-in function getitem>) ['$const114.6.1', 'part', 'parts']
    part = getitem(value=parts, index=$const114.6.1, fn=<built-in function getitem>) ['$const114.6.1', 'part', 'parts']
2025-06-13 07:34:42,999 - print_capture - INFO -     part = getitem(value=parts, index=$const114.6.1, fn=<built-in function getitem>) ['$const114.6.1', 'part', 'parts']
    $120load_global.8 = global(_strncpy: <function _strncpy at 0x7f28ab7f6320>) ['$120load_global.8']
    $120load_global.8 = global(_strncpy: <function _strncpy at 0x7f28ab7f6320>) ['$120load_global.8']
2025-06-13 07:34:42,999 - print_capture - INFO -     $120load_global.8 = global(_strncpy: <function _strncpy at 0x7f28ab7f6320>) ['$120load_global.8']
    $120load_global.8 = global(_strncpy: <function _strncpy at 0x7f28ab7f6320>) ['$120load_global.8']
    $120load_global.8 = global(_strncpy: <function _strncpy at 0x7f28ab7f6320>) ['$120load_global.8']
2025-06-13 07:34:42,999 - print_capture - INFO -     $120load_global.8 = global(_strncpy: <function _strncpy at 0x7f28ab7f6320>) ['$120load_global.8']
    $const124.10.1 = const(int, 0)           ['$const124.10.1']
    $const124.10.1 = const(int, 0)           ['$const124.10.1']
2025-06-13 07:34:42,999 - print_capture - INFO -     $const124.10.1 = const(int, 0)           ['$const124.10.1']
    $const124.10.1 = const(int, 0)           ['$const124.10.1']
    $const124.10.1 = const(int, 0)           ['$const124.10.1']
2025-06-13 07:34:42,999 - print_capture - INFO -     $const124.10.1 = const(int, 0)           ['$const124.10.1']
    $const128.12.1 = const(int, 0)           ['$const128.12.1']
    $const128.12.1 = const(int, 0)           ['$const128.12.1']
2025-06-13 07:34:42,999 - print_capture - INFO -     $const128.12.1 = const(int, 0)           ['$const128.12.1']
    $const128.12.1 = const(int, 0)           ['$const128.12.1']
    $const128.12.1 = const(int, 0)           ['$const128.12.1']
2025-06-13 07:34:42,999 - print_capture - INFO -     $const128.12.1 = const(int, 0)           ['$const128.12.1']
    $130load_global.13 = global(len: <built-in function len>) ['$130load_global.13']
    $130load_global.13 = global(len: <built-in function len>) ['$130load_global.13']
2025-06-13 07:34:42,999 - print_capture - INFO -     $130load_global.13 = global(len: <built-in function len>) ['$130load_global.13']
    $130load_global.13 = global(len: <built-in function len>) ['$130load_global.13']
    $130load_global.13 = global(len: <built-in function len>) ['$130load_global.13']
2025-06-13 07:34:43,000 - print_capture - INFO -     $130load_global.13 = global(len: <built-in function len>) ['$130load_global.13']
    $134call_function.15 = call $130load_global.13(part, func=$130load_global.13, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$130load_global.13', '$134call_function.15', 'part']
    $134call_function.15 = call $130load_global.13(part, func=$130load_global.13, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$130load_global.13', '$134call_function.15', 'part']
2025-06-13 07:34:43,000 - print_capture - INFO -     $134call_function.15 = call $130load_global.13(part, func=$130load_global.13, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$130load_global.13', '$134call_function.15', 'part']
    $134call_function.15 = call $130load_global.13(part, func=$130load_global.13, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$130load_global.13', '$134call_function.15', 'part']
    $134call_function.15 = call $130load_global.13(part, func=$130load_global.13, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$130load_global.13', '$134call_function.15', 'part']
2025-06-13 07:34:43,000 - print_capture - INFO -     $134call_function.15 = call $130load_global.13(part, func=$130load_global.13, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$130load_global.13', '$134call_function.15', 'part']
    $136call_function.16 = call $120load_global.8(result, $const124.10.1, part, $const128.12.1, $134call_function.15, func=$120load_global.8, args=[Var(result, unicode.py:1506), Var($const124.10.1, unicode.py:1510), Var(part, unicode.py:1509), Var($const128.12.1, unicode.py:1510), Var($134call_function.15, unicode.py:1510)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.8', '$134call_function.15', '$136call_function.16', '$const124.10.1', '$const128.12.1', 'part', 'result']
    $136call_function.16 = call $120load_global.8(result, $const124.10.1, part, $const128.12.1, $134call_function.15, func=$120load_global.8, args=[Var(result, unicode.py:1506), Var($const124.10.1, unicode.py:1510), Var(part, unicode.py:1509), Var($const128.12.1, unicode.py:1510), Var($134call_function.15, unicode.py:1510)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.8', '$134call_function.15', '$136call_function.16', '$const124.10.1', '$const128.12.1', 'part', 'result']
2025-06-13 07:34:43,000 - print_capture - INFO -     $136call_function.16 = call $120load_global.8(result, $const124.10.1, part, $const128.12.1, $134call_function.15, func=$120load_global.8, args=[Var(result, unicode.py:1506), Var($const124.10.1, unicode.py:1510), Var(part, unicode.py:1509), Var($const128.12.1, unicode.py:1510), Var($134call_function.15, unicode.py:1510)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.8', '$134call_function.15', '$136call_function.16', '$const124.10.1', '$const128.12.1', 'part', 'result']
    $136call_function.16 = call $120load_global.8(result, $const124.10.1, part, $const128.12.1, $134call_function.15, func=$120load_global.8, args=[Var(result, unicode.py:1506), Var($const124.10.1, unicode.py:1510), Var(part, unicode.py:1509), Var($const128.12.1, unicode.py:1510), Var($134call_function.15, unicode.py:1510)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.8', '$134call_function.15', '$136call_function.16', '$const124.10.1', '$const128.12.1', 'part', 'result']
    $136call_function.16 = call $120load_global.8(result, $const124.10.1, part, $const128.12.1, $134call_function.15, func=$120load_global.8, args=[Var(result, unicode.py:1506), Var($const124.10.1, unicode.py:1510), Var(part, unicode.py:1509), Var($const128.12.1, unicode.py:1510), Var($134call_function.15, unicode.py:1510)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.8', '$134call_function.15', '$136call_function.16', '$const124.10.1', '$const128.12.1', 'part', 'result']
2025-06-13 07:34:43,000 - print_capture - INFO -     $136call_function.16 = call $120load_global.8(result, $const124.10.1, part, $const128.12.1, $134call_function.15, func=$120load_global.8, args=[Var(result, unicode.py:1506), Var($const124.10.1, unicode.py:1510), Var(part, unicode.py:1509), Var($const128.12.1, unicode.py:1510), Var($134call_function.15, unicode.py:1510)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.8', '$134call_function.15', '$136call_function.16', '$const124.10.1', '$const128.12.1', 'part', 'result']
    $140load_global.17 = global(len: <built-in function len>) ['$140load_global.17']
    $140load_global.17 = global(len: <built-in function len>) ['$140load_global.17']
2025-06-13 07:34:43,000 - print_capture - INFO -     $140load_global.17 = global(len: <built-in function len>) ['$140load_global.17']
    $140load_global.17 = global(len: <built-in function len>) ['$140load_global.17']
    $140load_global.17 = global(len: <built-in function len>) ['$140load_global.17']
2025-06-13 07:34:43,000 - print_capture - INFO -     $140load_global.17 = global(len: <built-in function len>) ['$140load_global.17']
    dst_offset = call $140load_global.17(part, func=$140load_global.17, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.17', 'dst_offset', 'part']
    dst_offset = call $140load_global.17(part, func=$140load_global.17, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.17', 'dst_offset', 'part']
2025-06-13 07:34:43,000 - print_capture - INFO -     dst_offset = call $140load_global.17(part, func=$140load_global.17, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.17', 'dst_offset', 'part']
    dst_offset = call $140load_global.17(part, func=$140load_global.17, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.17', 'dst_offset', 'part']
    dst_offset = call $140load_global.17(part, func=$140load_global.17, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.17', 'dst_offset', 'part']
2025-06-13 07:34:43,000 - print_capture - INFO -     dst_offset = call $140load_global.17(part, func=$140load_global.17, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.17', 'dst_offset', 'part']
    $148load_global.20 = global(range: <class 'range'>) ['$148load_global.20']
    $148load_global.20 = global(range: <class 'range'>) ['$148load_global.20']
2025-06-13 07:34:43,000 - print_capture - INFO -     $148load_global.20 = global(range: <class 'range'>) ['$148load_global.20']
    $148load_global.20 = global(range: <class 'range'>) ['$148load_global.20']
    $148load_global.20 = global(range: <class 'range'>) ['$148load_global.20']
2025-06-13 07:34:43,000 - print_capture - INFO -     $148load_global.20 = global(range: <class 'range'>) ['$148load_global.20']
    $const150.21.3 = const(int, 1)           ['$const150.21.3']
    $const150.21.3 = const(int, 1)           ['$const150.21.3']
2025-06-13 07:34:43,000 - print_capture - INFO -     $const150.21.3 = const(int, 1)           ['$const150.21.3']
    $const150.21.3 = const(int, 1)           ['$const150.21.3']
    $const150.21.3 = const(int, 1)           ['$const150.21.3']
2025-06-13 07:34:43,000 - print_capture - INFO -     $const150.21.3 = const(int, 1)           ['$const150.21.3']
    $154call_function.23 = call $148load_global.20($const150.21.3, parts_len, func=$148load_global.20, args=[Var($const150.21.3, unicode.py:1512), Var(parts_len, unicode.py:1492)], kws=(), vararg=None, varkwarg=None, target=None) ['$148load_global.20', '$154call_function.23', '$const150.21.3', 'parts_len']
    $154call_function.23 = call $148load_global.20($const150.21.3, parts_len, func=$148load_global.20, args=[Var($const150.21.3, unicode.py:1512), Var(parts_len, unicode.py:1492)], kws=(), vararg=None, varkwarg=None, target=None) ['$148load_global.20', '$154call_function.23', '$const150.21.3', 'parts_len']
2025-06-13 07:34:43,000 - print_capture - INFO -     $154call_function.23 = call $148load_global.20($const150.21.3, parts_len, func=$148load_global.20, args=[Var($const150.21.3, unicode.py:1512), Var(parts_len, unicode.py:1492)], kws=(), vararg=None, varkwarg=None, target=None) ['$148load_global.20', '$154call_function.23', '$const150.21.3', 'parts_len']
    $154call_function.23 = call $148load_global.20($const150.21.3, parts_len, func=$148load_global.20, args=[Var($const150.21.3, unicode.py:1512), Var(parts_len, unicode.py:1492)], kws=(), vararg=None, varkwarg=None, target=None) ['$148load_global.20', '$154call_function.23', '$const150.21.3', 'parts_len']
    $154call_function.23 = call $148load_global.20($const150.21.3, parts_len, func=$148load_global.20, args=[Var($const150.21.3, unicode.py:1512), Var(parts_len, unicode.py:1492)], kws=(), vararg=None, varkwarg=None, target=None) ['$148load_global.20', '$154call_function.23', '$const150.21.3', 'parts_len']
2025-06-13 07:34:43,000 - print_capture - INFO -     $154call_function.23 = call $148load_global.20($const150.21.3, parts_len, func=$148load_global.20, args=[Var($const150.21.3, unicode.py:1512), Var(parts_len, unicode.py:1492)], kws=(), vararg=None, varkwarg=None, target=None) ['$148load_global.20', '$154call_function.23', '$const150.21.3', 'parts_len']
    $156get_iter.24 = getiter(value=$154call_function.23) ['$154call_function.23', '$156get_iter.24']
    $156get_iter.24 = getiter(value=$154call_function.23) ['$154call_function.23', '$156get_iter.24']
2025-06-13 07:34:43,000 - print_capture - INFO -     $156get_iter.24 = getiter(value=$154call_function.23) ['$154call_function.23', '$156get_iter.24']
    $156get_iter.24 = getiter(value=$154call_function.23) ['$154call_function.23', '$156get_iter.24']
    $156get_iter.24 = getiter(value=$154call_function.23) ['$154call_function.23', '$156get_iter.24']
2025-06-13 07:34:43,000 - print_capture - INFO -     $156get_iter.24 = getiter(value=$154call_function.23) ['$154call_function.23', '$156get_iter.24']
    $phi158.0 = $156get_iter.24              ['$156get_iter.24', '$phi158.0']
    $phi158.0 = $156get_iter.24              ['$156get_iter.24', '$phi158.0']
2025-06-13 07:34:43,000 - print_capture - INFO -     $phi158.0 = $156get_iter.24              ['$156get_iter.24', '$phi158.0']
    $phi158.0 = $156get_iter.24              ['$156get_iter.24', '$phi158.0']
    $phi158.0 = $156get_iter.24              ['$156get_iter.24', '$phi158.0']
2025-06-13 07:34:43,000 - print_capture - INFO -     $phi158.0 = $156get_iter.24              ['$156get_iter.24', '$phi158.0']
    jump 158                                 []
    jump 158                                 []
2025-06-13 07:34:43,000 - print_capture - INFO -     jump 158                                 []
    jump 158                                 []
    jump 158                                 []
2025-06-13 07:34:43,000 - print_capture - INFO -     jump 158                                 []
label 158:
label 158:
2025-06-13 07:34:43,000 - print_capture - INFO - label 158:
label 158:
label 158:
2025-06-13 07:34:43,000 - print_capture - INFO - label 158:
    $158for_iter.1 = iternext(value=$phi158.0) ['$158for_iter.1', '$phi158.0']
    $158for_iter.1 = iternext(value=$phi158.0) ['$158for_iter.1', '$phi158.0']
2025-06-13 07:34:43,000 - print_capture - INFO -     $158for_iter.1 = iternext(value=$phi158.0) ['$158for_iter.1', '$phi158.0']
    $158for_iter.1 = iternext(value=$phi158.0) ['$158for_iter.1', '$phi158.0']
    $158for_iter.1 = iternext(value=$phi158.0) ['$158for_iter.1', '$phi158.0']
2025-06-13 07:34:43,000 - print_capture - INFO -     $158for_iter.1 = iternext(value=$phi158.0) ['$158for_iter.1', '$phi158.0']
    $158for_iter.2 = pair_first(value=$158for_iter.1) ['$158for_iter.1', '$158for_iter.2']
    $158for_iter.2 = pair_first(value=$158for_iter.1) ['$158for_iter.1', '$158for_iter.2']
2025-06-13 07:34:43,000 - print_capture - INFO -     $158for_iter.2 = pair_first(value=$158for_iter.1) ['$158for_iter.1', '$158for_iter.2']
    $158for_iter.2 = pair_first(value=$158for_iter.1) ['$158for_iter.1', '$158for_iter.2']
    $158for_iter.2 = pair_first(value=$158for_iter.1) ['$158for_iter.1', '$158for_iter.2']
2025-06-13 07:34:43,000 - print_capture - INFO -     $158for_iter.2 = pair_first(value=$158for_iter.1) ['$158for_iter.1', '$158for_iter.2']
    $158for_iter.3 = pair_second(value=$158for_iter.1) ['$158for_iter.1', '$158for_iter.3']
    $158for_iter.3 = pair_second(value=$158for_iter.1) ['$158for_iter.1', '$158for_iter.3']
2025-06-13 07:34:43,000 - print_capture - INFO -     $158for_iter.3 = pair_second(value=$158for_iter.1) ['$158for_iter.1', '$158for_iter.3']
    $158for_iter.3 = pair_second(value=$158for_iter.1) ['$158for_iter.1', '$158for_iter.3']
    $158for_iter.3 = pair_second(value=$158for_iter.1) ['$158for_iter.1', '$158for_iter.3']
2025-06-13 07:34:43,000 - print_capture - INFO -     $158for_iter.3 = pair_second(value=$158for_iter.1) ['$158for_iter.1', '$158for_iter.3']
    $phi160.1 = $158for_iter.2               ['$158for_iter.2', '$phi160.1']
    $phi160.1 = $158for_iter.2               ['$158for_iter.2', '$phi160.1']
2025-06-13 07:34:43,000 - print_capture - INFO -     $phi160.1 = $158for_iter.2               ['$158for_iter.2', '$phi160.1']
    $phi160.1 = $158for_iter.2               ['$158for_iter.2', '$phi160.1']
    $phi160.1 = $158for_iter.2               ['$158for_iter.2', '$phi160.1']
2025-06-13 07:34:43,000 - print_capture - INFO -     $phi160.1 = $158for_iter.2               ['$158for_iter.2', '$phi160.1']
    branch $158for_iter.3, 160, 228          ['$158for_iter.3']
    branch $158for_iter.3, 160, 228          ['$158for_iter.3']
2025-06-13 07:34:43,000 - print_capture - INFO -     branch $158for_iter.3, 160, 228          ['$158for_iter.3']
    branch $158for_iter.3, 160, 228          ['$158for_iter.3']
    branch $158for_iter.3, 160, 228          ['$158for_iter.3']
2025-06-13 07:34:43,000 - print_capture - INFO -     branch $158for_iter.3, 160, 228          ['$158for_iter.3']
label 160:
label 160:
2025-06-13 07:34:43,000 - print_capture - INFO - label 160:
label 160:
label 160:
2025-06-13 07:34:43,000 - print_capture - INFO - label 160:
    idx = $phi160.1                          ['$phi160.1', 'idx']
    idx = $phi160.1                          ['$phi160.1', 'idx']
2025-06-13 07:34:43,000 - print_capture - INFO -     idx = $phi160.1                          ['$phi160.1', 'idx']
    idx = $phi160.1                          ['$phi160.1', 'idx']
    idx = $phi160.1                          ['$phi160.1', 'idx']
2025-06-13 07:34:43,000 - print_capture - INFO -     idx = $phi160.1                          ['$phi160.1', 'idx']
    $162load_global.2 = global(_strncpy: <function _strncpy at 0x7f28ab7f6320>) ['$162load_global.2']
    $162load_global.2 = global(_strncpy: <function _strncpy at 0x7f28ab7f6320>) ['$162load_global.2']
2025-06-13 07:34:43,000 - print_capture - INFO -     $162load_global.2 = global(_strncpy: <function _strncpy at 0x7f28ab7f6320>) ['$162load_global.2']
    $162load_global.2 = global(_strncpy: <function _strncpy at 0x7f28ab7f6320>) ['$162load_global.2']
    $162load_global.2 = global(_strncpy: <function _strncpy at 0x7f28ab7f6320>) ['$162load_global.2']
2025-06-13 07:34:43,000 - print_capture - INFO -     $162load_global.2 = global(_strncpy: <function _strncpy at 0x7f28ab7f6320>) ['$162load_global.2']
    $const170.6.1 = const(int, 0)            ['$const170.6.1']
    $const170.6.1 = const(int, 0)            ['$const170.6.1']
2025-06-13 07:34:43,000 - print_capture - INFO -     $const170.6.1 = const(int, 0)            ['$const170.6.1']
    $const170.6.1 = const(int, 0)            ['$const170.6.1']
    $const170.6.1 = const(int, 0)            ['$const170.6.1']
2025-06-13 07:34:43,000 - print_capture - INFO -     $const170.6.1 = const(int, 0)            ['$const170.6.1']
    $174call_function.8 = call $162load_global.2(result, dst_offset, sep, $const170.6.1, sep_len, func=$162load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(sep, unicode.py:1490), Var($const170.6.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None) ['$162load_global.2', '$174call_function.8', '$const170.6.1', 'dst_offset', 'result', 'sep', 'sep_len']
    $174call_function.8 = call $162load_global.2(result, dst_offset, sep, $const170.6.1, sep_len, func=$162load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(sep, unicode.py:1490), Var($const170.6.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None) ['$162load_global.2', '$174call_function.8', '$const170.6.1', 'dst_offset', 'result', 'sep', 'sep_len']
2025-06-13 07:34:43,000 - print_capture - INFO -     $174call_function.8 = call $162load_global.2(result, dst_offset, sep, $const170.6.1, sep_len, func=$162load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(sep, unicode.py:1490), Var($const170.6.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None) ['$162load_global.2', '$174call_function.8', '$const170.6.1', 'dst_offset', 'result', 'sep', 'sep_len']
    $174call_function.8 = call $162load_global.2(result, dst_offset, sep, $const170.6.1, sep_len, func=$162load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(sep, unicode.py:1490), Var($const170.6.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None) ['$162load_global.2', '$174call_function.8', '$const170.6.1', 'dst_offset', 'result', 'sep', 'sep_len']
    $174call_function.8 = call $162load_global.2(result, dst_offset, sep, $const170.6.1, sep_len, func=$162load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(sep, unicode.py:1490), Var($const170.6.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None) ['$162load_global.2', '$174call_function.8', '$const170.6.1', 'dst_offset', 'result', 'sep', 'sep_len']
2025-06-13 07:34:43,001 - print_capture - INFO -     $174call_function.8 = call $162load_global.2(result, dst_offset, sep, $const170.6.1, sep_len, func=$162load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(sep, unicode.py:1490), Var($const170.6.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None) ['$162load_global.2', '$174call_function.8', '$const170.6.1', 'dst_offset', 'result', 'sep', 'sep_len']
    $182inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined) ['$182inplace_add.11', 'dst_offset', 'sep_len']
    $182inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined) ['$182inplace_add.11', 'dst_offset', 'sep_len']
2025-06-13 07:34:43,001 - print_capture - INFO -     $182inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined) ['$182inplace_add.11', 'dst_offset', 'sep_len']
    $182inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined) ['$182inplace_add.11', 'dst_offset', 'sep_len']
    $182inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined) ['$182inplace_add.11', 'dst_offset', 'sep_len']
2025-06-13 07:34:43,001 - print_capture - INFO -     $182inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined) ['$182inplace_add.11', 'dst_offset', 'sep_len']
    dst_offset = $182inplace_add.11          ['$182inplace_add.11', 'dst_offset']
    dst_offset = $182inplace_add.11          ['$182inplace_add.11', 'dst_offset']
2025-06-13 07:34:43,001 - print_capture - INFO -     dst_offset = $182inplace_add.11          ['$182inplace_add.11', 'dst_offset']
    dst_offset = $182inplace_add.11          ['$182inplace_add.11', 'dst_offset']
    dst_offset = $182inplace_add.11          ['$182inplace_add.11', 'dst_offset']
2025-06-13 07:34:43,001 - print_capture - INFO -     dst_offset = $182inplace_add.11          ['$182inplace_add.11', 'dst_offset']
    part = getitem(value=parts, index=idx, fn=<built-in function getitem>) ['idx', 'part', 'parts']
    part = getitem(value=parts, index=idx, fn=<built-in function getitem>) ['idx', 'part', 'parts']
2025-06-13 07:34:43,001 - print_capture - INFO -     part = getitem(value=parts, index=idx, fn=<built-in function getitem>) ['idx', 'part', 'parts']
    part = getitem(value=parts, index=idx, fn=<built-in function getitem>) ['idx', 'part', 'parts']
    part = getitem(value=parts, index=idx, fn=<built-in function getitem>) ['idx', 'part', 'parts']
2025-06-13 07:34:43,001 - print_capture - INFO -     part = getitem(value=parts, index=idx, fn=<built-in function getitem>) ['idx', 'part', 'parts']
    $194load_global.15 = global(_strncpy: <function _strncpy at 0x7f28ab7f6320>) ['$194load_global.15']
    $194load_global.15 = global(_strncpy: <function _strncpy at 0x7f28ab7f6320>) ['$194load_global.15']
2025-06-13 07:34:43,001 - print_capture - INFO -     $194load_global.15 = global(_strncpy: <function _strncpy at 0x7f28ab7f6320>) ['$194load_global.15']
    $194load_global.15 = global(_strncpy: <function _strncpy at 0x7f28ab7f6320>) ['$194load_global.15']
    $194load_global.15 = global(_strncpy: <function _strncpy at 0x7f28ab7f6320>) ['$194load_global.15']
2025-06-13 07:34:43,001 - print_capture - INFO -     $194load_global.15 = global(_strncpy: <function _strncpy at 0x7f28ab7f6320>) ['$194load_global.15']
    $const202.19.1 = const(int, 0)           ['$const202.19.1']
    $const202.19.1 = const(int, 0)           ['$const202.19.1']
2025-06-13 07:34:43,001 - print_capture - INFO -     $const202.19.1 = const(int, 0)           ['$const202.19.1']
    $const202.19.1 = const(int, 0)           ['$const202.19.1']
    $const202.19.1 = const(int, 0)           ['$const202.19.1']
2025-06-13 07:34:43,001 - print_capture - INFO -     $const202.19.1 = const(int, 0)           ['$const202.19.1']
    $204load_global.20 = global(len: <built-in function len>) ['$204load_global.20']
    $204load_global.20 = global(len: <built-in function len>) ['$204load_global.20']
2025-06-13 07:34:43,001 - print_capture - INFO -     $204load_global.20 = global(len: <built-in function len>) ['$204load_global.20']
    $204load_global.20 = global(len: <built-in function len>) ['$204load_global.20']
    $204load_global.20 = global(len: <built-in function len>) ['$204load_global.20']
2025-06-13 07:34:43,001 - print_capture - INFO -     $204load_global.20 = global(len: <built-in function len>) ['$204load_global.20']
    $208call_function.22 = call $204load_global.20(part, func=$204load_global.20, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$204load_global.20', '$208call_function.22', 'part']
    $208call_function.22 = call $204load_global.20(part, func=$204load_global.20, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$204load_global.20', '$208call_function.22', 'part']
2025-06-13 07:34:43,001 - print_capture - INFO -     $208call_function.22 = call $204load_global.20(part, func=$204load_global.20, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$204load_global.20', '$208call_function.22', 'part']
    $208call_function.22 = call $204load_global.20(part, func=$204load_global.20, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$204load_global.20', '$208call_function.22', 'part']
    $208call_function.22 = call $204load_global.20(part, func=$204load_global.20, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$204load_global.20', '$208call_function.22', 'part']
2025-06-13 07:34:43,001 - print_capture - INFO -     $208call_function.22 = call $204load_global.20(part, func=$204load_global.20, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$204load_global.20', '$208call_function.22', 'part']
    $210call_function.23 = call $194load_global.15(result, dst_offset, part, $const202.19.1, $208call_function.22, func=$194load_global.15, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part, unicode.py:1509), Var($const202.19.1, unicode.py:1516), Var($208call_function.22, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.15', '$208call_function.22', '$210call_function.23', '$const202.19.1', 'dst_offset', 'part', 'result']
    $210call_function.23 = call $194load_global.15(result, dst_offset, part, $const202.19.1, $208call_function.22, func=$194load_global.15, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part, unicode.py:1509), Var($const202.19.1, unicode.py:1516), Var($208call_function.22, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.15', '$208call_function.22', '$210call_function.23', '$const202.19.1', 'dst_offset', 'part', 'result']
2025-06-13 07:34:43,001 - print_capture - INFO -     $210call_function.23 = call $194load_global.15(result, dst_offset, part, $const202.19.1, $208call_function.22, func=$194load_global.15, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part, unicode.py:1509), Var($const202.19.1, unicode.py:1516), Var($208call_function.22, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.15', '$208call_function.22', '$210call_function.23', '$const202.19.1', 'dst_offset', 'part', 'result']
    $210call_function.23 = call $194load_global.15(result, dst_offset, part, $const202.19.1, $208call_function.22, func=$194load_global.15, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part, unicode.py:1509), Var($const202.19.1, unicode.py:1516), Var($208call_function.22, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.15', '$208call_function.22', '$210call_function.23', '$const202.19.1', 'dst_offset', 'part', 'result']
    $210call_function.23 = call $194load_global.15(result, dst_offset, part, $const202.19.1, $208call_function.22, func=$194load_global.15, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part, unicode.py:1509), Var($const202.19.1, unicode.py:1516), Var($208call_function.22, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.15', '$208call_function.22', '$210call_function.23', '$const202.19.1', 'dst_offset', 'part', 'result']
2025-06-13 07:34:43,001 - print_capture - INFO -     $210call_function.23 = call $194load_global.15(result, dst_offset, part, $const202.19.1, $208call_function.22, func=$194load_global.15, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part, unicode.py:1509), Var($const202.19.1, unicode.py:1516), Var($208call_function.22, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.15', '$208call_function.22', '$210call_function.23', '$const202.19.1', 'dst_offset', 'part', 'result']
    $216load_global.25 = global(len: <built-in function len>) ['$216load_global.25']
    $216load_global.25 = global(len: <built-in function len>) ['$216load_global.25']
2025-06-13 07:34:43,001 - print_capture - INFO -     $216load_global.25 = global(len: <built-in function len>) ['$216load_global.25']
    $216load_global.25 = global(len: <built-in function len>) ['$216load_global.25']
    $216load_global.25 = global(len: <built-in function len>) ['$216load_global.25']
2025-06-13 07:34:43,001 - print_capture - INFO -     $216load_global.25 = global(len: <built-in function len>) ['$216load_global.25']
    $220call_function.27 = call $216load_global.25(part, func=$216load_global.25, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$216load_global.25', '$220call_function.27', 'part']
    $220call_function.27 = call $216load_global.25(part, func=$216load_global.25, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$216load_global.25', '$220call_function.27', 'part']
2025-06-13 07:34:43,001 - print_capture - INFO -     $220call_function.27 = call $216load_global.25(part, func=$216load_global.25, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$216load_global.25', '$220call_function.27', 'part']
    $220call_function.27 = call $216load_global.25(part, func=$216load_global.25, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$216load_global.25', '$220call_function.27', 'part']
    $220call_function.27 = call $216load_global.25(part, func=$216load_global.25, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$216load_global.25', '$220call_function.27', 'part']
2025-06-13 07:34:43,001 - print_capture - INFO -     $220call_function.27 = call $216load_global.25(part, func=$216load_global.25, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$216load_global.25', '$220call_function.27', 'part']
    $222inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=$220call_function.27, static_lhs=Undefined, static_rhs=Undefined) ['$220call_function.27', '$222inplace_add.28', 'dst_offset']
    $222inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=$220call_function.27, static_lhs=Undefined, static_rhs=Undefined) ['$220call_function.27', '$222inplace_add.28', 'dst_offset']
2025-06-13 07:34:43,001 - print_capture - INFO -     $222inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=$220call_function.27, static_lhs=Undefined, static_rhs=Undefined) ['$220call_function.27', '$222inplace_add.28', 'dst_offset']
    $222inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=$220call_function.27, static_lhs=Undefined, static_rhs=Undefined) ['$220call_function.27', '$222inplace_add.28', 'dst_offset']
    $222inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=$220call_function.27, static_lhs=Undefined, static_rhs=Undefined) ['$220call_function.27', '$222inplace_add.28', 'dst_offset']
2025-06-13 07:34:43,001 - print_capture - INFO -     $222inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=$220call_function.27, static_lhs=Undefined, static_rhs=Undefined) ['$220call_function.27', '$222inplace_add.28', 'dst_offset']
    dst_offset = $222inplace_add.28          ['$222inplace_add.28', 'dst_offset']
    dst_offset = $222inplace_add.28          ['$222inplace_add.28', 'dst_offset']
2025-06-13 07:34:43,001 - print_capture - INFO -     dst_offset = $222inplace_add.28          ['$222inplace_add.28', 'dst_offset']
    dst_offset = $222inplace_add.28          ['$222inplace_add.28', 'dst_offset']
    dst_offset = $222inplace_add.28          ['$222inplace_add.28', 'dst_offset']
2025-06-13 07:34:43,001 - print_capture - INFO -     dst_offset = $222inplace_add.28          ['$222inplace_add.28', 'dst_offset']
    jump 158                                 []
    jump 158                                 []
2025-06-13 07:34:43,001 - print_capture - INFO -     jump 158                                 []
    jump 158                                 []
    jump 158                                 []
2025-06-13 07:34:43,001 - print_capture - INFO -     jump 158                                 []
label 228:
label 228:
2025-06-13 07:34:43,001 - print_capture - INFO - label 228:
label 228:
label 228:
2025-06-13 07:34:43,001 - print_capture - INFO - label 228:
    $230return_value.1 = cast(value=result)  ['$230return_value.1', 'result']
    $230return_value.1 = cast(value=result)  ['$230return_value.1', 'result']
2025-06-13 07:34:43,001 - print_capture - INFO -     $230return_value.1 = cast(value=result)  ['$230return_value.1', 'result']
    $230return_value.1 = cast(value=result)  ['$230return_value.1', 'result']
    $230return_value.1 = cast(value=result)  ['$230return_value.1', 'result']
2025-06-13 07:34:43,001 - print_capture - INFO -     $230return_value.1 = cast(value=result)  ['$230return_value.1', 'result']
    return $230return_value.1                ['$230return_value.1']
    return $230return_value.1                ['$230return_value.1']
2025-06-13 07:34:43,001 - print_capture - INFO -     return $230return_value.1                ['$230return_value.1']
    return $230return_value.1                ['$230return_value.1']
    return $230return_value.1                ['$230return_value.1']
2025-06-13 07:34:43,001 - print_capture - INFO -     return $230return_value.1                ['$230return_value.1']
label 0:
label 0:
2025-06-13 07:34:43,011 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,012 - print_capture - INFO - label 0:
    kind1 = arg(0, name=kind1)               ['kind1']
    kind1 = arg(0, name=kind1)               ['kind1']
2025-06-13 07:34:43,012 - print_capture - INFO -     kind1 = arg(0, name=kind1)               ['kind1']
    kind1 = arg(0, name=kind1)               ['kind1']
    kind1 = arg(0, name=kind1)               ['kind1']
2025-06-13 07:34:43,012 - print_capture - INFO -     kind1 = arg(0, name=kind1)               ['kind1']
    kind2 = arg(1, name=kind2)               ['kind2']
    kind2 = arg(1, name=kind2)               ['kind2']
2025-06-13 07:34:43,012 - print_capture - INFO -     kind2 = arg(1, name=kind2)               ['kind2']
    kind2 = arg(1, name=kind2)               ['kind2']
    kind2 = arg(1, name=kind2)               ['kind2']
2025-06-13 07:34:43,012 - print_capture - INFO -     kind2 = arg(1, name=kind2)               ['kind2']
    $4load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$4load_global.1']
    $4load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$4load_global.1']
2025-06-13 07:34:43,012 - print_capture - INFO -     $4load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$4load_global.1']
    $4load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$4load_global.1']
    $4load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$4load_global.1']
2025-06-13 07:34:43,012 - print_capture - INFO -     $4load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$4load_global.1']
    $6compare_op.2 = kind1 == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind1']
    $6compare_op.2 = kind1 == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind1']
2025-06-13 07:34:43,012 - print_capture - INFO -     $6compare_op.2 = kind1 == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind1']
    $6compare_op.2 = kind1 == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind1']
    $6compare_op.2 = kind1 == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind1']
2025-06-13 07:34:43,012 - print_capture - INFO -     $6compare_op.2 = kind1 == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind1']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
2025-06-13 07:34:43,012 - print_capture - INFO -     bool8 = global(bool: <class 'bool'>)     ['bool8']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
2025-06-13 07:34:43,012 - print_capture - INFO -     bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:373),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:373),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
2025-06-13 07:34:43,012 - print_capture - INFO -     $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:373),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:373),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:373),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
2025-06-13 07:34:43,012 - print_capture - INFO -     $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:373),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    branch $8pred, 18, 10                    ['$8pred']
    branch $8pred, 18, 10                    ['$8pred']
2025-06-13 07:34:43,012 - print_capture - INFO -     branch $8pred, 18, 10                    ['$8pred']
    branch $8pred, 18, 10                    ['$8pred']
    branch $8pred, 18, 10                    ['$8pred']
2025-06-13 07:34:43,012 - print_capture - INFO -     branch $8pred, 18, 10                    ['$8pred']
label 10:
label 10:
2025-06-13 07:34:43,012 - print_capture - INFO - label 10:
label 10:
label 10:
2025-06-13 07:34:43,012 - print_capture - INFO - label 10:
    $12load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$12load_global.1']
    $12load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$12load_global.1']
2025-06-13 07:34:43,012 - print_capture - INFO -     $12load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$12load_global.1']
    $12load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$12load_global.1']
    $12load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$12load_global.1']
2025-06-13 07:34:43,012 - print_capture - INFO -     $12load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$12load_global.1']
    $14compare_op.2 = kind2 == $12load_global.1 ['$12load_global.1', '$14compare_op.2', 'kind2']
    $14compare_op.2 = kind2 == $12load_global.1 ['$12load_global.1', '$14compare_op.2', 'kind2']
2025-06-13 07:34:43,012 - print_capture - INFO -     $14compare_op.2 = kind2 == $12load_global.1 ['$12load_global.1', '$14compare_op.2', 'kind2']
    $14compare_op.2 = kind2 == $12load_global.1 ['$12load_global.1', '$14compare_op.2', 'kind2']
    $14compare_op.2 = kind2 == $12load_global.1 ['$12load_global.1', '$14compare_op.2', 'kind2']
2025-06-13 07:34:43,012 - print_capture - INFO -     $14compare_op.2 = kind2 == $12load_global.1 ['$12load_global.1', '$14compare_op.2', 'kind2']
    bool16 = global(bool: <class 'bool'>)    ['bool16']
    bool16 = global(bool: <class 'bool'>)    ['bool16']
2025-06-13 07:34:43,012 - print_capture - INFO -     bool16 = global(bool: <class 'bool'>)    ['bool16']
    bool16 = global(bool: <class 'bool'>)    ['bool16']
    bool16 = global(bool: <class 'bool'>)    ['bool16']
2025-06-13 07:34:43,012 - print_capture - INFO -     bool16 = global(bool: <class 'bool'>)    ['bool16']
    $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, unicode.py:373),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.2', '$16pred', 'bool16']
    $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, unicode.py:373),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.2', '$16pred', 'bool16']
2025-06-13 07:34:43,012 - print_capture - INFO -     $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, unicode.py:373),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.2', '$16pred', 'bool16']
    $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, unicode.py:373),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.2', '$16pred', 'bool16']
    $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, unicode.py:373),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.2', '$16pred', 'bool16']
2025-06-13 07:34:43,012 - print_capture - INFO -     $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, unicode.py:373),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.2', '$16pred', 'bool16']
    branch $16pred, 18, 26                   ['$16pred']
    branch $16pred, 18, 26                   ['$16pred']
2025-06-13 07:34:43,012 - print_capture - INFO -     branch $16pred, 18, 26                   ['$16pred']
    branch $16pred, 18, 26                   ['$16pred']
    branch $16pred, 18, 26                   ['$16pred']
2025-06-13 07:34:43,012 - print_capture - INFO -     branch $16pred, 18, 26                   ['$16pred']
label 18:
label 18:
2025-06-13 07:34:43,012 - print_capture - INFO - label 18:
label 18:
label 18:
2025-06-13 07:34:43,012 - print_capture - INFO - label 18:
    $18load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$18load_global.0']
    $18load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$18load_global.0']
2025-06-13 07:34:43,012 - print_capture - INFO -     $18load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$18load_global.0']
    $18load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$18load_global.0']
    $18load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$18load_global.0']
2025-06-13 07:34:43,012 - print_capture - INFO -     $18load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$18load_global.0']
    $const20.1.1 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const20.1.1']
    $const20.1.1 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const20.1.1']
2025-06-13 07:34:43,012 - print_capture - INFO -     $const20.1.1 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const20.1.1']
    $const20.1.1 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const20.1.1']
    $const20.1.1 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const20.1.1']
2025-06-13 07:34:43,012 - print_capture - INFO -     $const20.1.1 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const20.1.1']
    $22call_function.2 = call $18load_global.0($const20.1.1, func=$18load_global.0, args=[Var($const20.1.1, unicode.py:374)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_global.0', '$22call_function.2', '$const20.1.1']
    $22call_function.2 = call $18load_global.0($const20.1.1, func=$18load_global.0, args=[Var($const20.1.1, unicode.py:374)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_global.0', '$22call_function.2', '$const20.1.1']
2025-06-13 07:34:43,012 - print_capture - INFO -     $22call_function.2 = call $18load_global.0($const20.1.1, func=$18load_global.0, args=[Var($const20.1.1, unicode.py:374)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_global.0', '$22call_function.2', '$const20.1.1']
    $22call_function.2 = call $18load_global.0($const20.1.1, func=$18load_global.0, args=[Var($const20.1.1, unicode.py:374)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_global.0', '$22call_function.2', '$const20.1.1']
    $22call_function.2 = call $18load_global.0($const20.1.1, func=$18load_global.0, args=[Var($const20.1.1, unicode.py:374)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_global.0', '$22call_function.2', '$const20.1.1']
2025-06-13 07:34:43,013 - print_capture - INFO -     $22call_function.2 = call $18load_global.0($const20.1.1, func=$18load_global.0, args=[Var($const20.1.1, unicode.py:374)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_global.0', '$22call_function.2', '$const20.1.1']
    raise $22call_function.2                 ['$22call_function.2']
    raise $22call_function.2                 ['$22call_function.2']
2025-06-13 07:34:43,013 - print_capture - INFO -     raise $22call_function.2                 ['$22call_function.2']
    raise $22call_function.2                 ['$22call_function.2']
    raise $22call_function.2                 ['$22call_function.2']
2025-06-13 07:34:43,013 - print_capture - INFO -     raise $22call_function.2                 ['$22call_function.2']
label 26:
label 26:
2025-06-13 07:34:43,013 - print_capture - INFO - label 26:
label 26:
label 26:
2025-06-13 07:34:43,013 - print_capture - INFO - label 26:
    $28load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$28load_global.1']
    $28load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$28load_global.1']
2025-06-13 07:34:43,013 - print_capture - INFO -     $28load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$28load_global.1']
    $28load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$28load_global.1']
    $28load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$28load_global.1']
2025-06-13 07:34:43,013 - print_capture - INFO -     $28load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$28load_global.1']
    $30compare_op.2 = kind1 == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind1']
    $30compare_op.2 = kind1 == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind1']
2025-06-13 07:34:43,013 - print_capture - INFO -     $30compare_op.2 = kind1 == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind1']
    $30compare_op.2 = kind1 == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind1']
    $30compare_op.2 = kind1 == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind1']
2025-06-13 07:34:43,013 - print_capture - INFO -     $30compare_op.2 = kind1 == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind1']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
2025-06-13 07:34:43,013 - print_capture - INFO -     bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
2025-06-13 07:34:43,013 - print_capture - INFO -     bool32 = global(bool: <class 'bool'>)    ['bool32']
    $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:376),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:376),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
2025-06-13 07:34:43,013 - print_capture - INFO -     $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:376),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:376),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:376),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
2025-06-13 07:34:43,013 - print_capture - INFO -     $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:376),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
    branch $32pred, 34, 38                   ['$32pred']
    branch $32pred, 34, 38                   ['$32pred']
2025-06-13 07:34:43,013 - print_capture - INFO -     branch $32pred, 34, 38                   ['$32pred']
    branch $32pred, 34, 38                   ['$32pred']
    branch $32pred, 34, 38                   ['$32pred']
2025-06-13 07:34:43,013 - print_capture - INFO -     branch $32pred, 34, 38                   ['$32pred']
label 34:
label 34:
2025-06-13 07:34:43,013 - print_capture - INFO - label 34:
label 34:
label 34:
2025-06-13 07:34:43,013 - print_capture - INFO - label 34:
    $36return_value.1 = cast(value=kind2)    ['$36return_value.1', 'kind2']
    $36return_value.1 = cast(value=kind2)    ['$36return_value.1', 'kind2']
2025-06-13 07:34:43,013 - print_capture - INFO -     $36return_value.1 = cast(value=kind2)    ['$36return_value.1', 'kind2']
    $36return_value.1 = cast(value=kind2)    ['$36return_value.1', 'kind2']
    $36return_value.1 = cast(value=kind2)    ['$36return_value.1', 'kind2']
2025-06-13 07:34:43,013 - print_capture - INFO -     $36return_value.1 = cast(value=kind2)    ['$36return_value.1', 'kind2']
    return $36return_value.1                 ['$36return_value.1']
    return $36return_value.1                 ['$36return_value.1']
2025-06-13 07:34:43,013 - print_capture - INFO -     return $36return_value.1                 ['$36return_value.1']
    return $36return_value.1                 ['$36return_value.1']
    return $36return_value.1                 ['$36return_value.1']
2025-06-13 07:34:43,013 - print_capture - INFO -     return $36return_value.1                 ['$36return_value.1']
label 38:
label 38:
2025-06-13 07:34:43,013 - print_capture - INFO - label 38:
label 38:
label 38:
2025-06-13 07:34:43,013 - print_capture - INFO - label 38:
    $40load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$40load_global.1']
    $40load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$40load_global.1']
2025-06-13 07:34:43,013 - print_capture - INFO -     $40load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$40load_global.1']
    $40load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$40load_global.1']
    $40load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$40load_global.1']
2025-06-13 07:34:43,013 - print_capture - INFO -     $40load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$40load_global.1']
    $42compare_op.2 = kind1 == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind1']
    $42compare_op.2 = kind1 == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind1']
2025-06-13 07:34:43,013 - print_capture - INFO -     $42compare_op.2 = kind1 == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind1']
    $42compare_op.2 = kind1 == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind1']
    $42compare_op.2 = kind1 == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind1']
2025-06-13 07:34:43,013 - print_capture - INFO -     $42compare_op.2 = kind1 == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind1']
    bool44 = global(bool: <class 'bool'>)    ['bool44']
    bool44 = global(bool: <class 'bool'>)    ['bool44']
2025-06-13 07:34:43,013 - print_capture - INFO -     bool44 = global(bool: <class 'bool'>)    ['bool44']
    bool44 = global(bool: <class 'bool'>)    ['bool44']
    bool44 = global(bool: <class 'bool'>)    ['bool44']
2025-06-13 07:34:43,013 - print_capture - INFO -     bool44 = global(bool: <class 'bool'>)    ['bool44']
    $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:378),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
    $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:378),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
2025-06-13 07:34:43,013 - print_capture - INFO -     $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:378),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
    $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:378),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
    $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:378),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
2025-06-13 07:34:43,013 - print_capture - INFO -     $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:378),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
    branch $44pred, 46, 62                   ['$44pred']
    branch $44pred, 46, 62                   ['$44pred']
2025-06-13 07:34:43,013 - print_capture - INFO -     branch $44pred, 46, 62                   ['$44pred']
    branch $44pred, 46, 62                   ['$44pred']
    branch $44pred, 46, 62                   ['$44pred']
2025-06-13 07:34:43,013 - print_capture - INFO -     branch $44pred, 46, 62                   ['$44pred']
label 46:
label 46:
2025-06-13 07:34:43,013 - print_capture - INFO - label 46:
label 46:
label 46:
2025-06-13 07:34:43,013 - print_capture - INFO - label 46:
    $48load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$48load_global.1']
    $48load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$48load_global.1']
2025-06-13 07:34:43,013 - print_capture - INFO -     $48load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$48load_global.1']
    $48load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$48load_global.1']
    $48load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$48load_global.1']
2025-06-13 07:34:43,013 - print_capture - INFO -     $48load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$48load_global.1']
    $50compare_op.2 = kind2 == $48load_global.1 ['$48load_global.1', '$50compare_op.2', 'kind2']
    $50compare_op.2 = kind2 == $48load_global.1 ['$48load_global.1', '$50compare_op.2', 'kind2']
2025-06-13 07:34:43,013 - print_capture - INFO -     $50compare_op.2 = kind2 == $48load_global.1 ['$48load_global.1', '$50compare_op.2', 'kind2']
    $50compare_op.2 = kind2 == $48load_global.1 ['$48load_global.1', '$50compare_op.2', 'kind2']
    $50compare_op.2 = kind2 == $48load_global.1 ['$48load_global.1', '$50compare_op.2', 'kind2']
2025-06-13 07:34:43,013 - print_capture - INFO -     $50compare_op.2 = kind2 == $48load_global.1 ['$48load_global.1', '$50compare_op.2', 'kind2']
    bool52 = global(bool: <class 'bool'>)    ['bool52']
    bool52 = global(bool: <class 'bool'>)    ['bool52']
2025-06-13 07:34:43,013 - print_capture - INFO -     bool52 = global(bool: <class 'bool'>)    ['bool52']
    bool52 = global(bool: <class 'bool'>)    ['bool52']
    bool52 = global(bool: <class 'bool'>)    ['bool52']
2025-06-13 07:34:43,013 - print_capture - INFO -     bool52 = global(bool: <class 'bool'>)    ['bool52']
    $52pred = call bool52($50compare_op.2, func=bool52, args=(Var($50compare_op.2, unicode.py:379),), kws=(), vararg=None, varkwarg=None, target=None) ['$50compare_op.2', '$52pred', 'bool52']
    $52pred = call bool52($50compare_op.2, func=bool52, args=(Var($50compare_op.2, unicode.py:379),), kws=(), vararg=None, varkwarg=None, target=None) ['$50compare_op.2', '$52pred', 'bool52']
2025-06-13 07:34:43,013 - print_capture - INFO -     $52pred = call bool52($50compare_op.2, func=bool52, args=(Var($50compare_op.2, unicode.py:379),), kws=(), vararg=None, varkwarg=None, target=None) ['$50compare_op.2', '$52pred', 'bool52']
    $52pred = call bool52($50compare_op.2, func=bool52, args=(Var($50compare_op.2, unicode.py:379),), kws=(), vararg=None, varkwarg=None, target=None) ['$50compare_op.2', '$52pred', 'bool52']
    $52pred = call bool52($50compare_op.2, func=bool52, args=(Var($50compare_op.2, unicode.py:379),), kws=(), vararg=None, varkwarg=None, target=None) ['$50compare_op.2', '$52pred', 'bool52']
2025-06-13 07:34:43,013 - print_capture - INFO -     $52pred = call bool52($50compare_op.2, func=bool52, args=(Var($50compare_op.2, unicode.py:379),), kws=(), vararg=None, varkwarg=None, target=None) ['$50compare_op.2', '$52pred', 'bool52']
    branch $52pred, 54, 58                   ['$52pred']
    branch $52pred, 54, 58                   ['$52pred']
2025-06-13 07:34:43,013 - print_capture - INFO -     branch $52pred, 54, 58                   ['$52pred']
    branch $52pred, 54, 58                   ['$52pred']
    branch $52pred, 54, 58                   ['$52pred']
2025-06-13 07:34:43,014 - print_capture - INFO -     branch $52pred, 54, 58                   ['$52pred']
label 54:
label 54:
2025-06-13 07:34:43,014 - print_capture - INFO - label 54:
label 54:
label 54:
2025-06-13 07:34:43,014 - print_capture - INFO - label 54:
    $56return_value.1 = cast(value=kind2)    ['$56return_value.1', 'kind2']
    $56return_value.1 = cast(value=kind2)    ['$56return_value.1', 'kind2']
2025-06-13 07:34:43,014 - print_capture - INFO -     $56return_value.1 = cast(value=kind2)    ['$56return_value.1', 'kind2']
    $56return_value.1 = cast(value=kind2)    ['$56return_value.1', 'kind2']
    $56return_value.1 = cast(value=kind2)    ['$56return_value.1', 'kind2']
2025-06-13 07:34:43,014 - print_capture - INFO -     $56return_value.1 = cast(value=kind2)    ['$56return_value.1', 'kind2']
    return $56return_value.1                 ['$56return_value.1']
    return $56return_value.1                 ['$56return_value.1']
2025-06-13 07:34:43,014 - print_capture - INFO -     return $56return_value.1                 ['$56return_value.1']
    return $56return_value.1                 ['$56return_value.1']
    return $56return_value.1                 ['$56return_value.1']
2025-06-13 07:34:43,014 - print_capture - INFO -     return $56return_value.1                 ['$56return_value.1']
label 58:
label 58:
2025-06-13 07:34:43,014 - print_capture - INFO - label 58:
label 58:
label 58:
2025-06-13 07:34:43,014 - print_capture - INFO - label 58:
    $60return_value.1 = cast(value=kind1)    ['$60return_value.1', 'kind1']
    $60return_value.1 = cast(value=kind1)    ['$60return_value.1', 'kind1']
2025-06-13 07:34:43,014 - print_capture - INFO -     $60return_value.1 = cast(value=kind1)    ['$60return_value.1', 'kind1']
    $60return_value.1 = cast(value=kind1)    ['$60return_value.1', 'kind1']
    $60return_value.1 = cast(value=kind1)    ['$60return_value.1', 'kind1']
2025-06-13 07:34:43,014 - print_capture - INFO -     $60return_value.1 = cast(value=kind1)    ['$60return_value.1', 'kind1']
    return $60return_value.1                 ['$60return_value.1']
    return $60return_value.1                 ['$60return_value.1']
2025-06-13 07:34:43,014 - print_capture - INFO -     return $60return_value.1                 ['$60return_value.1']
    return $60return_value.1                 ['$60return_value.1']
    return $60return_value.1                 ['$60return_value.1']
2025-06-13 07:34:43,014 - print_capture - INFO -     return $60return_value.1                 ['$60return_value.1']
label 62:
label 62:
2025-06-13 07:34:43,014 - print_capture - INFO - label 62:
label 62:
label 62:
2025-06-13 07:34:43,014 - print_capture - INFO - label 62:
    $64load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$64load_global.1']
    $64load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$64load_global.1']
2025-06-13 07:34:43,014 - print_capture - INFO -     $64load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$64load_global.1']
    $64load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$64load_global.1']
    $64load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$64load_global.1']
2025-06-13 07:34:43,014 - print_capture - INFO -     $64load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$64load_global.1']
    $66compare_op.2 = kind1 == $64load_global.1 ['$64load_global.1', '$66compare_op.2', 'kind1']
    $66compare_op.2 = kind1 == $64load_global.1 ['$64load_global.1', '$66compare_op.2', 'kind1']
2025-06-13 07:34:43,014 - print_capture - INFO -     $66compare_op.2 = kind1 == $64load_global.1 ['$64load_global.1', '$66compare_op.2', 'kind1']
    $66compare_op.2 = kind1 == $64load_global.1 ['$64load_global.1', '$66compare_op.2', 'kind1']
    $66compare_op.2 = kind1 == $64load_global.1 ['$64load_global.1', '$66compare_op.2', 'kind1']
2025-06-13 07:34:43,014 - print_capture - INFO -     $66compare_op.2 = kind1 == $64load_global.1 ['$64load_global.1', '$66compare_op.2', 'kind1']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
2025-06-13 07:34:43,014 - print_capture - INFO -     bool68 = global(bool: <class 'bool'>)    ['bool68']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
2025-06-13 07:34:43,014 - print_capture - INFO -     bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.2, func=bool68, args=(Var($66compare_op.2, unicode.py:383),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.2', '$68pred', 'bool68']
    $68pred = call bool68($66compare_op.2, func=bool68, args=(Var($66compare_op.2, unicode.py:383),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.2', '$68pred', 'bool68']
2025-06-13 07:34:43,014 - print_capture - INFO -     $68pred = call bool68($66compare_op.2, func=bool68, args=(Var($66compare_op.2, unicode.py:383),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.2', '$68pred', 'bool68']
    $68pred = call bool68($66compare_op.2, func=bool68, args=(Var($66compare_op.2, unicode.py:383),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.2', '$68pred', 'bool68']
    $68pred = call bool68($66compare_op.2, func=bool68, args=(Var($66compare_op.2, unicode.py:383),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.2', '$68pred', 'bool68']
2025-06-13 07:34:43,014 - print_capture - INFO -     $68pred = call bool68($66compare_op.2, func=bool68, args=(Var($66compare_op.2, unicode.py:383),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.2', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
    branch $68pred, 70, 74                   ['$68pred']
2025-06-13 07:34:43,014 - print_capture - INFO -     branch $68pred, 70, 74                   ['$68pred']
    branch $68pred, 70, 74                   ['$68pred']
    branch $68pred, 70, 74                   ['$68pred']
2025-06-13 07:34:43,014 - print_capture - INFO -     branch $68pred, 70, 74                   ['$68pred']
label 70:
label 70:
2025-06-13 07:34:43,014 - print_capture - INFO - label 70:
label 70:
label 70:
2025-06-13 07:34:43,014 - print_capture - INFO - label 70:
    $72return_value.1 = cast(value=kind1)    ['$72return_value.1', 'kind1']
    $72return_value.1 = cast(value=kind1)    ['$72return_value.1', 'kind1']
2025-06-13 07:34:43,014 - print_capture - INFO -     $72return_value.1 = cast(value=kind1)    ['$72return_value.1', 'kind1']
    $72return_value.1 = cast(value=kind1)    ['$72return_value.1', 'kind1']
    $72return_value.1 = cast(value=kind1)    ['$72return_value.1', 'kind1']
2025-06-13 07:34:43,014 - print_capture - INFO -     $72return_value.1 = cast(value=kind1)    ['$72return_value.1', 'kind1']
    return $72return_value.1                 ['$72return_value.1']
    return $72return_value.1                 ['$72return_value.1']
2025-06-13 07:34:43,014 - print_capture - INFO -     return $72return_value.1                 ['$72return_value.1']
    return $72return_value.1                 ['$72return_value.1']
    return $72return_value.1                 ['$72return_value.1']
2025-06-13 07:34:43,014 - print_capture - INFO -     return $72return_value.1                 ['$72return_value.1']
label 74:
label 74:
2025-06-13 07:34:43,014 - print_capture - INFO - label 74:
label 74:
label 74:
2025-06-13 07:34:43,014 - print_capture - INFO - label 74:
    $74load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$74load_global.0']
    $74load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$74load_global.0']
2025-06-13 07:34:43,014 - print_capture - INFO -     $74load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$74load_global.0']
    $74load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$74load_global.0']
    $74load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$74load_global.0']
2025-06-13 07:34:43,014 - print_capture - INFO -     $74load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$74load_global.0']
    $const76.1.2 = const(str, Unexpected unicode representation in _pick_kind) ['$const76.1.2']
    $const76.1.2 = const(str, Unexpected unicode representation in _pick_kind) ['$const76.1.2']
2025-06-13 07:34:43,014 - print_capture - INFO -     $const76.1.2 = const(str, Unexpected unicode representation in _pick_kind) ['$const76.1.2']
    $const76.1.2 = const(str, Unexpected unicode representation in _pick_kind) ['$const76.1.2']
    $const76.1.2 = const(str, Unexpected unicode representation in _pick_kind) ['$const76.1.2']
2025-06-13 07:34:43,014 - print_capture - INFO -     $const76.1.2 = const(str, Unexpected unicode representation in _pick_kind) ['$const76.1.2']
    $78call_function.2 = call $74load_global.0($const76.1.2, func=$74load_global.0, args=[Var($const76.1.2, unicode.py:387)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.0', '$78call_function.2', '$const76.1.2']
    $78call_function.2 = call $74load_global.0($const76.1.2, func=$74load_global.0, args=[Var($const76.1.2, unicode.py:387)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.0', '$78call_function.2', '$const76.1.2']
2025-06-13 07:34:43,014 - print_capture - INFO -     $78call_function.2 = call $74load_global.0($const76.1.2, func=$74load_global.0, args=[Var($const76.1.2, unicode.py:387)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.0', '$78call_function.2', '$const76.1.2']
    $78call_function.2 = call $74load_global.0($const76.1.2, func=$74load_global.0, args=[Var($const76.1.2, unicode.py:387)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.0', '$78call_function.2', '$const76.1.2']
    $78call_function.2 = call $74load_global.0($const76.1.2, func=$74load_global.0, args=[Var($const76.1.2, unicode.py:387)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.0', '$78call_function.2', '$const76.1.2']
2025-06-13 07:34:43,014 - print_capture - INFO -     $78call_function.2 = call $74load_global.0($const76.1.2, func=$74load_global.0, args=[Var($const76.1.2, unicode.py:387)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.0', '$78call_function.2', '$const76.1.2']
    raise $78call_function.2                 ['$78call_function.2']
    raise $78call_function.2                 ['$78call_function.2']
2025-06-13 07:34:43,014 - print_capture - INFO -     raise $78call_function.2                 ['$78call_function.2']
    raise $78call_function.2                 ['$78call_function.2']
    raise $78call_function.2                 ['$78call_function.2']
2025-06-13 07:34:43,014 - print_capture - INFO -     raise $78call_function.2                 ['$78call_function.2']
label 0:
label 0:
2025-06-13 07:34:43,042 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,042 - print_capture - INFO - label 0:
    is_ascii1 = arg(0, name=is_ascii1)       ['is_ascii1']
    is_ascii1 = arg(0, name=is_ascii1)       ['is_ascii1']
2025-06-13 07:34:43,042 - print_capture - INFO -     is_ascii1 = arg(0, name=is_ascii1)       ['is_ascii1']
    is_ascii1 = arg(0, name=is_ascii1)       ['is_ascii1']
    is_ascii1 = arg(0, name=is_ascii1)       ['is_ascii1']
2025-06-13 07:34:43,042 - print_capture - INFO -     is_ascii1 = arg(0, name=is_ascii1)       ['is_ascii1']
    is_ascii2 = arg(1, name=is_ascii2)       ['is_ascii2']
    is_ascii2 = arg(1, name=is_ascii2)       ['is_ascii2']
2025-06-13 07:34:43,042 - print_capture - INFO -     is_ascii2 = arg(1, name=is_ascii2)       ['is_ascii2']
    is_ascii2 = arg(1, name=is_ascii2)       ['is_ascii2']
    is_ascii2 = arg(1, name=is_ascii2)       ['is_ascii2']
2025-06-13 07:34:43,042 - print_capture - INFO -     is_ascii2 = arg(1, name=is_ascii2)       ['is_ascii2']
    $const4.1.1 = const(int, 1)              ['$const4.1.1']
    $const4.1.1 = const(int, 1)              ['$const4.1.1']
2025-06-13 07:34:43,042 - print_capture - INFO -     $const4.1.1 = const(int, 1)              ['$const4.1.1']
    $const4.1.1 = const(int, 1)              ['$const4.1.1']
    $const4.1.1 = const(int, 1)              ['$const4.1.1']
2025-06-13 07:34:43,042 - print_capture - INFO -     $const4.1.1 = const(int, 1)              ['$const4.1.1']
    $6compare_op.2 = is_ascii1 == $const4.1.1 ['$6compare_op.2', '$const4.1.1', 'is_ascii1']
    $6compare_op.2 = is_ascii1 == $const4.1.1 ['$6compare_op.2', '$const4.1.1', 'is_ascii1']
2025-06-13 07:34:43,042 - print_capture - INFO -     $6compare_op.2 = is_ascii1 == $const4.1.1 ['$6compare_op.2', '$const4.1.1', 'is_ascii1']
    $6compare_op.2 = is_ascii1 == $const4.1.1 ['$6compare_op.2', '$const4.1.1', 'is_ascii1']
    $6compare_op.2 = is_ascii1 == $const4.1.1 ['$6compare_op.2', '$const4.1.1', 'is_ascii1']
2025-06-13 07:34:43,042 - print_capture - INFO -     $6compare_op.2 = is_ascii1 == $const4.1.1 ['$6compare_op.2', '$const4.1.1', 'is_ascii1']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
2025-06-13 07:34:43,042 - print_capture - INFO -     bool8 = global(bool: <class 'bool'>)     ['bool8']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
2025-06-13 07:34:43,042 - print_capture - INFO -     bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
2025-06-13 07:34:43,042 - print_capture - INFO -     $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
2025-06-13 07:34:43,042 - print_capture - INFO -     $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    branch $8pred, 10, 28                    ['$8pred']
    branch $8pred, 10, 28                    ['$8pred']
2025-06-13 07:34:43,042 - print_capture - INFO -     branch $8pred, 10, 28                    ['$8pred']
    branch $8pred, 10, 28                    ['$8pred']
    branch $8pred, 10, 28                    ['$8pred']
2025-06-13 07:34:43,042 - print_capture - INFO -     branch $8pred, 10, 28                    ['$8pred']
label 10:
label 10:
2025-06-13 07:34:43,042 - print_capture - INFO - label 10:
label 10:
label 10:
2025-06-13 07:34:43,042 - print_capture - INFO - label 10:
    $const12.1.1 = const(int, 1)             ['$const12.1.1']
    $const12.1.1 = const(int, 1)             ['$const12.1.1']
2025-06-13 07:34:43,042 - print_capture - INFO -     $const12.1.1 = const(int, 1)             ['$const12.1.1']
    $const12.1.1 = const(int, 1)             ['$const12.1.1']
    $const12.1.1 = const(int, 1)             ['$const12.1.1']
2025-06-13 07:34:43,042 - print_capture - INFO -     $const12.1.1 = const(int, 1)             ['$const12.1.1']
    $14compare_op.2 = is_ascii2 == $const12.1.1 ['$14compare_op.2', '$const12.1.1', 'is_ascii2']
    $14compare_op.2 = is_ascii2 == $const12.1.1 ['$14compare_op.2', '$const12.1.1', 'is_ascii2']
2025-06-13 07:34:43,042 - print_capture - INFO -     $14compare_op.2 = is_ascii2 == $const12.1.1 ['$14compare_op.2', '$const12.1.1', 'is_ascii2']
    $14compare_op.2 = is_ascii2 == $const12.1.1 ['$14compare_op.2', '$const12.1.1', 'is_ascii2']
    $14compare_op.2 = is_ascii2 == $const12.1.1 ['$14compare_op.2', '$const12.1.1', 'is_ascii2']
2025-06-13 07:34:43,042 - print_capture - INFO -     $14compare_op.2 = is_ascii2 == $const12.1.1 ['$14compare_op.2', '$const12.1.1', 'is_ascii2']
    bool16 = global(bool: <class 'bool'>)    ['bool16']
    bool16 = global(bool: <class 'bool'>)    ['bool16']
2025-06-13 07:34:43,042 - print_capture - INFO -     bool16 = global(bool: <class 'bool'>)    ['bool16']
    bool16 = global(bool: <class 'bool'>)    ['bool16']
    bool16 = global(bool: <class 'bool'>)    ['bool16']
2025-06-13 07:34:43,042 - print_capture - INFO -     bool16 = global(bool: <class 'bool'>)    ['bool16']
    $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.2', '$16pred', 'bool16']
    $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.2', '$16pred', 'bool16']
2025-06-13 07:34:43,042 - print_capture - INFO -     $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.2', '$16pred', 'bool16']
    $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.2', '$16pred', 'bool16']
    $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.2', '$16pred', 'bool16']
2025-06-13 07:34:43,042 - print_capture - INFO -     $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.2', '$16pred', 'bool16']
    branch $16pred, 18, 28                   ['$16pred']
    branch $16pred, 18, 28                   ['$16pred']
2025-06-13 07:34:43,043 - print_capture - INFO -     branch $16pred, 18, 28                   ['$16pred']
    branch $16pred, 18, 28                   ['$16pred']
    branch $16pred, 18, 28                   ['$16pred']
2025-06-13 07:34:43,043 - print_capture - INFO -     branch $16pred, 18, 28                   ['$16pred']
label 18:
label 18:
2025-06-13 07:34:43,043 - print_capture - INFO - label 18:
label 18:
label 18:
2025-06-13 07:34:43,043 - print_capture - INFO - label 18:
    $18load_global.0 = global(types: <module 'numba.core.types' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/core/types/__init__.py'>) ['$18load_global.0']
    $18load_global.0 = global(types: <module 'numba.core.types' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/core/types/__init__.py'>) ['$18load_global.0']
2025-06-13 07:34:43,043 - print_capture - INFO -     $18load_global.0 = global(types: <module 'numba.core.types' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/core/types/__init__.py'>) ['$18load_global.0']
    $18load_global.0 = global(types: <module 'numba.core.types' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/core/types/__init__.py'>) ['$18load_global.0']
    $18load_global.0 = global(types: <module 'numba.core.types' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/core/types/__init__.py'>) ['$18load_global.0']
2025-06-13 07:34:43,043 - print_capture - INFO -     $18load_global.0 = global(types: <module 'numba.core.types' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/core/types/__init__.py'>) ['$18load_global.0']
    $20load_method.1 = getattr(value=$18load_global.0, attr=uint32) ['$18load_global.0', '$20load_method.1']
    $20load_method.1 = getattr(value=$18load_global.0, attr=uint32) ['$18load_global.0', '$20load_method.1']
2025-06-13 07:34:43,043 - print_capture - INFO -     $20load_method.1 = getattr(value=$18load_global.0, attr=uint32) ['$18load_global.0', '$20load_method.1']
    $20load_method.1 = getattr(value=$18load_global.0, attr=uint32) ['$18load_global.0', '$20load_method.1']
    $20load_method.1 = getattr(value=$18load_global.0, attr=uint32) ['$18load_global.0', '$20load_method.1']
2025-06-13 07:34:43,043 - print_capture - INFO -     $20load_method.1 = getattr(value=$18load_global.0, attr=uint32) ['$18load_global.0', '$20load_method.1']
    $const22.2.1 = const(int, 1)             ['$const22.2.1']
    $const22.2.1 = const(int, 1)             ['$const22.2.1']
2025-06-13 07:34:43,043 - print_capture - INFO -     $const22.2.1 = const(int, 1)             ['$const22.2.1']
    $const22.2.1 = const(int, 1)             ['$const22.2.1']
    $const22.2.1 = const(int, 1)             ['$const22.2.1']
2025-06-13 07:34:43,043 - print_capture - INFO -     $const22.2.1 = const(int, 1)             ['$const22.2.1']
    $24call_method.3 = call $20load_method.1($const22.2.1, func=$20load_method.1, args=[Var($const22.2.1, unicode.py:395)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_method.1', '$24call_method.3', '$const22.2.1']
    $24call_method.3 = call $20load_method.1($const22.2.1, func=$20load_method.1, args=[Var($const22.2.1, unicode.py:395)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_method.1', '$24call_method.3', '$const22.2.1']
2025-06-13 07:34:43,043 - print_capture - INFO -     $24call_method.3 = call $20load_method.1($const22.2.1, func=$20load_method.1, args=[Var($const22.2.1, unicode.py:395)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_method.1', '$24call_method.3', '$const22.2.1']
    $24call_method.3 = call $20load_method.1($const22.2.1, func=$20load_method.1, args=[Var($const22.2.1, unicode.py:395)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_method.1', '$24call_method.3', '$const22.2.1']
    $24call_method.3 = call $20load_method.1($const22.2.1, func=$20load_method.1, args=[Var($const22.2.1, unicode.py:395)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_method.1', '$24call_method.3', '$const22.2.1']
2025-06-13 07:34:43,043 - print_capture - INFO -     $24call_method.3 = call $20load_method.1($const22.2.1, func=$20load_method.1, args=[Var($const22.2.1, unicode.py:395)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_method.1', '$24call_method.3', '$const22.2.1']
    $26return_value.4 = cast(value=$24call_method.3) ['$24call_method.3', '$26return_value.4']
    $26return_value.4 = cast(value=$24call_method.3) ['$24call_method.3', '$26return_value.4']
2025-06-13 07:34:43,043 - print_capture - INFO -     $26return_value.4 = cast(value=$24call_method.3) ['$24call_method.3', '$26return_value.4']
    $26return_value.4 = cast(value=$24call_method.3) ['$24call_method.3', '$26return_value.4']
    $26return_value.4 = cast(value=$24call_method.3) ['$24call_method.3', '$26return_value.4']
2025-06-13 07:34:43,043 - print_capture - INFO -     $26return_value.4 = cast(value=$24call_method.3) ['$24call_method.3', '$26return_value.4']
    return $26return_value.4                 ['$26return_value.4']
    return $26return_value.4                 ['$26return_value.4']
2025-06-13 07:34:43,043 - print_capture - INFO -     return $26return_value.4                 ['$26return_value.4']
    return $26return_value.4                 ['$26return_value.4']
    return $26return_value.4                 ['$26return_value.4']
2025-06-13 07:34:43,043 - print_capture - INFO -     return $26return_value.4                 ['$26return_value.4']
label 28:
label 28:
2025-06-13 07:34:43,043 - print_capture - INFO - label 28:
label 28:
label 28:
2025-06-13 07:34:43,043 - print_capture - INFO - label 28:
    $28load_global.0 = global(types: <module 'numba.core.types' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/core/types/__init__.py'>) ['$28load_global.0']
    $28load_global.0 = global(types: <module 'numba.core.types' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/core/types/__init__.py'>) ['$28load_global.0']
2025-06-13 07:34:43,043 - print_capture - INFO -     $28load_global.0 = global(types: <module 'numba.core.types' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/core/types/__init__.py'>) ['$28load_global.0']
    $28load_global.0 = global(types: <module 'numba.core.types' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/core/types/__init__.py'>) ['$28load_global.0']
    $28load_global.0 = global(types: <module 'numba.core.types' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/core/types/__init__.py'>) ['$28load_global.0']
2025-06-13 07:34:43,043 - print_capture - INFO -     $28load_global.0 = global(types: <module 'numba.core.types' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numba/core/types/__init__.py'>) ['$28load_global.0']
    $30load_method.1 = getattr(value=$28load_global.0, attr=uint32) ['$28load_global.0', '$30load_method.1']
    $30load_method.1 = getattr(value=$28load_global.0, attr=uint32) ['$28load_global.0', '$30load_method.1']
2025-06-13 07:34:43,043 - print_capture - INFO -     $30load_method.1 = getattr(value=$28load_global.0, attr=uint32) ['$28load_global.0', '$30load_method.1']
    $30load_method.1 = getattr(value=$28load_global.0, attr=uint32) ['$28load_global.0', '$30load_method.1']
    $30load_method.1 = getattr(value=$28load_global.0, attr=uint32) ['$28load_global.0', '$30load_method.1']
2025-06-13 07:34:43,043 - print_capture - INFO -     $30load_method.1 = getattr(value=$28load_global.0, attr=uint32) ['$28load_global.0', '$30load_method.1']
    $const32.2.2 = const(int, 0)             ['$const32.2.2']
    $const32.2.2 = const(int, 0)             ['$const32.2.2']
2025-06-13 07:34:43,043 - print_capture - INFO -     $const32.2.2 = const(int, 0)             ['$const32.2.2']
    $const32.2.2 = const(int, 0)             ['$const32.2.2']
    $const32.2.2 = const(int, 0)             ['$const32.2.2']
2025-06-13 07:34:43,043 - print_capture - INFO -     $const32.2.2 = const(int, 0)             ['$const32.2.2']
    $34call_method.3 = call $30load_method.1($const32.2.2, func=$30load_method.1, args=[Var($const32.2.2, unicode.py:396)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_method.1', '$34call_method.3', '$const32.2.2']
    $34call_method.3 = call $30load_method.1($const32.2.2, func=$30load_method.1, args=[Var($const32.2.2, unicode.py:396)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_method.1', '$34call_method.3', '$const32.2.2']
2025-06-13 07:34:43,043 - print_capture - INFO -     $34call_method.3 = call $30load_method.1($const32.2.2, func=$30load_method.1, args=[Var($const32.2.2, unicode.py:396)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_method.1', '$34call_method.3', '$const32.2.2']
    $34call_method.3 = call $30load_method.1($const32.2.2, func=$30load_method.1, args=[Var($const32.2.2, unicode.py:396)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_method.1', '$34call_method.3', '$const32.2.2']
    $34call_method.3 = call $30load_method.1($const32.2.2, func=$30load_method.1, args=[Var($const32.2.2, unicode.py:396)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_method.1', '$34call_method.3', '$const32.2.2']
2025-06-13 07:34:43,043 - print_capture - INFO -     $34call_method.3 = call $30load_method.1($const32.2.2, func=$30load_method.1, args=[Var($const32.2.2, unicode.py:396)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_method.1', '$34call_method.3', '$const32.2.2']
    $36return_value.4 = cast(value=$34call_method.3) ['$34call_method.3', '$36return_value.4']
    $36return_value.4 = cast(value=$34call_method.3) ['$34call_method.3', '$36return_value.4']
2025-06-13 07:34:43,043 - print_capture - INFO -     $36return_value.4 = cast(value=$34call_method.3) ['$34call_method.3', '$36return_value.4']
    $36return_value.4 = cast(value=$34call_method.3) ['$34call_method.3', '$36return_value.4']
    $36return_value.4 = cast(value=$34call_method.3) ['$34call_method.3', '$36return_value.4']
2025-06-13 07:34:43,043 - print_capture - INFO -     $36return_value.4 = cast(value=$34call_method.3) ['$34call_method.3', '$36return_value.4']
    return $36return_value.4                 ['$36return_value.4']
    return $36return_value.4                 ['$36return_value.4']
2025-06-13 07:34:43,043 - print_capture - INFO -     return $36return_value.4                 ['$36return_value.4']
    return $36return_value.4                 ['$36return_value.4']
    return $36return_value.4                 ['$36return_value.4']
2025-06-13 07:34:43,043 - print_capture - INFO -     return $36return_value.4                 ['$36return_value.4']
label 0:
label 0:
2025-06-13 07:34:43,059 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,059 - print_capture - INFO - label 0:
    kind = arg(0, name=kind)                 ['kind']
    kind = arg(0, name=kind)                 ['kind']
2025-06-13 07:34:43,059 - print_capture - INFO -     kind = arg(0, name=kind)                 ['kind']
    kind = arg(0, name=kind)                 ['kind']
    kind = arg(0, name=kind)                 ['kind']
2025-06-13 07:34:43,060 - print_capture - INFO -     kind = arg(0, name=kind)                 ['kind']
    length = arg(1, name=length)             ['length']
    length = arg(1, name=length)             ['length']
2025-06-13 07:34:43,060 - print_capture - INFO -     length = arg(1, name=length)             ['length']
    length = arg(1, name=length)             ['length']
    length = arg(1, name=length)             ['length']
2025-06-13 07:34:43,060 - print_capture - INFO -     length = arg(1, name=length)             ['length']
    is_ascii = arg(2, name=is_ascii)         ['is_ascii']
    is_ascii = arg(2, name=is_ascii)         ['is_ascii']
2025-06-13 07:34:43,060 - print_capture - INFO -     is_ascii = arg(2, name=is_ascii)         ['is_ascii']
    is_ascii = arg(2, name=is_ascii)         ['is_ascii']
    is_ascii = arg(2, name=is_ascii)         ['is_ascii']
2025-06-13 07:34:43,060 - print_capture - INFO -     is_ascii = arg(2, name=is_ascii)         ['is_ascii']
    $2load_global.0 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x7f28ab7cb250>) ['$2load_global.0']
    $2load_global.0 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x7f28ab7cb250>) ['$2load_global.0']
2025-06-13 07:34:43,060 - print_capture - INFO -     $2load_global.0 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x7f28ab7cb250>) ['$2load_global.0']
    $2load_global.0 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x7f28ab7cb250>) ['$2load_global.0']
    $2load_global.0 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x7f28ab7cb250>) ['$2load_global.0']
2025-06-13 07:34:43,060 - print_capture - INFO -     $2load_global.0 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x7f28ab7cb250>) ['$2load_global.0']
    char_width = call $2load_global.0(kind, func=$2load_global.0, args=[Var(kind, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'char_width', 'kind']
    char_width = call $2load_global.0(kind, func=$2load_global.0, args=[Var(kind, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'char_width', 'kind']
2025-06-13 07:34:43,060 - print_capture - INFO -     char_width = call $2load_global.0(kind, func=$2load_global.0, args=[Var(kind, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'char_width', 'kind']
    char_width = call $2load_global.0(kind, func=$2load_global.0, args=[Var(kind, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'char_width', 'kind']
    char_width = call $2load_global.0(kind, func=$2load_global.0, args=[Var(kind, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'char_width', 'kind']
2025-06-13 07:34:43,060 - print_capture - INFO -     char_width = call $2load_global.0(kind, func=$2load_global.0, args=[Var(kind, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'char_width', 'kind']
    $10load_global.3 = global(_malloc_string: <intrinsic _malloc_string>) ['$10load_global.3']
    $10load_global.3 = global(_malloc_string: <intrinsic _malloc_string>) ['$10load_global.3']
2025-06-13 07:34:43,060 - print_capture - INFO -     $10load_global.3 = global(_malloc_string: <intrinsic _malloc_string>) ['$10load_global.3']
    $10load_global.3 = global(_malloc_string: <intrinsic _malloc_string>) ['$10load_global.3']
    $10load_global.3 = global(_malloc_string: <intrinsic _malloc_string>) ['$10load_global.3']
2025-06-13 07:34:43,060 - print_capture - INFO -     $10load_global.3 = global(_malloc_string: <intrinsic _malloc_string>) ['$10load_global.3']
    s = call $10load_global.3(kind, char_width, length, is_ascii, func=$10load_global.3, args=[Var(kind, unicode.py:281), Var(char_width, unicode.py:283), Var(length, unicode.py:281), Var(is_ascii, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', 'char_width', 'is_ascii', 'kind', 'length', 's']
    s = call $10load_global.3(kind, char_width, length, is_ascii, func=$10load_global.3, args=[Var(kind, unicode.py:281), Var(char_width, unicode.py:283), Var(length, unicode.py:281), Var(is_ascii, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', 'char_width', 'is_ascii', 'kind', 'length', 's']
2025-06-13 07:34:43,060 - print_capture - INFO -     s = call $10load_global.3(kind, char_width, length, is_ascii, func=$10load_global.3, args=[Var(kind, unicode.py:281), Var(char_width, unicode.py:283), Var(length, unicode.py:281), Var(is_ascii, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', 'char_width', 'is_ascii', 'kind', 'length', 's']
    s = call $10load_global.3(kind, char_width, length, is_ascii, func=$10load_global.3, args=[Var(kind, unicode.py:281), Var(char_width, unicode.py:283), Var(length, unicode.py:281), Var(is_ascii, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', 'char_width', 'is_ascii', 'kind', 'length', 's']
    s = call $10load_global.3(kind, char_width, length, is_ascii, func=$10load_global.3, args=[Var(kind, unicode.py:281), Var(char_width, unicode.py:283), Var(length, unicode.py:281), Var(is_ascii, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', 'char_width', 'is_ascii', 'kind', 'length', 's']
2025-06-13 07:34:43,060 - print_capture - INFO -     s = call $10load_global.3(kind, char_width, length, is_ascii, func=$10load_global.3, args=[Var(kind, unicode.py:281), Var(char_width, unicode.py:283), Var(length, unicode.py:281), Var(is_ascii, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', 'char_width', 'is_ascii', 'kind', 'length', 's']
    $24load_global.9 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$24load_global.9']
    $24load_global.9 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$24load_global.9']
2025-06-13 07:34:43,060 - print_capture - INFO -     $24load_global.9 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$24load_global.9']
    $24load_global.9 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$24load_global.9']
    $24load_global.9 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$24load_global.9']
2025-06-13 07:34:43,060 - print_capture - INFO -     $24load_global.9 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$24load_global.9']
    $30load_global.12 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$30load_global.12']
    $30load_global.12 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$30load_global.12']
2025-06-13 07:34:43,060 - print_capture - INFO -     $30load_global.12 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$30load_global.12']
    $30load_global.12 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$30load_global.12']
    $30load_global.12 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$30load_global.12']
2025-06-13 07:34:43,060 - print_capture - INFO -     $30load_global.12 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$30load_global.12']
    $32load_method.13 = getattr(value=$30load_global.12, attr=uint32) ['$30load_global.12', '$32load_method.13']
    $32load_method.13 = getattr(value=$30load_global.12, attr=uint32) ['$30load_global.12', '$32load_method.13']
2025-06-13 07:34:43,060 - print_capture - INFO -     $32load_method.13 = getattr(value=$30load_global.12, attr=uint32) ['$30load_global.12', '$32load_method.13']
    $32load_method.13 = getattr(value=$30load_global.12, attr=uint32) ['$30load_global.12', '$32load_method.13']
    $32load_method.13 = getattr(value=$30load_global.12, attr=uint32) ['$30load_global.12', '$32load_method.13']
2025-06-13 07:34:43,060 - print_capture - INFO -     $32load_method.13 = getattr(value=$30load_global.12, attr=uint32) ['$30load_global.12', '$32load_method.13']
    $const34.14.1 = const(int, 0)            ['$const34.14.1']
    $const34.14.1 = const(int, 0)            ['$const34.14.1']
2025-06-13 07:34:43,060 - print_capture - INFO -     $const34.14.1 = const(int, 0)            ['$const34.14.1']
    $const34.14.1 = const(int, 0)            ['$const34.14.1']
    $const34.14.1 = const(int, 0)            ['$const34.14.1']
2025-06-13 07:34:43,060 - print_capture - INFO -     $const34.14.1 = const(int, 0)            ['$const34.14.1']
    $36call_method.15 = call $32load_method.13($const34.14.1, func=$32load_method.13, args=[Var($const34.14.1, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_method.13', '$36call_method.15', '$const34.14.1']
    $36call_method.15 = call $32load_method.13($const34.14.1, func=$32load_method.13, args=[Var($const34.14.1, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_method.13', '$36call_method.15', '$const34.14.1']
2025-06-13 07:34:43,060 - print_capture - INFO -     $36call_method.15 = call $32load_method.13($const34.14.1, func=$32load_method.13, args=[Var($const34.14.1, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_method.13', '$36call_method.15', '$const34.14.1']
    $36call_method.15 = call $32load_method.13($const34.14.1, func=$32load_method.13, args=[Var($const34.14.1, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_method.13', '$36call_method.15', '$const34.14.1']
    $36call_method.15 = call $32load_method.13($const34.14.1, func=$32load_method.13, args=[Var($const34.14.1, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_method.13', '$36call_method.15', '$const34.14.1']
2025-06-13 07:34:43,060 - print_capture - INFO -     $36call_method.15 = call $32load_method.13($const34.14.1, func=$32load_method.13, args=[Var($const34.14.1, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_method.13', '$36call_method.15', '$const34.14.1']
    $38call_function.16 = call $24load_global.9(s, length, $36call_method.15, func=$24load_global.9, args=[Var(s, unicode.py:284), Var(length, unicode.py:281), Var($36call_method.15, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_global.9', '$36call_method.15', '$38call_function.16', 'length', 's']
    $38call_function.16 = call $24load_global.9(s, length, $36call_method.15, func=$24load_global.9, args=[Var(s, unicode.py:284), Var(length, unicode.py:281), Var($36call_method.15, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_global.9', '$36call_method.15', '$38call_function.16', 'length', 's']
2025-06-13 07:34:43,060 - print_capture - INFO -     $38call_function.16 = call $24load_global.9(s, length, $36call_method.15, func=$24load_global.9, args=[Var(s, unicode.py:284), Var(length, unicode.py:281), Var($36call_method.15, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_global.9', '$36call_method.15', '$38call_function.16', 'length', 's']
    $38call_function.16 = call $24load_global.9(s, length, $36call_method.15, func=$24load_global.9, args=[Var(s, unicode.py:284), Var(length, unicode.py:281), Var($36call_method.15, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_global.9', '$36call_method.15', '$38call_function.16', 'length', 's']
    $38call_function.16 = call $24load_global.9(s, length, $36call_method.15, func=$24load_global.9, args=[Var(s, unicode.py:284), Var(length, unicode.py:281), Var($36call_method.15, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_global.9', '$36call_method.15', '$38call_function.16', 'length', 's']
2025-06-13 07:34:43,060 - print_capture - INFO -     $38call_function.16 = call $24load_global.9(s, length, $36call_method.15, func=$24load_global.9, args=[Var(s, unicode.py:284), Var(length, unicode.py:281), Var($36call_method.15, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_global.9', '$36call_method.15', '$38call_function.16', 'length', 's']
    $44return_value.18 = cast(value=s)       ['$44return_value.18', 's']
    $44return_value.18 = cast(value=s)       ['$44return_value.18', 's']
2025-06-13 07:34:43,060 - print_capture - INFO -     $44return_value.18 = cast(value=s)       ['$44return_value.18', 's']
    $44return_value.18 = cast(value=s)       ['$44return_value.18', 's']
    $44return_value.18 = cast(value=s)       ['$44return_value.18', 's']
2025-06-13 07:34:43,060 - print_capture - INFO -     $44return_value.18 = cast(value=s)       ['$44return_value.18', 's']
    return $44return_value.18                ['$44return_value.18']
    return $44return_value.18                ['$44return_value.18']
2025-06-13 07:34:43,060 - print_capture - INFO -     return $44return_value.18                ['$44return_value.18']
    return $44return_value.18                ['$44return_value.18']
    return $44return_value.18                ['$44return_value.18']
2025-06-13 07:34:43,060 - print_capture - INFO -     return $44return_value.18                ['$44return_value.18']
label 0:
label 0:
2025-06-13 07:34:43,063 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,063 - print_capture - INFO - label 0:
    kind = arg(0, name=kind)                 ['kind']
    kind = arg(0, name=kind)                 ['kind']
2025-06-13 07:34:43,063 - print_capture - INFO -     kind = arg(0, name=kind)                 ['kind']
    kind = arg(0, name=kind)                 ['kind']
    kind = arg(0, name=kind)                 ['kind']
2025-06-13 07:34:43,063 - print_capture - INFO -     kind = arg(0, name=kind)                 ['kind']
    $4load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$4load_global.1']
    $4load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$4load_global.1']
2025-06-13 07:34:43,063 - print_capture - INFO -     $4load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$4load_global.1']
    $4load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$4load_global.1']
    $4load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$4load_global.1']
2025-06-13 07:34:43,063 - print_capture - INFO -     $4load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$4load_global.1']
    $6compare_op.2 = kind == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind']
    $6compare_op.2 = kind == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind']
2025-06-13 07:34:43,063 - print_capture - INFO -     $6compare_op.2 = kind == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind']
    $6compare_op.2 = kind == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind']
    $6compare_op.2 = kind == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind']
2025-06-13 07:34:43,063 - print_capture - INFO -     $6compare_op.2 = kind == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
2025-06-13 07:34:43,063 - print_capture - INFO -     bool8 = global(bool: <class 'bool'>)     ['bool8']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
2025-06-13 07:34:43,063 - print_capture - INFO -     bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
2025-06-13 07:34:43,063 - print_capture - INFO -     $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
2025-06-13 07:34:43,063 - print_capture - INFO -     $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    branch $8pred, 10, 14                    ['$8pred']
    branch $8pred, 10, 14                    ['$8pred']
2025-06-13 07:34:43,064 - print_capture - INFO -     branch $8pred, 10, 14                    ['$8pred']
    branch $8pred, 10, 14                    ['$8pred']
    branch $8pred, 10, 14                    ['$8pred']
2025-06-13 07:34:43,064 - print_capture - INFO -     branch $8pred, 10, 14                    ['$8pred']
label 10:
label 10:
2025-06-13 07:34:43,064 - print_capture - INFO - label 10:
label 10:
label 10:
2025-06-13 07:34:43,064 - print_capture - INFO - label 10:
    $const10.0.1 = const(int, 1)             ['$const10.0.1']
    $const10.0.1 = const(int, 1)             ['$const10.0.1']
2025-06-13 07:34:43,064 - print_capture - INFO -     $const10.0.1 = const(int, 1)             ['$const10.0.1']
    $const10.0.1 = const(int, 1)             ['$const10.0.1']
    $const10.0.1 = const(int, 1)             ['$const10.0.1']
2025-06-13 07:34:43,064 - print_capture - INFO -     $const10.0.1 = const(int, 1)             ['$const10.0.1']
    $12return_value.1 = cast(value=$const10.0.1) ['$12return_value.1', '$const10.0.1']
    $12return_value.1 = cast(value=$const10.0.1) ['$12return_value.1', '$const10.0.1']
2025-06-13 07:34:43,064 - print_capture - INFO -     $12return_value.1 = cast(value=$const10.0.1) ['$12return_value.1', '$const10.0.1']
    $12return_value.1 = cast(value=$const10.0.1) ['$12return_value.1', '$const10.0.1']
    $12return_value.1 = cast(value=$const10.0.1) ['$12return_value.1', '$const10.0.1']
2025-06-13 07:34:43,064 - print_capture - INFO -     $12return_value.1 = cast(value=$const10.0.1) ['$12return_value.1', '$const10.0.1']
    return $12return_value.1                 ['$12return_value.1']
    return $12return_value.1                 ['$12return_value.1']
2025-06-13 07:34:43,064 - print_capture - INFO -     return $12return_value.1                 ['$12return_value.1']
    return $12return_value.1                 ['$12return_value.1']
    return $12return_value.1                 ['$12return_value.1']
2025-06-13 07:34:43,064 - print_capture - INFO -     return $12return_value.1                 ['$12return_value.1']
label 14:
label 14:
2025-06-13 07:34:43,064 - print_capture - INFO - label 14:
label 14:
label 14:
2025-06-13 07:34:43,064 - print_capture - INFO - label 14:
    $16load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$16load_global.1']
    $16load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$16load_global.1']
2025-06-13 07:34:43,064 - print_capture - INFO -     $16load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$16load_global.1']
    $16load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$16load_global.1']
    $16load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$16load_global.1']
2025-06-13 07:34:43,064 - print_capture - INFO -     $16load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$16load_global.1']
    $18compare_op.2 = kind == $16load_global.1 ['$16load_global.1', '$18compare_op.2', 'kind']
    $18compare_op.2 = kind == $16load_global.1 ['$16load_global.1', '$18compare_op.2', 'kind']
2025-06-13 07:34:43,064 - print_capture - INFO -     $18compare_op.2 = kind == $16load_global.1 ['$16load_global.1', '$18compare_op.2', 'kind']
    $18compare_op.2 = kind == $16load_global.1 ['$16load_global.1', '$18compare_op.2', 'kind']
    $18compare_op.2 = kind == $16load_global.1 ['$16load_global.1', '$18compare_op.2', 'kind']
2025-06-13 07:34:43,064 - print_capture - INFO -     $18compare_op.2 = kind == $16load_global.1 ['$16load_global.1', '$18compare_op.2', 'kind']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
2025-06-13 07:34:43,064 - print_capture - INFO -     bool20 = global(bool: <class 'bool'>)    ['bool20']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
2025-06-13 07:34:43,064 - print_capture - INFO -     bool20 = global(bool: <class 'bool'>)    ['bool20']
    $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
    $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
2025-06-13 07:34:43,064 - print_capture - INFO -     $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
    $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
    $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
2025-06-13 07:34:43,064 - print_capture - INFO -     $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
    branch $20pred, 22, 26                   ['$20pred']
    branch $20pred, 22, 26                   ['$20pred']
2025-06-13 07:34:43,064 - print_capture - INFO -     branch $20pred, 22, 26                   ['$20pred']
    branch $20pred, 22, 26                   ['$20pred']
    branch $20pred, 22, 26                   ['$20pred']
2025-06-13 07:34:43,064 - print_capture - INFO -     branch $20pred, 22, 26                   ['$20pred']
label 22:
label 22:
2025-06-13 07:34:43,064 - print_capture - INFO - label 22:
label 22:
label 22:
2025-06-13 07:34:43,064 - print_capture - INFO - label 22:
    $const22.0.2 = const(int, 2)             ['$const22.0.2']
    $const22.0.2 = const(int, 2)             ['$const22.0.2']
2025-06-13 07:34:43,064 - print_capture - INFO -     $const22.0.2 = const(int, 2)             ['$const22.0.2']
    $const22.0.2 = const(int, 2)             ['$const22.0.2']
    $const22.0.2 = const(int, 2)             ['$const22.0.2']
2025-06-13 07:34:43,064 - print_capture - INFO -     $const22.0.2 = const(int, 2)             ['$const22.0.2']
    $24return_value.1 = cast(value=$const22.0.2) ['$24return_value.1', '$const22.0.2']
    $24return_value.1 = cast(value=$const22.0.2) ['$24return_value.1', '$const22.0.2']
2025-06-13 07:34:43,064 - print_capture - INFO -     $24return_value.1 = cast(value=$const22.0.2) ['$24return_value.1', '$const22.0.2']
    $24return_value.1 = cast(value=$const22.0.2) ['$24return_value.1', '$const22.0.2']
    $24return_value.1 = cast(value=$const22.0.2) ['$24return_value.1', '$const22.0.2']
2025-06-13 07:34:43,064 - print_capture - INFO -     $24return_value.1 = cast(value=$const22.0.2) ['$24return_value.1', '$const22.0.2']
    return $24return_value.1                 ['$24return_value.1']
    return $24return_value.1                 ['$24return_value.1']
2025-06-13 07:34:43,064 - print_capture - INFO -     return $24return_value.1                 ['$24return_value.1']
    return $24return_value.1                 ['$24return_value.1']
    return $24return_value.1                 ['$24return_value.1']
2025-06-13 07:34:43,064 - print_capture - INFO -     return $24return_value.1                 ['$24return_value.1']
label 26:
label 26:
2025-06-13 07:34:43,064 - print_capture - INFO - label 26:
label 26:
label 26:
2025-06-13 07:34:43,064 - print_capture - INFO - label 26:
    $28load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$28load_global.1']
    $28load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$28load_global.1']
2025-06-13 07:34:43,064 - print_capture - INFO -     $28load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$28load_global.1']
    $28load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$28load_global.1']
    $28load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$28load_global.1']
2025-06-13 07:34:43,064 - print_capture - INFO -     $28load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$28load_global.1']
    $30compare_op.2 = kind == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind']
    $30compare_op.2 = kind == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind']
2025-06-13 07:34:43,064 - print_capture - INFO -     $30compare_op.2 = kind == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind']
    $30compare_op.2 = kind == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind']
    $30compare_op.2 = kind == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind']
2025-06-13 07:34:43,064 - print_capture - INFO -     $30compare_op.2 = kind == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
2025-06-13 07:34:43,064 - print_capture - INFO -     bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
2025-06-13 07:34:43,064 - print_capture - INFO -     bool32 = global(bool: <class 'bool'>)    ['bool32']
    $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
2025-06-13 07:34:43,064 - print_capture - INFO -     $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
2025-06-13 07:34:43,064 - print_capture - INFO -     $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
    branch $32pred, 34, 38                   ['$32pred']
    branch $32pred, 34, 38                   ['$32pred']
2025-06-13 07:34:43,064 - print_capture - INFO -     branch $32pred, 34, 38                   ['$32pred']
    branch $32pred, 34, 38                   ['$32pred']
    branch $32pred, 34, 38                   ['$32pred']
2025-06-13 07:34:43,064 - print_capture - INFO -     branch $32pred, 34, 38                   ['$32pred']
label 34:
label 34:
2025-06-13 07:34:43,064 - print_capture - INFO - label 34:
label 34:
label 34:
2025-06-13 07:34:43,065 - print_capture - INFO - label 34:
    $const34.0.3 = const(int, 4)             ['$const34.0.3']
    $const34.0.3 = const(int, 4)             ['$const34.0.3']
2025-06-13 07:34:43,065 - print_capture - INFO -     $const34.0.3 = const(int, 4)             ['$const34.0.3']
    $const34.0.3 = const(int, 4)             ['$const34.0.3']
    $const34.0.3 = const(int, 4)             ['$const34.0.3']
2025-06-13 07:34:43,065 - print_capture - INFO -     $const34.0.3 = const(int, 4)             ['$const34.0.3']
    $36return_value.1 = cast(value=$const34.0.3) ['$36return_value.1', '$const34.0.3']
    $36return_value.1 = cast(value=$const34.0.3) ['$36return_value.1', '$const34.0.3']
2025-06-13 07:34:43,065 - print_capture - INFO -     $36return_value.1 = cast(value=$const34.0.3) ['$36return_value.1', '$const34.0.3']
    $36return_value.1 = cast(value=$const34.0.3) ['$36return_value.1', '$const34.0.3']
    $36return_value.1 = cast(value=$const34.0.3) ['$36return_value.1', '$const34.0.3']
2025-06-13 07:34:43,065 - print_capture - INFO -     $36return_value.1 = cast(value=$const34.0.3) ['$36return_value.1', '$const34.0.3']
    return $36return_value.1                 ['$36return_value.1']
    return $36return_value.1                 ['$36return_value.1']
2025-06-13 07:34:43,065 - print_capture - INFO -     return $36return_value.1                 ['$36return_value.1']
    return $36return_value.1                 ['$36return_value.1']
    return $36return_value.1                 ['$36return_value.1']
2025-06-13 07:34:43,065 - print_capture - INFO -     return $36return_value.1                 ['$36return_value.1']
label 38:
label 38:
2025-06-13 07:34:43,065 - print_capture - INFO - label 38:
label 38:
label 38:
2025-06-13 07:34:43,065 - print_capture - INFO - label 38:
    $40load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$40load_global.1']
    $40load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$40load_global.1']
2025-06-13 07:34:43,065 - print_capture - INFO -     $40load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$40load_global.1']
    $40load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$40load_global.1']
    $40load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$40load_global.1']
2025-06-13 07:34:43,065 - print_capture - INFO -     $40load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$40load_global.1']
    $42compare_op.2 = kind == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind']
    $42compare_op.2 = kind == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind']
2025-06-13 07:34:43,065 - print_capture - INFO -     $42compare_op.2 = kind == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind']
    $42compare_op.2 = kind == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind']
    $42compare_op.2 = kind == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind']
2025-06-13 07:34:43,065 - print_capture - INFO -     $42compare_op.2 = kind == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind']
    bool44 = global(bool: <class 'bool'>)    ['bool44']
    bool44 = global(bool: <class 'bool'>)    ['bool44']
2025-06-13 07:34:43,065 - print_capture - INFO -     bool44 = global(bool: <class 'bool'>)    ['bool44']
    bool44 = global(bool: <class 'bool'>)    ['bool44']
    bool44 = global(bool: <class 'bool'>)    ['bool44']
2025-06-13 07:34:43,065 - print_capture - INFO -     bool44 = global(bool: <class 'bool'>)    ['bool44']
    $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
    $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
2025-06-13 07:34:43,065 - print_capture - INFO -     $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
    $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
    $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
2025-06-13 07:34:43,065 - print_capture - INFO -     $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
    branch $44pred, 46, 54                   ['$44pred']
    branch $44pred, 46, 54                   ['$44pred']
2025-06-13 07:34:43,065 - print_capture - INFO -     branch $44pred, 46, 54                   ['$44pred']
    branch $44pred, 46, 54                   ['$44pred']
    branch $44pred, 46, 54                   ['$44pred']
2025-06-13 07:34:43,065 - print_capture - INFO -     branch $44pred, 46, 54                   ['$44pred']
label 46:
label 46:
2025-06-13 07:34:43,065 - print_capture - INFO - label 46:
label 46:
label 46:
2025-06-13 07:34:43,065 - print_capture - INFO - label 46:
    $46load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$46load_global.0']
    $46load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$46load_global.0']
2025-06-13 07:34:43,065 - print_capture - INFO -     $46load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$46load_global.0']
    $46load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$46load_global.0']
    $46load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$46load_global.0']
2025-06-13 07:34:43,065 - print_capture - INFO -     $46load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$46load_global.0']
    $const48.1.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const48.1.4']
    $const48.1.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const48.1.4']
2025-06-13 07:34:43,065 - print_capture - INFO -     $const48.1.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const48.1.4']
    $const48.1.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const48.1.4']
    $const48.1.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const48.1.4']
2025-06-13 07:34:43,065 - print_capture - INFO -     $const48.1.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const48.1.4']
    $50call_function.2 = call $46load_global.0($const48.1.4, func=$46load_global.0, args=[Var($const48.1.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.0', '$50call_function.2', '$const48.1.4']
    $50call_function.2 = call $46load_global.0($const48.1.4, func=$46load_global.0, args=[Var($const48.1.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.0', '$50call_function.2', '$const48.1.4']
2025-06-13 07:34:43,065 - print_capture - INFO -     $50call_function.2 = call $46load_global.0($const48.1.4, func=$46load_global.0, args=[Var($const48.1.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.0', '$50call_function.2', '$const48.1.4']
    $50call_function.2 = call $46load_global.0($const48.1.4, func=$46load_global.0, args=[Var($const48.1.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.0', '$50call_function.2', '$const48.1.4']
    $50call_function.2 = call $46load_global.0($const48.1.4, func=$46load_global.0, args=[Var($const48.1.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.0', '$50call_function.2', '$const48.1.4']
2025-06-13 07:34:43,065 - print_capture - INFO -     $50call_function.2 = call $46load_global.0($const48.1.4, func=$46load_global.0, args=[Var($const48.1.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.0', '$50call_function.2', '$const48.1.4']
    raise $50call_function.2                 ['$50call_function.2']
    raise $50call_function.2                 ['$50call_function.2']
2025-06-13 07:34:43,065 - print_capture - INFO -     raise $50call_function.2                 ['$50call_function.2']
    raise $50call_function.2                 ['$50call_function.2']
    raise $50call_function.2                 ['$50call_function.2']
2025-06-13 07:34:43,065 - print_capture - INFO -     raise $50call_function.2                 ['$50call_function.2']
label 54:
label 54:
2025-06-13 07:34:43,065 - print_capture - INFO - label 54:
label 54:
label 54:
2025-06-13 07:34:43,065 - print_capture - INFO - label 54:
    $54load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$54load_global.0']
    $54load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$54load_global.0']
2025-06-13 07:34:43,065 - print_capture - INFO -     $54load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$54load_global.0']
    $54load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$54load_global.0']
    $54load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$54load_global.0']
2025-06-13 07:34:43,065 - print_capture - INFO -     $54load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$54load_global.0']
    $const56.1.5 = const(str, Unexpected unicode encoding encountered) ['$const56.1.5']
    $const56.1.5 = const(str, Unexpected unicode encoding encountered) ['$const56.1.5']
2025-06-13 07:34:43,065 - print_capture - INFO -     $const56.1.5 = const(str, Unexpected unicode encoding encountered) ['$const56.1.5']
    $const56.1.5 = const(str, Unexpected unicode encoding encountered) ['$const56.1.5']
    $const56.1.5 = const(str, Unexpected unicode encoding encountered) ['$const56.1.5']
2025-06-13 07:34:43,065 - print_capture - INFO -     $const56.1.5 = const(str, Unexpected unicode encoding encountered) ['$const56.1.5']
    $58call_function.2 = call $54load_global.0($const56.1.5, func=$54load_global.0, args=[Var($const56.1.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$58call_function.2', '$const56.1.5']
    $58call_function.2 = call $54load_global.0($const56.1.5, func=$54load_global.0, args=[Var($const56.1.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$58call_function.2', '$const56.1.5']
2025-06-13 07:34:43,065 - print_capture - INFO -     $58call_function.2 = call $54load_global.0($const56.1.5, func=$54load_global.0, args=[Var($const56.1.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$58call_function.2', '$const56.1.5']
    $58call_function.2 = call $54load_global.0($const56.1.5, func=$54load_global.0, args=[Var($const56.1.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$58call_function.2', '$const56.1.5']
    $58call_function.2 = call $54load_global.0($const56.1.5, func=$54load_global.0, args=[Var($const56.1.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$58call_function.2', '$const56.1.5']
2025-06-13 07:34:43,065 - print_capture - INFO -     $58call_function.2 = call $54load_global.0($const56.1.5, func=$54load_global.0, args=[Var($const56.1.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$58call_function.2', '$const56.1.5']
    raise $58call_function.2                 ['$58call_function.2']
    raise $58call_function.2                 ['$58call_function.2']
2025-06-13 07:34:43,065 - print_capture - INFO -     raise $58call_function.2                 ['$58call_function.2']
    raise $58call_function.2                 ['$58call_function.2']
    raise $58call_function.2                 ['$58call_function.2']
2025-06-13 07:34:43,065 - print_capture - INFO -     raise $58call_function.2                 ['$58call_function.2']
label 0:
label 0:
2025-06-13 07:34:43,090 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,090 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:43,090 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:43,090 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    i = arg(1, name=i)                       ['i']
    i = arg(1, name=i)                       ['i']
2025-06-13 07:34:43,090 - print_capture - INFO -     i = arg(1, name=i)                       ['i']
    i = arg(1, name=i)                       ['i']
    i = arg(1, name=i)                       ['i']
2025-06-13 07:34:43,090 - print_capture - INFO -     i = arg(1, name=i)                       ['i']
    ch = arg(2, name=ch)                     ['ch']
    ch = arg(2, name=ch)                     ['ch']
2025-06-13 07:34:43,090 - print_capture - INFO -     ch = arg(2, name=ch)                     ['ch']
    ch = arg(2, name=ch)                     ['ch']
    ch = arg(2, name=ch)                     ['ch']
2025-06-13 07:34:43,090 - print_capture - INFO -     ch = arg(2, name=ch)                     ['ch']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
2025-06-13 07:34:43,090 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
2025-06-13 07:34:43,090 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
2025-06-13 07:34:43,090 - print_capture - INFO -     $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
2025-06-13 07:34:43,090 - print_capture - INFO -     $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
2025-06-13 07:34:43,090 - print_capture - INFO -     $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
2025-06-13 07:34:43,090 - print_capture - INFO -     $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
2025-06-13 07:34:43,090 - print_capture - INFO -     bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
2025-06-13 07:34:43,090 - print_capture - INFO -     bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
2025-06-13 07:34:43,090 - print_capture - INFO -     $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
2025-06-13 07:34:43,090 - print_capture - INFO -     $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 30                   ['$10pred']
    branch $10pred, 12, 30                   ['$10pred']
2025-06-13 07:34:43,090 - print_capture - INFO -     branch $10pred, 12, 30                   ['$10pred']
    branch $10pred, 12, 30                   ['$10pred']
    branch $10pred, 12, 30                   ['$10pred']
2025-06-13 07:34:43,090 - print_capture - INFO -     branch $10pred, 12, 30                   ['$10pred']
label 12:
label 12:
2025-06-13 07:34:43,090 - print_capture - INFO - label 12:
label 12:
label 12:
2025-06-13 07:34:43,090 - print_capture - INFO - label 12:
    $12load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$12load_global.0']
    $12load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$12load_global.0']
2025-06-13 07:34:43,090 - print_capture - INFO -     $12load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$12load_global.0']
    $12load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$12load_global.0']
    $12load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$12load_global.0']
2025-06-13 07:34:43,090 - print_capture - INFO -     $12load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$12load_global.0']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
2025-06-13 07:34:43,090 - print_capture - INFO -     $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
2025-06-13 07:34:43,090 - print_capture - INFO -     $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $22call_function.5 = call $12load_global.0($16load_attr.2, i, ch, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$22call_function.5', 'ch', 'i']
    $22call_function.5 = call $12load_global.0($16load_attr.2, i, ch, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$22call_function.5', 'ch', 'i']
2025-06-13 07:34:43,090 - print_capture - INFO -     $22call_function.5 = call $12load_global.0($16load_attr.2, i, ch, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$22call_function.5', 'ch', 'i']
    $22call_function.5 = call $12load_global.0($16load_attr.2, i, ch, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$22call_function.5', 'ch', 'i']
    $22call_function.5 = call $12load_global.0($16load_attr.2, i, ch, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$22call_function.5', 'ch', 'i']
2025-06-13 07:34:43,091 - print_capture - INFO -     $22call_function.5 = call $12load_global.0($16load_attr.2, i, ch, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$22call_function.5', 'ch', 'i']
    $const26.6.0 = const(NoneType, None)     ['$const26.6.0']
    $const26.6.0 = const(NoneType, None)     ['$const26.6.0']
2025-06-13 07:34:43,091 - print_capture - INFO -     $const26.6.0 = const(NoneType, None)     ['$const26.6.0']
    $const26.6.0 = const(NoneType, None)     ['$const26.6.0']
    $const26.6.0 = const(NoneType, None)     ['$const26.6.0']
2025-06-13 07:34:43,091 - print_capture - INFO -     $const26.6.0 = const(NoneType, None)     ['$const26.6.0']
    $28return_value.7 = cast(value=$const26.6.0) ['$28return_value.7', '$const26.6.0']
    $28return_value.7 = cast(value=$const26.6.0) ['$28return_value.7', '$const26.6.0']
2025-06-13 07:34:43,091 - print_capture - INFO -     $28return_value.7 = cast(value=$const26.6.0) ['$28return_value.7', '$const26.6.0']
    $28return_value.7 = cast(value=$const26.6.0) ['$28return_value.7', '$const26.6.0']
    $28return_value.7 = cast(value=$const26.6.0) ['$28return_value.7', '$const26.6.0']
2025-06-13 07:34:43,091 - print_capture - INFO -     $28return_value.7 = cast(value=$const26.6.0) ['$28return_value.7', '$const26.6.0']
    return $28return_value.7                 ['$28return_value.7']
    return $28return_value.7                 ['$28return_value.7']
2025-06-13 07:34:43,091 - print_capture - INFO -     return $28return_value.7                 ['$28return_value.7']
    return $28return_value.7                 ['$28return_value.7']
    return $28return_value.7                 ['$28return_value.7']
2025-06-13 07:34:43,091 - print_capture - INFO -     return $28return_value.7                 ['$28return_value.7']
label 30:
label 30:
2025-06-13 07:34:43,091 - print_capture - INFO - label 30:
label 30:
label 30:
2025-06-13 07:34:43,091 - print_capture - INFO - label 30:
    $32load_attr.1 = getattr(value=a, attr=_kind) ['$32load_attr.1', 'a']
    $32load_attr.1 = getattr(value=a, attr=_kind) ['$32load_attr.1', 'a']
2025-06-13 07:34:43,091 - print_capture - INFO -     $32load_attr.1 = getattr(value=a, attr=_kind) ['$32load_attr.1', 'a']
    $32load_attr.1 = getattr(value=a, attr=_kind) ['$32load_attr.1', 'a']
    $32load_attr.1 = getattr(value=a, attr=_kind) ['$32load_attr.1', 'a']
2025-06-13 07:34:43,091 - print_capture - INFO -     $32load_attr.1 = getattr(value=a, attr=_kind) ['$32load_attr.1', 'a']
    $34load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$34load_global.2']
    $34load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$34load_global.2']
2025-06-13 07:34:43,091 - print_capture - INFO -     $34load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$34load_global.2']
    $34load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$34load_global.2']
    $34load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$34load_global.2']
2025-06-13 07:34:43,091 - print_capture - INFO -     $34load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$34load_global.2']
    $36compare_op.3 = $32load_attr.1 == $34load_global.2 ['$32load_attr.1', '$34load_global.2', '$36compare_op.3']
    $36compare_op.3 = $32load_attr.1 == $34load_global.2 ['$32load_attr.1', '$34load_global.2', '$36compare_op.3']
2025-06-13 07:34:43,091 - print_capture - INFO -     $36compare_op.3 = $32load_attr.1 == $34load_global.2 ['$32load_attr.1', '$34load_global.2', '$36compare_op.3']
    $36compare_op.3 = $32load_attr.1 == $34load_global.2 ['$32load_attr.1', '$34load_global.2', '$36compare_op.3']
    $36compare_op.3 = $32load_attr.1 == $34load_global.2 ['$32load_attr.1', '$34load_global.2', '$36compare_op.3']
2025-06-13 07:34:43,091 - print_capture - INFO -     $36compare_op.3 = $32load_attr.1 == $34load_global.2 ['$32load_attr.1', '$34load_global.2', '$36compare_op.3']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
2025-06-13 07:34:43,091 - print_capture - INFO -     bool38 = global(bool: <class 'bool'>)    ['bool38']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
2025-06-13 07:34:43,091 - print_capture - INFO -     bool38 = global(bool: <class 'bool'>)    ['bool38']
    $38pred = call bool38($36compare_op.3, func=bool38, args=(Var($36compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$38pred', 'bool38']
    $38pred = call bool38($36compare_op.3, func=bool38, args=(Var($36compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$38pred', 'bool38']
2025-06-13 07:34:43,091 - print_capture - INFO -     $38pred = call bool38($36compare_op.3, func=bool38, args=(Var($36compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$38pred', 'bool38']
    $38pred = call bool38($36compare_op.3, func=bool38, args=(Var($36compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$38pred', 'bool38']
    $38pred = call bool38($36compare_op.3, func=bool38, args=(Var($36compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$38pred', 'bool38']
2025-06-13 07:34:43,091 - print_capture - INFO -     $38pred = call bool38($36compare_op.3, func=bool38, args=(Var($36compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$38pred', 'bool38']
    branch $38pred, 40, 58                   ['$38pred']
    branch $38pred, 40, 58                   ['$38pred']
2025-06-13 07:34:43,091 - print_capture - INFO -     branch $38pred, 40, 58                   ['$38pred']
    branch $38pred, 40, 58                   ['$38pred']
    branch $38pred, 40, 58                   ['$38pred']
2025-06-13 07:34:43,091 - print_capture - INFO -     branch $38pred, 40, 58                   ['$38pred']
label 40:
label 40:
2025-06-13 07:34:43,091 - print_capture - INFO - label 40:
label 40:
label 40:
2025-06-13 07:34:43,091 - print_capture - INFO - label 40:
    $40load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$40load_global.0']
    $40load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$40load_global.0']
2025-06-13 07:34:43,091 - print_capture - INFO -     $40load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$40load_global.0']
    $40load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$40load_global.0']
    $40load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$40load_global.0']
2025-06-13 07:34:43,091 - print_capture - INFO -     $40load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$40load_global.0']
    $44load_attr.2 = getattr(value=a, attr=_data) ['$44load_attr.2', 'a']
    $44load_attr.2 = getattr(value=a, attr=_data) ['$44load_attr.2', 'a']
2025-06-13 07:34:43,091 - print_capture - INFO -     $44load_attr.2 = getattr(value=a, attr=_data) ['$44load_attr.2', 'a']
    $44load_attr.2 = getattr(value=a, attr=_data) ['$44load_attr.2', 'a']
    $44load_attr.2 = getattr(value=a, attr=_data) ['$44load_attr.2', 'a']
2025-06-13 07:34:43,091 - print_capture - INFO -     $44load_attr.2 = getattr(value=a, attr=_data) ['$44load_attr.2', 'a']
    $50call_function.5 = call $40load_global.0($44load_attr.2, i, ch, func=$40load_global.0, args=[Var($44load_attr.2, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.0', '$44load_attr.2', '$50call_function.5', 'ch', 'i']
    $50call_function.5 = call $40load_global.0($44load_attr.2, i, ch, func=$40load_global.0, args=[Var($44load_attr.2, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.0', '$44load_attr.2', '$50call_function.5', 'ch', 'i']
2025-06-13 07:34:43,091 - print_capture - INFO -     $50call_function.5 = call $40load_global.0($44load_attr.2, i, ch, func=$40load_global.0, args=[Var($44load_attr.2, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.0', '$44load_attr.2', '$50call_function.5', 'ch', 'i']
    $50call_function.5 = call $40load_global.0($44load_attr.2, i, ch, func=$40load_global.0, args=[Var($44load_attr.2, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.0', '$44load_attr.2', '$50call_function.5', 'ch', 'i']
    $50call_function.5 = call $40load_global.0($44load_attr.2, i, ch, func=$40load_global.0, args=[Var($44load_attr.2, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.0', '$44load_attr.2', '$50call_function.5', 'ch', 'i']
2025-06-13 07:34:43,091 - print_capture - INFO -     $50call_function.5 = call $40load_global.0($44load_attr.2, i, ch, func=$40load_global.0, args=[Var($44load_attr.2, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.0', '$44load_attr.2', '$50call_function.5', 'ch', 'i']
    $const54.6.0 = const(NoneType, None)     ['$const54.6.0']
    $const54.6.0 = const(NoneType, None)     ['$const54.6.0']
2025-06-13 07:34:43,091 - print_capture - INFO -     $const54.6.0 = const(NoneType, None)     ['$const54.6.0']
    $const54.6.0 = const(NoneType, None)     ['$const54.6.0']
    $const54.6.0 = const(NoneType, None)     ['$const54.6.0']
2025-06-13 07:34:43,091 - print_capture - INFO -     $const54.6.0 = const(NoneType, None)     ['$const54.6.0']
    $56return_value.7 = cast(value=$const54.6.0) ['$56return_value.7', '$const54.6.0']
    $56return_value.7 = cast(value=$const54.6.0) ['$56return_value.7', '$const54.6.0']
2025-06-13 07:34:43,091 - print_capture - INFO -     $56return_value.7 = cast(value=$const54.6.0) ['$56return_value.7', '$const54.6.0']
    $56return_value.7 = cast(value=$const54.6.0) ['$56return_value.7', '$const54.6.0']
    $56return_value.7 = cast(value=$const54.6.0) ['$56return_value.7', '$const54.6.0']
2025-06-13 07:34:43,091 - print_capture - INFO -     $56return_value.7 = cast(value=$const54.6.0) ['$56return_value.7', '$const54.6.0']
    return $56return_value.7                 ['$56return_value.7']
    return $56return_value.7                 ['$56return_value.7']
2025-06-13 07:34:43,091 - print_capture - INFO -     return $56return_value.7                 ['$56return_value.7']
    return $56return_value.7                 ['$56return_value.7']
    return $56return_value.7                 ['$56return_value.7']
2025-06-13 07:34:43,091 - print_capture - INFO -     return $56return_value.7                 ['$56return_value.7']
label 58:
label 58:
2025-06-13 07:34:43,091 - print_capture - INFO - label 58:
label 58:
label 58:
2025-06-13 07:34:43,091 - print_capture - INFO - label 58:
    $60load_attr.1 = getattr(value=a, attr=_kind) ['$60load_attr.1', 'a']
    $60load_attr.1 = getattr(value=a, attr=_kind) ['$60load_attr.1', 'a']
2025-06-13 07:34:43,091 - print_capture - INFO -     $60load_attr.1 = getattr(value=a, attr=_kind) ['$60load_attr.1', 'a']
    $60load_attr.1 = getattr(value=a, attr=_kind) ['$60load_attr.1', 'a']
    $60load_attr.1 = getattr(value=a, attr=_kind) ['$60load_attr.1', 'a']
2025-06-13 07:34:43,091 - print_capture - INFO -     $60load_attr.1 = getattr(value=a, attr=_kind) ['$60load_attr.1', 'a']
    $62load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$62load_global.2']
    $62load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$62load_global.2']
2025-06-13 07:34:43,091 - print_capture - INFO -     $62load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$62load_global.2']
    $62load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$62load_global.2']
    $62load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$62load_global.2']
2025-06-13 07:34:43,091 - print_capture - INFO -     $62load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$62load_global.2']
    $64compare_op.3 = $60load_attr.1 == $62load_global.2 ['$60load_attr.1', '$62load_global.2', '$64compare_op.3']
    $64compare_op.3 = $60load_attr.1 == $62load_global.2 ['$60load_attr.1', '$62load_global.2', '$64compare_op.3']
2025-06-13 07:34:43,091 - print_capture - INFO -     $64compare_op.3 = $60load_attr.1 == $62load_global.2 ['$60load_attr.1', '$62load_global.2', '$64compare_op.3']
    $64compare_op.3 = $60load_attr.1 == $62load_global.2 ['$60load_attr.1', '$62load_global.2', '$64compare_op.3']
    $64compare_op.3 = $60load_attr.1 == $62load_global.2 ['$60load_attr.1', '$62load_global.2', '$64compare_op.3']
2025-06-13 07:34:43,092 - print_capture - INFO -     $64compare_op.3 = $60load_attr.1 == $62load_global.2 ['$60load_attr.1', '$62load_global.2', '$64compare_op.3']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 07:34:43,092 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 07:34:43,092 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.3, func=bool66, args=(Var($64compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.3', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.3, func=bool66, args=(Var($64compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.3', '$66pred', 'bool66']
2025-06-13 07:34:43,092 - print_capture - INFO -     $66pred = call bool66($64compare_op.3, func=bool66, args=(Var($64compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.3', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.3, func=bool66, args=(Var($64compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.3', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.3, func=bool66, args=(Var($64compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.3', '$66pred', 'bool66']
2025-06-13 07:34:43,092 - print_capture - INFO -     $66pred = call bool66($64compare_op.3, func=bool66, args=(Var($64compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.3', '$66pred', 'bool66']
    branch $66pred, 68, 86                   ['$66pred']
    branch $66pred, 68, 86                   ['$66pred']
2025-06-13 07:34:43,092 - print_capture - INFO -     branch $66pred, 68, 86                   ['$66pred']
    branch $66pred, 68, 86                   ['$66pred']
    branch $66pred, 68, 86                   ['$66pred']
2025-06-13 07:34:43,092 - print_capture - INFO -     branch $66pred, 68, 86                   ['$66pred']
label 68:
label 68:
2025-06-13 07:34:43,092 - print_capture - INFO - label 68:
label 68:
label 68:
2025-06-13 07:34:43,092 - print_capture - INFO - label 68:
    $68load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$68load_global.0']
    $68load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$68load_global.0']
2025-06-13 07:34:43,092 - print_capture - INFO -     $68load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$68load_global.0']
    $68load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$68load_global.0']
    $68load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$68load_global.0']
2025-06-13 07:34:43,092 - print_capture - INFO -     $68load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$68load_global.0']
    $72load_attr.2 = getattr(value=a, attr=_data) ['$72load_attr.2', 'a']
    $72load_attr.2 = getattr(value=a, attr=_data) ['$72load_attr.2', 'a']
2025-06-13 07:34:43,092 - print_capture - INFO -     $72load_attr.2 = getattr(value=a, attr=_data) ['$72load_attr.2', 'a']
    $72load_attr.2 = getattr(value=a, attr=_data) ['$72load_attr.2', 'a']
    $72load_attr.2 = getattr(value=a, attr=_data) ['$72load_attr.2', 'a']
2025-06-13 07:34:43,092 - print_capture - INFO -     $72load_attr.2 = getattr(value=a, attr=_data) ['$72load_attr.2', 'a']
    $78call_function.5 = call $68load_global.0($72load_attr.2, i, ch, func=$68load_global.0, args=[Var($72load_attr.2, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72load_attr.2', '$78call_function.5', 'ch', 'i']
    $78call_function.5 = call $68load_global.0($72load_attr.2, i, ch, func=$68load_global.0, args=[Var($72load_attr.2, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72load_attr.2', '$78call_function.5', 'ch', 'i']
2025-06-13 07:34:43,092 - print_capture - INFO -     $78call_function.5 = call $68load_global.0($72load_attr.2, i, ch, func=$68load_global.0, args=[Var($72load_attr.2, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72load_attr.2', '$78call_function.5', 'ch', 'i']
    $78call_function.5 = call $68load_global.0($72load_attr.2, i, ch, func=$68load_global.0, args=[Var($72load_attr.2, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72load_attr.2', '$78call_function.5', 'ch', 'i']
    $78call_function.5 = call $68load_global.0($72load_attr.2, i, ch, func=$68load_global.0, args=[Var($72load_attr.2, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72load_attr.2', '$78call_function.5', 'ch', 'i']
2025-06-13 07:34:43,092 - print_capture - INFO -     $78call_function.5 = call $68load_global.0($72load_attr.2, i, ch, func=$68load_global.0, args=[Var($72load_attr.2, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72load_attr.2', '$78call_function.5', 'ch', 'i']
    $const82.6.0 = const(NoneType, None)     ['$const82.6.0']
    $const82.6.0 = const(NoneType, None)     ['$const82.6.0']
2025-06-13 07:34:43,092 - print_capture - INFO -     $const82.6.0 = const(NoneType, None)     ['$const82.6.0']
    $const82.6.0 = const(NoneType, None)     ['$const82.6.0']
    $const82.6.0 = const(NoneType, None)     ['$const82.6.0']
2025-06-13 07:34:43,092 - print_capture - INFO -     $const82.6.0 = const(NoneType, None)     ['$const82.6.0']
    $84return_value.7 = cast(value=$const82.6.0) ['$84return_value.7', '$const82.6.0']
    $84return_value.7 = cast(value=$const82.6.0) ['$84return_value.7', '$const82.6.0']
2025-06-13 07:34:43,092 - print_capture - INFO -     $84return_value.7 = cast(value=$const82.6.0) ['$84return_value.7', '$const82.6.0']
    $84return_value.7 = cast(value=$const82.6.0) ['$84return_value.7', '$const82.6.0']
    $84return_value.7 = cast(value=$const82.6.0) ['$84return_value.7', '$const82.6.0']
2025-06-13 07:34:43,092 - print_capture - INFO -     $84return_value.7 = cast(value=$const82.6.0) ['$84return_value.7', '$const82.6.0']
    return $84return_value.7                 ['$84return_value.7']
    return $84return_value.7                 ['$84return_value.7']
2025-06-13 07:34:43,092 - print_capture - INFO -     return $84return_value.7                 ['$84return_value.7']
    return $84return_value.7                 ['$84return_value.7']
    return $84return_value.7                 ['$84return_value.7']
2025-06-13 07:34:43,092 - print_capture - INFO -     return $84return_value.7                 ['$84return_value.7']
label 86:
label 86:
2025-06-13 07:34:43,092 - print_capture - INFO - label 86:
label 86:
label 86:
2025-06-13 07:34:43,092 - print_capture - INFO - label 86:
    $86load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$86load_global.0']
    $86load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$86load_global.0']
2025-06-13 07:34:43,092 - print_capture - INFO -     $86load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$86load_global.0']
    $86load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$86load_global.0']
    $86load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$86load_global.0']
2025-06-13 07:34:43,092 - print_capture - INFO -     $86load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$86load_global.0']
    $const88.1.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const88.1.1']
    $const88.1.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const88.1.1']
2025-06-13 07:34:43,092 - print_capture - INFO -     $const88.1.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const88.1.1']
    $const88.1.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const88.1.1']
    $const88.1.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const88.1.1']
2025-06-13 07:34:43,092 - print_capture - INFO -     $const88.1.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const88.1.1']
    $90call_function.2 = call $86load_global.0($const88.1.1, func=$86load_global.0, args=[Var($const88.1.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.0', '$90call_function.2', '$const88.1.1']
    $90call_function.2 = call $86load_global.0($const88.1.1, func=$86load_global.0, args=[Var($const88.1.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.0', '$90call_function.2', '$const88.1.1']
2025-06-13 07:34:43,092 - print_capture - INFO -     $90call_function.2 = call $86load_global.0($const88.1.1, func=$86load_global.0, args=[Var($const88.1.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.0', '$90call_function.2', '$const88.1.1']
    $90call_function.2 = call $86load_global.0($const88.1.1, func=$86load_global.0, args=[Var($const88.1.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.0', '$90call_function.2', '$const88.1.1']
    $90call_function.2 = call $86load_global.0($const88.1.1, func=$86load_global.0, args=[Var($const88.1.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.0', '$90call_function.2', '$const88.1.1']
2025-06-13 07:34:43,092 - print_capture - INFO -     $90call_function.2 = call $86load_global.0($const88.1.1, func=$86load_global.0, args=[Var($const88.1.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.0', '$90call_function.2', '$const88.1.1']
    raise $90call_function.2                 ['$90call_function.2']
    raise $90call_function.2                 ['$90call_function.2']
2025-06-13 07:34:43,092 - print_capture - INFO -     raise $90call_function.2                 ['$90call_function.2']
    raise $90call_function.2                 ['$90call_function.2']
    raise $90call_function.2                 ['$90call_function.2']
2025-06-13 07:34:43,092 - print_capture - INFO -     raise $90call_function.2                 ['$90call_function.2']
label 0:
label 0:
2025-06-13 07:34:43,138 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,138 - print_capture - INFO - label 0:
    dst = arg(0, name=dst)                   ['dst']
    dst = arg(0, name=dst)                   ['dst']
2025-06-13 07:34:43,138 - print_capture - INFO -     dst = arg(0, name=dst)                   ['dst']
    dst = arg(0, name=dst)                   ['dst']
    dst = arg(0, name=dst)                   ['dst']
2025-06-13 07:34:43,138 - print_capture - INFO -     dst = arg(0, name=dst)                   ['dst']
    dst_offset = arg(1, name=dst_offset)     ['dst_offset']
    dst_offset = arg(1, name=dst_offset)     ['dst_offset']
2025-06-13 07:34:43,138 - print_capture - INFO -     dst_offset = arg(1, name=dst_offset)     ['dst_offset']
    dst_offset = arg(1, name=dst_offset)     ['dst_offset']
    dst_offset = arg(1, name=dst_offset)     ['dst_offset']
2025-06-13 07:34:43,138 - print_capture - INFO -     dst_offset = arg(1, name=dst_offset)     ['dst_offset']
    src = arg(2, name=src)                   ['src']
    src = arg(2, name=src)                   ['src']
2025-06-13 07:34:43,138 - print_capture - INFO -     src = arg(2, name=src)                   ['src']
    src = arg(2, name=src)                   ['src']
    src = arg(2, name=src)                   ['src']
2025-06-13 07:34:43,138 - print_capture - INFO -     src = arg(2, name=src)                   ['src']
    src_offset = arg(3, name=src_offset)     ['src_offset']
    src_offset = arg(3, name=src_offset)     ['src_offset']
2025-06-13 07:34:43,138 - print_capture - INFO -     src_offset = arg(3, name=src_offset)     ['src_offset']
    src_offset = arg(3, name=src_offset)     ['src_offset']
    src_offset = arg(3, name=src_offset)     ['src_offset']
2025-06-13 07:34:43,138 - print_capture - INFO -     src_offset = arg(3, name=src_offset)     ['src_offset']
    n = arg(4, name=n)                       ['n']
    n = arg(4, name=n)                       ['n']
2025-06-13 07:34:43,138 - print_capture - INFO -     n = arg(4, name=n)                       ['n']
    n = arg(4, name=n)                       ['n']
    n = arg(4, name=n)                       ['n']
2025-06-13 07:34:43,138 - print_capture - INFO -     n = arg(4, name=n)                       ['n']
    $4load_attr.1 = getattr(value=src, attr=_kind) ['$4load_attr.1', 'src']
    $4load_attr.1 = getattr(value=src, attr=_kind) ['$4load_attr.1', 'src']
2025-06-13 07:34:43,138 - print_capture - INFO -     $4load_attr.1 = getattr(value=src, attr=_kind) ['$4load_attr.1', 'src']
    $4load_attr.1 = getattr(value=src, attr=_kind) ['$4load_attr.1', 'src']
    $4load_attr.1 = getattr(value=src, attr=_kind) ['$4load_attr.1', 'src']
2025-06-13 07:34:43,138 - print_capture - INFO -     $4load_attr.1 = getattr(value=src, attr=_kind) ['$4load_attr.1', 'src']
    $8load_attr.3 = getattr(value=dst, attr=_kind) ['$8load_attr.3', 'dst']
    $8load_attr.3 = getattr(value=dst, attr=_kind) ['$8load_attr.3', 'dst']
2025-06-13 07:34:43,138 - print_capture - INFO -     $8load_attr.3 = getattr(value=dst, attr=_kind) ['$8load_attr.3', 'dst']
    $8load_attr.3 = getattr(value=dst, attr=_kind) ['$8load_attr.3', 'dst']
    $8load_attr.3 = getattr(value=dst, attr=_kind) ['$8load_attr.3', 'dst']
2025-06-13 07:34:43,139 - print_capture - INFO -     $8load_attr.3 = getattr(value=dst, attr=_kind) ['$8load_attr.3', 'dst']
    $10compare_op.4 = $4load_attr.1 == $8load_attr.3 ['$10compare_op.4', '$4load_attr.1', '$8load_attr.3']
    $10compare_op.4 = $4load_attr.1 == $8load_attr.3 ['$10compare_op.4', '$4load_attr.1', '$8load_attr.3']
2025-06-13 07:34:43,139 - print_capture - INFO -     $10compare_op.4 = $4load_attr.1 == $8load_attr.3 ['$10compare_op.4', '$4load_attr.1', '$8load_attr.3']
    $10compare_op.4 = $4load_attr.1 == $8load_attr.3 ['$10compare_op.4', '$4load_attr.1', '$8load_attr.3']
    $10compare_op.4 = $4load_attr.1 == $8load_attr.3 ['$10compare_op.4', '$4load_attr.1', '$8load_attr.3']
2025-06-13 07:34:43,139 - print_capture - INFO -     $10compare_op.4 = $4load_attr.1 == $8load_attr.3 ['$10compare_op.4', '$4load_attr.1', '$8load_attr.3']
    bool12 = global(bool: <class 'bool'>)    ['bool12']
    bool12 = global(bool: <class 'bool'>)    ['bool12']
2025-06-13 07:34:43,139 - print_capture - INFO -     bool12 = global(bool: <class 'bool'>)    ['bool12']
    bool12 = global(bool: <class 'bool'>)    ['bool12']
    bool12 = global(bool: <class 'bool'>)    ['bool12']
2025-06-13 07:34:43,139 - print_capture - INFO -     bool12 = global(bool: <class 'bool'>)    ['bool12']
    $12pred = call bool12($10compare_op.4, func=bool12, args=(Var($10compare_op.4, unicode.py:1769),), kws=(), vararg=None, varkwarg=None, target=None) ['$10compare_op.4', '$12pred', 'bool12']
    $12pred = call bool12($10compare_op.4, func=bool12, args=(Var($10compare_op.4, unicode.py:1769),), kws=(), vararg=None, varkwarg=None, target=None) ['$10compare_op.4', '$12pred', 'bool12']
2025-06-13 07:34:43,139 - print_capture - INFO -     $12pred = call bool12($10compare_op.4, func=bool12, args=(Var($10compare_op.4, unicode.py:1769),), kws=(), vararg=None, varkwarg=None, target=None) ['$10compare_op.4', '$12pred', 'bool12']
    $12pred = call bool12($10compare_op.4, func=bool12, args=(Var($10compare_op.4, unicode.py:1769),), kws=(), vararg=None, varkwarg=None, target=None) ['$10compare_op.4', '$12pred', 'bool12']
    $12pred = call bool12($10compare_op.4, func=bool12, args=(Var($10compare_op.4, unicode.py:1769),), kws=(), vararg=None, varkwarg=None, target=None) ['$10compare_op.4', '$12pred', 'bool12']
2025-06-13 07:34:43,139 - print_capture - INFO -     $12pred = call bool12($10compare_op.4, func=bool12, args=(Var($10compare_op.4, unicode.py:1769),), kws=(), vararg=None, varkwarg=None, target=None) ['$10compare_op.4', '$12pred', 'bool12']
    branch $12pred, 14, 76                   ['$12pred']
    branch $12pred, 14, 76                   ['$12pred']
2025-06-13 07:34:43,139 - print_capture - INFO -     branch $12pred, 14, 76                   ['$12pred']
    branch $12pred, 14, 76                   ['$12pred']
    branch $12pred, 14, 76                   ['$12pred']
2025-06-13 07:34:43,139 - print_capture - INFO -     branch $12pred, 14, 76                   ['$12pred']
label 14:
label 14:
2025-06-13 07:34:43,139 - print_capture - INFO - label 14:
label 14:
label 14:
2025-06-13 07:34:43,139 - print_capture - INFO - label 14:
    $14load_global.0 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x7f28ab7cb250>) ['$14load_global.0']
    $14load_global.0 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x7f28ab7cb250>) ['$14load_global.0']
2025-06-13 07:34:43,139 - print_capture - INFO -     $14load_global.0 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x7f28ab7cb250>) ['$14load_global.0']
    $14load_global.0 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x7f28ab7cb250>) ['$14load_global.0']
    $14load_global.0 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x7f28ab7cb250>) ['$14load_global.0']
2025-06-13 07:34:43,139 - print_capture - INFO -     $14load_global.0 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x7f28ab7cb250>) ['$14load_global.0']
    $18load_attr.2 = getattr(value=src, attr=_kind) ['$18load_attr.2', 'src']
    $18load_attr.2 = getattr(value=src, attr=_kind) ['$18load_attr.2', 'src']
2025-06-13 07:34:43,139 - print_capture - INFO -     $18load_attr.2 = getattr(value=src, attr=_kind) ['$18load_attr.2', 'src']
    $18load_attr.2 = getattr(value=src, attr=_kind) ['$18load_attr.2', 'src']
    $18load_attr.2 = getattr(value=src, attr=_kind) ['$18load_attr.2', 'src']
2025-06-13 07:34:43,139 - print_capture - INFO -     $18load_attr.2 = getattr(value=src, attr=_kind) ['$18load_attr.2', 'src']
    byte_width = call $14load_global.0($18load_attr.2, func=$14load_global.0, args=[Var($18load_attr.2, unicode.py:1770)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_global.0', '$18load_attr.2', 'byte_width']
    byte_width = call $14load_global.0($18load_attr.2, func=$14load_global.0, args=[Var($18load_attr.2, unicode.py:1770)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_global.0', '$18load_attr.2', 'byte_width']
2025-06-13 07:34:43,139 - print_capture - INFO -     byte_width = call $14load_global.0($18load_attr.2, func=$14load_global.0, args=[Var($18load_attr.2, unicode.py:1770)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_global.0', '$18load_attr.2', 'byte_width']
    byte_width = call $14load_global.0($18load_attr.2, func=$14load_global.0, args=[Var($18load_attr.2, unicode.py:1770)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_global.0', '$18load_attr.2', 'byte_width']
    byte_width = call $14load_global.0($18load_attr.2, func=$14load_global.0, args=[Var($18load_attr.2, unicode.py:1770)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_global.0', '$18load_attr.2', 'byte_width']
2025-06-13 07:34:43,139 - print_capture - INFO -     byte_width = call $14load_global.0($18load_attr.2, func=$14load_global.0, args=[Var($18load_attr.2, unicode.py:1770)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_global.0', '$18load_attr.2', 'byte_width']
    src_byte_offset = byte_width * src_offset ['byte_width', 'src_byte_offset', 'src_offset']
    src_byte_offset = byte_width * src_offset ['byte_width', 'src_byte_offset', 'src_offset']
2025-06-13 07:34:43,139 - print_capture - INFO -     src_byte_offset = byte_width * src_offset ['byte_width', 'src_byte_offset', 'src_offset']
    src_byte_offset = byte_width * src_offset ['byte_width', 'src_byte_offset', 'src_offset']
    src_byte_offset = byte_width * src_offset ['byte_width', 'src_byte_offset', 'src_offset']
2025-06-13 07:34:43,139 - print_capture - INFO -     src_byte_offset = byte_width * src_offset ['byte_width', 'src_byte_offset', 'src_offset']
    dst_byte_offset = byte_width * dst_offset ['byte_width', 'dst_byte_offset', 'dst_offset']
    dst_byte_offset = byte_width * dst_offset ['byte_width', 'dst_byte_offset', 'dst_offset']
2025-06-13 07:34:43,139 - print_capture - INFO -     dst_byte_offset = byte_width * dst_offset ['byte_width', 'dst_byte_offset', 'dst_offset']
    dst_byte_offset = byte_width * dst_offset ['byte_width', 'dst_byte_offset', 'dst_offset']
    dst_byte_offset = byte_width * dst_offset ['byte_width', 'dst_byte_offset', 'dst_offset']
2025-06-13 07:34:43,139 - print_capture - INFO -     dst_byte_offset = byte_width * dst_offset ['byte_width', 'dst_byte_offset', 'dst_offset']
    nbytes = n * byte_width                  ['byte_width', 'n', 'nbytes']
    nbytes = n * byte_width                  ['byte_width', 'n', 'nbytes']
2025-06-13 07:34:43,139 - print_capture - INFO -     nbytes = n * byte_width                  ['byte_width', 'n', 'nbytes']
    nbytes = n * byte_width                  ['byte_width', 'n', 'nbytes']
    nbytes = n * byte_width                  ['byte_width', 'n', 'nbytes']
2025-06-13 07:34:43,139 - print_capture - INFO -     nbytes = n * byte_width                  ['byte_width', 'n', 'nbytes']
    $48load_global.13 = global(memcpy_region: <intrinsic memcpy_region>) ['$48load_global.13']
    $48load_global.13 = global(memcpy_region: <intrinsic memcpy_region>) ['$48load_global.13']
2025-06-13 07:34:43,139 - print_capture - INFO -     $48load_global.13 = global(memcpy_region: <intrinsic memcpy_region>) ['$48load_global.13']
    $48load_global.13 = global(memcpy_region: <intrinsic memcpy_region>) ['$48load_global.13']
    $48load_global.13 = global(memcpy_region: <intrinsic memcpy_region>) ['$48load_global.13']
2025-06-13 07:34:43,255 - print_capture - INFO -     $48load_global.13 = global(memcpy_region: <intrinsic memcpy_region>) ['$48load_global.13']
    $52load_attr.15 = getattr(value=dst, attr=_data) ['$52load_attr.15', 'dst']
    $52load_attr.15 = getattr(value=dst, attr=_data) ['$52load_attr.15', 'dst']
2025-06-13 07:34:43,256 - print_capture - INFO -     $52load_attr.15 = getattr(value=dst, attr=_data) ['$52load_attr.15', 'dst']
    $52load_attr.15 = getattr(value=dst, attr=_data) ['$52load_attr.15', 'dst']
    $52load_attr.15 = getattr(value=dst, attr=_data) ['$52load_attr.15', 'dst']
2025-06-13 07:34:43,256 - print_capture - INFO -     $52load_attr.15 = getattr(value=dst, attr=_data) ['$52load_attr.15', 'dst']
    $58load_attr.18 = getattr(value=src, attr=_data) ['$58load_attr.18', 'src']
    $58load_attr.18 = getattr(value=src, attr=_data) ['$58load_attr.18', 'src']
2025-06-13 07:34:43,256 - print_capture - INFO -     $58load_attr.18 = getattr(value=src, attr=_data) ['$58load_attr.18', 'src']
    $58load_attr.18 = getattr(value=src, attr=_data) ['$58load_attr.18', 'src']
    $58load_attr.18 = getattr(value=src, attr=_data) ['$58load_attr.18', 'src']
2025-06-13 07:34:43,256 - print_capture - INFO -     $58load_attr.18 = getattr(value=src, attr=_data) ['$58load_attr.18', 'src']
    $const64.21.1 = const(int, 1)            ['$const64.21.1']
    $const64.21.1 = const(int, 1)            ['$const64.21.1']
2025-06-13 07:34:43,257 - print_capture - INFO -     $const64.21.1 = const(int, 1)            ['$const64.21.1']
    $const64.21.1 = const(int, 1)            ['$const64.21.1']
    $const64.21.1 = const(int, 1)            ['$const64.21.1']
2025-06-13 07:34:43,257 - print_capture - INFO -     $const64.21.1 = const(int, 1)            ['$const64.21.1']
    $68call_function_kw.23 = call $48load_global.13($52load_attr.15, dst_byte_offset, $58load_attr.18, src_byte_offset, nbytes, func=$48load_global.13, args=[Var($52load_attr.15, unicode.py:1774), Var(dst_byte_offset, unicode.py:1772), Var($58load_attr.18, unicode.py:1774), Var(src_byte_offset, unicode.py:1771), Var(nbytes, unicode.py:1773)], kws=[('align', Var($const64.21.1, unicode.py:1775))], vararg=None, varkwarg=None, target=None) ['$48load_global.13', '$52load_attr.15', '$58load_attr.18', '$68call_function_kw.23', '$const64.21.1', 'dst_byte_offset', 'nbytes', 'src_byte_offset']
    $68call_function_kw.23 = call $48load_global.13($52load_attr.15, dst_byte_offset, $58load_attr.18, src_byte_offset, nbytes, func=$48load_global.13, args=[Var($52load_attr.15, unicode.py:1774), Var(dst_byte_offset, unicode.py:1772), Var($58load_attr.18, unicode.py:1774), Var(src_byte_offset, unicode.py:1771), Var(nbytes, unicode.py:1773)], kws=[('align', Var($const64.21.1, unicode.py:1775))], vararg=None, varkwarg=None, target=None) ['$48load_global.13', '$52load_attr.15', '$58load_attr.18', '$68call_function_kw.23', '$const64.21.1', 'dst_byte_offset', 'nbytes', 'src_byte_offset']
2025-06-13 07:34:43,257 - print_capture - INFO -     $68call_function_kw.23 = call $48load_global.13($52load_attr.15, dst_byte_offset, $58load_attr.18, src_byte_offset, nbytes, func=$48load_global.13, args=[Var($52load_attr.15, unicode.py:1774), Var(dst_byte_offset, unicode.py:1772), Var($58load_attr.18, unicode.py:1774), Var(src_byte_offset, unicode.py:1771), Var(nbytes, unicode.py:1773)], kws=[('align', Var($const64.21.1, unicode.py:1775))], vararg=None, varkwarg=None, target=None) ['$48load_global.13', '$52load_attr.15', '$58load_attr.18', '$68call_function_kw.23', '$const64.21.1', 'dst_byte_offset', 'nbytes', 'src_byte_offset']
    $68call_function_kw.23 = call $48load_global.13($52load_attr.15, dst_byte_offset, $58load_attr.18, src_byte_offset, nbytes, func=$48load_global.13, args=[Var($52load_attr.15, unicode.py:1774), Var(dst_byte_offset, unicode.py:1772), Var($58load_attr.18, unicode.py:1774), Var(src_byte_offset, unicode.py:1771), Var(nbytes, unicode.py:1773)], kws=[('align', Var($const64.21.1, unicode.py:1775))], vararg=None, varkwarg=None, target=None) ['$48load_global.13', '$52load_attr.15', '$58load_attr.18', '$68call_function_kw.23', '$const64.21.1', 'dst_byte_offset', 'nbytes', 'src_byte_offset']
    $68call_function_kw.23 = call $48load_global.13($52load_attr.15, dst_byte_offset, $58load_attr.18, src_byte_offset, nbytes, func=$48load_global.13, args=[Var($52load_attr.15, unicode.py:1774), Var(dst_byte_offset, unicode.py:1772), Var($58load_attr.18, unicode.py:1774), Var(src_byte_offset, unicode.py:1771), Var(nbytes, unicode.py:1773)], kws=[('align', Var($const64.21.1, unicode.py:1775))], vararg=None, varkwarg=None, target=None) ['$48load_global.13', '$52load_attr.15', '$58load_attr.18', '$68call_function_kw.23', '$const64.21.1', 'dst_byte_offset', 'nbytes', 'src_byte_offset']
2025-06-13 07:34:43,257 - print_capture - INFO -     $68call_function_kw.23 = call $48load_global.13($52load_attr.15, dst_byte_offset, $58load_attr.18, src_byte_offset, nbytes, func=$48load_global.13, args=[Var($52load_attr.15, unicode.py:1774), Var(dst_byte_offset, unicode.py:1772), Var($58load_attr.18, unicode.py:1774), Var(src_byte_offset, unicode.py:1771), Var(nbytes, unicode.py:1773)], kws=[('align', Var($const64.21.1, unicode.py:1775))], vararg=None, varkwarg=None, target=None) ['$48load_global.13', '$52load_attr.15', '$58load_attr.18', '$68call_function_kw.23', '$const64.21.1', 'dst_byte_offset', 'nbytes', 'src_byte_offset']
    $const72.24.0 = const(NoneType, None)    ['$const72.24.0']
    $const72.24.0 = const(NoneType, None)    ['$const72.24.0']
2025-06-13 07:34:43,257 - print_capture - INFO -     $const72.24.0 = const(NoneType, None)    ['$const72.24.0']
    $const72.24.0 = const(NoneType, None)    ['$const72.24.0']
    $const72.24.0 = const(NoneType, None)    ['$const72.24.0']
2025-06-13 07:34:43,257 - print_capture - INFO -     $const72.24.0 = const(NoneType, None)    ['$const72.24.0']
    $74return_value.25 = cast(value=$const72.24.0) ['$74return_value.25', '$const72.24.0']
    $74return_value.25 = cast(value=$const72.24.0) ['$74return_value.25', '$const72.24.0']
2025-06-13 07:34:43,258 - print_capture - INFO -     $74return_value.25 = cast(value=$const72.24.0) ['$74return_value.25', '$const72.24.0']
    $74return_value.25 = cast(value=$const72.24.0) ['$74return_value.25', '$const72.24.0']
    $74return_value.25 = cast(value=$const72.24.0) ['$74return_value.25', '$const72.24.0']
2025-06-13 07:34:43,258 - print_capture - INFO -     $74return_value.25 = cast(value=$const72.24.0) ['$74return_value.25', '$const72.24.0']
    return $74return_value.25                ['$74return_value.25']
    return $74return_value.25                ['$74return_value.25']
2025-06-13 07:34:43,258 - print_capture - INFO -     return $74return_value.25                ['$74return_value.25']
    return $74return_value.25                ['$74return_value.25']
    return $74return_value.25                ['$74return_value.25']
2025-06-13 07:34:43,258 - print_capture - INFO -     return $74return_value.25                ['$74return_value.25']
label 76:
label 76:
2025-06-13 07:34:43,258 - print_capture - INFO - label 76:
label 76:
label 76:
2025-06-13 07:34:43,258 - print_capture - INFO - label 76:
    $76load_global.0 = global(range: <class 'range'>) ['$76load_global.0']
    $76load_global.0 = global(range: <class 'range'>) ['$76load_global.0']
2025-06-13 07:34:43,258 - print_capture - INFO -     $76load_global.0 = global(range: <class 'range'>) ['$76load_global.0']
    $76load_global.0 = global(range: <class 'range'>) ['$76load_global.0']
    $76load_global.0 = global(range: <class 'range'>) ['$76load_global.0']
2025-06-13 07:34:43,258 - print_capture - INFO -     $76load_global.0 = global(range: <class 'range'>) ['$76load_global.0']
    $80call_function.2 = call $76load_global.0(n, func=$76load_global.0, args=[Var(n, unicode.py:1767)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.0', '$80call_function.2', 'n']
    $80call_function.2 = call $76load_global.0(n, func=$76load_global.0, args=[Var(n, unicode.py:1767)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.0', '$80call_function.2', 'n']
2025-06-13 07:34:43,259 - print_capture - INFO -     $80call_function.2 = call $76load_global.0(n, func=$76load_global.0, args=[Var(n, unicode.py:1767)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.0', '$80call_function.2', 'n']
    $80call_function.2 = call $76load_global.0(n, func=$76load_global.0, args=[Var(n, unicode.py:1767)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.0', '$80call_function.2', 'n']
    $80call_function.2 = call $76load_global.0(n, func=$76load_global.0, args=[Var(n, unicode.py:1767)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.0', '$80call_function.2', 'n']
2025-06-13 07:34:43,259 - print_capture - INFO -     $80call_function.2 = call $76load_global.0(n, func=$76load_global.0, args=[Var(n, unicode.py:1767)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.0', '$80call_function.2', 'n']
    $82get_iter.3 = getiter(value=$80call_function.2) ['$80call_function.2', '$82get_iter.3']
    $82get_iter.3 = getiter(value=$80call_function.2) ['$80call_function.2', '$82get_iter.3']
2025-06-13 07:34:43,259 - print_capture - INFO -     $82get_iter.3 = getiter(value=$80call_function.2) ['$80call_function.2', '$82get_iter.3']
    $82get_iter.3 = getiter(value=$80call_function.2) ['$80call_function.2', '$82get_iter.3']
    $82get_iter.3 = getiter(value=$80call_function.2) ['$80call_function.2', '$82get_iter.3']
2025-06-13 07:34:43,259 - print_capture - INFO -     $82get_iter.3 = getiter(value=$80call_function.2) ['$80call_function.2', '$82get_iter.3']
    $phi84.0 = $82get_iter.3                 ['$82get_iter.3', '$phi84.0']
    $phi84.0 = $82get_iter.3                 ['$82get_iter.3', '$phi84.0']
2025-06-13 07:34:43,259 - print_capture - INFO -     $phi84.0 = $82get_iter.3                 ['$82get_iter.3', '$phi84.0']
    $phi84.0 = $82get_iter.3                 ['$82get_iter.3', '$phi84.0']
    $phi84.0 = $82get_iter.3                 ['$82get_iter.3', '$phi84.0']
2025-06-13 07:34:43,259 - print_capture - INFO -     $phi84.0 = $82get_iter.3                 ['$82get_iter.3', '$phi84.0']
    jump 84                                  []
    jump 84                                  []
2025-06-13 07:34:43,259 - print_capture - INFO -     jump 84                                  []
    jump 84                                  []
    jump 84                                  []
2025-06-13 07:34:43,260 - print_capture - INFO -     jump 84                                  []
label 84:
label 84:
2025-06-13 07:34:43,260 - print_capture - INFO - label 84:
label 84:
label 84:
2025-06-13 07:34:43,260 - print_capture - INFO - label 84:
    $84for_iter.1 = iternext(value=$phi84.0) ['$84for_iter.1', '$phi84.0']
    $84for_iter.1 = iternext(value=$phi84.0) ['$84for_iter.1', '$phi84.0']
2025-06-13 07:34:43,260 - print_capture - INFO -     $84for_iter.1 = iternext(value=$phi84.0) ['$84for_iter.1', '$phi84.0']
    $84for_iter.1 = iternext(value=$phi84.0) ['$84for_iter.1', '$phi84.0']
    $84for_iter.1 = iternext(value=$phi84.0) ['$84for_iter.1', '$phi84.0']
2025-06-13 07:34:43,260 - print_capture - INFO -     $84for_iter.1 = iternext(value=$phi84.0) ['$84for_iter.1', '$phi84.0']
    $84for_iter.2 = pair_first(value=$84for_iter.1) ['$84for_iter.1', '$84for_iter.2']
    $84for_iter.2 = pair_first(value=$84for_iter.1) ['$84for_iter.1', '$84for_iter.2']
2025-06-13 07:34:43,260 - print_capture - INFO -     $84for_iter.2 = pair_first(value=$84for_iter.1) ['$84for_iter.1', '$84for_iter.2']
    $84for_iter.2 = pair_first(value=$84for_iter.1) ['$84for_iter.1', '$84for_iter.2']
    $84for_iter.2 = pair_first(value=$84for_iter.1) ['$84for_iter.1', '$84for_iter.2']
2025-06-13 07:34:43,261 - print_capture - INFO -     $84for_iter.2 = pair_first(value=$84for_iter.1) ['$84for_iter.1', '$84for_iter.2']
    $84for_iter.3 = pair_second(value=$84for_iter.1) ['$84for_iter.1', '$84for_iter.3']
    $84for_iter.3 = pair_second(value=$84for_iter.1) ['$84for_iter.1', '$84for_iter.3']
2025-06-13 07:34:43,261 - print_capture - INFO -     $84for_iter.3 = pair_second(value=$84for_iter.1) ['$84for_iter.1', '$84for_iter.3']
    $84for_iter.3 = pair_second(value=$84for_iter.1) ['$84for_iter.1', '$84for_iter.3']
    $84for_iter.3 = pair_second(value=$84for_iter.1) ['$84for_iter.1', '$84for_iter.3']
2025-06-13 07:34:43,261 - print_capture - INFO -     $84for_iter.3 = pair_second(value=$84for_iter.1) ['$84for_iter.1', '$84for_iter.3']
    $phi86.1 = $84for_iter.2                 ['$84for_iter.2', '$phi86.1']
    $phi86.1 = $84for_iter.2                 ['$84for_iter.2', '$phi86.1']
2025-06-13 07:34:43,261 - print_capture - INFO -     $phi86.1 = $84for_iter.2                 ['$84for_iter.2', '$phi86.1']
    $phi86.1 = $84for_iter.2                 ['$84for_iter.2', '$phi86.1']
    $phi86.1 = $84for_iter.2                 ['$84for_iter.2', '$phi86.1']
2025-06-13 07:34:43,261 - print_capture - INFO -     $phi86.1 = $84for_iter.2                 ['$84for_iter.2', '$phi86.1']
    branch $84for_iter.3, 86, 116            ['$84for_iter.3']
    branch $84for_iter.3, 86, 116            ['$84for_iter.3']
2025-06-13 07:34:43,261 - print_capture - INFO -     branch $84for_iter.3, 86, 116            ['$84for_iter.3']
    branch $84for_iter.3, 86, 116            ['$84for_iter.3']
    branch $84for_iter.3, 86, 116            ['$84for_iter.3']
2025-06-13 07:34:43,261 - print_capture - INFO -     branch $84for_iter.3, 86, 116            ['$84for_iter.3']
label 86:
label 86:
2025-06-13 07:34:43,261 - print_capture - INFO - label 86:
label 86:
label 86:
2025-06-13 07:34:43,262 - print_capture - INFO - label 86:
    i = $phi86.1                             ['$phi86.1', 'i']
    i = $phi86.1                             ['$phi86.1', 'i']
2025-06-13 07:34:43,262 - print_capture - INFO -     i = $phi86.1                             ['$phi86.1', 'i']
    i = $phi86.1                             ['$phi86.1', 'i']
    i = $phi86.1                             ['$phi86.1', 'i']
2025-06-13 07:34:43,262 - print_capture - INFO -     i = $phi86.1                             ['$phi86.1', 'i']
    $88load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$88load_global.2']
    $88load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$88load_global.2']
2025-06-13 07:34:43,262 - print_capture - INFO -     $88load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$88load_global.2']
    $88load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$88load_global.2']
    $88load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$88load_global.2']
2025-06-13 07:34:43,262 - print_capture - INFO -     $88load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$88load_global.2']
    $96binary_add.6 = dst_offset + i         ['$96binary_add.6', 'dst_offset', 'i']
    $96binary_add.6 = dst_offset + i         ['$96binary_add.6', 'dst_offset', 'i']
2025-06-13 07:34:43,262 - print_capture - INFO -     $96binary_add.6 = dst_offset + i         ['$96binary_add.6', 'dst_offset', 'i']
    $96binary_add.6 = dst_offset + i         ['$96binary_add.6', 'dst_offset', 'i']
    $96binary_add.6 = dst_offset + i         ['$96binary_add.6', 'dst_offset', 'i']
2025-06-13 07:34:43,262 - print_capture - INFO -     $96binary_add.6 = dst_offset + i         ['$96binary_add.6', 'dst_offset', 'i']
    $98load_global.7 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$98load_global.7']
    $98load_global.7 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$98load_global.7']
2025-06-13 07:34:43,262 - print_capture - INFO -     $98load_global.7 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$98load_global.7']
    $98load_global.7 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$98load_global.7']
    $98load_global.7 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$98load_global.7']
2025-06-13 07:34:43,263 - print_capture - INFO -     $98load_global.7 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$98load_global.7']
    $106binary_add.11 = src_offset + i       ['$106binary_add.11', 'i', 'src_offset']
    $106binary_add.11 = src_offset + i       ['$106binary_add.11', 'i', 'src_offset']
2025-06-13 07:34:43,263 - print_capture - INFO -     $106binary_add.11 = src_offset + i       ['$106binary_add.11', 'i', 'src_offset']
    $106binary_add.11 = src_offset + i       ['$106binary_add.11', 'i', 'src_offset']
    $106binary_add.11 = src_offset + i       ['$106binary_add.11', 'i', 'src_offset']
2025-06-13 07:34:43,263 - print_capture - INFO -     $106binary_add.11 = src_offset + i       ['$106binary_add.11', 'i', 'src_offset']
    $108call_function.12 = call $98load_global.7(src, $106binary_add.11, func=$98load_global.7, args=[Var(src, unicode.py:1767), Var($106binary_add.11, unicode.py:1779)], kws=(), vararg=None, varkwarg=None, target=None) ['$106binary_add.11', '$108call_function.12', '$98load_global.7', 'src']
    $108call_function.12 = call $98load_global.7(src, $106binary_add.11, func=$98load_global.7, args=[Var(src, unicode.py:1767), Var($106binary_add.11, unicode.py:1779)], kws=(), vararg=None, varkwarg=None, target=None) ['$106binary_add.11', '$108call_function.12', '$98load_global.7', 'src']
2025-06-13 07:34:43,263 - print_capture - INFO -     $108call_function.12 = call $98load_global.7(src, $106binary_add.11, func=$98load_global.7, args=[Var(src, unicode.py:1767), Var($106binary_add.11, unicode.py:1779)], kws=(), vararg=None, varkwarg=None, target=None) ['$106binary_add.11', '$108call_function.12', '$98load_global.7', 'src']
    $108call_function.12 = call $98load_global.7(src, $106binary_add.11, func=$98load_global.7, args=[Var(src, unicode.py:1767), Var($106binary_add.11, unicode.py:1779)], kws=(), vararg=None, varkwarg=None, target=None) ['$106binary_add.11', '$108call_function.12', '$98load_global.7', 'src']
    $108call_function.12 = call $98load_global.7(src, $106binary_add.11, func=$98load_global.7, args=[Var(src, unicode.py:1767), Var($106binary_add.11, unicode.py:1779)], kws=(), vararg=None, varkwarg=None, target=None) ['$106binary_add.11', '$108call_function.12', '$98load_global.7', 'src']
2025-06-13 07:34:43,263 - print_capture - INFO -     $108call_function.12 = call $98load_global.7(src, $106binary_add.11, func=$98load_global.7, args=[Var(src, unicode.py:1767), Var($106binary_add.11, unicode.py:1779)], kws=(), vararg=None, varkwarg=None, target=None) ['$106binary_add.11', '$108call_function.12', '$98load_global.7', 'src']
    $110call_function.13 = call $88load_global.2(dst, $96binary_add.6, $108call_function.12, func=$88load_global.2, args=[Var(dst, unicode.py:1767), Var($96binary_add.6, unicode.py:1778), Var($108call_function.12, unicode.py:1779)], kws=(), vararg=None, varkwarg=None, target=None) ['$108call_function.12', '$110call_function.13', '$88load_global.2', '$96binary_add.6', 'dst']
    $110call_function.13 = call $88load_global.2(dst, $96binary_add.6, $108call_function.12, func=$88load_global.2, args=[Var(dst, unicode.py:1767), Var($96binary_add.6, unicode.py:1778), Var($108call_function.12, unicode.py:1779)], kws=(), vararg=None, varkwarg=None, target=None) ['$108call_function.12', '$110call_function.13', '$88load_global.2', '$96binary_add.6', 'dst']
2025-06-13 07:34:43,263 - print_capture - INFO -     $110call_function.13 = call $88load_global.2(dst, $96binary_add.6, $108call_function.12, func=$88load_global.2, args=[Var(dst, unicode.py:1767), Var($96binary_add.6, unicode.py:1778), Var($108call_function.12, unicode.py:1779)], kws=(), vararg=None, varkwarg=None, target=None) ['$108call_function.12', '$110call_function.13', '$88load_global.2', '$96binary_add.6', 'dst']
    $110call_function.13 = call $88load_global.2(dst, $96binary_add.6, $108call_function.12, func=$88load_global.2, args=[Var(dst, unicode.py:1767), Var($96binary_add.6, unicode.py:1778), Var($108call_function.12, unicode.py:1779)], kws=(), vararg=None, varkwarg=None, target=None) ['$108call_function.12', '$110call_function.13', '$88load_global.2', '$96binary_add.6', 'dst']
    $110call_function.13 = call $88load_global.2(dst, $96binary_add.6, $108call_function.12, func=$88load_global.2, args=[Var(dst, unicode.py:1767), Var($96binary_add.6, unicode.py:1778), Var($108call_function.12, unicode.py:1779)], kws=(), vararg=None, varkwarg=None, target=None) ['$108call_function.12', '$110call_function.13', '$88load_global.2', '$96binary_add.6', 'dst']
2025-06-13 07:34:43,264 - print_capture - INFO -     $110call_function.13 = call $88load_global.2(dst, $96binary_add.6, $108call_function.12, func=$88load_global.2, args=[Var(dst, unicode.py:1767), Var($96binary_add.6, unicode.py:1778), Var($108call_function.12, unicode.py:1779)], kws=(), vararg=None, varkwarg=None, target=None) ['$108call_function.12', '$110call_function.13', '$88load_global.2', '$96binary_add.6', 'dst']
    jump 84                                  []
    jump 84                                  []
2025-06-13 07:34:43,264 - print_capture - INFO -     jump 84                                  []
    jump 84                                  []
    jump 84                                  []
2025-06-13 07:34:43,264 - print_capture - INFO -     jump 84                                  []
label 116:
label 116:
2025-06-13 07:34:43,264 - print_capture - INFO - label 116:
label 116:
label 116:
2025-06-13 07:34:43,264 - print_capture - INFO - label 116:
    $const116.0.0 = const(NoneType, None)    ['$const116.0.0']
    $const116.0.0 = const(NoneType, None)    ['$const116.0.0']
2025-06-13 07:34:43,264 - print_capture - INFO -     $const116.0.0 = const(NoneType, None)    ['$const116.0.0']
    $const116.0.0 = const(NoneType, None)    ['$const116.0.0']
    $const116.0.0 = const(NoneType, None)    ['$const116.0.0']
2025-06-13 07:34:43,264 - print_capture - INFO -     $const116.0.0 = const(NoneType, None)    ['$const116.0.0']
    $118return_value.1 = cast(value=$const116.0.0) ['$118return_value.1', '$const116.0.0']
    $118return_value.1 = cast(value=$const116.0.0) ['$118return_value.1', '$const116.0.0']
2025-06-13 07:34:43,264 - print_capture - INFO -     $118return_value.1 = cast(value=$const116.0.0) ['$118return_value.1', '$const116.0.0']
    $118return_value.1 = cast(value=$const116.0.0) ['$118return_value.1', '$const116.0.0']
    $118return_value.1 = cast(value=$const116.0.0) ['$118return_value.1', '$const116.0.0']
2025-06-13 07:34:43,264 - print_capture - INFO -     $118return_value.1 = cast(value=$const116.0.0) ['$118return_value.1', '$const116.0.0']
    return $118return_value.1                ['$118return_value.1']
    return $118return_value.1                ['$118return_value.1']
2025-06-13 07:34:43,265 - print_capture - INFO -     return $118return_value.1                ['$118return_value.1']
    return $118return_value.1                ['$118return_value.1']
    return $118return_value.1                ['$118return_value.1']
2025-06-13 07:34:43,265 - print_capture - INFO -     return $118return_value.1                ['$118return_value.1']
label 0:
label 0:
2025-06-13 07:34:43,275 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,275 - print_capture - INFO - label 0:
    kind = arg(0, name=kind)                 ['kind']
    kind = arg(0, name=kind)                 ['kind']
2025-06-13 07:34:43,275 - print_capture - INFO -     kind = arg(0, name=kind)                 ['kind']
    kind = arg(0, name=kind)                 ['kind']
    kind = arg(0, name=kind)                 ['kind']
2025-06-13 07:34:43,275 - print_capture - INFO -     kind = arg(0, name=kind)                 ['kind']
    $4load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$4load_global.1']
    $4load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$4load_global.1']
2025-06-13 07:34:43,275 - print_capture - INFO -     $4load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$4load_global.1']
    $4load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$4load_global.1']
    $4load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$4load_global.1']
2025-06-13 07:34:43,275 - print_capture - INFO -     $4load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$4load_global.1']
    $6compare_op.2 = kind == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind']
    $6compare_op.2 = kind == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind']
2025-06-13 07:34:43,275 - print_capture - INFO -     $6compare_op.2 = kind == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind']
    $6compare_op.2 = kind == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind']
    $6compare_op.2 = kind == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind']
2025-06-13 07:34:43,275 - print_capture - INFO -     $6compare_op.2 = kind == $4load_global.1 ['$4load_global.1', '$6compare_op.2', 'kind']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
2025-06-13 07:34:43,275 - print_capture - INFO -     bool8 = global(bool: <class 'bool'>)     ['bool8']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
2025-06-13 07:34:43,275 - print_capture - INFO -     bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
2025-06-13 07:34:43,275 - print_capture - INFO -     $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
2025-06-13 07:34:43,275 - print_capture - INFO -     $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    branch $8pred, 10, 14                    ['$8pred']
    branch $8pred, 10, 14                    ['$8pred']
2025-06-13 07:34:43,275 - print_capture - INFO -     branch $8pred, 10, 14                    ['$8pred']
    branch $8pred, 10, 14                    ['$8pred']
    branch $8pred, 10, 14                    ['$8pred']
2025-06-13 07:34:43,275 - print_capture - INFO -     branch $8pred, 10, 14                    ['$8pred']
label 10:
label 10:
2025-06-13 07:34:43,275 - print_capture - INFO - label 10:
label 10:
label 10:
2025-06-13 07:34:43,275 - print_capture - INFO - label 10:
    $const10.0.1 = const(int, 1)             ['$const10.0.1']
    $const10.0.1 = const(int, 1)             ['$const10.0.1']
2025-06-13 07:34:43,275 - print_capture - INFO -     $const10.0.1 = const(int, 1)             ['$const10.0.1']
    $const10.0.1 = const(int, 1)             ['$const10.0.1']
    $const10.0.1 = const(int, 1)             ['$const10.0.1']
2025-06-13 07:34:43,275 - print_capture - INFO -     $const10.0.1 = const(int, 1)             ['$const10.0.1']
    $12return_value.1 = cast(value=$const10.0.1) ['$12return_value.1', '$const10.0.1']
    $12return_value.1 = cast(value=$const10.0.1) ['$12return_value.1', '$const10.0.1']
2025-06-13 07:34:43,275 - print_capture - INFO -     $12return_value.1 = cast(value=$const10.0.1) ['$12return_value.1', '$const10.0.1']
    $12return_value.1 = cast(value=$const10.0.1) ['$12return_value.1', '$const10.0.1']
    $12return_value.1 = cast(value=$const10.0.1) ['$12return_value.1', '$const10.0.1']
2025-06-13 07:34:43,275 - print_capture - INFO -     $12return_value.1 = cast(value=$const10.0.1) ['$12return_value.1', '$const10.0.1']
    return $12return_value.1                 ['$12return_value.1']
    return $12return_value.1                 ['$12return_value.1']
2025-06-13 07:34:43,275 - print_capture - INFO -     return $12return_value.1                 ['$12return_value.1']
    return $12return_value.1                 ['$12return_value.1']
    return $12return_value.1                 ['$12return_value.1']
2025-06-13 07:34:43,275 - print_capture - INFO -     return $12return_value.1                 ['$12return_value.1']
label 14:
label 14:
2025-06-13 07:34:43,275 - print_capture - INFO - label 14:
label 14:
label 14:
2025-06-13 07:34:43,275 - print_capture - INFO - label 14:
    $16load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$16load_global.1']
    $16load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$16load_global.1']
2025-06-13 07:34:43,275 - print_capture - INFO -     $16load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$16load_global.1']
    $16load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$16load_global.1']
    $16load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$16load_global.1']
2025-06-13 07:34:43,275 - print_capture - INFO -     $16load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$16load_global.1']
    $18compare_op.2 = kind == $16load_global.1 ['$16load_global.1', '$18compare_op.2', 'kind']
    $18compare_op.2 = kind == $16load_global.1 ['$16load_global.1', '$18compare_op.2', 'kind']
2025-06-13 07:34:43,275 - print_capture - INFO -     $18compare_op.2 = kind == $16load_global.1 ['$16load_global.1', '$18compare_op.2', 'kind']
    $18compare_op.2 = kind == $16load_global.1 ['$16load_global.1', '$18compare_op.2', 'kind']
    $18compare_op.2 = kind == $16load_global.1 ['$16load_global.1', '$18compare_op.2', 'kind']
2025-06-13 07:34:43,275 - print_capture - INFO -     $18compare_op.2 = kind == $16load_global.1 ['$16load_global.1', '$18compare_op.2', 'kind']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
2025-06-13 07:34:43,275 - print_capture - INFO -     bool20 = global(bool: <class 'bool'>)    ['bool20']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
2025-06-13 07:34:43,275 - print_capture - INFO -     bool20 = global(bool: <class 'bool'>)    ['bool20']
    $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
    $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
2025-06-13 07:34:43,276 - print_capture - INFO -     $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
    $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
    $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
2025-06-13 07:34:43,276 - print_capture - INFO -     $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
    branch $20pred, 22, 26                   ['$20pred']
    branch $20pred, 22, 26                   ['$20pred']
2025-06-13 07:34:43,276 - print_capture - INFO -     branch $20pred, 22, 26                   ['$20pred']
    branch $20pred, 22, 26                   ['$20pred']
    branch $20pred, 22, 26                   ['$20pred']
2025-06-13 07:34:43,276 - print_capture - INFO -     branch $20pred, 22, 26                   ['$20pred']
label 22:
label 22:
2025-06-13 07:34:43,276 - print_capture - INFO - label 22:
label 22:
label 22:
2025-06-13 07:34:43,276 - print_capture - INFO - label 22:
    $const22.0.2 = const(int, 2)             ['$const22.0.2']
    $const22.0.2 = const(int, 2)             ['$const22.0.2']
2025-06-13 07:34:43,276 - print_capture - INFO -     $const22.0.2 = const(int, 2)             ['$const22.0.2']
    $const22.0.2 = const(int, 2)             ['$const22.0.2']
    $const22.0.2 = const(int, 2)             ['$const22.0.2']
2025-06-13 07:34:43,276 - print_capture - INFO -     $const22.0.2 = const(int, 2)             ['$const22.0.2']
    $24return_value.1 = cast(value=$const22.0.2) ['$24return_value.1', '$const22.0.2']
    $24return_value.1 = cast(value=$const22.0.2) ['$24return_value.1', '$const22.0.2']
2025-06-13 07:34:43,276 - print_capture - INFO -     $24return_value.1 = cast(value=$const22.0.2) ['$24return_value.1', '$const22.0.2']
    $24return_value.1 = cast(value=$const22.0.2) ['$24return_value.1', '$const22.0.2']
    $24return_value.1 = cast(value=$const22.0.2) ['$24return_value.1', '$const22.0.2']
2025-06-13 07:34:43,276 - print_capture - INFO -     $24return_value.1 = cast(value=$const22.0.2) ['$24return_value.1', '$const22.0.2']
    return $24return_value.1                 ['$24return_value.1']
    return $24return_value.1                 ['$24return_value.1']
2025-06-13 07:34:43,276 - print_capture - INFO -     return $24return_value.1                 ['$24return_value.1']
    return $24return_value.1                 ['$24return_value.1']
    return $24return_value.1                 ['$24return_value.1']
2025-06-13 07:34:43,276 - print_capture - INFO -     return $24return_value.1                 ['$24return_value.1']
label 26:
label 26:
2025-06-13 07:34:43,276 - print_capture - INFO - label 26:
label 26:
label 26:
2025-06-13 07:34:43,276 - print_capture - INFO - label 26:
    $28load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$28load_global.1']
    $28load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$28load_global.1']
2025-06-13 07:34:43,276 - print_capture - INFO -     $28load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$28load_global.1']
    $28load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$28load_global.1']
    $28load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$28load_global.1']
2025-06-13 07:34:43,276 - print_capture - INFO -     $28load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$28load_global.1']
    $30compare_op.2 = kind == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind']
    $30compare_op.2 = kind == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind']
2025-06-13 07:34:43,276 - print_capture - INFO -     $30compare_op.2 = kind == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind']
    $30compare_op.2 = kind == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind']
    $30compare_op.2 = kind == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind']
2025-06-13 07:34:43,276 - print_capture - INFO -     $30compare_op.2 = kind == $28load_global.1 ['$28load_global.1', '$30compare_op.2', 'kind']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
2025-06-13 07:34:43,276 - print_capture - INFO -     bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
2025-06-13 07:34:43,276 - print_capture - INFO -     bool32 = global(bool: <class 'bool'>)    ['bool32']
    $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
2025-06-13 07:34:43,276 - print_capture - INFO -     $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
2025-06-13 07:34:43,276 - print_capture - INFO -     $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
    branch $32pred, 34, 38                   ['$32pred']
    branch $32pred, 34, 38                   ['$32pred']
2025-06-13 07:34:43,276 - print_capture - INFO -     branch $32pred, 34, 38                   ['$32pred']
    branch $32pred, 34, 38                   ['$32pred']
    branch $32pred, 34, 38                   ['$32pred']
2025-06-13 07:34:43,276 - print_capture - INFO -     branch $32pred, 34, 38                   ['$32pred']
label 34:
label 34:
2025-06-13 07:34:43,276 - print_capture - INFO - label 34:
label 34:
label 34:
2025-06-13 07:34:43,276 - print_capture - INFO - label 34:
    $const34.0.3 = const(int, 4)             ['$const34.0.3']
    $const34.0.3 = const(int, 4)             ['$const34.0.3']
2025-06-13 07:34:43,276 - print_capture - INFO -     $const34.0.3 = const(int, 4)             ['$const34.0.3']
    $const34.0.3 = const(int, 4)             ['$const34.0.3']
    $const34.0.3 = const(int, 4)             ['$const34.0.3']
2025-06-13 07:34:43,276 - print_capture - INFO -     $const34.0.3 = const(int, 4)             ['$const34.0.3']
    $36return_value.1 = cast(value=$const34.0.3) ['$36return_value.1', '$const34.0.3']
    $36return_value.1 = cast(value=$const34.0.3) ['$36return_value.1', '$const34.0.3']
2025-06-13 07:34:43,276 - print_capture - INFO -     $36return_value.1 = cast(value=$const34.0.3) ['$36return_value.1', '$const34.0.3']
    $36return_value.1 = cast(value=$const34.0.3) ['$36return_value.1', '$const34.0.3']
    $36return_value.1 = cast(value=$const34.0.3) ['$36return_value.1', '$const34.0.3']
2025-06-13 07:34:43,276 - print_capture - INFO -     $36return_value.1 = cast(value=$const34.0.3) ['$36return_value.1', '$const34.0.3']
    return $36return_value.1                 ['$36return_value.1']
    return $36return_value.1                 ['$36return_value.1']
2025-06-13 07:34:43,276 - print_capture - INFO -     return $36return_value.1                 ['$36return_value.1']
    return $36return_value.1                 ['$36return_value.1']
    return $36return_value.1                 ['$36return_value.1']
2025-06-13 07:34:43,276 - print_capture - INFO -     return $36return_value.1                 ['$36return_value.1']
label 38:
label 38:
2025-06-13 07:34:43,276 - print_capture - INFO - label 38:
label 38:
label 38:
2025-06-13 07:34:43,276 - print_capture - INFO - label 38:
    $40load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$40load_global.1']
    $40load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$40load_global.1']
2025-06-13 07:34:43,276 - print_capture - INFO -     $40load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$40load_global.1']
    $40load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$40load_global.1']
    $40load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$40load_global.1']
2025-06-13 07:34:43,276 - print_capture - INFO -     $40load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$40load_global.1']
    $42compare_op.2 = kind == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind']
    $42compare_op.2 = kind == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind']
2025-06-13 07:34:43,276 - print_capture - INFO -     $42compare_op.2 = kind == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind']
    $42compare_op.2 = kind == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind']
    $42compare_op.2 = kind == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind']
2025-06-13 07:34:43,276 - print_capture - INFO -     $42compare_op.2 = kind == $40load_global.1 ['$40load_global.1', '$42compare_op.2', 'kind']
    bool44 = global(bool: <class 'bool'>)    ['bool44']
    bool44 = global(bool: <class 'bool'>)    ['bool44']
2025-06-13 07:34:43,276 - print_capture - INFO -     bool44 = global(bool: <class 'bool'>)    ['bool44']
    bool44 = global(bool: <class 'bool'>)    ['bool44']
    bool44 = global(bool: <class 'bool'>)    ['bool44']
2025-06-13 07:34:43,276 - print_capture - INFO -     bool44 = global(bool: <class 'bool'>)    ['bool44']
    $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
    $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
2025-06-13 07:34:43,276 - print_capture - INFO -     $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
    $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
    $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
2025-06-13 07:34:43,277 - print_capture - INFO -     $44pred = call bool44($42compare_op.2, func=bool44, args=(Var($42compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.2', '$44pred', 'bool44']
    branch $44pred, 46, 54                   ['$44pred']
    branch $44pred, 46, 54                   ['$44pred']
2025-06-13 07:34:43,277 - print_capture - INFO -     branch $44pred, 46, 54                   ['$44pred']
    branch $44pred, 46, 54                   ['$44pred']
    branch $44pred, 46, 54                   ['$44pred']
2025-06-13 07:34:43,277 - print_capture - INFO -     branch $44pred, 46, 54                   ['$44pred']
label 46:
label 46:
2025-06-13 07:34:43,277 - print_capture - INFO - label 46:
label 46:
label 46:
2025-06-13 07:34:43,277 - print_capture - INFO - label 46:
    $46load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$46load_global.0']
    $46load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$46load_global.0']
2025-06-13 07:34:43,277 - print_capture - INFO -     $46load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$46load_global.0']
    $46load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$46load_global.0']
    $46load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$46load_global.0']
2025-06-13 07:34:43,277 - print_capture - INFO -     $46load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$46load_global.0']
    $const48.1.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const48.1.4']
    $const48.1.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const48.1.4']
2025-06-13 07:34:43,277 - print_capture - INFO -     $const48.1.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const48.1.4']
    $const48.1.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const48.1.4']
    $const48.1.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const48.1.4']
2025-06-13 07:34:43,277 - print_capture - INFO -     $const48.1.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const48.1.4']
    $50call_function.2 = call $46load_global.0($const48.1.4, func=$46load_global.0, args=[Var($const48.1.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.0', '$50call_function.2', '$const48.1.4']
    $50call_function.2 = call $46load_global.0($const48.1.4, func=$46load_global.0, args=[Var($const48.1.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.0', '$50call_function.2', '$const48.1.4']
2025-06-13 07:34:43,277 - print_capture - INFO -     $50call_function.2 = call $46load_global.0($const48.1.4, func=$46load_global.0, args=[Var($const48.1.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.0', '$50call_function.2', '$const48.1.4']
    $50call_function.2 = call $46load_global.0($const48.1.4, func=$46load_global.0, args=[Var($const48.1.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.0', '$50call_function.2', '$const48.1.4']
    $50call_function.2 = call $46load_global.0($const48.1.4, func=$46load_global.0, args=[Var($const48.1.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.0', '$50call_function.2', '$const48.1.4']
2025-06-13 07:34:43,277 - print_capture - INFO -     $50call_function.2 = call $46load_global.0($const48.1.4, func=$46load_global.0, args=[Var($const48.1.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.0', '$50call_function.2', '$const48.1.4']
    raise $50call_function.2                 ['$50call_function.2']
    raise $50call_function.2                 ['$50call_function.2']
2025-06-13 07:34:43,277 - print_capture - INFO -     raise $50call_function.2                 ['$50call_function.2']
    raise $50call_function.2                 ['$50call_function.2']
    raise $50call_function.2                 ['$50call_function.2']
2025-06-13 07:34:43,277 - print_capture - INFO -     raise $50call_function.2                 ['$50call_function.2']
label 54:
label 54:
2025-06-13 07:34:43,277 - print_capture - INFO - label 54:
label 54:
label 54:
2025-06-13 07:34:43,277 - print_capture - INFO - label 54:
    $54load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$54load_global.0']
    $54load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$54load_global.0']
2025-06-13 07:34:43,277 - print_capture - INFO -     $54load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$54load_global.0']
    $54load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$54load_global.0']
    $54load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$54load_global.0']
2025-06-13 07:34:43,277 - print_capture - INFO -     $54load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$54load_global.0']
    $const56.1.5 = const(str, Unexpected unicode encoding encountered) ['$const56.1.5']
    $const56.1.5 = const(str, Unexpected unicode encoding encountered) ['$const56.1.5']
2025-06-13 07:34:43,277 - print_capture - INFO -     $const56.1.5 = const(str, Unexpected unicode encoding encountered) ['$const56.1.5']
    $const56.1.5 = const(str, Unexpected unicode encoding encountered) ['$const56.1.5']
    $const56.1.5 = const(str, Unexpected unicode encoding encountered) ['$const56.1.5']
2025-06-13 07:34:43,277 - print_capture - INFO -     $const56.1.5 = const(str, Unexpected unicode encoding encountered) ['$const56.1.5']
    $58call_function.2 = call $54load_global.0($const56.1.5, func=$54load_global.0, args=[Var($const56.1.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$58call_function.2', '$const56.1.5']
    $58call_function.2 = call $54load_global.0($const56.1.5, func=$54load_global.0, args=[Var($const56.1.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$58call_function.2', '$const56.1.5']
2025-06-13 07:34:43,277 - print_capture - INFO -     $58call_function.2 = call $54load_global.0($const56.1.5, func=$54load_global.0, args=[Var($const56.1.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$58call_function.2', '$const56.1.5']
    $58call_function.2 = call $54load_global.0($const56.1.5, func=$54load_global.0, args=[Var($const56.1.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$58call_function.2', '$const56.1.5']
    $58call_function.2 = call $54load_global.0($const56.1.5, func=$54load_global.0, args=[Var($const56.1.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$58call_function.2', '$const56.1.5']
2025-06-13 07:34:43,277 - print_capture - INFO -     $58call_function.2 = call $54load_global.0($const56.1.5, func=$54load_global.0, args=[Var($const56.1.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$58call_function.2', '$const56.1.5']
    raise $58call_function.2                 ['$58call_function.2']
    raise $58call_function.2                 ['$58call_function.2']
2025-06-13 07:34:43,277 - print_capture - INFO -     raise $58call_function.2                 ['$58call_function.2']
    raise $58call_function.2                 ['$58call_function.2']
    raise $58call_function.2                 ['$58call_function.2']
2025-06-13 07:34:43,277 - print_capture - INFO -     raise $58call_function.2                 ['$58call_function.2']
label 0:
label 0:
2025-06-13 07:34:43,303 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,303 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:43,303 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:43,303 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    i = arg(1, name=i)                       ['i']
    i = arg(1, name=i)                       ['i']
2025-06-13 07:34:43,303 - print_capture - INFO -     i = arg(1, name=i)                       ['i']
    i = arg(1, name=i)                       ['i']
    i = arg(1, name=i)                       ['i']
2025-06-13 07:34:43,303 - print_capture - INFO -     i = arg(1, name=i)                       ['i']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
2025-06-13 07:34:43,303 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
2025-06-13 07:34:43,303 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
2025-06-13 07:34:43,303 - print_capture - INFO -     $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
2025-06-13 07:34:43,303 - print_capture - INFO -     $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
2025-06-13 07:34:43,303 - print_capture - INFO -     $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
2025-06-13 07:34:43,303 - print_capture - INFO -     $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
2025-06-13 07:34:43,303 - print_capture - INFO -     bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
2025-06-13 07:34:43,303 - print_capture - INFO -     bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:292),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:292),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
2025-06-13 07:34:43,303 - print_capture - INFO -     $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:292),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:292),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:292),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
2025-06-13 07:34:43,303 - print_capture - INFO -     $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:292),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 24                   ['$10pred']
    branch $10pred, 12, 24                   ['$10pred']
2025-06-13 07:34:43,303 - print_capture - INFO -     branch $10pred, 12, 24                   ['$10pred']
    branch $10pred, 12, 24                   ['$10pred']
    branch $10pred, 12, 24                   ['$10pred']
2025-06-13 07:34:43,303 - print_capture - INFO -     branch $10pred, 12, 24                   ['$10pred']
label 12:
label 12:
2025-06-13 07:34:43,303 - print_capture - INFO - label 12:
label 12:
label 12:
2025-06-13 07:34:43,303 - print_capture - INFO - label 12:
    $12load_global.0 = global(deref_uint8: <intrinsic deref_uint8>) ['$12load_global.0']
    $12load_global.0 = global(deref_uint8: <intrinsic deref_uint8>) ['$12load_global.0']
2025-06-13 07:34:43,303 - print_capture - INFO -     $12load_global.0 = global(deref_uint8: <intrinsic deref_uint8>) ['$12load_global.0']
    $12load_global.0 = global(deref_uint8: <intrinsic deref_uint8>) ['$12load_global.0']
    $12load_global.0 = global(deref_uint8: <intrinsic deref_uint8>) ['$12load_global.0']
2025-06-13 07:34:43,304 - print_capture - INFO -     $12load_global.0 = global(deref_uint8: <intrinsic deref_uint8>) ['$12load_global.0']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
2025-06-13 07:34:43,304 - print_capture - INFO -     $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
2025-06-13 07:34:43,304 - print_capture - INFO -     $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $20call_function.4 = call $12load_global.0($16load_attr.2, i, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:293), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$20call_function.4', 'i']
    $20call_function.4 = call $12load_global.0($16load_attr.2, i, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:293), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$20call_function.4', 'i']
2025-06-13 07:34:43,304 - print_capture - INFO -     $20call_function.4 = call $12load_global.0($16load_attr.2, i, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:293), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$20call_function.4', 'i']
    $20call_function.4 = call $12load_global.0($16load_attr.2, i, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:293), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$20call_function.4', 'i']
    $20call_function.4 = call $12load_global.0($16load_attr.2, i, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:293), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$20call_function.4', 'i']
2025-06-13 07:34:43,304 - print_capture - INFO -     $20call_function.4 = call $12load_global.0($16load_attr.2, i, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:293), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$20call_function.4', 'i']
    $22return_value.5 = cast(value=$20call_function.4) ['$20call_function.4', '$22return_value.5']
    $22return_value.5 = cast(value=$20call_function.4) ['$20call_function.4', '$22return_value.5']
2025-06-13 07:34:43,304 - print_capture - INFO -     $22return_value.5 = cast(value=$20call_function.4) ['$20call_function.4', '$22return_value.5']
    $22return_value.5 = cast(value=$20call_function.4) ['$20call_function.4', '$22return_value.5']
    $22return_value.5 = cast(value=$20call_function.4) ['$20call_function.4', '$22return_value.5']
2025-06-13 07:34:43,304 - print_capture - INFO -     $22return_value.5 = cast(value=$20call_function.4) ['$20call_function.4', '$22return_value.5']
    return $22return_value.5                 ['$22return_value.5']
    return $22return_value.5                 ['$22return_value.5']
2025-06-13 07:34:43,304 - print_capture - INFO -     return $22return_value.5                 ['$22return_value.5']
    return $22return_value.5                 ['$22return_value.5']
    return $22return_value.5                 ['$22return_value.5']
2025-06-13 07:34:43,304 - print_capture - INFO -     return $22return_value.5                 ['$22return_value.5']
label 24:
label 24:
2025-06-13 07:34:43,304 - print_capture - INFO - label 24:
label 24:
label 24:
2025-06-13 07:34:43,304 - print_capture - INFO - label 24:
    $26load_attr.1 = getattr(value=a, attr=_kind) ['$26load_attr.1', 'a']
    $26load_attr.1 = getattr(value=a, attr=_kind) ['$26load_attr.1', 'a']
2025-06-13 07:34:43,304 - print_capture - INFO -     $26load_attr.1 = getattr(value=a, attr=_kind) ['$26load_attr.1', 'a']
    $26load_attr.1 = getattr(value=a, attr=_kind) ['$26load_attr.1', 'a']
    $26load_attr.1 = getattr(value=a, attr=_kind) ['$26load_attr.1', 'a']
2025-06-13 07:34:43,304 - print_capture - INFO -     $26load_attr.1 = getattr(value=a, attr=_kind) ['$26load_attr.1', 'a']
    $28load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$28load_global.2']
    $28load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$28load_global.2']
2025-06-13 07:34:43,304 - print_capture - INFO -     $28load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$28load_global.2']
    $28load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$28load_global.2']
    $28load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$28load_global.2']
2025-06-13 07:34:43,304 - print_capture - INFO -     $28load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$28load_global.2']
    $30compare_op.3 = $26load_attr.1 == $28load_global.2 ['$26load_attr.1', '$28load_global.2', '$30compare_op.3']
    $30compare_op.3 = $26load_attr.1 == $28load_global.2 ['$26load_attr.1', '$28load_global.2', '$30compare_op.3']
2025-06-13 07:34:43,304 - print_capture - INFO -     $30compare_op.3 = $26load_attr.1 == $28load_global.2 ['$26load_attr.1', '$28load_global.2', '$30compare_op.3']
    $30compare_op.3 = $26load_attr.1 == $28load_global.2 ['$26load_attr.1', '$28load_global.2', '$30compare_op.3']
    $30compare_op.3 = $26load_attr.1 == $28load_global.2 ['$26load_attr.1', '$28load_global.2', '$30compare_op.3']
2025-06-13 07:34:43,304 - print_capture - INFO -     $30compare_op.3 = $26load_attr.1 == $28load_global.2 ['$26load_attr.1', '$28load_global.2', '$30compare_op.3']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
2025-06-13 07:34:43,304 - print_capture - INFO -     bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
2025-06-13 07:34:43,304 - print_capture - INFO -     bool32 = global(bool: <class 'bool'>)    ['bool32']
    $32pred = call bool32($30compare_op.3, func=bool32, args=(Var($30compare_op.3, unicode.py:294),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.3', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.3, func=bool32, args=(Var($30compare_op.3, unicode.py:294),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.3', '$32pred', 'bool32']
2025-06-13 07:34:43,304 - print_capture - INFO -     $32pred = call bool32($30compare_op.3, func=bool32, args=(Var($30compare_op.3, unicode.py:294),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.3', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.3, func=bool32, args=(Var($30compare_op.3, unicode.py:294),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.3', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.3, func=bool32, args=(Var($30compare_op.3, unicode.py:294),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.3', '$32pred', 'bool32']
2025-06-13 07:34:43,304 - print_capture - INFO -     $32pred = call bool32($30compare_op.3, func=bool32, args=(Var($30compare_op.3, unicode.py:294),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.3', '$32pred', 'bool32']
    branch $32pred, 34, 46                   ['$32pred']
    branch $32pred, 34, 46                   ['$32pred']
2025-06-13 07:34:43,304 - print_capture - INFO -     branch $32pred, 34, 46                   ['$32pred']
    branch $32pred, 34, 46                   ['$32pred']
    branch $32pred, 34, 46                   ['$32pred']
2025-06-13 07:34:43,304 - print_capture - INFO -     branch $32pred, 34, 46                   ['$32pred']
label 34:
label 34:
2025-06-13 07:34:43,304 - print_capture - INFO - label 34:
label 34:
label 34:
2025-06-13 07:34:43,304 - print_capture - INFO - label 34:
    $34load_global.0 = global(deref_uint16: <intrinsic deref_uint16>) ['$34load_global.0']
    $34load_global.0 = global(deref_uint16: <intrinsic deref_uint16>) ['$34load_global.0']
2025-06-13 07:34:43,304 - print_capture - INFO -     $34load_global.0 = global(deref_uint16: <intrinsic deref_uint16>) ['$34load_global.0']
    $34load_global.0 = global(deref_uint16: <intrinsic deref_uint16>) ['$34load_global.0']
    $34load_global.0 = global(deref_uint16: <intrinsic deref_uint16>) ['$34load_global.0']
2025-06-13 07:34:43,304 - print_capture - INFO -     $34load_global.0 = global(deref_uint16: <intrinsic deref_uint16>) ['$34load_global.0']
    $38load_attr.2 = getattr(value=a, attr=_data) ['$38load_attr.2', 'a']
    $38load_attr.2 = getattr(value=a, attr=_data) ['$38load_attr.2', 'a']
2025-06-13 07:34:43,304 - print_capture - INFO -     $38load_attr.2 = getattr(value=a, attr=_data) ['$38load_attr.2', 'a']
    $38load_attr.2 = getattr(value=a, attr=_data) ['$38load_attr.2', 'a']
    $38load_attr.2 = getattr(value=a, attr=_data) ['$38load_attr.2', 'a']
2025-06-13 07:34:43,304 - print_capture - INFO -     $38load_attr.2 = getattr(value=a, attr=_data) ['$38load_attr.2', 'a']
    $42call_function.4 = call $34load_global.0($38load_attr.2, i, func=$34load_global.0, args=[Var($38load_attr.2, unicode.py:295), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.0', '$38load_attr.2', '$42call_function.4', 'i']
    $42call_function.4 = call $34load_global.0($38load_attr.2, i, func=$34load_global.0, args=[Var($38load_attr.2, unicode.py:295), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.0', '$38load_attr.2', '$42call_function.4', 'i']
2025-06-13 07:34:43,304 - print_capture - INFO -     $42call_function.4 = call $34load_global.0($38load_attr.2, i, func=$34load_global.0, args=[Var($38load_attr.2, unicode.py:295), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.0', '$38load_attr.2', '$42call_function.4', 'i']
    $42call_function.4 = call $34load_global.0($38load_attr.2, i, func=$34load_global.0, args=[Var($38load_attr.2, unicode.py:295), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.0', '$38load_attr.2', '$42call_function.4', 'i']
    $42call_function.4 = call $34load_global.0($38load_attr.2, i, func=$34load_global.0, args=[Var($38load_attr.2, unicode.py:295), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.0', '$38load_attr.2', '$42call_function.4', 'i']
2025-06-13 07:34:43,304 - print_capture - INFO -     $42call_function.4 = call $34load_global.0($38load_attr.2, i, func=$34load_global.0, args=[Var($38load_attr.2, unicode.py:295), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.0', '$38load_attr.2', '$42call_function.4', 'i']
    $44return_value.5 = cast(value=$42call_function.4) ['$42call_function.4', '$44return_value.5']
    $44return_value.5 = cast(value=$42call_function.4) ['$42call_function.4', '$44return_value.5']
2025-06-13 07:34:43,304 - print_capture - INFO -     $44return_value.5 = cast(value=$42call_function.4) ['$42call_function.4', '$44return_value.5']
    $44return_value.5 = cast(value=$42call_function.4) ['$42call_function.4', '$44return_value.5']
    $44return_value.5 = cast(value=$42call_function.4) ['$42call_function.4', '$44return_value.5']
2025-06-13 07:34:43,304 - print_capture - INFO -     $44return_value.5 = cast(value=$42call_function.4) ['$42call_function.4', '$44return_value.5']
    return $44return_value.5                 ['$44return_value.5']
    return $44return_value.5                 ['$44return_value.5']
2025-06-13 07:34:43,304 - print_capture - INFO -     return $44return_value.5                 ['$44return_value.5']
    return $44return_value.5                 ['$44return_value.5']
    return $44return_value.5                 ['$44return_value.5']
2025-06-13 07:34:43,304 - print_capture - INFO -     return $44return_value.5                 ['$44return_value.5']
label 46:
label 46:
2025-06-13 07:34:43,304 - print_capture - INFO - label 46:
label 46:
label 46:
2025-06-13 07:34:43,304 - print_capture - INFO - label 46:
    $48load_attr.1 = getattr(value=a, attr=_kind) ['$48load_attr.1', 'a']
    $48load_attr.1 = getattr(value=a, attr=_kind) ['$48load_attr.1', 'a']
2025-06-13 07:34:43,304 - print_capture - INFO -     $48load_attr.1 = getattr(value=a, attr=_kind) ['$48load_attr.1', 'a']
    $48load_attr.1 = getattr(value=a, attr=_kind) ['$48load_attr.1', 'a']
    $48load_attr.1 = getattr(value=a, attr=_kind) ['$48load_attr.1', 'a']
2025-06-13 07:34:43,304 - print_capture - INFO -     $48load_attr.1 = getattr(value=a, attr=_kind) ['$48load_attr.1', 'a']
    $50load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$50load_global.2']
    $50load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$50load_global.2']
2025-06-13 07:34:43,304 - print_capture - INFO -     $50load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$50load_global.2']
    $50load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$50load_global.2']
    $50load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$50load_global.2']
2025-06-13 07:34:43,304 - print_capture - INFO -     $50load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$50load_global.2']
    $52compare_op.3 = $48load_attr.1 == $50load_global.2 ['$48load_attr.1', '$50load_global.2', '$52compare_op.3']
    $52compare_op.3 = $48load_attr.1 == $50load_global.2 ['$48load_attr.1', '$50load_global.2', '$52compare_op.3']
2025-06-13 07:34:43,305 - print_capture - INFO -     $52compare_op.3 = $48load_attr.1 == $50load_global.2 ['$48load_attr.1', '$50load_global.2', '$52compare_op.3']
    $52compare_op.3 = $48load_attr.1 == $50load_global.2 ['$48load_attr.1', '$50load_global.2', '$52compare_op.3']
    $52compare_op.3 = $48load_attr.1 == $50load_global.2 ['$48load_attr.1', '$50load_global.2', '$52compare_op.3']
2025-06-13 07:34:43,305 - print_capture - INFO -     $52compare_op.3 = $48load_attr.1 == $50load_global.2 ['$48load_attr.1', '$50load_global.2', '$52compare_op.3']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
2025-06-13 07:34:43,305 - print_capture - INFO -     bool54 = global(bool: <class 'bool'>)    ['bool54']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
2025-06-13 07:34:43,305 - print_capture - INFO -     bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($52compare_op.3, func=bool54, args=(Var($52compare_op.3, unicode.py:296),), kws=(), vararg=None, varkwarg=None, target=None) ['$52compare_op.3', '$54pred', 'bool54']
    $54pred = call bool54($52compare_op.3, func=bool54, args=(Var($52compare_op.3, unicode.py:296),), kws=(), vararg=None, varkwarg=None, target=None) ['$52compare_op.3', '$54pred', 'bool54']
2025-06-13 07:34:43,305 - print_capture - INFO -     $54pred = call bool54($52compare_op.3, func=bool54, args=(Var($52compare_op.3, unicode.py:296),), kws=(), vararg=None, varkwarg=None, target=None) ['$52compare_op.3', '$54pred', 'bool54']
    $54pred = call bool54($52compare_op.3, func=bool54, args=(Var($52compare_op.3, unicode.py:296),), kws=(), vararg=None, varkwarg=None, target=None) ['$52compare_op.3', '$54pred', 'bool54']
    $54pred = call bool54($52compare_op.3, func=bool54, args=(Var($52compare_op.3, unicode.py:296),), kws=(), vararg=None, varkwarg=None, target=None) ['$52compare_op.3', '$54pred', 'bool54']
2025-06-13 07:34:43,305 - print_capture - INFO -     $54pred = call bool54($52compare_op.3, func=bool54, args=(Var($52compare_op.3, unicode.py:296),), kws=(), vararg=None, varkwarg=None, target=None) ['$52compare_op.3', '$54pred', 'bool54']
    branch $54pred, 56, 68                   ['$54pred']
    branch $54pred, 56, 68                   ['$54pred']
2025-06-13 07:34:43,305 - print_capture - INFO -     branch $54pred, 56, 68                   ['$54pred']
    branch $54pred, 56, 68                   ['$54pred']
    branch $54pred, 56, 68                   ['$54pred']
2025-06-13 07:34:43,305 - print_capture - INFO -     branch $54pred, 56, 68                   ['$54pred']
label 56:
label 56:
2025-06-13 07:34:43,305 - print_capture - INFO - label 56:
label 56:
label 56:
2025-06-13 07:34:43,305 - print_capture - INFO - label 56:
    $56load_global.0 = global(deref_uint32: <intrinsic deref_uint32>) ['$56load_global.0']
    $56load_global.0 = global(deref_uint32: <intrinsic deref_uint32>) ['$56load_global.0']
2025-06-13 07:34:43,305 - print_capture - INFO -     $56load_global.0 = global(deref_uint32: <intrinsic deref_uint32>) ['$56load_global.0']
    $56load_global.0 = global(deref_uint32: <intrinsic deref_uint32>) ['$56load_global.0']
    $56load_global.0 = global(deref_uint32: <intrinsic deref_uint32>) ['$56load_global.0']
2025-06-13 07:34:43,305 - print_capture - INFO -     $56load_global.0 = global(deref_uint32: <intrinsic deref_uint32>) ['$56load_global.0']
    $60load_attr.2 = getattr(value=a, attr=_data) ['$60load_attr.2', 'a']
    $60load_attr.2 = getattr(value=a, attr=_data) ['$60load_attr.2', 'a']
2025-06-13 07:34:43,305 - print_capture - INFO -     $60load_attr.2 = getattr(value=a, attr=_data) ['$60load_attr.2', 'a']
    $60load_attr.2 = getattr(value=a, attr=_data) ['$60load_attr.2', 'a']
    $60load_attr.2 = getattr(value=a, attr=_data) ['$60load_attr.2', 'a']
2025-06-13 07:34:43,305 - print_capture - INFO -     $60load_attr.2 = getattr(value=a, attr=_data) ['$60load_attr.2', 'a']
    $64call_function.4 = call $56load_global.0($60load_attr.2, i, func=$56load_global.0, args=[Var($60load_attr.2, unicode.py:297), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$60load_attr.2', '$64call_function.4', 'i']
    $64call_function.4 = call $56load_global.0($60load_attr.2, i, func=$56load_global.0, args=[Var($60load_attr.2, unicode.py:297), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$60load_attr.2', '$64call_function.4', 'i']
2025-06-13 07:34:43,305 - print_capture - INFO -     $64call_function.4 = call $56load_global.0($60load_attr.2, i, func=$56load_global.0, args=[Var($60load_attr.2, unicode.py:297), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$60load_attr.2', '$64call_function.4', 'i']
    $64call_function.4 = call $56load_global.0($60load_attr.2, i, func=$56load_global.0, args=[Var($60load_attr.2, unicode.py:297), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$60load_attr.2', '$64call_function.4', 'i']
    $64call_function.4 = call $56load_global.0($60load_attr.2, i, func=$56load_global.0, args=[Var($60load_attr.2, unicode.py:297), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$60load_attr.2', '$64call_function.4', 'i']
2025-06-13 07:34:43,305 - print_capture - INFO -     $64call_function.4 = call $56load_global.0($60load_attr.2, i, func=$56load_global.0, args=[Var($60load_attr.2, unicode.py:297), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$60load_attr.2', '$64call_function.4', 'i']
    $66return_value.5 = cast(value=$64call_function.4) ['$64call_function.4', '$66return_value.5']
    $66return_value.5 = cast(value=$64call_function.4) ['$64call_function.4', '$66return_value.5']
2025-06-13 07:34:43,305 - print_capture - INFO -     $66return_value.5 = cast(value=$64call_function.4) ['$64call_function.4', '$66return_value.5']
    $66return_value.5 = cast(value=$64call_function.4) ['$64call_function.4', '$66return_value.5']
    $66return_value.5 = cast(value=$64call_function.4) ['$64call_function.4', '$66return_value.5']
2025-06-13 07:34:43,305 - print_capture - INFO -     $66return_value.5 = cast(value=$64call_function.4) ['$64call_function.4', '$66return_value.5']
    return $66return_value.5                 ['$66return_value.5']
    return $66return_value.5                 ['$66return_value.5']
2025-06-13 07:34:43,305 - print_capture - INFO -     return $66return_value.5                 ['$66return_value.5']
    return $66return_value.5                 ['$66return_value.5']
    return $66return_value.5                 ['$66return_value.5']
2025-06-13 07:34:43,305 - print_capture - INFO -     return $66return_value.5                 ['$66return_value.5']
label 68:
label 68:
2025-06-13 07:34:43,305 - print_capture - INFO - label 68:
label 68:
label 68:
2025-06-13 07:34:43,305 - print_capture - INFO - label 68:
    $const68.0.1 = const(int, 0)             ['$const68.0.1']
    $const68.0.1 = const(int, 0)             ['$const68.0.1']
2025-06-13 07:34:43,305 - print_capture - INFO -     $const68.0.1 = const(int, 0)             ['$const68.0.1']
    $const68.0.1 = const(int, 0)             ['$const68.0.1']
    $const68.0.1 = const(int, 0)             ['$const68.0.1']
2025-06-13 07:34:43,305 - print_capture - INFO -     $const68.0.1 = const(int, 0)             ['$const68.0.1']
    $70return_value.1 = cast(value=$const68.0.1) ['$70return_value.1', '$const68.0.1']
    $70return_value.1 = cast(value=$const68.0.1) ['$70return_value.1', '$const68.0.1']
2025-06-13 07:34:43,305 - print_capture - INFO -     $70return_value.1 = cast(value=$const68.0.1) ['$70return_value.1', '$const68.0.1']
    $70return_value.1 = cast(value=$const68.0.1) ['$70return_value.1', '$const68.0.1']
    $70return_value.1 = cast(value=$const68.0.1) ['$70return_value.1', '$const68.0.1']
2025-06-13 07:34:43,305 - print_capture - INFO -     $70return_value.1 = cast(value=$const68.0.1) ['$70return_value.1', '$const68.0.1']
    return $70return_value.1                 ['$70return_value.1']
    return $70return_value.1                 ['$70return_value.1']
2025-06-13 07:34:43,305 - print_capture - INFO -     return $70return_value.1                 ['$70return_value.1']
    return $70return_value.1                 ['$70return_value.1']
    return $70return_value.1                 ['$70return_value.1']
2025-06-13 07:34:43,305 - print_capture - INFO -     return $70return_value.1                 ['$70return_value.1']
label 0:
label 0:
2025-06-13 07:34:43,328 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,328 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:43,328 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:43,328 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    i = arg(1, name=i)                       ['i']
    i = arg(1, name=i)                       ['i']
2025-06-13 07:34:43,328 - print_capture - INFO -     i = arg(1, name=i)                       ['i']
    i = arg(1, name=i)                       ['i']
    i = arg(1, name=i)                       ['i']
2025-06-13 07:34:43,328 - print_capture - INFO -     i = arg(1, name=i)                       ['i']
    ch = arg(2, name=ch)                     ['ch']
    ch = arg(2, name=ch)                     ['ch']
2025-06-13 07:34:43,328 - print_capture - INFO -     ch = arg(2, name=ch)                     ['ch']
    ch = arg(2, name=ch)                     ['ch']
    ch = arg(2, name=ch)                     ['ch']
2025-06-13 07:34:43,328 - print_capture - INFO -     ch = arg(2, name=ch)                     ['ch']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
2025-06-13 07:34:43,328 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
2025-06-13 07:34:43,328 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=_kind) ['$4load_attr.1', 'a']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
2025-06-13 07:34:43,328 - print_capture - INFO -     $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
2025-06-13 07:34:43,328 - print_capture - INFO -     $6load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.2']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
2025-06-13 07:34:43,328 - print_capture - INFO -     $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
2025-06-13 07:34:43,328 - print_capture - INFO -     $8compare_op.3 = $4load_attr.1 == $6load_global.2 ['$4load_attr.1', '$6load_global.2', '$8compare_op.3']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
2025-06-13 07:34:43,328 - print_capture - INFO -     bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
2025-06-13 07:34:43,328 - print_capture - INFO -     bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
2025-06-13 07:34:43,328 - print_capture - INFO -     $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
2025-06-13 07:34:43,328 - print_capture - INFO -     $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 30                   ['$10pred']
    branch $10pred, 12, 30                   ['$10pred']
2025-06-13 07:34:43,329 - print_capture - INFO -     branch $10pred, 12, 30                   ['$10pred']
    branch $10pred, 12, 30                   ['$10pred']
    branch $10pred, 12, 30                   ['$10pred']
2025-06-13 07:34:43,329 - print_capture - INFO -     branch $10pred, 12, 30                   ['$10pred']
label 12:
label 12:
2025-06-13 07:34:43,329 - print_capture - INFO - label 12:
label 12:
label 12:
2025-06-13 07:34:43,329 - print_capture - INFO - label 12:
    $12load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$12load_global.0']
    $12load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$12load_global.0']
2025-06-13 07:34:43,329 - print_capture - INFO -     $12load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$12load_global.0']
    $12load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$12load_global.0']
    $12load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$12load_global.0']
2025-06-13 07:34:43,329 - print_capture - INFO -     $12load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$12load_global.0']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
2025-06-13 07:34:43,329 - print_capture - INFO -     $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
2025-06-13 07:34:43,329 - print_capture - INFO -     $16load_attr.2 = getattr(value=a, attr=_data) ['$16load_attr.2', 'a']
    $22call_function.5 = call $12load_global.0($16load_attr.2, i, ch, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$22call_function.5', 'ch', 'i']
    $22call_function.5 = call $12load_global.0($16load_attr.2, i, ch, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$22call_function.5', 'ch', 'i']
2025-06-13 07:34:43,329 - print_capture - INFO -     $22call_function.5 = call $12load_global.0($16load_attr.2, i, ch, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$22call_function.5', 'ch', 'i']
    $22call_function.5 = call $12load_global.0($16load_attr.2, i, ch, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$22call_function.5', 'ch', 'i']
    $22call_function.5 = call $12load_global.0($16load_attr.2, i, ch, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$22call_function.5', 'ch', 'i']
2025-06-13 07:34:43,329 - print_capture - INFO -     $22call_function.5 = call $12load_global.0($16load_attr.2, i, ch, func=$12load_global.0, args=[Var($16load_attr.2, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16load_attr.2', '$22call_function.5', 'ch', 'i']
    $const26.6.0 = const(NoneType, None)     ['$const26.6.0']
    $const26.6.0 = const(NoneType, None)     ['$const26.6.0']
2025-06-13 07:34:43,329 - print_capture - INFO -     $const26.6.0 = const(NoneType, None)     ['$const26.6.0']
    $const26.6.0 = const(NoneType, None)     ['$const26.6.0']
    $const26.6.0 = const(NoneType, None)     ['$const26.6.0']
2025-06-13 07:34:43,329 - print_capture - INFO -     $const26.6.0 = const(NoneType, None)     ['$const26.6.0']
    $28return_value.7 = cast(value=$const26.6.0) ['$28return_value.7', '$const26.6.0']
    $28return_value.7 = cast(value=$const26.6.0) ['$28return_value.7', '$const26.6.0']
2025-06-13 07:34:43,329 - print_capture - INFO -     $28return_value.7 = cast(value=$const26.6.0) ['$28return_value.7', '$const26.6.0']
    $28return_value.7 = cast(value=$const26.6.0) ['$28return_value.7', '$const26.6.0']
    $28return_value.7 = cast(value=$const26.6.0) ['$28return_value.7', '$const26.6.0']
2025-06-13 07:34:43,329 - print_capture - INFO -     $28return_value.7 = cast(value=$const26.6.0) ['$28return_value.7', '$const26.6.0']
    return $28return_value.7                 ['$28return_value.7']
    return $28return_value.7                 ['$28return_value.7']
2025-06-13 07:34:43,329 - print_capture - INFO -     return $28return_value.7                 ['$28return_value.7']
    return $28return_value.7                 ['$28return_value.7']
    return $28return_value.7                 ['$28return_value.7']
2025-06-13 07:34:43,329 - print_capture - INFO -     return $28return_value.7                 ['$28return_value.7']
label 30:
label 30:
2025-06-13 07:34:43,329 - print_capture - INFO - label 30:
label 30:
label 30:
2025-06-13 07:34:43,329 - print_capture - INFO - label 30:
    $32load_attr.1 = getattr(value=a, attr=_kind) ['$32load_attr.1', 'a']
    $32load_attr.1 = getattr(value=a, attr=_kind) ['$32load_attr.1', 'a']
2025-06-13 07:34:43,329 - print_capture - INFO -     $32load_attr.1 = getattr(value=a, attr=_kind) ['$32load_attr.1', 'a']
    $32load_attr.1 = getattr(value=a, attr=_kind) ['$32load_attr.1', 'a']
    $32load_attr.1 = getattr(value=a, attr=_kind) ['$32load_attr.1', 'a']
2025-06-13 07:34:43,329 - print_capture - INFO -     $32load_attr.1 = getattr(value=a, attr=_kind) ['$32load_attr.1', 'a']
    $34load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$34load_global.2']
    $34load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$34load_global.2']
2025-06-13 07:34:43,329 - print_capture - INFO -     $34load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$34load_global.2']
    $34load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$34load_global.2']
    $34load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$34load_global.2']
2025-06-13 07:34:43,329 - print_capture - INFO -     $34load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$34load_global.2']
    $36compare_op.3 = $32load_attr.1 == $34load_global.2 ['$32load_attr.1', '$34load_global.2', '$36compare_op.3']
    $36compare_op.3 = $32load_attr.1 == $34load_global.2 ['$32load_attr.1', '$34load_global.2', '$36compare_op.3']
2025-06-13 07:34:43,329 - print_capture - INFO -     $36compare_op.3 = $32load_attr.1 == $34load_global.2 ['$32load_attr.1', '$34load_global.2', '$36compare_op.3']
    $36compare_op.3 = $32load_attr.1 == $34load_global.2 ['$32load_attr.1', '$34load_global.2', '$36compare_op.3']
    $36compare_op.3 = $32load_attr.1 == $34load_global.2 ['$32load_attr.1', '$34load_global.2', '$36compare_op.3']
2025-06-13 07:34:43,329 - print_capture - INFO -     $36compare_op.3 = $32load_attr.1 == $34load_global.2 ['$32load_attr.1', '$34load_global.2', '$36compare_op.3']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
2025-06-13 07:34:43,329 - print_capture - INFO -     bool38 = global(bool: <class 'bool'>)    ['bool38']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
2025-06-13 07:34:43,329 - print_capture - INFO -     bool38 = global(bool: <class 'bool'>)    ['bool38']
    $38pred = call bool38($36compare_op.3, func=bool38, args=(Var($36compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$38pred', 'bool38']
    $38pred = call bool38($36compare_op.3, func=bool38, args=(Var($36compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$38pred', 'bool38']
2025-06-13 07:34:43,329 - print_capture - INFO -     $38pred = call bool38($36compare_op.3, func=bool38, args=(Var($36compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$38pred', 'bool38']
    $38pred = call bool38($36compare_op.3, func=bool38, args=(Var($36compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$38pred', 'bool38']
    $38pred = call bool38($36compare_op.3, func=bool38, args=(Var($36compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$38pred', 'bool38']
2025-06-13 07:34:43,329 - print_capture - INFO -     $38pred = call bool38($36compare_op.3, func=bool38, args=(Var($36compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$38pred', 'bool38']
    branch $38pred, 40, 58                   ['$38pred']
    branch $38pred, 40, 58                   ['$38pred']
2025-06-13 07:34:43,329 - print_capture - INFO -     branch $38pred, 40, 58                   ['$38pred']
    branch $38pred, 40, 58                   ['$38pred']
    branch $38pred, 40, 58                   ['$38pred']
2025-06-13 07:34:43,329 - print_capture - INFO -     branch $38pred, 40, 58                   ['$38pred']
label 40:
label 40:
2025-06-13 07:34:43,329 - print_capture - INFO - label 40:
label 40:
label 40:
2025-06-13 07:34:43,329 - print_capture - INFO - label 40:
    $40load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$40load_global.0']
    $40load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$40load_global.0']
2025-06-13 07:34:43,329 - print_capture - INFO -     $40load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$40load_global.0']
    $40load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$40load_global.0']
    $40load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$40load_global.0']
2025-06-13 07:34:43,329 - print_capture - INFO -     $40load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$40load_global.0']
    $44load_attr.2 = getattr(value=a, attr=_data) ['$44load_attr.2', 'a']
    $44load_attr.2 = getattr(value=a, attr=_data) ['$44load_attr.2', 'a']
2025-06-13 07:34:43,329 - print_capture - INFO -     $44load_attr.2 = getattr(value=a, attr=_data) ['$44load_attr.2', 'a']
    $44load_attr.2 = getattr(value=a, attr=_data) ['$44load_attr.2', 'a']
    $44load_attr.2 = getattr(value=a, attr=_data) ['$44load_attr.2', 'a']
2025-06-13 07:34:43,329 - print_capture - INFO -     $44load_attr.2 = getattr(value=a, attr=_data) ['$44load_attr.2', 'a']
    $50call_function.5 = call $40load_global.0($44load_attr.2, i, ch, func=$40load_global.0, args=[Var($44load_attr.2, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.0', '$44load_attr.2', '$50call_function.5', 'ch', 'i']
    $50call_function.5 = call $40load_global.0($44load_attr.2, i, ch, func=$40load_global.0, args=[Var($44load_attr.2, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.0', '$44load_attr.2', '$50call_function.5', 'ch', 'i']
2025-06-13 07:34:43,329 - print_capture - INFO -     $50call_function.5 = call $40load_global.0($44load_attr.2, i, ch, func=$40load_global.0, args=[Var($44load_attr.2, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.0', '$44load_attr.2', '$50call_function.5', 'ch', 'i']
    $50call_function.5 = call $40load_global.0($44load_attr.2, i, ch, func=$40load_global.0, args=[Var($44load_attr.2, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.0', '$44load_attr.2', '$50call_function.5', 'ch', 'i']
    $50call_function.5 = call $40load_global.0($44load_attr.2, i, ch, func=$40load_global.0, args=[Var($44load_attr.2, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.0', '$44load_attr.2', '$50call_function.5', 'ch', 'i']
2025-06-13 07:34:43,329 - print_capture - INFO -     $50call_function.5 = call $40load_global.0($44load_attr.2, i, ch, func=$40load_global.0, args=[Var($44load_attr.2, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.0', '$44load_attr.2', '$50call_function.5', 'ch', 'i']
    $const54.6.0 = const(NoneType, None)     ['$const54.6.0']
    $const54.6.0 = const(NoneType, None)     ['$const54.6.0']
2025-06-13 07:34:43,329 - print_capture - INFO -     $const54.6.0 = const(NoneType, None)     ['$const54.6.0']
    $const54.6.0 = const(NoneType, None)     ['$const54.6.0']
    $const54.6.0 = const(NoneType, None)     ['$const54.6.0']
2025-06-13 07:34:43,329 - print_capture - INFO -     $const54.6.0 = const(NoneType, None)     ['$const54.6.0']
    $56return_value.7 = cast(value=$const54.6.0) ['$56return_value.7', '$const54.6.0']
    $56return_value.7 = cast(value=$const54.6.0) ['$56return_value.7', '$const54.6.0']
2025-06-13 07:34:43,330 - print_capture - INFO -     $56return_value.7 = cast(value=$const54.6.0) ['$56return_value.7', '$const54.6.0']
    $56return_value.7 = cast(value=$const54.6.0) ['$56return_value.7', '$const54.6.0']
    $56return_value.7 = cast(value=$const54.6.0) ['$56return_value.7', '$const54.6.0']
2025-06-13 07:34:43,330 - print_capture - INFO -     $56return_value.7 = cast(value=$const54.6.0) ['$56return_value.7', '$const54.6.0']
    return $56return_value.7                 ['$56return_value.7']
    return $56return_value.7                 ['$56return_value.7']
2025-06-13 07:34:43,330 - print_capture - INFO -     return $56return_value.7                 ['$56return_value.7']
    return $56return_value.7                 ['$56return_value.7']
    return $56return_value.7                 ['$56return_value.7']
2025-06-13 07:34:43,330 - print_capture - INFO -     return $56return_value.7                 ['$56return_value.7']
label 58:
label 58:
2025-06-13 07:34:43,330 - print_capture - INFO - label 58:
label 58:
label 58:
2025-06-13 07:34:43,330 - print_capture - INFO - label 58:
    $60load_attr.1 = getattr(value=a, attr=_kind) ['$60load_attr.1', 'a']
    $60load_attr.1 = getattr(value=a, attr=_kind) ['$60load_attr.1', 'a']
2025-06-13 07:34:43,330 - print_capture - INFO -     $60load_attr.1 = getattr(value=a, attr=_kind) ['$60load_attr.1', 'a']
    $60load_attr.1 = getattr(value=a, attr=_kind) ['$60load_attr.1', 'a']
    $60load_attr.1 = getattr(value=a, attr=_kind) ['$60load_attr.1', 'a']
2025-06-13 07:34:43,330 - print_capture - INFO -     $60load_attr.1 = getattr(value=a, attr=_kind) ['$60load_attr.1', 'a']
    $62load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$62load_global.2']
    $62load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$62load_global.2']
2025-06-13 07:34:43,330 - print_capture - INFO -     $62load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$62load_global.2']
    $62load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$62load_global.2']
    $62load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$62load_global.2']
2025-06-13 07:34:43,330 - print_capture - INFO -     $62load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$62load_global.2']
    $64compare_op.3 = $60load_attr.1 == $62load_global.2 ['$60load_attr.1', '$62load_global.2', '$64compare_op.3']
    $64compare_op.3 = $60load_attr.1 == $62load_global.2 ['$60load_attr.1', '$62load_global.2', '$64compare_op.3']
2025-06-13 07:34:43,330 - print_capture - INFO -     $64compare_op.3 = $60load_attr.1 == $62load_global.2 ['$60load_attr.1', '$62load_global.2', '$64compare_op.3']
    $64compare_op.3 = $60load_attr.1 == $62load_global.2 ['$60load_attr.1', '$62load_global.2', '$64compare_op.3']
    $64compare_op.3 = $60load_attr.1 == $62load_global.2 ['$60load_attr.1', '$62load_global.2', '$64compare_op.3']
2025-06-13 07:34:43,330 - print_capture - INFO -     $64compare_op.3 = $60load_attr.1 == $62load_global.2 ['$60load_attr.1', '$62load_global.2', '$64compare_op.3']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 07:34:43,330 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 07:34:43,330 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.3, func=bool66, args=(Var($64compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.3', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.3, func=bool66, args=(Var($64compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.3', '$66pred', 'bool66']
2025-06-13 07:34:43,330 - print_capture - INFO -     $66pred = call bool66($64compare_op.3, func=bool66, args=(Var($64compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.3', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.3, func=bool66, args=(Var($64compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.3', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.3, func=bool66, args=(Var($64compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.3', '$66pred', 'bool66']
2025-06-13 07:34:43,330 - print_capture - INFO -     $66pred = call bool66($64compare_op.3, func=bool66, args=(Var($64compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.3', '$66pred', 'bool66']
    branch $66pred, 68, 86                   ['$66pred']
    branch $66pred, 68, 86                   ['$66pred']
2025-06-13 07:34:43,330 - print_capture - INFO -     branch $66pred, 68, 86                   ['$66pred']
    branch $66pred, 68, 86                   ['$66pred']
    branch $66pred, 68, 86                   ['$66pred']
2025-06-13 07:34:43,330 - print_capture - INFO -     branch $66pred, 68, 86                   ['$66pred']
label 68:
label 68:
2025-06-13 07:34:43,330 - print_capture - INFO - label 68:
label 68:
label 68:
2025-06-13 07:34:43,330 - print_capture - INFO - label 68:
    $68load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$68load_global.0']
    $68load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$68load_global.0']
2025-06-13 07:34:43,330 - print_capture - INFO -     $68load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$68load_global.0']
    $68load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$68load_global.0']
    $68load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$68load_global.0']
2025-06-13 07:34:43,330 - print_capture - INFO -     $68load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$68load_global.0']
    $72load_attr.2 = getattr(value=a, attr=_data) ['$72load_attr.2', 'a']
    $72load_attr.2 = getattr(value=a, attr=_data) ['$72load_attr.2', 'a']
2025-06-13 07:34:43,330 - print_capture - INFO -     $72load_attr.2 = getattr(value=a, attr=_data) ['$72load_attr.2', 'a']
    $72load_attr.2 = getattr(value=a, attr=_data) ['$72load_attr.2', 'a']
    $72load_attr.2 = getattr(value=a, attr=_data) ['$72load_attr.2', 'a']
2025-06-13 07:34:43,330 - print_capture - INFO -     $72load_attr.2 = getattr(value=a, attr=_data) ['$72load_attr.2', 'a']
    $78call_function.5 = call $68load_global.0($72load_attr.2, i, ch, func=$68load_global.0, args=[Var($72load_attr.2, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72load_attr.2', '$78call_function.5', 'ch', 'i']
    $78call_function.5 = call $68load_global.0($72load_attr.2, i, ch, func=$68load_global.0, args=[Var($72load_attr.2, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72load_attr.2', '$78call_function.5', 'ch', 'i']
2025-06-13 07:34:43,330 - print_capture - INFO -     $78call_function.5 = call $68load_global.0($72load_attr.2, i, ch, func=$68load_global.0, args=[Var($72load_attr.2, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72load_attr.2', '$78call_function.5', 'ch', 'i']
    $78call_function.5 = call $68load_global.0($72load_attr.2, i, ch, func=$68load_global.0, args=[Var($72load_attr.2, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72load_attr.2', '$78call_function.5', 'ch', 'i']
    $78call_function.5 = call $68load_global.0($72load_attr.2, i, ch, func=$68load_global.0, args=[Var($72load_attr.2, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72load_attr.2', '$78call_function.5', 'ch', 'i']
2025-06-13 07:34:43,330 - print_capture - INFO -     $78call_function.5 = call $68load_global.0($72load_attr.2, i, ch, func=$68load_global.0, args=[Var($72load_attr.2, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72load_attr.2', '$78call_function.5', 'ch', 'i']
    $const82.6.0 = const(NoneType, None)     ['$const82.6.0']
    $const82.6.0 = const(NoneType, None)     ['$const82.6.0']
2025-06-13 07:34:43,330 - print_capture - INFO -     $const82.6.0 = const(NoneType, None)     ['$const82.6.0']
    $const82.6.0 = const(NoneType, None)     ['$const82.6.0']
    $const82.6.0 = const(NoneType, None)     ['$const82.6.0']
2025-06-13 07:34:43,330 - print_capture - INFO -     $const82.6.0 = const(NoneType, None)     ['$const82.6.0']
    $84return_value.7 = cast(value=$const82.6.0) ['$84return_value.7', '$const82.6.0']
    $84return_value.7 = cast(value=$const82.6.0) ['$84return_value.7', '$const82.6.0']
2025-06-13 07:34:43,330 - print_capture - INFO -     $84return_value.7 = cast(value=$const82.6.0) ['$84return_value.7', '$const82.6.0']
    $84return_value.7 = cast(value=$const82.6.0) ['$84return_value.7', '$const82.6.0']
    $84return_value.7 = cast(value=$const82.6.0) ['$84return_value.7', '$const82.6.0']
2025-06-13 07:34:43,330 - print_capture - INFO -     $84return_value.7 = cast(value=$const82.6.0) ['$84return_value.7', '$const82.6.0']
    return $84return_value.7                 ['$84return_value.7']
    return $84return_value.7                 ['$84return_value.7']
2025-06-13 07:34:43,330 - print_capture - INFO -     return $84return_value.7                 ['$84return_value.7']
    return $84return_value.7                 ['$84return_value.7']
    return $84return_value.7                 ['$84return_value.7']
2025-06-13 07:34:43,330 - print_capture - INFO -     return $84return_value.7                 ['$84return_value.7']
label 86:
label 86:
2025-06-13 07:34:43,330 - print_capture - INFO - label 86:
label 86:
label 86:
2025-06-13 07:34:43,330 - print_capture - INFO - label 86:
    $86load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$86load_global.0']
    $86load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$86load_global.0']
2025-06-13 07:34:43,330 - print_capture - INFO -     $86load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$86load_global.0']
    $86load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$86load_global.0']
    $86load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$86load_global.0']
2025-06-13 07:34:43,330 - print_capture - INFO -     $86load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$86load_global.0']
    $const88.1.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const88.1.1']
    $const88.1.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const88.1.1']
2025-06-13 07:34:43,330 - print_capture - INFO -     $const88.1.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const88.1.1']
    $const88.1.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const88.1.1']
    $const88.1.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const88.1.1']
2025-06-13 07:34:43,330 - print_capture - INFO -     $const88.1.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const88.1.1']
    $90call_function.2 = call $86load_global.0($const88.1.1, func=$86load_global.0, args=[Var($const88.1.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.0', '$90call_function.2', '$const88.1.1']
    $90call_function.2 = call $86load_global.0($const88.1.1, func=$86load_global.0, args=[Var($const88.1.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.0', '$90call_function.2', '$const88.1.1']
2025-06-13 07:34:43,330 - print_capture - INFO -     $90call_function.2 = call $86load_global.0($const88.1.1, func=$86load_global.0, args=[Var($const88.1.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.0', '$90call_function.2', '$const88.1.1']
    $90call_function.2 = call $86load_global.0($const88.1.1, func=$86load_global.0, args=[Var($const88.1.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.0', '$90call_function.2', '$const88.1.1']
    $90call_function.2 = call $86load_global.0($const88.1.1, func=$86load_global.0, args=[Var($const88.1.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.0', '$90call_function.2', '$const88.1.1']
2025-06-13 07:34:43,330 - print_capture - INFO -     $90call_function.2 = call $86load_global.0($const88.1.1, func=$86load_global.0, args=[Var($const88.1.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$86load_global.0', '$90call_function.2', '$const88.1.1']
    raise $90call_function.2                 ['$90call_function.2']
    raise $90call_function.2                 ['$90call_function.2']
2025-06-13 07:34:43,330 - print_capture - INFO -     raise $90call_function.2                 ['$90call_function.2']
    raise $90call_function.2                 ['$90call_function.2']
    raise $90call_function.2                 ['$90call_function.2']
2025-06-13 07:34:43,331 - print_capture - INFO -     raise $90call_function.2                 ['$90call_function.2']
label 0:
label 0:
2025-06-13 07:34:43,520 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,520 - print_capture - INFO - label 0:
    object = arg(0, name=object)             ['object']
    object = arg(0, name=object)             ['object']
2025-06-13 07:34:43,520 - print_capture - INFO -     object = arg(0, name=object)             ['object']
    object = arg(0, name=object)             ['object']
    object = arg(0, name=object)             ['object']
2025-06-13 07:34:43,520 - print_capture - INFO -     object = arg(0, name=object)             ['object']
    attr = const(str, __str__)               ['attr']
    attr = const(str, __str__)               ['attr']
2025-06-13 07:34:43,520 - print_capture - INFO -     attr = const(str, __str__)               ['attr']
    attr = const(str, __str__)               ['attr']
    attr = const(str, __str__)               ['attr']
2025-06-13 07:34:43,520 - print_capture - INFO -     attr = const(str, __str__)               ['attr']
    $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
    $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
2025-06-13 07:34:43,520 - print_capture - INFO -     $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
    $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
    $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
2025-06-13 07:34:43,520 - print_capture - INFO -     $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
    $12call_function.4 = call $6load_global.1(object, attr, func=$6load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'object']
    $12call_function.4 = call $6load_global.1(object, attr, func=$6load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'object']
2025-06-13 07:34:43,520 - print_capture - INFO -     $12call_function.4 = call $6load_global.1(object, attr, func=$6load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'object']
    $12call_function.4 = call $6load_global.1(object, attr, func=$6load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'object']
    $12call_function.4 = call $6load_global.1(object, attr, func=$6load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'object']
2025-06-13 07:34:43,520 - print_capture - INFO -     $12call_function.4 = call $6load_global.1(object, attr, func=$6load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'object']
    $const14.5.2 = const(bool, True)         ['$const14.5.2']
    $const14.5.2 = const(bool, True)         ['$const14.5.2']
2025-06-13 07:34:43,520 - print_capture - INFO -     $const14.5.2 = const(bool, True)         ['$const14.5.2']
    $const14.5.2 = const(bool, True)         ['$const14.5.2']
    $const14.5.2 = const(bool, True)         ['$const14.5.2']
2025-06-13 07:34:43,520 - print_capture - INFO -     $const14.5.2 = const(bool, True)         ['$const14.5.2']
    $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
    $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
2025-06-13 07:34:43,520 - print_capture - INFO -     $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
    $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
    $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
2025-06-13 07:34:43,520 - print_capture - INFO -     $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
2025-06-13 07:34:43,521 - print_capture - INFO -     bool18 = global(bool: <class 'bool'>)    ['bool18']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
2025-06-13 07:34:43,521 - print_capture - INFO -     bool18 = global(bool: <class 'bool'>)    ['bool18']
    $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
    $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
2025-06-13 07:34:43,521 - print_capture - INFO -     $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
    $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
    $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
2025-06-13 07:34:43,521 - print_capture - INFO -     $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
    branch $18pred, 20, 32                   ['$18pred']
    branch $18pred, 20, 32                   ['$18pred']
2025-06-13 07:34:43,521 - print_capture - INFO -     branch $18pred, 20, 32                   ['$18pred']
    branch $18pred, 20, 32                   ['$18pred']
    branch $18pred, 20, 32                   ['$18pred']
2025-06-13 07:34:43,521 - print_capture - INFO -     branch $18pred, 20, 32                   ['$18pred']
label 20:
label 20:
2025-06-13 07:34:43,521 - print_capture - INFO - label 20:
label 20:
label 20:
2025-06-13 07:34:43,521 - print_capture - INFO - label 20:
    $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
    $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
2025-06-13 07:34:43,521 - print_capture - INFO -     $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
    $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
    $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
2025-06-13 07:34:43,521 - print_capture - INFO -     $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
    $26call_function.3 = call $20load_global.0(object, attr, func=$20load_global.0, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'object']
    $26call_function.3 = call $20load_global.0(object, attr, func=$20load_global.0, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'object']
2025-06-13 07:34:43,521 - print_capture - INFO -     $26call_function.3 = call $20load_global.0(object, attr, func=$20load_global.0, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'object']
    $26call_function.3 = call $20load_global.0(object, attr, func=$20load_global.0, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'object']
    $26call_function.3 = call $20load_global.0(object, attr, func=$20load_global.0, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'object']
2025-06-13 07:34:43,521 - print_capture - INFO -     $26call_function.3 = call $20load_global.0(object, attr, func=$20load_global.0, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'object']
    $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
    $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
2025-06-13 07:34:43,521 - print_capture - INFO -     $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
    $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
    $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
2025-06-13 07:34:43,521 - print_capture - INFO -     $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
    $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
    $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
2025-06-13 07:34:43,521 - print_capture - INFO -     $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
    $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
    $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
2025-06-13 07:34:43,521 - print_capture - INFO -     $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
    return $30return_value.5                 ['$30return_value.5']
    return $30return_value.5                 ['$30return_value.5']
2025-06-13 07:34:43,521 - print_capture - INFO -     return $30return_value.5                 ['$30return_value.5']
    return $30return_value.5                 ['$30return_value.5']
    return $30return_value.5                 ['$30return_value.5']
2025-06-13 07:34:43,521 - print_capture - INFO -     return $30return_value.5                 ['$30return_value.5']
label 32:
label 32:
2025-06-13 07:34:43,521 - print_capture - INFO - label 32:
label 32:
label 32:
2025-06-13 07:34:43,521 - print_capture - INFO - label 32:
    $32load_global.0 = global(repr: <built-in function repr>) ['$32load_global.0']
    $32load_global.0 = global(repr: <built-in function repr>) ['$32load_global.0']
2025-06-13 07:34:43,521 - print_capture - INFO -     $32load_global.0 = global(repr: <built-in function repr>) ['$32load_global.0']
    $32load_global.0 = global(repr: <built-in function repr>) ['$32load_global.0']
    $32load_global.0 = global(repr: <built-in function repr>) ['$32load_global.0']
2025-06-13 07:34:43,521 - print_capture - INFO -     $32load_global.0 = global(repr: <built-in function repr>) ['$32load_global.0']
    $36call_function.2 = call $32load_global.0(object, func=$32load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_global.0', '$36call_function.2', 'object']
    $36call_function.2 = call $32load_global.0(object, func=$32load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_global.0', '$36call_function.2', 'object']
2025-06-13 07:34:43,521 - print_capture - INFO -     $36call_function.2 = call $32load_global.0(object, func=$32load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_global.0', '$36call_function.2', 'object']
    $36call_function.2 = call $32load_global.0(object, func=$32load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_global.0', '$36call_function.2', 'object']
    $36call_function.2 = call $32load_global.0(object, func=$32load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_global.0', '$36call_function.2', 'object']
2025-06-13 07:34:43,521 - print_capture - INFO -     $36call_function.2 = call $32load_global.0(object, func=$32load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_global.0', '$36call_function.2', 'object']
    $38return_value.3 = cast(value=$36call_function.2) ['$36call_function.2', '$38return_value.3']
    $38return_value.3 = cast(value=$36call_function.2) ['$36call_function.2', '$38return_value.3']
2025-06-13 07:34:43,521 - print_capture - INFO -     $38return_value.3 = cast(value=$36call_function.2) ['$36call_function.2', '$38return_value.3']
    $38return_value.3 = cast(value=$36call_function.2) ['$36call_function.2', '$38return_value.3']
    $38return_value.3 = cast(value=$36call_function.2) ['$36call_function.2', '$38return_value.3']
2025-06-13 07:34:43,521 - print_capture - INFO -     $38return_value.3 = cast(value=$36call_function.2) ['$36call_function.2', '$38return_value.3']
    return $38return_value.3                 ['$38return_value.3']
    return $38return_value.3                 ['$38return_value.3']
2025-06-13 07:34:43,521 - print_capture - INFO -     return $38return_value.3                 ['$38return_value.3']
    return $38return_value.3                 ['$38return_value.3']
    return $38return_value.3                 ['$38return_value.3']
2025-06-13 07:34:43,521 - print_capture - INFO -     return $38return_value.3                 ['$38return_value.3']
label 0:
label 0:
2025-06-13 07:34:43,525 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,525 - print_capture - INFO - label 0:
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:43,525 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:43,525 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:43,525 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:43,525 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:43,525 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:43,525 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:43,525 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:43,525 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:43,525 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:43,525 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:43,525 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:43,525 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
label 0:
label 0:
2025-06-13 07:34:43,528 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,528 - print_capture - INFO - label 0:
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:43,528 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:43,528 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:43,528 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:43,528 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:43,528 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:43,528 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:43,529 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:43,529 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:43,529 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:43,529 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:43,529 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:43,529 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
label 0:
label 0:
2025-06-13 07:34:43,540 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,540 - print_capture - INFO - label 0:
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:43,540 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:43,541 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:43,541 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:43,541 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
2025-06-13 07:34:43,541 - print_capture - INFO -     $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
2025-06-13 07:34:43,541 - print_capture - INFO -     $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
    $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
    $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
2025-06-13 07:34:43,541 - print_capture - INFO -     $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
    $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
    $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
2025-06-13 07:34:43,541 - print_capture - INFO -     $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
    $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
    $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
2025-06-13 07:34:43,541 - print_capture - INFO -     $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
    $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
    $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
2025-06-13 07:34:43,541 - print_capture - INFO -     $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
2025-06-13 07:34:43,541 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
2025-06-13 07:34:43,541 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:43,541 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:43,541 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
label 0:
label 0:
2025-06-13 07:34:43,554 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,554 - print_capture - INFO - label 0:
    s = arg(0, name=s)                       ['s']
    s = arg(0, name=s)                       ['s']
2025-06-13 07:34:43,554 - print_capture - INFO -     s = arg(0, name=s)                       ['s']
    s = arg(0, name=s)                       ['s']
    s = arg(0, name=s)                       ['s']
2025-06-13 07:34:43,554 - print_capture - INFO -     s = arg(0, name=s)                       ['s']
    $4return_value.1 = cast(value=s)         ['$4return_value.1', 's']
    $4return_value.1 = cast(value=s)         ['$4return_value.1', 's']
2025-06-13 07:34:43,554 - print_capture - INFO -     $4return_value.1 = cast(value=s)         ['$4return_value.1', 's']
    $4return_value.1 = cast(value=s)         ['$4return_value.1', 's']
    $4return_value.1 = cast(value=s)         ['$4return_value.1', 's']
2025-06-13 07:34:43,554 - print_capture - INFO -     $4return_value.1 = cast(value=s)         ['$4return_value.1', 's']
    return $4return_value.1                  ['$4return_value.1']
    return $4return_value.1                  ['$4return_value.1']
2025-06-13 07:34:43,554 - print_capture - INFO -     return $4return_value.1                  ['$4return_value.1']
    return $4return_value.1                  ['$4return_value.1']
    return $4return_value.1                  ['$4return_value.1']
2025-06-13 07:34:43,554 - print_capture - INFO -     return $4return_value.1                  ['$4return_value.1']
label 0:
label 0:
2025-06-13 07:34:43,566 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,566 - print_capture - INFO - label 0:
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:43,566 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:43,566 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    attr = const(str, __repr__)              ['attr']
    attr = const(str, __repr__)              ['attr']
2025-06-13 07:34:43,566 - print_capture - INFO -     attr = const(str, __repr__)              ['attr']
    attr = const(str, __repr__)              ['attr']
    attr = const(str, __repr__)              ['attr']
2025-06-13 07:34:43,566 - print_capture - INFO -     attr = const(str, __repr__)              ['attr']
    $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
    $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
2025-06-13 07:34:43,566 - print_capture - INFO -     $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
    $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
    $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
2025-06-13 07:34:43,566 - print_capture - INFO -     $6load_global.1 = global(hasattr: <built-in function hasattr>) ['$6load_global.1']
    $12call_function.4 = call $6load_global.1(obj, attr, func=$6load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'obj']
    $12call_function.4 = call $6load_global.1(obj, attr, func=$6load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'obj']
2025-06-13 07:34:43,566 - print_capture - INFO -     $12call_function.4 = call $6load_global.1(obj, attr, func=$6load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'obj']
    $12call_function.4 = call $6load_global.1(obj, attr, func=$6load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'obj']
    $12call_function.4 = call $6load_global.1(obj, attr, func=$6load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'obj']
2025-06-13 07:34:43,566 - print_capture - INFO -     $12call_function.4 = call $6load_global.1(obj, attr, func=$6load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.4', '$6load_global.1', 'attr', 'obj']
    $const14.5.2 = const(bool, True)         ['$const14.5.2']
    $const14.5.2 = const(bool, True)         ['$const14.5.2']
2025-06-13 07:34:43,566 - print_capture - INFO -     $const14.5.2 = const(bool, True)         ['$const14.5.2']
    $const14.5.2 = const(bool, True)         ['$const14.5.2']
    $const14.5.2 = const(bool, True)         ['$const14.5.2']
2025-06-13 07:34:43,567 - print_capture - INFO -     $const14.5.2 = const(bool, True)         ['$const14.5.2']
    $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
    $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
2025-06-13 07:34:43,567 - print_capture - INFO -     $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
    $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
    $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
2025-06-13 07:34:43,567 - print_capture - INFO -     $16compare_op.6 = $12call_function.4 == $const14.5.2 ['$12call_function.4', '$16compare_op.6', '$const14.5.2']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
2025-06-13 07:34:43,567 - print_capture - INFO -     bool18 = global(bool: <class 'bool'>)    ['bool18']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
2025-06-13 07:34:43,567 - print_capture - INFO -     bool18 = global(bool: <class 'bool'>)    ['bool18']
    $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
    $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
2025-06-13 07:34:43,567 - print_capture - INFO -     $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
    $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
    $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
2025-06-13 07:34:43,567 - print_capture - INFO -     $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.6', '$18pred', 'bool18']
    branch $18pred, 20, 32                   ['$18pred']
    branch $18pred, 20, 32                   ['$18pred']
2025-06-13 07:34:43,567 - print_capture - INFO -     branch $18pred, 20, 32                   ['$18pred']
    branch $18pred, 20, 32                   ['$18pred']
    branch $18pred, 20, 32                   ['$18pred']
2025-06-13 07:34:43,567 - print_capture - INFO -     branch $18pred, 20, 32                   ['$18pred']
label 20:
label 20:
2025-06-13 07:34:43,567 - print_capture - INFO - label 20:
label 20:
label 20:
2025-06-13 07:34:43,567 - print_capture - INFO - label 20:
    $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
    $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
2025-06-13 07:34:43,567 - print_capture - INFO -     $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
    $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
    $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
2025-06-13 07:34:43,567 - print_capture - INFO -     $20load_global.0 = global(getattr: <built-in function getattr>) ['$20load_global.0']
    $26call_function.3 = call $20load_global.0(obj, attr, func=$20load_global.0, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'obj']
    $26call_function.3 = call $20load_global.0(obj, attr, func=$20load_global.0, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'obj']
2025-06-13 07:34:43,567 - print_capture - INFO -     $26call_function.3 = call $20load_global.0(obj, attr, func=$20load_global.0, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'obj']
    $26call_function.3 = call $20load_global.0(obj, attr, func=$20load_global.0, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'obj']
    $26call_function.3 = call $20load_global.0(obj, attr, func=$20load_global.0, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'obj']
2025-06-13 07:34:43,567 - print_capture - INFO -     $26call_function.3 = call $20load_global.0(obj, attr, func=$20load_global.0, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.0', '$26call_function.3', 'attr', 'obj']
    $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
    $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
2025-06-13 07:34:43,567 - print_capture - INFO -     $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
    $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
    $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
2025-06-13 07:34:43,567 - print_capture - INFO -     $28call_function.4 = call $26call_function.3(func=$26call_function.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call_function.3', '$28call_function.4']
    $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
    $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
2025-06-13 07:34:43,567 - print_capture - INFO -     $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
    $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
    $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
2025-06-13 07:34:43,567 - print_capture - INFO -     $30return_value.5 = cast(value=$28call_function.4) ['$28call_function.4', '$30return_value.5']
    return $30return_value.5                 ['$30return_value.5']
    return $30return_value.5                 ['$30return_value.5']
2025-06-13 07:34:43,567 - print_capture - INFO -     return $30return_value.5                 ['$30return_value.5']
    return $30return_value.5                 ['$30return_value.5']
    return $30return_value.5                 ['$30return_value.5']
2025-06-13 07:34:43,567 - print_capture - INFO -     return $30return_value.5                 ['$30return_value.5']
label 32:
label 32:
2025-06-13 07:34:43,567 - print_capture - INFO - label 32:
label 32:
label 32:
2025-06-13 07:34:43,567 - print_capture - INFO - label 32:
    $32load_deref.0 = freevar(missing_repr_format: <object type:unicode_type>) ['$32load_deref.0']
    $32load_deref.0 = freevar(missing_repr_format: <object type:unicode_type>) ['$32load_deref.0']
2025-06-13 07:34:43,567 - print_capture - INFO -     $32load_deref.0 = freevar(missing_repr_format: <object type:unicode_type>) ['$32load_deref.0']
    $32load_deref.0 = freevar(missing_repr_format: <object type:unicode_type>) ['$32load_deref.0']
    $32load_deref.0 = freevar(missing_repr_format: <object type:unicode_type>) ['$32load_deref.0']
2025-06-13 07:34:43,567 - print_capture - INFO -     $32load_deref.0 = freevar(missing_repr_format: <object type:unicode_type>) ['$32load_deref.0']
    $34return_value.1 = cast(value=$32load_deref.0) ['$32load_deref.0', '$34return_value.1']
    $34return_value.1 = cast(value=$32load_deref.0) ['$32load_deref.0', '$34return_value.1']
2025-06-13 07:34:43,567 - print_capture - INFO -     $34return_value.1 = cast(value=$32load_deref.0) ['$32load_deref.0', '$34return_value.1']
    $34return_value.1 = cast(value=$32load_deref.0) ['$32load_deref.0', '$34return_value.1']
    $34return_value.1 = cast(value=$32load_deref.0) ['$32load_deref.0', '$34return_value.1']
2025-06-13 07:34:43,567 - print_capture - INFO -     $34return_value.1 = cast(value=$32load_deref.0) ['$32load_deref.0', '$34return_value.1']
    return $34return_value.1                 ['$34return_value.1']
    return $34return_value.1                 ['$34return_value.1']
2025-06-13 07:34:43,567 - print_capture - INFO -     return $34return_value.1                 ['$34return_value.1']
    return $34return_value.1                 ['$34return_value.1']
    return $34return_value.1                 ['$34return_value.1']
2025-06-13 07:34:43,567 - print_capture - INFO -     return $34return_value.1                 ['$34return_value.1']
label 0:
label 0:
2025-06-13 07:34:43,571 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,571 - print_capture - INFO - label 0:
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:43,571 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:43,571 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:43,571 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:43,571 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:43,571 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:43,571 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:43,571 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:43,571 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:43,571 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:43,571 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:43,571 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:43,571 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
label 0:
label 0:
2025-06-13 07:34:43,574 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,574 - print_capture - INFO - label 0:
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:43,574 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:43,574 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:43,574 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:43,574 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:43,574 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:43,574 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:43,574 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:43,574 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:43,575 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:43,575 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:43,575 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:43,575 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
label 0:
label 0:
2025-06-13 07:34:43,586 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,586 - print_capture - INFO - label 0:
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:43,586 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:43,586 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:43,586 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:43,586 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
2025-06-13 07:34:43,586 - print_capture - INFO -     $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
2025-06-13 07:34:43,586 - print_capture - INFO -     $2load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$2load_global.0']
    $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
    $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
2025-06-13 07:34:43,587 - print_capture - INFO -     $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
    $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
    $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
2025-06-13 07:34:43,587 - print_capture - INFO -     $8load_global.3 = global(_getattr_default: _getattr_default_type()) ['$8load_global.3']
    $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
    $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
2025-06-13 07:34:43,587 - print_capture - INFO -     $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
    $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
    $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
2025-06-13 07:34:43,587 - print_capture - INFO -     $10call_function.4 = call $2load_global.0(obj, name, $8load_global.3, func=$2load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($8load_global.3, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_global.3', 'name', 'obj']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
2025-06-13 07:34:43,587 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
2025-06-13 07:34:43,587 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:43,587 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:43,587 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
label 0:
label 0:
2025-06-13 07:34:43,600 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,600 - print_capture - INFO - label 0:
    s = arg(0, name=s)                       ['s']
    s = arg(0, name=s)                       ['s']
2025-06-13 07:34:43,600 - print_capture - INFO -     s = arg(0, name=s)                       ['s']
    s = arg(0, name=s)                       ['s']
    s = arg(0, name=s)                       ['s']
2025-06-13 07:34:43,600 - print_capture - INFO -     s = arg(0, name=s)                       ['s']
    $const2.0.1 = const(str, ')              ['$const2.0.1']
    $const2.0.1 = const(str, ')              ['$const2.0.1']
2025-06-13 07:34:43,600 - print_capture - INFO -     $const2.0.1 = const(str, ')              ['$const2.0.1']
    $const2.0.1 = const(str, ')              ['$const2.0.1']
    $const2.0.1 = const(str, ')              ['$const2.0.1']
2025-06-13 07:34:43,600 - print_capture - INFO -     $const2.0.1 = const(str, ')              ['$const2.0.1']
    $6binary_add.2 = $const2.0.1 + s         ['$6binary_add.2', '$const2.0.1', 's']
    $6binary_add.2 = $const2.0.1 + s         ['$6binary_add.2', '$const2.0.1', 's']
2025-06-13 07:34:43,600 - print_capture - INFO -     $6binary_add.2 = $const2.0.1 + s         ['$6binary_add.2', '$const2.0.1', 's']
    $6binary_add.2 = $const2.0.1 + s         ['$6binary_add.2', '$const2.0.1', 's']
    $6binary_add.2 = $const2.0.1 + s         ['$6binary_add.2', '$const2.0.1', 's']
2025-06-13 07:34:43,600 - print_capture - INFO -     $6binary_add.2 = $const2.0.1 + s         ['$6binary_add.2', '$const2.0.1', 's']
    $const8.3.1 = const(str, ')              ['$const8.3.1']
    $const8.3.1 = const(str, ')              ['$const8.3.1']
2025-06-13 07:34:43,600 - print_capture - INFO -     $const8.3.1 = const(str, ')              ['$const8.3.1']
    $const8.3.1 = const(str, ')              ['$const8.3.1']
    $const8.3.1 = const(str, ')              ['$const8.3.1']
2025-06-13 07:34:43,600 - print_capture - INFO -     $const8.3.1 = const(str, ')              ['$const8.3.1']
    $10binary_add.4 = $6binary_add.2 + $const8.3.1 ['$10binary_add.4', '$6binary_add.2', '$const8.3.1']
    $10binary_add.4 = $6binary_add.2 + $const8.3.1 ['$10binary_add.4', '$6binary_add.2', '$const8.3.1']
2025-06-13 07:34:43,600 - print_capture - INFO -     $10binary_add.4 = $6binary_add.2 + $const8.3.1 ['$10binary_add.4', '$6binary_add.2', '$const8.3.1']
    $10binary_add.4 = $6binary_add.2 + $const8.3.1 ['$10binary_add.4', '$6binary_add.2', '$const8.3.1']
    $10binary_add.4 = $6binary_add.2 + $const8.3.1 ['$10binary_add.4', '$6binary_add.2', '$const8.3.1']
2025-06-13 07:34:43,600 - print_capture - INFO -     $10binary_add.4 = $6binary_add.2 + $const8.3.1 ['$10binary_add.4', '$6binary_add.2', '$const8.3.1']
    $12return_value.5 = cast(value=$10binary_add.4) ['$10binary_add.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10binary_add.4) ['$10binary_add.4', '$12return_value.5']
2025-06-13 07:34:43,600 - print_capture - INFO -     $12return_value.5 = cast(value=$10binary_add.4) ['$10binary_add.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10binary_add.4) ['$10binary_add.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10binary_add.4) ['$10binary_add.4', '$12return_value.5']
2025-06-13 07:34:43,600 - print_capture - INFO -     $12return_value.5 = cast(value=$10binary_add.4) ['$10binary_add.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:43,600 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:43,600 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
label 0:
label 0:
2025-06-13 07:34:43,603 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,603 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:43,603 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:43,604 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    b = arg(1, name=b)                       ['b']
2025-06-13 07:34:43,604 - print_capture - INFO -     b = arg(1, name=b)                       ['b']
    b = arg(1, name=b)                       ['b']
    b = arg(1, name=b)                       ['b']
2025-06-13 07:34:43,604 - print_capture - INFO -     b = arg(1, name=b)                       ['b']
    $4load_attr.1 = getattr(value=a, attr=_length) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_length) ['$4load_attr.1', 'a']
2025-06-13 07:34:43,604 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=_length) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_length) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_length) ['$4load_attr.1', 'a']
2025-06-13 07:34:43,604 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=_length) ['$4load_attr.1', 'a']
    $8load_attr.3 = getattr(value=b, attr=_length) ['$8load_attr.3', 'b']
    $8load_attr.3 = getattr(value=b, attr=_length) ['$8load_attr.3', 'b']
2025-06-13 07:34:43,604 - print_capture - INFO -     $8load_attr.3 = getattr(value=b, attr=_length) ['$8load_attr.3', 'b']
    $8load_attr.3 = getattr(value=b, attr=_length) ['$8load_attr.3', 'b']
    $8load_attr.3 = getattr(value=b, attr=_length) ['$8load_attr.3', 'b']
2025-06-13 07:34:43,604 - print_capture - INFO -     $8load_attr.3 = getattr(value=b, attr=_length) ['$8load_attr.3', 'b']
    new_length = $4load_attr.1 + $8load_attr.3 ['$4load_attr.1', '$8load_attr.3', 'new_length']
    new_length = $4load_attr.1 + $8load_attr.3 ['$4load_attr.1', '$8load_attr.3', 'new_length']
2025-06-13 07:34:43,604 - print_capture - INFO -     new_length = $4load_attr.1 + $8load_attr.3 ['$4load_attr.1', '$8load_attr.3', 'new_length']
    new_length = $4load_attr.1 + $8load_attr.3 ['$4load_attr.1', '$8load_attr.3', 'new_length']
    new_length = $4load_attr.1 + $8load_attr.3 ['$4load_attr.1', '$8load_attr.3', 'new_length']
2025-06-13 07:34:43,604 - print_capture - INFO -     new_length = $4load_attr.1 + $8load_attr.3 ['$4load_attr.1', '$8load_attr.3', 'new_length']
    $14load_global.5 = global(_pick_kind: <function _pick_kind at 0x7f28ab7cb010>) ['$14load_global.5']
    $14load_global.5 = global(_pick_kind: <function _pick_kind at 0x7f28ab7cb010>) ['$14load_global.5']
2025-06-13 07:34:43,604 - print_capture - INFO -     $14load_global.5 = global(_pick_kind: <function _pick_kind at 0x7f28ab7cb010>) ['$14load_global.5']
    $14load_global.5 = global(_pick_kind: <function _pick_kind at 0x7f28ab7cb010>) ['$14load_global.5']
    $14load_global.5 = global(_pick_kind: <function _pick_kind at 0x7f28ab7cb010>) ['$14load_global.5']
2025-06-13 07:34:43,604 - print_capture - INFO -     $14load_global.5 = global(_pick_kind: <function _pick_kind at 0x7f28ab7cb010>) ['$14load_global.5']
    $18load_attr.7 = getattr(value=a, attr=_kind) ['$18load_attr.7', 'a']
    $18load_attr.7 = getattr(value=a, attr=_kind) ['$18load_attr.7', 'a']
2025-06-13 07:34:43,604 - print_capture - INFO -     $18load_attr.7 = getattr(value=a, attr=_kind) ['$18load_attr.7', 'a']
    $18load_attr.7 = getattr(value=a, attr=_kind) ['$18load_attr.7', 'a']
    $18load_attr.7 = getattr(value=a, attr=_kind) ['$18load_attr.7', 'a']
2025-06-13 07:34:43,604 - print_capture - INFO -     $18load_attr.7 = getattr(value=a, attr=_kind) ['$18load_attr.7', 'a']
    $22load_attr.9 = getattr(value=b, attr=_kind) ['$22load_attr.9', 'b']
    $22load_attr.9 = getattr(value=b, attr=_kind) ['$22load_attr.9', 'b']
2025-06-13 07:34:43,604 - print_capture - INFO -     $22load_attr.9 = getattr(value=b, attr=_kind) ['$22load_attr.9', 'b']
    $22load_attr.9 = getattr(value=b, attr=_kind) ['$22load_attr.9', 'b']
    $22load_attr.9 = getattr(value=b, attr=_kind) ['$22load_attr.9', 'b']
2025-06-13 07:34:43,604 - print_capture - INFO -     $22load_attr.9 = getattr(value=b, attr=_kind) ['$22load_attr.9', 'b']
    new_kind = call $14load_global.5($18load_attr.7, $22load_attr.9, func=$14load_global.5, args=[Var($18load_attr.7, unicode.py:1887), Var($22load_attr.9, unicode.py:1887)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_global.5', '$18load_attr.7', '$22load_attr.9', 'new_kind']
    new_kind = call $14load_global.5($18load_attr.7, $22load_attr.9, func=$14load_global.5, args=[Var($18load_attr.7, unicode.py:1887), Var($22load_attr.9, unicode.py:1887)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_global.5', '$18load_attr.7', '$22load_attr.9', 'new_kind']
2025-06-13 07:34:43,604 - print_capture - INFO -     new_kind = call $14load_global.5($18load_attr.7, $22load_attr.9, func=$14load_global.5, args=[Var($18load_attr.7, unicode.py:1887), Var($22load_attr.9, unicode.py:1887)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_global.5', '$18load_attr.7', '$22load_attr.9', 'new_kind']
    new_kind = call $14load_global.5($18load_attr.7, $22load_attr.9, func=$14load_global.5, args=[Var($18load_attr.7, unicode.py:1887), Var($22load_attr.9, unicode.py:1887)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_global.5', '$18load_attr.7', '$22load_attr.9', 'new_kind']
    new_kind = call $14load_global.5($18load_attr.7, $22load_attr.9, func=$14load_global.5, args=[Var($18load_attr.7, unicode.py:1887), Var($22load_attr.9, unicode.py:1887)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_global.5', '$18load_attr.7', '$22load_attr.9', 'new_kind']
2025-06-13 07:34:43,604 - print_capture - INFO -     new_kind = call $14load_global.5($18load_attr.7, $22load_attr.9, func=$14load_global.5, args=[Var($18load_attr.7, unicode.py:1887), Var($22load_attr.9, unicode.py:1887)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_global.5', '$18load_attr.7', '$22load_attr.9', 'new_kind']
    $28load_global.11 = global(_pick_ascii: <function _pick_ascii at 0x7f28ab7cb130>) ['$28load_global.11']
    $28load_global.11 = global(_pick_ascii: <function _pick_ascii at 0x7f28ab7cb130>) ['$28load_global.11']
2025-06-13 07:34:43,604 - print_capture - INFO -     $28load_global.11 = global(_pick_ascii: <function _pick_ascii at 0x7f28ab7cb130>) ['$28load_global.11']
    $28load_global.11 = global(_pick_ascii: <function _pick_ascii at 0x7f28ab7cb130>) ['$28load_global.11']
    $28load_global.11 = global(_pick_ascii: <function _pick_ascii at 0x7f28ab7cb130>) ['$28load_global.11']
2025-06-13 07:34:43,604 - print_capture - INFO -     $28load_global.11 = global(_pick_ascii: <function _pick_ascii at 0x7f28ab7cb130>) ['$28load_global.11']
    $32load_attr.13 = getattr(value=a, attr=_is_ascii) ['$32load_attr.13', 'a']
    $32load_attr.13 = getattr(value=a, attr=_is_ascii) ['$32load_attr.13', 'a']
2025-06-13 07:34:43,604 - print_capture - INFO -     $32load_attr.13 = getattr(value=a, attr=_is_ascii) ['$32load_attr.13', 'a']
    $32load_attr.13 = getattr(value=a, attr=_is_ascii) ['$32load_attr.13', 'a']
    $32load_attr.13 = getattr(value=a, attr=_is_ascii) ['$32load_attr.13', 'a']
2025-06-13 07:34:43,604 - print_capture - INFO -     $32load_attr.13 = getattr(value=a, attr=_is_ascii) ['$32load_attr.13', 'a']
    $36load_attr.15 = getattr(value=b, attr=_is_ascii) ['$36load_attr.15', 'b']
    $36load_attr.15 = getattr(value=b, attr=_is_ascii) ['$36load_attr.15', 'b']
2025-06-13 07:34:43,604 - print_capture - INFO -     $36load_attr.15 = getattr(value=b, attr=_is_ascii) ['$36load_attr.15', 'b']
    $36load_attr.15 = getattr(value=b, attr=_is_ascii) ['$36load_attr.15', 'b']
    $36load_attr.15 = getattr(value=b, attr=_is_ascii) ['$36load_attr.15', 'b']
2025-06-13 07:34:43,604 - print_capture - INFO -     $36load_attr.15 = getattr(value=b, attr=_is_ascii) ['$36load_attr.15', 'b']
    new_ascii = call $28load_global.11($32load_attr.13, $36load_attr.15, func=$28load_global.11, args=[Var($32load_attr.13, unicode.py:1888), Var($36load_attr.15, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.11', '$32load_attr.13', '$36load_attr.15', 'new_ascii']
    new_ascii = call $28load_global.11($32load_attr.13, $36load_attr.15, func=$28load_global.11, args=[Var($32load_attr.13, unicode.py:1888), Var($36load_attr.15, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.11', '$32load_attr.13', '$36load_attr.15', 'new_ascii']
2025-06-13 07:34:43,604 - print_capture - INFO -     new_ascii = call $28load_global.11($32load_attr.13, $36load_attr.15, func=$28load_global.11, args=[Var($32load_attr.13, unicode.py:1888), Var($36load_attr.15, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.11', '$32load_attr.13', '$36load_attr.15', 'new_ascii']
    new_ascii = call $28load_global.11($32load_attr.13, $36load_attr.15, func=$28load_global.11, args=[Var($32load_attr.13, unicode.py:1888), Var($36load_attr.15, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.11', '$32load_attr.13', '$36load_attr.15', 'new_ascii']
    new_ascii = call $28load_global.11($32load_attr.13, $36load_attr.15, func=$28load_global.11, args=[Var($32load_attr.13, unicode.py:1888), Var($36load_attr.15, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.11', '$32load_attr.13', '$36load_attr.15', 'new_ascii']
2025-06-13 07:34:43,604 - print_capture - INFO -     new_ascii = call $28load_global.11($32load_attr.13, $36load_attr.15, func=$28load_global.11, args=[Var($32load_attr.13, unicode.py:1888), Var($36load_attr.15, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.11', '$32load_attr.13', '$36load_attr.15', 'new_ascii']
    $42load_global.17 = global(_empty_string: <function _empty_string at 0x7f28ab7cab90>) ['$42load_global.17']
    $42load_global.17 = global(_empty_string: <function _empty_string at 0x7f28ab7cab90>) ['$42load_global.17']
2025-06-13 07:34:43,604 - print_capture - INFO -     $42load_global.17 = global(_empty_string: <function _empty_string at 0x7f28ab7cab90>) ['$42load_global.17']
    $42load_global.17 = global(_empty_string: <function _empty_string at 0x7f28ab7cab90>) ['$42load_global.17']
    $42load_global.17 = global(_empty_string: <function _empty_string at 0x7f28ab7cab90>) ['$42load_global.17']
2025-06-13 07:34:43,604 - print_capture - INFO -     $42load_global.17 = global(_empty_string: <function _empty_string at 0x7f28ab7cab90>) ['$42load_global.17']
    result = call $42load_global.17(new_kind, new_length, new_ascii, func=$42load_global.17, args=[Var(new_kind, unicode.py:1887), Var(new_length, unicode.py:1886), Var(new_ascii, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.17', 'new_ascii', 'new_kind', 'new_length', 'result']
    result = call $42load_global.17(new_kind, new_length, new_ascii, func=$42load_global.17, args=[Var(new_kind, unicode.py:1887), Var(new_length, unicode.py:1886), Var(new_ascii, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.17', 'new_ascii', 'new_kind', 'new_length', 'result']
2025-06-13 07:34:43,604 - print_capture - INFO -     result = call $42load_global.17(new_kind, new_length, new_ascii, func=$42load_global.17, args=[Var(new_kind, unicode.py:1887), Var(new_length, unicode.py:1886), Var(new_ascii, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.17', 'new_ascii', 'new_kind', 'new_length', 'result']
    result = call $42load_global.17(new_kind, new_length, new_ascii, func=$42load_global.17, args=[Var(new_kind, unicode.py:1887), Var(new_length, unicode.py:1886), Var(new_ascii, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.17', 'new_ascii', 'new_kind', 'new_length', 'result']
    result = call $42load_global.17(new_kind, new_length, new_ascii, func=$42load_global.17, args=[Var(new_kind, unicode.py:1887), Var(new_length, unicode.py:1886), Var(new_ascii, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.17', 'new_ascii', 'new_kind', 'new_length', 'result']
2025-06-13 07:34:43,604 - print_capture - INFO -     result = call $42load_global.17(new_kind, new_length, new_ascii, func=$42load_global.17, args=[Var(new_kind, unicode.py:1887), Var(new_length, unicode.py:1886), Var(new_ascii, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.17', 'new_ascii', 'new_kind', 'new_length', 'result']
    $54load_global.22 = global(range: <class 'range'>) ['$54load_global.22']
    $54load_global.22 = global(range: <class 'range'>) ['$54load_global.22']
2025-06-13 07:34:43,604 - print_capture - INFO -     $54load_global.22 = global(range: <class 'range'>) ['$54load_global.22']
    $54load_global.22 = global(range: <class 'range'>) ['$54load_global.22']
    $54load_global.22 = global(range: <class 'range'>) ['$54load_global.22']
2025-06-13 07:34:43,604 - print_capture - INFO -     $54load_global.22 = global(range: <class 'range'>) ['$54load_global.22']
    $56load_global.23 = global(len: <built-in function len>) ['$56load_global.23']
    $56load_global.23 = global(len: <built-in function len>) ['$56load_global.23']
2025-06-13 07:34:43,604 - print_capture - INFO -     $56load_global.23 = global(len: <built-in function len>) ['$56load_global.23']
    $56load_global.23 = global(len: <built-in function len>) ['$56load_global.23']
    $56load_global.23 = global(len: <built-in function len>) ['$56load_global.23']
2025-06-13 07:34:43,604 - print_capture - INFO -     $56load_global.23 = global(len: <built-in function len>) ['$56load_global.23']
    $60call_function.25 = call $56load_global.23(a, func=$56load_global.23, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.23', '$60call_function.25', 'a']
    $60call_function.25 = call $56load_global.23(a, func=$56load_global.23, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.23', '$60call_function.25', 'a']
2025-06-13 07:34:43,604 - print_capture - INFO -     $60call_function.25 = call $56load_global.23(a, func=$56load_global.23, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.23', '$60call_function.25', 'a']
    $60call_function.25 = call $56load_global.23(a, func=$56load_global.23, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.23', '$60call_function.25', 'a']
    $60call_function.25 = call $56load_global.23(a, func=$56load_global.23, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.23', '$60call_function.25', 'a']
2025-06-13 07:34:43,604 - print_capture - INFO -     $60call_function.25 = call $56load_global.23(a, func=$56load_global.23, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.23', '$60call_function.25', 'a']
    $62call_function.26 = call $54load_global.22($60call_function.25, func=$54load_global.22, args=[Var($60call_function.25, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.22', '$60call_function.25', '$62call_function.26']
    $62call_function.26 = call $54load_global.22($60call_function.25, func=$54load_global.22, args=[Var($60call_function.25, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.22', '$60call_function.25', '$62call_function.26']
2025-06-13 07:34:43,604 - print_capture - INFO -     $62call_function.26 = call $54load_global.22($60call_function.25, func=$54load_global.22, args=[Var($60call_function.25, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.22', '$60call_function.25', '$62call_function.26']
    $62call_function.26 = call $54load_global.22($60call_function.25, func=$54load_global.22, args=[Var($60call_function.25, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.22', '$60call_function.25', '$62call_function.26']
    $62call_function.26 = call $54load_global.22($60call_function.25, func=$54load_global.22, args=[Var($60call_function.25, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.22', '$60call_function.25', '$62call_function.26']
2025-06-13 07:34:43,604 - print_capture - INFO -     $62call_function.26 = call $54load_global.22($60call_function.25, func=$54load_global.22, args=[Var($60call_function.25, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.22', '$60call_function.25', '$62call_function.26']
    $64get_iter.27 = getiter(value=$62call_function.26) ['$62call_function.26', '$64get_iter.27']
    $64get_iter.27 = getiter(value=$62call_function.26) ['$62call_function.26', '$64get_iter.27']
2025-06-13 07:34:43,604 - print_capture - INFO -     $64get_iter.27 = getiter(value=$62call_function.26) ['$62call_function.26', '$64get_iter.27']
    $64get_iter.27 = getiter(value=$62call_function.26) ['$62call_function.26', '$64get_iter.27']
    $64get_iter.27 = getiter(value=$62call_function.26) ['$62call_function.26', '$64get_iter.27']
2025-06-13 07:34:43,605 - print_capture - INFO -     $64get_iter.27 = getiter(value=$62call_function.26) ['$62call_function.26', '$64get_iter.27']
    $phi66.0 = $64get_iter.27                ['$64get_iter.27', '$phi66.0']
    $phi66.0 = $64get_iter.27                ['$64get_iter.27', '$phi66.0']
2025-06-13 07:34:43,605 - print_capture - INFO -     $phi66.0 = $64get_iter.27                ['$64get_iter.27', '$phi66.0']
    $phi66.0 = $64get_iter.27                ['$64get_iter.27', '$phi66.0']
    $phi66.0 = $64get_iter.27                ['$64get_iter.27', '$phi66.0']
2025-06-13 07:34:43,605 - print_capture - INFO -     $phi66.0 = $64get_iter.27                ['$64get_iter.27', '$phi66.0']
    jump 66                                  []
    jump 66                                  []
2025-06-13 07:34:43,605 - print_capture - INFO -     jump 66                                  []
    jump 66                                  []
    jump 66                                  []
2025-06-13 07:34:43,605 - print_capture - INFO -     jump 66                                  []
label 66:
label 66:
2025-06-13 07:34:43,605 - print_capture - INFO - label 66:
label 66:
label 66:
2025-06-13 07:34:43,605 - print_capture - INFO - label 66:
    $66for_iter.1 = iternext(value=$phi66.0) ['$66for_iter.1', '$phi66.0']
    $66for_iter.1 = iternext(value=$phi66.0) ['$66for_iter.1', '$phi66.0']
2025-06-13 07:34:43,605 - print_capture - INFO -     $66for_iter.1 = iternext(value=$phi66.0) ['$66for_iter.1', '$phi66.0']
    $66for_iter.1 = iternext(value=$phi66.0) ['$66for_iter.1', '$phi66.0']
    $66for_iter.1 = iternext(value=$phi66.0) ['$66for_iter.1', '$phi66.0']
2025-06-13 07:34:43,605 - print_capture - INFO -     $66for_iter.1 = iternext(value=$phi66.0) ['$66for_iter.1', '$phi66.0']
    $66for_iter.2 = pair_first(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.2']
    $66for_iter.2 = pair_first(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.2']
2025-06-13 07:34:43,605 - print_capture - INFO -     $66for_iter.2 = pair_first(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.2']
    $66for_iter.2 = pair_first(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.2']
    $66for_iter.2 = pair_first(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.2']
2025-06-13 07:34:43,605 - print_capture - INFO -     $66for_iter.2 = pair_first(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.2']
    $66for_iter.3 = pair_second(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.3']
    $66for_iter.3 = pair_second(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.3']
2025-06-13 07:34:43,605 - print_capture - INFO -     $66for_iter.3 = pair_second(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.3']
    $66for_iter.3 = pair_second(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.3']
    $66for_iter.3 = pair_second(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.3']
2025-06-13 07:34:43,605 - print_capture - INFO -     $66for_iter.3 = pair_second(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.3']
    $phi68.1 = $66for_iter.2                 ['$66for_iter.2', '$phi68.1']
    $phi68.1 = $66for_iter.2                 ['$66for_iter.2', '$phi68.1']
2025-06-13 07:34:43,605 - print_capture - INFO -     $phi68.1 = $66for_iter.2                 ['$66for_iter.2', '$phi68.1']
    $phi68.1 = $66for_iter.2                 ['$66for_iter.2', '$phi68.1']
    $phi68.1 = $66for_iter.2                 ['$66for_iter.2', '$phi68.1']
2025-06-13 07:34:43,605 - print_capture - INFO -     $phi68.1 = $66for_iter.2                 ['$66for_iter.2', '$phi68.1']
    branch $66for_iter.3, 68, 90             ['$66for_iter.3']
    branch $66for_iter.3, 68, 90             ['$66for_iter.3']
2025-06-13 07:34:43,605 - print_capture - INFO -     branch $66for_iter.3, 68, 90             ['$66for_iter.3']
    branch $66for_iter.3, 68, 90             ['$66for_iter.3']
    branch $66for_iter.3, 68, 90             ['$66for_iter.3']
2025-06-13 07:34:43,605 - print_capture - INFO -     branch $66for_iter.3, 68, 90             ['$66for_iter.3']
label 68:
label 68:
2025-06-13 07:34:43,605 - print_capture - INFO - label 68:
label 68:
label 68:
2025-06-13 07:34:43,605 - print_capture - INFO - label 68:
    i = $phi68.1                             ['$phi68.1', 'i']
    i = $phi68.1                             ['$phi68.1', 'i']
2025-06-13 07:34:43,605 - print_capture - INFO -     i = $phi68.1                             ['$phi68.1', 'i']
    i = $phi68.1                             ['$phi68.1', 'i']
    i = $phi68.1                             ['$phi68.1', 'i']
2025-06-13 07:34:43,605 - print_capture - INFO -     i = $phi68.1                             ['$phi68.1', 'i']
    $70load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$70load_global.2']
    $70load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$70load_global.2']
2025-06-13 07:34:43,605 - print_capture - INFO -     $70load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$70load_global.2']
    $70load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$70load_global.2']
    $70load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$70load_global.2']
2025-06-13 07:34:43,605 - print_capture - INFO -     $70load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$70load_global.2']
    $76load_global.5 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$76load_global.5']
    $76load_global.5 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$76load_global.5']
2025-06-13 07:34:43,605 - print_capture - INFO -     $76load_global.5 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$76load_global.5']
    $76load_global.5 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$76load_global.5']
    $76load_global.5 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$76load_global.5']
2025-06-13 07:34:43,605 - print_capture - INFO -     $76load_global.5 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$76load_global.5']
    $82call_function.8 = call $76load_global.5(a, i, func=$76load_global.5, args=[Var(a, unicode.py:1885), Var(i, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.5', '$82call_function.8', 'a', 'i']
    $82call_function.8 = call $76load_global.5(a, i, func=$76load_global.5, args=[Var(a, unicode.py:1885), Var(i, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.5', '$82call_function.8', 'a', 'i']
2025-06-13 07:34:43,605 - print_capture - INFO -     $82call_function.8 = call $76load_global.5(a, i, func=$76load_global.5, args=[Var(a, unicode.py:1885), Var(i, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.5', '$82call_function.8', 'a', 'i']
    $82call_function.8 = call $76load_global.5(a, i, func=$76load_global.5, args=[Var(a, unicode.py:1885), Var(i, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.5', '$82call_function.8', 'a', 'i']
    $82call_function.8 = call $76load_global.5(a, i, func=$76load_global.5, args=[Var(a, unicode.py:1885), Var(i, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.5', '$82call_function.8', 'a', 'i']
2025-06-13 07:34:43,605 - print_capture - INFO -     $82call_function.8 = call $76load_global.5(a, i, func=$76load_global.5, args=[Var(a, unicode.py:1885), Var(i, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.5', '$82call_function.8', 'a', 'i']
    $84call_function.9 = call $70load_global.2(result, i, $82call_function.8, func=$70load_global.2, args=[Var(result, unicode.py:1889), Var(i, unicode.py:1890), Var($82call_function.8, unicode.py:1891)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_global.2', '$82call_function.8', '$84call_function.9', 'i', 'result']
    $84call_function.9 = call $70load_global.2(result, i, $82call_function.8, func=$70load_global.2, args=[Var(result, unicode.py:1889), Var(i, unicode.py:1890), Var($82call_function.8, unicode.py:1891)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_global.2', '$82call_function.8', '$84call_function.9', 'i', 'result']
2025-06-13 07:34:43,605 - print_capture - INFO -     $84call_function.9 = call $70load_global.2(result, i, $82call_function.8, func=$70load_global.2, args=[Var(result, unicode.py:1889), Var(i, unicode.py:1890), Var($82call_function.8, unicode.py:1891)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_global.2', '$82call_function.8', '$84call_function.9', 'i', 'result']
    $84call_function.9 = call $70load_global.2(result, i, $82call_function.8, func=$70load_global.2, args=[Var(result, unicode.py:1889), Var(i, unicode.py:1890), Var($82call_function.8, unicode.py:1891)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_global.2', '$82call_function.8', '$84call_function.9', 'i', 'result']
    $84call_function.9 = call $70load_global.2(result, i, $82call_function.8, func=$70load_global.2, args=[Var(result, unicode.py:1889), Var(i, unicode.py:1890), Var($82call_function.8, unicode.py:1891)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_global.2', '$82call_function.8', '$84call_function.9', 'i', 'result']
2025-06-13 07:34:43,605 - print_capture - INFO -     $84call_function.9 = call $70load_global.2(result, i, $82call_function.8, func=$70load_global.2, args=[Var(result, unicode.py:1889), Var(i, unicode.py:1890), Var($82call_function.8, unicode.py:1891)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_global.2', '$82call_function.8', '$84call_function.9', 'i', 'result']
    jump 66                                  []
    jump 66                                  []
2025-06-13 07:34:43,605 - print_capture - INFO -     jump 66                                  []
    jump 66                                  []
    jump 66                                  []
2025-06-13 07:34:43,605 - print_capture - INFO -     jump 66                                  []
label 90:
label 90:
2025-06-13 07:34:43,605 - print_capture - INFO - label 90:
label 90:
label 90:
2025-06-13 07:34:43,605 - print_capture - INFO - label 90:
    $90load_global.0 = global(range: <class 'range'>) ['$90load_global.0']
    $90load_global.0 = global(range: <class 'range'>) ['$90load_global.0']
2025-06-13 07:34:43,605 - print_capture - INFO -     $90load_global.0 = global(range: <class 'range'>) ['$90load_global.0']
    $90load_global.0 = global(range: <class 'range'>) ['$90load_global.0']
    $90load_global.0 = global(range: <class 'range'>) ['$90load_global.0']
2025-06-13 07:34:43,605 - print_capture - INFO -     $90load_global.0 = global(range: <class 'range'>) ['$90load_global.0']
    $92load_global.1 = global(len: <built-in function len>) ['$92load_global.1']
    $92load_global.1 = global(len: <built-in function len>) ['$92load_global.1']
2025-06-13 07:34:43,605 - print_capture - INFO -     $92load_global.1 = global(len: <built-in function len>) ['$92load_global.1']
    $92load_global.1 = global(len: <built-in function len>) ['$92load_global.1']
    $92load_global.1 = global(len: <built-in function len>) ['$92load_global.1']
2025-06-13 07:34:43,605 - print_capture - INFO -     $92load_global.1 = global(len: <built-in function len>) ['$92load_global.1']
    $96call_function.3 = call $92load_global.1(b, func=$92load_global.1, args=[Var(b, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_global.1', '$96call_function.3', 'b']
    $96call_function.3 = call $92load_global.1(b, func=$92load_global.1, args=[Var(b, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_global.1', '$96call_function.3', 'b']
2025-06-13 07:34:43,605 - print_capture - INFO -     $96call_function.3 = call $92load_global.1(b, func=$92load_global.1, args=[Var(b, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_global.1', '$96call_function.3', 'b']
    $96call_function.3 = call $92load_global.1(b, func=$92load_global.1, args=[Var(b, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_global.1', '$96call_function.3', 'b']
    $96call_function.3 = call $92load_global.1(b, func=$92load_global.1, args=[Var(b, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_global.1', '$96call_function.3', 'b']
2025-06-13 07:34:43,605 - print_capture - INFO -     $96call_function.3 = call $92load_global.1(b, func=$92load_global.1, args=[Var(b, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_global.1', '$96call_function.3', 'b']
    $98call_function.4 = call $90load_global.0($96call_function.3, func=$90load_global.0, args=[Var($96call_function.3, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$90load_global.0', '$96call_function.3', '$98call_function.4']
    $98call_function.4 = call $90load_global.0($96call_function.3, func=$90load_global.0, args=[Var($96call_function.3, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$90load_global.0', '$96call_function.3', '$98call_function.4']
2025-06-13 07:34:43,605 - print_capture - INFO -     $98call_function.4 = call $90load_global.0($96call_function.3, func=$90load_global.0, args=[Var($96call_function.3, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$90load_global.0', '$96call_function.3', '$98call_function.4']
    $98call_function.4 = call $90load_global.0($96call_function.3, func=$90load_global.0, args=[Var($96call_function.3, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$90load_global.0', '$96call_function.3', '$98call_function.4']
    $98call_function.4 = call $90load_global.0($96call_function.3, func=$90load_global.0, args=[Var($96call_function.3, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$90load_global.0', '$96call_function.3', '$98call_function.4']
2025-06-13 07:34:43,605 - print_capture - INFO -     $98call_function.4 = call $90load_global.0($96call_function.3, func=$90load_global.0, args=[Var($96call_function.3, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$90load_global.0', '$96call_function.3', '$98call_function.4']
    $100get_iter.5 = getiter(value=$98call_function.4) ['$100get_iter.5', '$98call_function.4']
    $100get_iter.5 = getiter(value=$98call_function.4) ['$100get_iter.5', '$98call_function.4']
2025-06-13 07:34:43,605 - print_capture - INFO -     $100get_iter.5 = getiter(value=$98call_function.4) ['$100get_iter.5', '$98call_function.4']
    $100get_iter.5 = getiter(value=$98call_function.4) ['$100get_iter.5', '$98call_function.4']
    $100get_iter.5 = getiter(value=$98call_function.4) ['$100get_iter.5', '$98call_function.4']
2025-06-13 07:34:43,605 - print_capture - INFO -     $100get_iter.5 = getiter(value=$98call_function.4) ['$100get_iter.5', '$98call_function.4']
    $phi102.0 = $100get_iter.5               ['$100get_iter.5', '$phi102.0']
    $phi102.0 = $100get_iter.5               ['$100get_iter.5', '$phi102.0']
2025-06-13 07:34:43,606 - print_capture - INFO -     $phi102.0 = $100get_iter.5               ['$100get_iter.5', '$phi102.0']
    $phi102.0 = $100get_iter.5               ['$100get_iter.5', '$phi102.0']
    $phi102.0 = $100get_iter.5               ['$100get_iter.5', '$phi102.0']
2025-06-13 07:34:43,606 - print_capture - INFO -     $phi102.0 = $100get_iter.5               ['$100get_iter.5', '$phi102.0']
    jump 102                                 []
    jump 102                                 []
2025-06-13 07:34:43,606 - print_capture - INFO -     jump 102                                 []
    jump 102                                 []
    jump 102                                 []
2025-06-13 07:34:43,606 - print_capture - INFO -     jump 102                                 []
label 102:
label 102:
2025-06-13 07:34:43,606 - print_capture - INFO - label 102:
label 102:
label 102:
2025-06-13 07:34:43,606 - print_capture - INFO - label 102:
    $102for_iter.1 = iternext(value=$phi102.0) ['$102for_iter.1', '$phi102.0']
    $102for_iter.1 = iternext(value=$phi102.0) ['$102for_iter.1', '$phi102.0']
2025-06-13 07:34:43,606 - print_capture - INFO -     $102for_iter.1 = iternext(value=$phi102.0) ['$102for_iter.1', '$phi102.0']
    $102for_iter.1 = iternext(value=$phi102.0) ['$102for_iter.1', '$phi102.0']
    $102for_iter.1 = iternext(value=$phi102.0) ['$102for_iter.1', '$phi102.0']
2025-06-13 07:34:43,606 - print_capture - INFO -     $102for_iter.1 = iternext(value=$phi102.0) ['$102for_iter.1', '$phi102.0']
    $102for_iter.2 = pair_first(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.2']
    $102for_iter.2 = pair_first(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.2']
2025-06-13 07:34:43,606 - print_capture - INFO -     $102for_iter.2 = pair_first(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.2']
    $102for_iter.2 = pair_first(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.2']
    $102for_iter.2 = pair_first(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.2']
2025-06-13 07:34:43,606 - print_capture - INFO -     $102for_iter.2 = pair_first(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.2']
    $102for_iter.3 = pair_second(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.3']
    $102for_iter.3 = pair_second(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.3']
2025-06-13 07:34:43,606 - print_capture - INFO -     $102for_iter.3 = pair_second(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.3']
    $102for_iter.3 = pair_second(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.3']
    $102for_iter.3 = pair_second(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.3']
2025-06-13 07:34:43,606 - print_capture - INFO -     $102for_iter.3 = pair_second(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.3']
    $phi104.1 = $102for_iter.2               ['$102for_iter.2', '$phi104.1']
    $phi104.1 = $102for_iter.2               ['$102for_iter.2', '$phi104.1']
2025-06-13 07:34:43,606 - print_capture - INFO -     $phi104.1 = $102for_iter.2               ['$102for_iter.2', '$phi104.1']
    $phi104.1 = $102for_iter.2               ['$102for_iter.2', '$phi104.1']
    $phi104.1 = $102for_iter.2               ['$102for_iter.2', '$phi104.1']
2025-06-13 07:34:43,606 - print_capture - INFO -     $phi104.1 = $102for_iter.2               ['$102for_iter.2', '$phi104.1']
    branch $102for_iter.3, 104, 134          ['$102for_iter.3']
    branch $102for_iter.3, 104, 134          ['$102for_iter.3']
2025-06-13 07:34:43,606 - print_capture - INFO -     branch $102for_iter.3, 104, 134          ['$102for_iter.3']
    branch $102for_iter.3, 104, 134          ['$102for_iter.3']
    branch $102for_iter.3, 104, 134          ['$102for_iter.3']
2025-06-13 07:34:43,606 - print_capture - INFO -     branch $102for_iter.3, 104, 134          ['$102for_iter.3']
label 104:
label 104:
2025-06-13 07:34:43,606 - print_capture - INFO - label 104:
label 104:
label 104:
2025-06-13 07:34:43,606 - print_capture - INFO - label 104:
    j = $phi104.1                            ['$phi104.1', 'j']
    j = $phi104.1                            ['$phi104.1', 'j']
2025-06-13 07:34:43,606 - print_capture - INFO -     j = $phi104.1                            ['$phi104.1', 'j']
    j = $phi104.1                            ['$phi104.1', 'j']
    j = $phi104.1                            ['$phi104.1', 'j']
2025-06-13 07:34:43,606 - print_capture - INFO -     j = $phi104.1                            ['$phi104.1', 'j']
    $106load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$106load_global.2']
    $106load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$106load_global.2']
2025-06-13 07:34:43,606 - print_capture - INFO -     $106load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$106load_global.2']
    $106load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$106load_global.2']
    $106load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$106load_global.2']
2025-06-13 07:34:43,606 - print_capture - INFO -     $106load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$106load_global.2']
    $110load_global.4 = global(len: <built-in function len>) ['$110load_global.4']
    $110load_global.4 = global(len: <built-in function len>) ['$110load_global.4']
2025-06-13 07:34:43,606 - print_capture - INFO -     $110load_global.4 = global(len: <built-in function len>) ['$110load_global.4']
    $110load_global.4 = global(len: <built-in function len>) ['$110load_global.4']
    $110load_global.4 = global(len: <built-in function len>) ['$110load_global.4']
2025-06-13 07:34:43,606 - print_capture - INFO -     $110load_global.4 = global(len: <built-in function len>) ['$110load_global.4']
    $114call_function.6 = call $110load_global.4(a, func=$110load_global.4, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$110load_global.4', '$114call_function.6', 'a']
    $114call_function.6 = call $110load_global.4(a, func=$110load_global.4, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$110load_global.4', '$114call_function.6', 'a']
2025-06-13 07:34:43,606 - print_capture - INFO -     $114call_function.6 = call $110load_global.4(a, func=$110load_global.4, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$110load_global.4', '$114call_function.6', 'a']
    $114call_function.6 = call $110load_global.4(a, func=$110load_global.4, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$110load_global.4', '$114call_function.6', 'a']
    $114call_function.6 = call $110load_global.4(a, func=$110load_global.4, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$110load_global.4', '$114call_function.6', 'a']
2025-06-13 07:34:43,606 - print_capture - INFO -     $114call_function.6 = call $110load_global.4(a, func=$110load_global.4, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$110load_global.4', '$114call_function.6', 'a']
    $118binary_add.8 = $114call_function.6 + j ['$114call_function.6', '$118binary_add.8', 'j']
    $118binary_add.8 = $114call_function.6 + j ['$114call_function.6', '$118binary_add.8', 'j']
2025-06-13 07:34:43,606 - print_capture - INFO -     $118binary_add.8 = $114call_function.6 + j ['$114call_function.6', '$118binary_add.8', 'j']
    $118binary_add.8 = $114call_function.6 + j ['$114call_function.6', '$118binary_add.8', 'j']
    $118binary_add.8 = $114call_function.6 + j ['$114call_function.6', '$118binary_add.8', 'j']
2025-06-13 07:34:43,606 - print_capture - INFO -     $118binary_add.8 = $114call_function.6 + j ['$114call_function.6', '$118binary_add.8', 'j']
    $120load_global.9 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$120load_global.9']
    $120load_global.9 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$120load_global.9']
2025-06-13 07:34:43,606 - print_capture - INFO -     $120load_global.9 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$120load_global.9']
    $120load_global.9 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$120load_global.9']
    $120load_global.9 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$120load_global.9']
2025-06-13 07:34:43,606 - print_capture - INFO -     $120load_global.9 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$120load_global.9']
    $126call_function.12 = call $120load_global.9(b, j, func=$120load_global.9, args=[Var(b, unicode.py:1885), Var(j, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.9', '$126call_function.12', 'b', 'j']
    $126call_function.12 = call $120load_global.9(b, j, func=$120load_global.9, args=[Var(b, unicode.py:1885), Var(j, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.9', '$126call_function.12', 'b', 'j']
2025-06-13 07:34:43,606 - print_capture - INFO -     $126call_function.12 = call $120load_global.9(b, j, func=$120load_global.9, args=[Var(b, unicode.py:1885), Var(j, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.9', '$126call_function.12', 'b', 'j']
    $126call_function.12 = call $120load_global.9(b, j, func=$120load_global.9, args=[Var(b, unicode.py:1885), Var(j, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.9', '$126call_function.12', 'b', 'j']
    $126call_function.12 = call $120load_global.9(b, j, func=$120load_global.9, args=[Var(b, unicode.py:1885), Var(j, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.9', '$126call_function.12', 'b', 'j']
2025-06-13 07:34:43,606 - print_capture - INFO -     $126call_function.12 = call $120load_global.9(b, j, func=$120load_global.9, args=[Var(b, unicode.py:1885), Var(j, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.9', '$126call_function.12', 'b', 'j']
    $128call_function.13 = call $106load_global.2(result, $118binary_add.8, $126call_function.12, func=$106load_global.2, args=[Var(result, unicode.py:1889), Var($118binary_add.8, unicode.py:1893), Var($126call_function.12, unicode.py:1893)], kws=(), vararg=None, varkwarg=None, target=None) ['$106load_global.2', '$118binary_add.8', '$126call_function.12', '$128call_function.13', 'result']
    $128call_function.13 = call $106load_global.2(result, $118binary_add.8, $126call_function.12, func=$106load_global.2, args=[Var(result, unicode.py:1889), Var($118binary_add.8, unicode.py:1893), Var($126call_function.12, unicode.py:1893)], kws=(), vararg=None, varkwarg=None, target=None) ['$106load_global.2', '$118binary_add.8', '$126call_function.12', '$128call_function.13', 'result']
2025-06-13 07:34:43,606 - print_capture - INFO -     $128call_function.13 = call $106load_global.2(result, $118binary_add.8, $126call_function.12, func=$106load_global.2, args=[Var(result, unicode.py:1889), Var($118binary_add.8, unicode.py:1893), Var($126call_function.12, unicode.py:1893)], kws=(), vararg=None, varkwarg=None, target=None) ['$106load_global.2', '$118binary_add.8', '$126call_function.12', '$128call_function.13', 'result']
    $128call_function.13 = call $106load_global.2(result, $118binary_add.8, $126call_function.12, func=$106load_global.2, args=[Var(result, unicode.py:1889), Var($118binary_add.8, unicode.py:1893), Var($126call_function.12, unicode.py:1893)], kws=(), vararg=None, varkwarg=None, target=None) ['$106load_global.2', '$118binary_add.8', '$126call_function.12', '$128call_function.13', 'result']
    $128call_function.13 = call $106load_global.2(result, $118binary_add.8, $126call_function.12, func=$106load_global.2, args=[Var(result, unicode.py:1889), Var($118binary_add.8, unicode.py:1893), Var($126call_function.12, unicode.py:1893)], kws=(), vararg=None, varkwarg=None, target=None) ['$106load_global.2', '$118binary_add.8', '$126call_function.12', '$128call_function.13', 'result']
2025-06-13 07:34:43,606 - print_capture - INFO -     $128call_function.13 = call $106load_global.2(result, $118binary_add.8, $126call_function.12, func=$106load_global.2, args=[Var(result, unicode.py:1889), Var($118binary_add.8, unicode.py:1893), Var($126call_function.12, unicode.py:1893)], kws=(), vararg=None, varkwarg=None, target=None) ['$106load_global.2', '$118binary_add.8', '$126call_function.12', '$128call_function.13', 'result']
    jump 102                                 []
    jump 102                                 []
2025-06-13 07:34:43,606 - print_capture - INFO -     jump 102                                 []
    jump 102                                 []
    jump 102                                 []
2025-06-13 07:34:43,606 - print_capture - INFO -     jump 102                                 []
label 134:
label 134:
2025-06-13 07:34:43,606 - print_capture - INFO - label 134:
label 134:
label 134:
2025-06-13 07:34:43,606 - print_capture - INFO - label 134:
    $136return_value.1 = cast(value=result)  ['$136return_value.1', 'result']
    $136return_value.1 = cast(value=result)  ['$136return_value.1', 'result']
2025-06-13 07:34:43,606 - print_capture - INFO -     $136return_value.1 = cast(value=result)  ['$136return_value.1', 'result']
    $136return_value.1 = cast(value=result)  ['$136return_value.1', 'result']
    $136return_value.1 = cast(value=result)  ['$136return_value.1', 'result']
2025-06-13 07:34:43,606 - print_capture - INFO -     $136return_value.1 = cast(value=result)  ['$136return_value.1', 'result']
    return $136return_value.1                ['$136return_value.1']
    return $136return_value.1                ['$136return_value.1']
2025-06-13 07:34:43,607 - print_capture - INFO -     return $136return_value.1                ['$136return_value.1']
    return $136return_value.1                ['$136return_value.1']
    return $136return_value.1                ['$136return_value.1']
2025-06-13 07:34:43,607 - print_capture - INFO -     return $136return_value.1                ['$136return_value.1']
label 0:
label 0:
2025-06-13 07:34:43,700 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,700 - print_capture - INFO - label 0:
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:43,700 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:43,700 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:43,700 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:43,700 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:43,700 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:43,700 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:43,700 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:43,700 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:43,700 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:43,700 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:43,700 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:43,700 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
label 0:
label 0:
2025-06-13 07:34:43,750 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,750 - print_capture - INFO - label 0:
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:43,750 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
    obj = arg(0, name=obj)                   ['obj']
2025-06-13 07:34:43,750 - print_capture - INFO -     obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:43,750 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
    name = arg(1, name=name)                 ['name']
2025-06-13 07:34:43,750 - print_capture - INFO -     name = arg(1, name=name)                 ['name']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:43,750 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
2025-06-13 07:34:43,750 - print_capture - INFO -     $2load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:43,750 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
2025-06-13 07:34:43,750 - print_capture - INFO -     $8call_function.3 = call $2load_global.0(obj, name, func=$2load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'name', 'obj']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:43,750 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
2025-06-13 07:34:43,750 - print_capture - INFO -     $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:43,750 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
    return $10return_value.4                 ['$10return_value.4']
2025-06-13 07:34:43,750 - print_capture - INFO -     return $10return_value.4                 ['$10return_value.4']
label 0:
label 0:
2025-06-13 07:34:43,772 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:43,772 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:43,772 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:43,772 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    b = arg(1, name=b)                       ['b']
2025-06-13 07:34:43,772 - print_capture - INFO -     b = arg(1, name=b)                       ['b']
    b = arg(1, name=b)                       ['b']
    b = arg(1, name=b)                       ['b']
2025-06-13 07:34:43,772 - print_capture - INFO -     b = arg(1, name=b)                       ['b']
    $4load_attr.1 = getattr(value=a, attr=_length) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_length) ['$4load_attr.1', 'a']
2025-06-13 07:34:43,772 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=_length) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_length) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=_length) ['$4load_attr.1', 'a']
2025-06-13 07:34:43,772 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=_length) ['$4load_attr.1', 'a']
    $8load_attr.3 = getattr(value=b, attr=_length) ['$8load_attr.3', 'b']
    $8load_attr.3 = getattr(value=b, attr=_length) ['$8load_attr.3', 'b']
2025-06-13 07:34:43,772 - print_capture - INFO -     $8load_attr.3 = getattr(value=b, attr=_length) ['$8load_attr.3', 'b']
    $8load_attr.3 = getattr(value=b, attr=_length) ['$8load_attr.3', 'b']
    $8load_attr.3 = getattr(value=b, attr=_length) ['$8load_attr.3', 'b']
2025-06-13 07:34:43,772 - print_capture - INFO -     $8load_attr.3 = getattr(value=b, attr=_length) ['$8load_attr.3', 'b']
    new_length = $4load_attr.1 + $8load_attr.3 ['$4load_attr.1', '$8load_attr.3', 'new_length']
    new_length = $4load_attr.1 + $8load_attr.3 ['$4load_attr.1', '$8load_attr.3', 'new_length']
2025-06-13 07:34:43,772 - print_capture - INFO -     new_length = $4load_attr.1 + $8load_attr.3 ['$4load_attr.1', '$8load_attr.3', 'new_length']
    new_length = $4load_attr.1 + $8load_attr.3 ['$4load_attr.1', '$8load_attr.3', 'new_length']
    new_length = $4load_attr.1 + $8load_attr.3 ['$4load_attr.1', '$8load_attr.3', 'new_length']
2025-06-13 07:34:43,772 - print_capture - INFO -     new_length = $4load_attr.1 + $8load_attr.3 ['$4load_attr.1', '$8load_attr.3', 'new_length']
    $14load_global.5 = global(_pick_kind: <function _pick_kind at 0x7f28ab7cb010>) ['$14load_global.5']
    $14load_global.5 = global(_pick_kind: <function _pick_kind at 0x7f28ab7cb010>) ['$14load_global.5']
2025-06-13 07:34:43,772 - print_capture - INFO -     $14load_global.5 = global(_pick_kind: <function _pick_kind at 0x7f28ab7cb010>) ['$14load_global.5']
    $14load_global.5 = global(_pick_kind: <function _pick_kind at 0x7f28ab7cb010>) ['$14load_global.5']
    $14load_global.5 = global(_pick_kind: <function _pick_kind at 0x7f28ab7cb010>) ['$14load_global.5']
2025-06-13 07:34:43,772 - print_capture - INFO -     $14load_global.5 = global(_pick_kind: <function _pick_kind at 0x7f28ab7cb010>) ['$14load_global.5']
    $18load_attr.7 = getattr(value=a, attr=_kind) ['$18load_attr.7', 'a']
    $18load_attr.7 = getattr(value=a, attr=_kind) ['$18load_attr.7', 'a']
2025-06-13 07:34:43,772 - print_capture - INFO -     $18load_attr.7 = getattr(value=a, attr=_kind) ['$18load_attr.7', 'a']
    $18load_attr.7 = getattr(value=a, attr=_kind) ['$18load_attr.7', 'a']
    $18load_attr.7 = getattr(value=a, attr=_kind) ['$18load_attr.7', 'a']
2025-06-13 07:34:43,772 - print_capture - INFO -     $18load_attr.7 = getattr(value=a, attr=_kind) ['$18load_attr.7', 'a']
    $22load_attr.9 = getattr(value=b, attr=_kind) ['$22load_attr.9', 'b']
    $22load_attr.9 = getattr(value=b, attr=_kind) ['$22load_attr.9', 'b']
2025-06-13 07:34:43,772 - print_capture - INFO -     $22load_attr.9 = getattr(value=b, attr=_kind) ['$22load_attr.9', 'b']
    $22load_attr.9 = getattr(value=b, attr=_kind) ['$22load_attr.9', 'b']
    $22load_attr.9 = getattr(value=b, attr=_kind) ['$22load_attr.9', 'b']
2025-06-13 07:34:43,772 - print_capture - INFO -     $22load_attr.9 = getattr(value=b, attr=_kind) ['$22load_attr.9', 'b']
    new_kind = call $14load_global.5($18load_attr.7, $22load_attr.9, func=$14load_global.5, args=[Var($18load_attr.7, unicode.py:1887), Var($22load_attr.9, unicode.py:1887)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_global.5', '$18load_attr.7', '$22load_attr.9', 'new_kind']
    new_kind = call $14load_global.5($18load_attr.7, $22load_attr.9, func=$14load_global.5, args=[Var($18load_attr.7, unicode.py:1887), Var($22load_attr.9, unicode.py:1887)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_global.5', '$18load_attr.7', '$22load_attr.9', 'new_kind']
2025-06-13 07:34:43,772 - print_capture - INFO -     new_kind = call $14load_global.5($18load_attr.7, $22load_attr.9, func=$14load_global.5, args=[Var($18load_attr.7, unicode.py:1887), Var($22load_attr.9, unicode.py:1887)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_global.5', '$18load_attr.7', '$22load_attr.9', 'new_kind']
    new_kind = call $14load_global.5($18load_attr.7, $22load_attr.9, func=$14load_global.5, args=[Var($18load_attr.7, unicode.py:1887), Var($22load_attr.9, unicode.py:1887)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_global.5', '$18load_attr.7', '$22load_attr.9', 'new_kind']
    new_kind = call $14load_global.5($18load_attr.7, $22load_attr.9, func=$14load_global.5, args=[Var($18load_attr.7, unicode.py:1887), Var($22load_attr.9, unicode.py:1887)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_global.5', '$18load_attr.7', '$22load_attr.9', 'new_kind']
2025-06-13 07:34:43,772 - print_capture - INFO -     new_kind = call $14load_global.5($18load_attr.7, $22load_attr.9, func=$14load_global.5, args=[Var($18load_attr.7, unicode.py:1887), Var($22load_attr.9, unicode.py:1887)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_global.5', '$18load_attr.7', '$22load_attr.9', 'new_kind']
    $28load_global.11 = global(_pick_ascii: <function _pick_ascii at 0x7f28ab7cb130>) ['$28load_global.11']
    $28load_global.11 = global(_pick_ascii: <function _pick_ascii at 0x7f28ab7cb130>) ['$28load_global.11']
2025-06-13 07:34:43,772 - print_capture - INFO -     $28load_global.11 = global(_pick_ascii: <function _pick_ascii at 0x7f28ab7cb130>) ['$28load_global.11']
    $28load_global.11 = global(_pick_ascii: <function _pick_ascii at 0x7f28ab7cb130>) ['$28load_global.11']
    $28load_global.11 = global(_pick_ascii: <function _pick_ascii at 0x7f28ab7cb130>) ['$28load_global.11']
2025-06-13 07:34:43,772 - print_capture - INFO -     $28load_global.11 = global(_pick_ascii: <function _pick_ascii at 0x7f28ab7cb130>) ['$28load_global.11']
    $32load_attr.13 = getattr(value=a, attr=_is_ascii) ['$32load_attr.13', 'a']
    $32load_attr.13 = getattr(value=a, attr=_is_ascii) ['$32load_attr.13', 'a']
2025-06-13 07:34:43,772 - print_capture - INFO -     $32load_attr.13 = getattr(value=a, attr=_is_ascii) ['$32load_attr.13', 'a']
    $32load_attr.13 = getattr(value=a, attr=_is_ascii) ['$32load_attr.13', 'a']
    $32load_attr.13 = getattr(value=a, attr=_is_ascii) ['$32load_attr.13', 'a']
2025-06-13 07:34:43,772 - print_capture - INFO -     $32load_attr.13 = getattr(value=a, attr=_is_ascii) ['$32load_attr.13', 'a']
    $36load_attr.15 = getattr(value=b, attr=_is_ascii) ['$36load_attr.15', 'b']
    $36load_attr.15 = getattr(value=b, attr=_is_ascii) ['$36load_attr.15', 'b']
2025-06-13 07:34:43,772 - print_capture - INFO -     $36load_attr.15 = getattr(value=b, attr=_is_ascii) ['$36load_attr.15', 'b']
    $36load_attr.15 = getattr(value=b, attr=_is_ascii) ['$36load_attr.15', 'b']
    $36load_attr.15 = getattr(value=b, attr=_is_ascii) ['$36load_attr.15', 'b']
2025-06-13 07:34:43,772 - print_capture - INFO -     $36load_attr.15 = getattr(value=b, attr=_is_ascii) ['$36load_attr.15', 'b']
    new_ascii = call $28load_global.11($32load_attr.13, $36load_attr.15, func=$28load_global.11, args=[Var($32load_attr.13, unicode.py:1888), Var($36load_attr.15, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.11', '$32load_attr.13', '$36load_attr.15', 'new_ascii']
    new_ascii = call $28load_global.11($32load_attr.13, $36load_attr.15, func=$28load_global.11, args=[Var($32load_attr.13, unicode.py:1888), Var($36load_attr.15, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.11', '$32load_attr.13', '$36load_attr.15', 'new_ascii']
2025-06-13 07:34:43,772 - print_capture - INFO -     new_ascii = call $28load_global.11($32load_attr.13, $36load_attr.15, func=$28load_global.11, args=[Var($32load_attr.13, unicode.py:1888), Var($36load_attr.15, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.11', '$32load_attr.13', '$36load_attr.15', 'new_ascii']
    new_ascii = call $28load_global.11($32load_attr.13, $36load_attr.15, func=$28load_global.11, args=[Var($32load_attr.13, unicode.py:1888), Var($36load_attr.15, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.11', '$32load_attr.13', '$36load_attr.15', 'new_ascii']
    new_ascii = call $28load_global.11($32load_attr.13, $36load_attr.15, func=$28load_global.11, args=[Var($32load_attr.13, unicode.py:1888), Var($36load_attr.15, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.11', '$32load_attr.13', '$36load_attr.15', 'new_ascii']
2025-06-13 07:34:43,772 - print_capture - INFO -     new_ascii = call $28load_global.11($32load_attr.13, $36load_attr.15, func=$28load_global.11, args=[Var($32load_attr.13, unicode.py:1888), Var($36load_attr.15, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.11', '$32load_attr.13', '$36load_attr.15', 'new_ascii']
    $42load_global.17 = global(_empty_string: <function _empty_string at 0x7f28ab7cab90>) ['$42load_global.17']
    $42load_global.17 = global(_empty_string: <function _empty_string at 0x7f28ab7cab90>) ['$42load_global.17']
2025-06-13 07:34:43,772 - print_capture - INFO -     $42load_global.17 = global(_empty_string: <function _empty_string at 0x7f28ab7cab90>) ['$42load_global.17']
    $42load_global.17 = global(_empty_string: <function _empty_string at 0x7f28ab7cab90>) ['$42load_global.17']
    $42load_global.17 = global(_empty_string: <function _empty_string at 0x7f28ab7cab90>) ['$42load_global.17']
2025-06-13 07:34:43,772 - print_capture - INFO -     $42load_global.17 = global(_empty_string: <function _empty_string at 0x7f28ab7cab90>) ['$42load_global.17']
    result = call $42load_global.17(new_kind, new_length, new_ascii, func=$42load_global.17, args=[Var(new_kind, unicode.py:1887), Var(new_length, unicode.py:1886), Var(new_ascii, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.17', 'new_ascii', 'new_kind', 'new_length', 'result']
    result = call $42load_global.17(new_kind, new_length, new_ascii, func=$42load_global.17, args=[Var(new_kind, unicode.py:1887), Var(new_length, unicode.py:1886), Var(new_ascii, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.17', 'new_ascii', 'new_kind', 'new_length', 'result']
2025-06-13 07:34:43,773 - print_capture - INFO -     result = call $42load_global.17(new_kind, new_length, new_ascii, func=$42load_global.17, args=[Var(new_kind, unicode.py:1887), Var(new_length, unicode.py:1886), Var(new_ascii, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.17', 'new_ascii', 'new_kind', 'new_length', 'result']
    result = call $42load_global.17(new_kind, new_length, new_ascii, func=$42load_global.17, args=[Var(new_kind, unicode.py:1887), Var(new_length, unicode.py:1886), Var(new_ascii, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.17', 'new_ascii', 'new_kind', 'new_length', 'result']
    result = call $42load_global.17(new_kind, new_length, new_ascii, func=$42load_global.17, args=[Var(new_kind, unicode.py:1887), Var(new_length, unicode.py:1886), Var(new_ascii, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.17', 'new_ascii', 'new_kind', 'new_length', 'result']
2025-06-13 07:34:43,773 - print_capture - INFO -     result = call $42load_global.17(new_kind, new_length, new_ascii, func=$42load_global.17, args=[Var(new_kind, unicode.py:1887), Var(new_length, unicode.py:1886), Var(new_ascii, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.17', 'new_ascii', 'new_kind', 'new_length', 'result']
    $54load_global.22 = global(range: <class 'range'>) ['$54load_global.22']
    $54load_global.22 = global(range: <class 'range'>) ['$54load_global.22']
2025-06-13 07:34:43,773 - print_capture - INFO -     $54load_global.22 = global(range: <class 'range'>) ['$54load_global.22']
    $54load_global.22 = global(range: <class 'range'>) ['$54load_global.22']
    $54load_global.22 = global(range: <class 'range'>) ['$54load_global.22']
2025-06-13 07:34:43,773 - print_capture - INFO -     $54load_global.22 = global(range: <class 'range'>) ['$54load_global.22']
    $56load_global.23 = global(len: <built-in function len>) ['$56load_global.23']
    $56load_global.23 = global(len: <built-in function len>) ['$56load_global.23']
2025-06-13 07:34:43,773 - print_capture - INFO -     $56load_global.23 = global(len: <built-in function len>) ['$56load_global.23']
    $56load_global.23 = global(len: <built-in function len>) ['$56load_global.23']
    $56load_global.23 = global(len: <built-in function len>) ['$56load_global.23']
2025-06-13 07:34:43,773 - print_capture - INFO -     $56load_global.23 = global(len: <built-in function len>) ['$56load_global.23']
    $60call_function.25 = call $56load_global.23(a, func=$56load_global.23, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.23', '$60call_function.25', 'a']
    $60call_function.25 = call $56load_global.23(a, func=$56load_global.23, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.23', '$60call_function.25', 'a']
2025-06-13 07:34:43,773 - print_capture - INFO -     $60call_function.25 = call $56load_global.23(a, func=$56load_global.23, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.23', '$60call_function.25', 'a']
    $60call_function.25 = call $56load_global.23(a, func=$56load_global.23, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.23', '$60call_function.25', 'a']
    $60call_function.25 = call $56load_global.23(a, func=$56load_global.23, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.23', '$60call_function.25', 'a']
2025-06-13 07:34:43,773 - print_capture - INFO -     $60call_function.25 = call $56load_global.23(a, func=$56load_global.23, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.23', '$60call_function.25', 'a']
    $62call_function.26 = call $54load_global.22($60call_function.25, func=$54load_global.22, args=[Var($60call_function.25, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.22', '$60call_function.25', '$62call_function.26']
    $62call_function.26 = call $54load_global.22($60call_function.25, func=$54load_global.22, args=[Var($60call_function.25, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.22', '$60call_function.25', '$62call_function.26']
2025-06-13 07:34:43,773 - print_capture - INFO -     $62call_function.26 = call $54load_global.22($60call_function.25, func=$54load_global.22, args=[Var($60call_function.25, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.22', '$60call_function.25', '$62call_function.26']
    $62call_function.26 = call $54load_global.22($60call_function.25, func=$54load_global.22, args=[Var($60call_function.25, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.22', '$60call_function.25', '$62call_function.26']
    $62call_function.26 = call $54load_global.22($60call_function.25, func=$54load_global.22, args=[Var($60call_function.25, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.22', '$60call_function.25', '$62call_function.26']
2025-06-13 07:34:43,773 - print_capture - INFO -     $62call_function.26 = call $54load_global.22($60call_function.25, func=$54load_global.22, args=[Var($60call_function.25, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.22', '$60call_function.25', '$62call_function.26']
    $64get_iter.27 = getiter(value=$62call_function.26) ['$62call_function.26', '$64get_iter.27']
    $64get_iter.27 = getiter(value=$62call_function.26) ['$62call_function.26', '$64get_iter.27']
2025-06-13 07:34:43,773 - print_capture - INFO -     $64get_iter.27 = getiter(value=$62call_function.26) ['$62call_function.26', '$64get_iter.27']
    $64get_iter.27 = getiter(value=$62call_function.26) ['$62call_function.26', '$64get_iter.27']
    $64get_iter.27 = getiter(value=$62call_function.26) ['$62call_function.26', '$64get_iter.27']
2025-06-13 07:34:43,773 - print_capture - INFO -     $64get_iter.27 = getiter(value=$62call_function.26) ['$62call_function.26', '$64get_iter.27']
    $phi66.0 = $64get_iter.27                ['$64get_iter.27', '$phi66.0']
    $phi66.0 = $64get_iter.27                ['$64get_iter.27', '$phi66.0']
2025-06-13 07:34:43,773 - print_capture - INFO -     $phi66.0 = $64get_iter.27                ['$64get_iter.27', '$phi66.0']
    $phi66.0 = $64get_iter.27                ['$64get_iter.27', '$phi66.0']
    $phi66.0 = $64get_iter.27                ['$64get_iter.27', '$phi66.0']
2025-06-13 07:34:43,773 - print_capture - INFO -     $phi66.0 = $64get_iter.27                ['$64get_iter.27', '$phi66.0']
    jump 66                                  []
    jump 66                                  []
2025-06-13 07:34:43,773 - print_capture - INFO -     jump 66                                  []
    jump 66                                  []
    jump 66                                  []
2025-06-13 07:34:43,773 - print_capture - INFO -     jump 66                                  []
label 66:
label 66:
2025-06-13 07:34:43,773 - print_capture - INFO - label 66:
label 66:
label 66:
2025-06-13 07:34:43,773 - print_capture - INFO - label 66:
    $66for_iter.1 = iternext(value=$phi66.0) ['$66for_iter.1', '$phi66.0']
    $66for_iter.1 = iternext(value=$phi66.0) ['$66for_iter.1', '$phi66.0']
2025-06-13 07:34:43,773 - print_capture - INFO -     $66for_iter.1 = iternext(value=$phi66.0) ['$66for_iter.1', '$phi66.0']
    $66for_iter.1 = iternext(value=$phi66.0) ['$66for_iter.1', '$phi66.0']
    $66for_iter.1 = iternext(value=$phi66.0) ['$66for_iter.1', '$phi66.0']
2025-06-13 07:34:43,773 - print_capture - INFO -     $66for_iter.1 = iternext(value=$phi66.0) ['$66for_iter.1', '$phi66.0']
    $66for_iter.2 = pair_first(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.2']
    $66for_iter.2 = pair_first(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.2']
2025-06-13 07:34:43,773 - print_capture - INFO -     $66for_iter.2 = pair_first(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.2']
    $66for_iter.2 = pair_first(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.2']
    $66for_iter.2 = pair_first(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.2']
2025-06-13 07:34:43,773 - print_capture - INFO -     $66for_iter.2 = pair_first(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.2']
    $66for_iter.3 = pair_second(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.3']
    $66for_iter.3 = pair_second(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.3']
2025-06-13 07:34:43,773 - print_capture - INFO -     $66for_iter.3 = pair_second(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.3']
    $66for_iter.3 = pair_second(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.3']
    $66for_iter.3 = pair_second(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.3']
2025-06-13 07:34:43,773 - print_capture - INFO -     $66for_iter.3 = pair_second(value=$66for_iter.1) ['$66for_iter.1', '$66for_iter.3']
    $phi68.1 = $66for_iter.2                 ['$66for_iter.2', '$phi68.1']
    $phi68.1 = $66for_iter.2                 ['$66for_iter.2', '$phi68.1']
2025-06-13 07:34:43,773 - print_capture - INFO -     $phi68.1 = $66for_iter.2                 ['$66for_iter.2', '$phi68.1']
    $phi68.1 = $66for_iter.2                 ['$66for_iter.2', '$phi68.1']
    $phi68.1 = $66for_iter.2                 ['$66for_iter.2', '$phi68.1']
2025-06-13 07:34:43,773 - print_capture - INFO -     $phi68.1 = $66for_iter.2                 ['$66for_iter.2', '$phi68.1']
    branch $66for_iter.3, 68, 90             ['$66for_iter.3']
    branch $66for_iter.3, 68, 90             ['$66for_iter.3']
2025-06-13 07:34:43,773 - print_capture - INFO -     branch $66for_iter.3, 68, 90             ['$66for_iter.3']
    branch $66for_iter.3, 68, 90             ['$66for_iter.3']
    branch $66for_iter.3, 68, 90             ['$66for_iter.3']
2025-06-13 07:34:43,773 - print_capture - INFO -     branch $66for_iter.3, 68, 90             ['$66for_iter.3']
label 68:
label 68:
2025-06-13 07:34:43,773 - print_capture - INFO - label 68:
label 68:
label 68:
2025-06-13 07:34:43,773 - print_capture - INFO - label 68:
    i = $phi68.1                             ['$phi68.1', 'i']
    i = $phi68.1                             ['$phi68.1', 'i']
2025-06-13 07:34:43,773 - print_capture - INFO -     i = $phi68.1                             ['$phi68.1', 'i']
    i = $phi68.1                             ['$phi68.1', 'i']
    i = $phi68.1                             ['$phi68.1', 'i']
2025-06-13 07:34:43,773 - print_capture - INFO -     i = $phi68.1                             ['$phi68.1', 'i']
    $70load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$70load_global.2']
    $70load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$70load_global.2']
2025-06-13 07:34:43,773 - print_capture - INFO -     $70load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$70load_global.2']
    $70load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$70load_global.2']
    $70load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$70load_global.2']
2025-06-13 07:34:43,773 - print_capture - INFO -     $70load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$70load_global.2']
    $76load_global.5 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$76load_global.5']
    $76load_global.5 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$76load_global.5']
2025-06-13 07:34:43,773 - print_capture - INFO -     $76load_global.5 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$76load_global.5']
    $76load_global.5 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$76load_global.5']
    $76load_global.5 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$76load_global.5']
2025-06-13 07:34:43,773 - print_capture - INFO -     $76load_global.5 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$76load_global.5']
    $82call_function.8 = call $76load_global.5(a, i, func=$76load_global.5, args=[Var(a, unicode.py:1885), Var(i, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.5', '$82call_function.8', 'a', 'i']
    $82call_function.8 = call $76load_global.5(a, i, func=$76load_global.5, args=[Var(a, unicode.py:1885), Var(i, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.5', '$82call_function.8', 'a', 'i']
2025-06-13 07:34:43,773 - print_capture - INFO -     $82call_function.8 = call $76load_global.5(a, i, func=$76load_global.5, args=[Var(a, unicode.py:1885), Var(i, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.5', '$82call_function.8', 'a', 'i']
    $82call_function.8 = call $76load_global.5(a, i, func=$76load_global.5, args=[Var(a, unicode.py:1885), Var(i, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.5', '$82call_function.8', 'a', 'i']
    $82call_function.8 = call $76load_global.5(a, i, func=$76load_global.5, args=[Var(a, unicode.py:1885), Var(i, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.5', '$82call_function.8', 'a', 'i']
2025-06-13 07:34:43,773 - print_capture - INFO -     $82call_function.8 = call $76load_global.5(a, i, func=$76load_global.5, args=[Var(a, unicode.py:1885), Var(i, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.5', '$82call_function.8', 'a', 'i']
    $84call_function.9 = call $70load_global.2(result, i, $82call_function.8, func=$70load_global.2, args=[Var(result, unicode.py:1889), Var(i, unicode.py:1890), Var($82call_function.8, unicode.py:1891)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_global.2', '$82call_function.8', '$84call_function.9', 'i', 'result']
    $84call_function.9 = call $70load_global.2(result, i, $82call_function.8, func=$70load_global.2, args=[Var(result, unicode.py:1889), Var(i, unicode.py:1890), Var($82call_function.8, unicode.py:1891)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_global.2', '$82call_function.8', '$84call_function.9', 'i', 'result']
2025-06-13 07:34:43,773 - print_capture - INFO -     $84call_function.9 = call $70load_global.2(result, i, $82call_function.8, func=$70load_global.2, args=[Var(result, unicode.py:1889), Var(i, unicode.py:1890), Var($82call_function.8, unicode.py:1891)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_global.2', '$82call_function.8', '$84call_function.9', 'i', 'result']
    $84call_function.9 = call $70load_global.2(result, i, $82call_function.8, func=$70load_global.2, args=[Var(result, unicode.py:1889), Var(i, unicode.py:1890), Var($82call_function.8, unicode.py:1891)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_global.2', '$82call_function.8', '$84call_function.9', 'i', 'result']
    $84call_function.9 = call $70load_global.2(result, i, $82call_function.8, func=$70load_global.2, args=[Var(result, unicode.py:1889), Var(i, unicode.py:1890), Var($82call_function.8, unicode.py:1891)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_global.2', '$82call_function.8', '$84call_function.9', 'i', 'result']
2025-06-13 07:34:43,773 - print_capture - INFO -     $84call_function.9 = call $70load_global.2(result, i, $82call_function.8, func=$70load_global.2, args=[Var(result, unicode.py:1889), Var(i, unicode.py:1890), Var($82call_function.8, unicode.py:1891)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_global.2', '$82call_function.8', '$84call_function.9', 'i', 'result']
    jump 66                                  []
    jump 66                                  []
2025-06-13 07:34:43,773 - print_capture - INFO -     jump 66                                  []
    jump 66                                  []
    jump 66                                  []
2025-06-13 07:34:43,774 - print_capture - INFO -     jump 66                                  []
label 90:
label 90:
2025-06-13 07:34:43,774 - print_capture - INFO - label 90:
label 90:
label 90:
2025-06-13 07:34:43,774 - print_capture - INFO - label 90:
    $90load_global.0 = global(range: <class 'range'>) ['$90load_global.0']
    $90load_global.0 = global(range: <class 'range'>) ['$90load_global.0']
2025-06-13 07:34:43,774 - print_capture - INFO -     $90load_global.0 = global(range: <class 'range'>) ['$90load_global.0']
    $90load_global.0 = global(range: <class 'range'>) ['$90load_global.0']
    $90load_global.0 = global(range: <class 'range'>) ['$90load_global.0']
2025-06-13 07:34:43,774 - print_capture - INFO -     $90load_global.0 = global(range: <class 'range'>) ['$90load_global.0']
    $92load_global.1 = global(len: <built-in function len>) ['$92load_global.1']
    $92load_global.1 = global(len: <built-in function len>) ['$92load_global.1']
2025-06-13 07:34:43,774 - print_capture - INFO -     $92load_global.1 = global(len: <built-in function len>) ['$92load_global.1']
    $92load_global.1 = global(len: <built-in function len>) ['$92load_global.1']
    $92load_global.1 = global(len: <built-in function len>) ['$92load_global.1']
2025-06-13 07:34:43,774 - print_capture - INFO -     $92load_global.1 = global(len: <built-in function len>) ['$92load_global.1']
    $96call_function.3 = call $92load_global.1(b, func=$92load_global.1, args=[Var(b, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_global.1', '$96call_function.3', 'b']
    $96call_function.3 = call $92load_global.1(b, func=$92load_global.1, args=[Var(b, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_global.1', '$96call_function.3', 'b']
2025-06-13 07:34:43,774 - print_capture - INFO -     $96call_function.3 = call $92load_global.1(b, func=$92load_global.1, args=[Var(b, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_global.1', '$96call_function.3', 'b']
    $96call_function.3 = call $92load_global.1(b, func=$92load_global.1, args=[Var(b, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_global.1', '$96call_function.3', 'b']
    $96call_function.3 = call $92load_global.1(b, func=$92load_global.1, args=[Var(b, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_global.1', '$96call_function.3', 'b']
2025-06-13 07:34:43,774 - print_capture - INFO -     $96call_function.3 = call $92load_global.1(b, func=$92load_global.1, args=[Var(b, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_global.1', '$96call_function.3', 'b']
    $98call_function.4 = call $90load_global.0($96call_function.3, func=$90load_global.0, args=[Var($96call_function.3, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$90load_global.0', '$96call_function.3', '$98call_function.4']
    $98call_function.4 = call $90load_global.0($96call_function.3, func=$90load_global.0, args=[Var($96call_function.3, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$90load_global.0', '$96call_function.3', '$98call_function.4']
2025-06-13 07:34:43,774 - print_capture - INFO -     $98call_function.4 = call $90load_global.0($96call_function.3, func=$90load_global.0, args=[Var($96call_function.3, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$90load_global.0', '$96call_function.3', '$98call_function.4']
    $98call_function.4 = call $90load_global.0($96call_function.3, func=$90load_global.0, args=[Var($96call_function.3, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$90load_global.0', '$96call_function.3', '$98call_function.4']
    $98call_function.4 = call $90load_global.0($96call_function.3, func=$90load_global.0, args=[Var($96call_function.3, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$90load_global.0', '$96call_function.3', '$98call_function.4']
2025-06-13 07:34:43,774 - print_capture - INFO -     $98call_function.4 = call $90load_global.0($96call_function.3, func=$90load_global.0, args=[Var($96call_function.3, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$90load_global.0', '$96call_function.3', '$98call_function.4']
    $100get_iter.5 = getiter(value=$98call_function.4) ['$100get_iter.5', '$98call_function.4']
    $100get_iter.5 = getiter(value=$98call_function.4) ['$100get_iter.5', '$98call_function.4']
2025-06-13 07:34:43,774 - print_capture - INFO -     $100get_iter.5 = getiter(value=$98call_function.4) ['$100get_iter.5', '$98call_function.4']
    $100get_iter.5 = getiter(value=$98call_function.4) ['$100get_iter.5', '$98call_function.4']
    $100get_iter.5 = getiter(value=$98call_function.4) ['$100get_iter.5', '$98call_function.4']
2025-06-13 07:34:43,774 - print_capture - INFO -     $100get_iter.5 = getiter(value=$98call_function.4) ['$100get_iter.5', '$98call_function.4']
    $phi102.0 = $100get_iter.5               ['$100get_iter.5', '$phi102.0']
    $phi102.0 = $100get_iter.5               ['$100get_iter.5', '$phi102.0']
2025-06-13 07:34:43,774 - print_capture - INFO -     $phi102.0 = $100get_iter.5               ['$100get_iter.5', '$phi102.0']
    $phi102.0 = $100get_iter.5               ['$100get_iter.5', '$phi102.0']
    $phi102.0 = $100get_iter.5               ['$100get_iter.5', '$phi102.0']
2025-06-13 07:34:43,774 - print_capture - INFO -     $phi102.0 = $100get_iter.5               ['$100get_iter.5', '$phi102.0']
    jump 102                                 []
    jump 102                                 []
2025-06-13 07:34:43,774 - print_capture - INFO -     jump 102                                 []
    jump 102                                 []
    jump 102                                 []
2025-06-13 07:34:43,774 - print_capture - INFO -     jump 102                                 []
label 102:
label 102:
2025-06-13 07:34:43,774 - print_capture - INFO - label 102:
label 102:
label 102:
2025-06-13 07:34:43,774 - print_capture - INFO - label 102:
    $102for_iter.1 = iternext(value=$phi102.0) ['$102for_iter.1', '$phi102.0']
    $102for_iter.1 = iternext(value=$phi102.0) ['$102for_iter.1', '$phi102.0']
2025-06-13 07:34:43,774 - print_capture - INFO -     $102for_iter.1 = iternext(value=$phi102.0) ['$102for_iter.1', '$phi102.0']
    $102for_iter.1 = iternext(value=$phi102.0) ['$102for_iter.1', '$phi102.0']
    $102for_iter.1 = iternext(value=$phi102.0) ['$102for_iter.1', '$phi102.0']
2025-06-13 07:34:43,774 - print_capture - INFO -     $102for_iter.1 = iternext(value=$phi102.0) ['$102for_iter.1', '$phi102.0']
    $102for_iter.2 = pair_first(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.2']
    $102for_iter.2 = pair_first(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.2']
2025-06-13 07:34:43,774 - print_capture - INFO -     $102for_iter.2 = pair_first(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.2']
    $102for_iter.2 = pair_first(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.2']
    $102for_iter.2 = pair_first(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.2']
2025-06-13 07:34:43,774 - print_capture - INFO -     $102for_iter.2 = pair_first(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.2']
    $102for_iter.3 = pair_second(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.3']
    $102for_iter.3 = pair_second(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.3']
2025-06-13 07:34:43,774 - print_capture - INFO -     $102for_iter.3 = pair_second(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.3']
    $102for_iter.3 = pair_second(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.3']
    $102for_iter.3 = pair_second(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.3']
2025-06-13 07:34:43,774 - print_capture - INFO -     $102for_iter.3 = pair_second(value=$102for_iter.1) ['$102for_iter.1', '$102for_iter.3']
    $phi104.1 = $102for_iter.2               ['$102for_iter.2', '$phi104.1']
    $phi104.1 = $102for_iter.2               ['$102for_iter.2', '$phi104.1']
2025-06-13 07:34:43,774 - print_capture - INFO -     $phi104.1 = $102for_iter.2               ['$102for_iter.2', '$phi104.1']
    $phi104.1 = $102for_iter.2               ['$102for_iter.2', '$phi104.1']
    $phi104.1 = $102for_iter.2               ['$102for_iter.2', '$phi104.1']
2025-06-13 07:34:43,774 - print_capture - INFO -     $phi104.1 = $102for_iter.2               ['$102for_iter.2', '$phi104.1']
    branch $102for_iter.3, 104, 134          ['$102for_iter.3']
    branch $102for_iter.3, 104, 134          ['$102for_iter.3']
2025-06-13 07:34:43,774 - print_capture - INFO -     branch $102for_iter.3, 104, 134          ['$102for_iter.3']
    branch $102for_iter.3, 104, 134          ['$102for_iter.3']
    branch $102for_iter.3, 104, 134          ['$102for_iter.3']
2025-06-13 07:34:43,774 - print_capture - INFO -     branch $102for_iter.3, 104, 134          ['$102for_iter.3']
label 104:
label 104:
2025-06-13 07:34:43,774 - print_capture - INFO - label 104:
label 104:
label 104:
2025-06-13 07:34:43,774 - print_capture - INFO - label 104:
    j = $phi104.1                            ['$phi104.1', 'j']
    j = $phi104.1                            ['$phi104.1', 'j']
2025-06-13 07:34:43,774 - print_capture - INFO -     j = $phi104.1                            ['$phi104.1', 'j']
    j = $phi104.1                            ['$phi104.1', 'j']
    j = $phi104.1                            ['$phi104.1', 'j']
2025-06-13 07:34:43,774 - print_capture - INFO -     j = $phi104.1                            ['$phi104.1', 'j']
    $106load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$106load_global.2']
    $106load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$106load_global.2']
2025-06-13 07:34:43,774 - print_capture - INFO -     $106load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$106load_global.2']
    $106load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$106load_global.2']
    $106load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$106load_global.2']
2025-06-13 07:34:43,774 - print_capture - INFO -     $106load_global.2 = global(_set_code_point: <function _set_code_point at 0x7f28ab7cb0a0>) ['$106load_global.2']
    $110load_global.4 = global(len: <built-in function len>) ['$110load_global.4']
    $110load_global.4 = global(len: <built-in function len>) ['$110load_global.4']
2025-06-13 07:34:43,774 - print_capture - INFO -     $110load_global.4 = global(len: <built-in function len>) ['$110load_global.4']
    $110load_global.4 = global(len: <built-in function len>) ['$110load_global.4']
    $110load_global.4 = global(len: <built-in function len>) ['$110load_global.4']
2025-06-13 07:34:43,774 - print_capture - INFO -     $110load_global.4 = global(len: <built-in function len>) ['$110load_global.4']
    $114call_function.6 = call $110load_global.4(a, func=$110load_global.4, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$110load_global.4', '$114call_function.6', 'a']
    $114call_function.6 = call $110load_global.4(a, func=$110load_global.4, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$110load_global.4', '$114call_function.6', 'a']
2025-06-13 07:34:43,774 - print_capture - INFO -     $114call_function.6 = call $110load_global.4(a, func=$110load_global.4, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$110load_global.4', '$114call_function.6', 'a']
    $114call_function.6 = call $110load_global.4(a, func=$110load_global.4, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$110load_global.4', '$114call_function.6', 'a']
    $114call_function.6 = call $110load_global.4(a, func=$110load_global.4, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$110load_global.4', '$114call_function.6', 'a']
2025-06-13 07:34:43,774 - print_capture - INFO -     $114call_function.6 = call $110load_global.4(a, func=$110load_global.4, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$110load_global.4', '$114call_function.6', 'a']
    $118binary_add.8 = $114call_function.6 + j ['$114call_function.6', '$118binary_add.8', 'j']
    $118binary_add.8 = $114call_function.6 + j ['$114call_function.6', '$118binary_add.8', 'j']
2025-06-13 07:34:43,774 - print_capture - INFO -     $118binary_add.8 = $114call_function.6 + j ['$114call_function.6', '$118binary_add.8', 'j']
    $118binary_add.8 = $114call_function.6 + j ['$114call_function.6', '$118binary_add.8', 'j']
    $118binary_add.8 = $114call_function.6 + j ['$114call_function.6', '$118binary_add.8', 'j']
2025-06-13 07:34:43,774 - print_capture - INFO -     $118binary_add.8 = $114call_function.6 + j ['$114call_function.6', '$118binary_add.8', 'j']
    $120load_global.9 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$120load_global.9']
    $120load_global.9 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$120load_global.9']
2025-06-13 07:34:43,774 - print_capture - INFO -     $120load_global.9 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$120load_global.9']
    $120load_global.9 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$120load_global.9']
    $120load_global.9 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$120load_global.9']
2025-06-13 07:34:43,774 - print_capture - INFO -     $120load_global.9 = global(_get_code_point: <function _get_code_point at 0x7f28ab7cacb0>) ['$120load_global.9']
    $126call_function.12 = call $120load_global.9(b, j, func=$120load_global.9, args=[Var(b, unicode.py:1885), Var(j, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.9', '$126call_function.12', 'b', 'j']
    $126call_function.12 = call $120load_global.9(b, j, func=$120load_global.9, args=[Var(b, unicode.py:1885), Var(j, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.9', '$126call_function.12', 'b', 'j']
2025-06-13 07:34:43,775 - print_capture - INFO -     $126call_function.12 = call $120load_global.9(b, j, func=$120load_global.9, args=[Var(b, unicode.py:1885), Var(j, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.9', '$126call_function.12', 'b', 'j']
    $126call_function.12 = call $120load_global.9(b, j, func=$120load_global.9, args=[Var(b, unicode.py:1885), Var(j, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.9', '$126call_function.12', 'b', 'j']
    $126call_function.12 = call $120load_global.9(b, j, func=$120load_global.9, args=[Var(b, unicode.py:1885), Var(j, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.9', '$126call_function.12', 'b', 'j']
2025-06-13 07:34:43,775 - print_capture - INFO -     $126call_function.12 = call $120load_global.9(b, j, func=$120load_global.9, args=[Var(b, unicode.py:1885), Var(j, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.9', '$126call_function.12', 'b', 'j']
    $128call_function.13 = call $106load_global.2(result, $118binary_add.8, $126call_function.12, func=$106load_global.2, args=[Var(result, unicode.py:1889), Var($118binary_add.8, unicode.py:1893), Var($126call_function.12, unicode.py:1893)], kws=(), vararg=None, varkwarg=None, target=None) ['$106load_global.2', '$118binary_add.8', '$126call_function.12', '$128call_function.13', 'result']
    $128call_function.13 = call $106load_global.2(result, $118binary_add.8, $126call_function.12, func=$106load_global.2, args=[Var(result, unicode.py:1889), Var($118binary_add.8, unicode.py:1893), Var($126call_function.12, unicode.py:1893)], kws=(), vararg=None, varkwarg=None, target=None) ['$106load_global.2', '$118binary_add.8', '$126call_function.12', '$128call_function.13', 'result']
2025-06-13 07:34:43,775 - print_capture - INFO -     $128call_function.13 = call $106load_global.2(result, $118binary_add.8, $126call_function.12, func=$106load_global.2, args=[Var(result, unicode.py:1889), Var($118binary_add.8, unicode.py:1893), Var($126call_function.12, unicode.py:1893)], kws=(), vararg=None, varkwarg=None, target=None) ['$106load_global.2', '$118binary_add.8', '$126call_function.12', '$128call_function.13', 'result']
    $128call_function.13 = call $106load_global.2(result, $118binary_add.8, $126call_function.12, func=$106load_global.2, args=[Var(result, unicode.py:1889), Var($118binary_add.8, unicode.py:1893), Var($126call_function.12, unicode.py:1893)], kws=(), vararg=None, varkwarg=None, target=None) ['$106load_global.2', '$118binary_add.8', '$126call_function.12', '$128call_function.13', 'result']
    $128call_function.13 = call $106load_global.2(result, $118binary_add.8, $126call_function.12, func=$106load_global.2, args=[Var(result, unicode.py:1889), Var($118binary_add.8, unicode.py:1893), Var($126call_function.12, unicode.py:1893)], kws=(), vararg=None, varkwarg=None, target=None) ['$106load_global.2', '$118binary_add.8', '$126call_function.12', '$128call_function.13', 'result']
2025-06-13 07:34:43,775 - print_capture - INFO -     $128call_function.13 = call $106load_global.2(result, $118binary_add.8, $126call_function.12, func=$106load_global.2, args=[Var(result, unicode.py:1889), Var($118binary_add.8, unicode.py:1893), Var($126call_function.12, unicode.py:1893)], kws=(), vararg=None, varkwarg=None, target=None) ['$106load_global.2', '$118binary_add.8', '$126call_function.12', '$128call_function.13', 'result']
    jump 102                                 []
    jump 102                                 []
2025-06-13 07:34:43,775 - print_capture - INFO -     jump 102                                 []
    jump 102                                 []
    jump 102                                 []
2025-06-13 07:34:43,775 - print_capture - INFO -     jump 102                                 []
label 134:
label 134:
2025-06-13 07:34:43,775 - print_capture - INFO - label 134:
label 134:
label 134:
2025-06-13 07:34:43,775 - print_capture - INFO - label 134:
    $136return_value.1 = cast(value=result)  ['$136return_value.1', 'result']
    $136return_value.1 = cast(value=result)  ['$136return_value.1', 'result']
2025-06-13 07:34:43,775 - print_capture - INFO -     $136return_value.1 = cast(value=result)  ['$136return_value.1', 'result']
    $136return_value.1 = cast(value=result)  ['$136return_value.1', 'result']
    $136return_value.1 = cast(value=result)  ['$136return_value.1', 'result']
2025-06-13 07:34:43,775 - print_capture - INFO -     $136return_value.1 = cast(value=result)  ['$136return_value.1', 'result']
    return $136return_value.1                ['$136return_value.1']
    return $136return_value.1                ['$136return_value.1']
2025-06-13 07:34:43,775 - print_capture - INFO -     return $136return_value.1                ['$136return_value.1']
    return $136return_value.1                ['$136return_value.1']
    return $136return_value.1                ['$136return_value.1']
2025-06-13 07:34:43,775 - print_capture - INFO -     return $136return_value.1                ['$136return_value.1']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/core/audio.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/core/audio.py
2025-06-13 07:34:44,115 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/core/audio.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/core/audio.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/core/audio.py
2025-06-13 07:34:44,115 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/core/audio.py
# --- LINE 1154 --- 
# --- LINE 1154 --- 
2025-06-13 07:34:44,116 - print_capture - INFO - # --- LINE 1154 --- 
# --- LINE 1154 --- 
# --- LINE 1154 --- 
2025-06-13 07:34:44,116 - print_capture - INFO - # --- LINE 1154 --- 
# label 0
# label 0
2025-06-13 07:34:44,116 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:44,116 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: array(float32, 1d, A)
#   x = arg(0, name=x)  :: array(float32, 1d, A)
2025-06-13 07:34:44,116 - print_capture - INFO - #   x = arg(0, name=x)  :: array(float32, 1d, A)
#   x = arg(0, name=x)  :: array(float32, 1d, A)
#   x = arg(0, name=x)  :: array(float32, 1d, A)
2025-06-13 07:34:44,116 - print_capture - INFO - #   x = arg(0, name=x)  :: array(float32, 1d, A)
#   threshold = arg(1, name=threshold)  :: float32
#   threshold = arg(1, name=threshold)  :: float32
2025-06-13 07:34:44,116 - print_capture - INFO - #   threshold = arg(1, name=threshold)  :: float32
#   threshold = arg(1, name=threshold)  :: float32
#   threshold = arg(1, name=threshold)  :: float32
2025-06-13 07:34:44,116 - print_capture - INFO - #   threshold = arg(1, name=threshold)  :: float32
#   zero_pos = arg(2, name=zero_pos)  :: bool
#   zero_pos = arg(2, name=zero_pos)  :: bool
2025-06-13 07:34:44,116 - print_capture - INFO - #   zero_pos = arg(2, name=zero_pos)  :: bool
#   zero_pos = arg(2, name=zero_pos)  :: bool
#   zero_pos = arg(2, name=zero_pos)  :: bool
2025-06-13 07:34:44,116 - print_capture - INFO - #   zero_pos = arg(2, name=zero_pos)  :: bool
#   y = arg(3, name=y)  :: array(bool, 1d, A)
#   y = arg(3, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:44,116 - print_capture - INFO - #   y = arg(3, name=y)  :: array(bool, 1d, A)
#   y = arg(3, name=y)  :: array(bool, 1d, A)
#   y = arg(3, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:44,116 - print_capture - INFO - #   y = arg(3, name=y)  :: array(bool, 1d, A)


2025-06-13 07:34:44,116 - print_capture - INFO - 


2025-06-13 07:34:44,116 - print_capture - INFO - 
@guvectorize(
@guvectorize(
2025-06-13 07:34:44,116 - print_capture - INFO - @guvectorize(
@guvectorize(
@guvectorize(
2025-06-13 07:34:44,116 - print_capture - INFO - @guvectorize(


2025-06-13 07:34:44,116 - print_capture - INFO - 


2025-06-13 07:34:44,116 - print_capture - INFO - 
    # --- LINE 1155 --- 
    # --- LINE 1155 --- 
2025-06-13 07:34:44,116 - print_capture - INFO -     # --- LINE 1155 --- 
    # --- LINE 1155 --- 
    # --- LINE 1155 --- 
2025-06-13 07:34:44,116 - print_capture - INFO -     # --- LINE 1155 --- 


2025-06-13 07:34:44,116 - print_capture - INFO - 


2025-06-13 07:34:44,116 - print_capture - INFO - 
    [
    [
2025-06-13 07:34:44,116 - print_capture - INFO -     [
    [
    [
2025-06-13 07:34:44,116 - print_capture - INFO -     [


2025-06-13 07:34:44,116 - print_capture - INFO - 


2025-06-13 07:34:44,116 - print_capture - INFO - 
        # --- LINE 1156 --- 
        # --- LINE 1156 --- 
2025-06-13 07:34:44,116 - print_capture - INFO -         # --- LINE 1156 --- 
        # --- LINE 1156 --- 
        # --- LINE 1156 --- 
2025-06-13 07:34:44,116 - print_capture - INFO -         # --- LINE 1156 --- 


2025-06-13 07:34:44,116 - print_capture - INFO - 


2025-06-13 07:34:44,116 - print_capture - INFO - 
        "void(float32[:], float32, bool_, bool_[:])",
        "void(float32[:], float32, bool_, bool_[:])",
2025-06-13 07:34:44,116 - print_capture - INFO -         "void(float32[:], float32, bool_, bool_[:])",
        "void(float32[:], float32, bool_, bool_[:])",
        "void(float32[:], float32, bool_, bool_[:])",
2025-06-13 07:34:44,116 - print_capture - INFO -         "void(float32[:], float32, bool_, bool_[:])",


2025-06-13 07:34:44,116 - print_capture - INFO - 


2025-06-13 07:34:44,116 - print_capture - INFO - 
        # --- LINE 1157 --- 
        # --- LINE 1157 --- 
2025-06-13 07:34:44,116 - print_capture - INFO -         # --- LINE 1157 --- 
        # --- LINE 1157 --- 
        # --- LINE 1157 --- 
2025-06-13 07:34:44,116 - print_capture - INFO -         # --- LINE 1157 --- 


2025-06-13 07:34:44,116 - print_capture - INFO - 


2025-06-13 07:34:44,116 - print_capture - INFO - 
        "void(float64[:], float64, bool_, bool_[:])",
        "void(float64[:], float64, bool_, bool_[:])",
2025-06-13 07:34:44,116 - print_capture - INFO -         "void(float64[:], float64, bool_, bool_[:])",
        "void(float64[:], float64, bool_, bool_[:])",
        "void(float64[:], float64, bool_, bool_[:])",
2025-06-13 07:34:44,116 - print_capture - INFO -         "void(float64[:], float64, bool_, bool_[:])",


2025-06-13 07:34:44,116 - print_capture - INFO - 


2025-06-13 07:34:44,116 - print_capture - INFO - 
    # --- LINE 1158 --- 
    # --- LINE 1158 --- 
2025-06-13 07:34:44,116 - print_capture - INFO -     # --- LINE 1158 --- 
    # --- LINE 1158 --- 
    # --- LINE 1158 --- 
2025-06-13 07:34:44,116 - print_capture - INFO -     # --- LINE 1158 --- 


2025-06-13 07:34:44,116 - print_capture - INFO - 


2025-06-13 07:34:44,116 - print_capture - INFO - 
    ],
    ],
2025-06-13 07:34:44,116 - print_capture - INFO -     ],
    ],
    ],
2025-06-13 07:34:44,116 - print_capture - INFO -     ],


2025-06-13 07:34:44,116 - print_capture - INFO - 


2025-06-13 07:34:44,117 - print_capture - INFO - 
    # --- LINE 1159 --- 
    # --- LINE 1159 --- 
2025-06-13 07:34:44,117 - print_capture - INFO -     # --- LINE 1159 --- 
    # --- LINE 1159 --- 
    # --- LINE 1159 --- 
2025-06-13 07:34:44,117 - print_capture - INFO -     # --- LINE 1159 --- 


2025-06-13 07:34:44,117 - print_capture - INFO - 


2025-06-13 07:34:44,117 - print_capture - INFO - 
    "(n),(),()->(n)",
    "(n),(),()->(n)",
2025-06-13 07:34:44,117 - print_capture - INFO -     "(n),(),()->(n)",
    "(n),(),()->(n)",
    "(n),(),()->(n)",
2025-06-13 07:34:44,117 - print_capture - INFO -     "(n),(),()->(n)",


2025-06-13 07:34:44,117 - print_capture - INFO - 


2025-06-13 07:34:44,117 - print_capture - INFO - 
    # --- LINE 1160 --- 
    # --- LINE 1160 --- 
2025-06-13 07:34:44,117 - print_capture - INFO -     # --- LINE 1160 --- 
    # --- LINE 1160 --- 
    # --- LINE 1160 --- 
2025-06-13 07:34:44,117 - print_capture - INFO -     # --- LINE 1160 --- 


2025-06-13 07:34:44,117 - print_capture - INFO - 


2025-06-13 07:34:44,117 - print_capture - INFO - 
    cache=True,
    cache=True,
2025-06-13 07:34:44,117 - print_capture - INFO -     cache=True,
    cache=True,
    cache=True,
2025-06-13 07:34:44,117 - print_capture - INFO -     cache=True,


2025-06-13 07:34:44,117 - print_capture - INFO - 


2025-06-13 07:34:44,117 - print_capture - INFO - 
    # --- LINE 1161 --- 
    # --- LINE 1161 --- 
2025-06-13 07:34:44,117 - print_capture - INFO -     # --- LINE 1161 --- 
    # --- LINE 1161 --- 
    # --- LINE 1161 --- 
2025-06-13 07:34:44,117 - print_capture - INFO -     # --- LINE 1161 --- 


2025-06-13 07:34:44,117 - print_capture - INFO - 


2025-06-13 07:34:44,117 - print_capture - INFO - 
    nopython=True,
    nopython=True,
2025-06-13 07:34:44,117 - print_capture - INFO -     nopython=True,
    nopython=True,
    nopython=True,
2025-06-13 07:34:44,117 - print_capture - INFO -     nopython=True,


2025-06-13 07:34:44,117 - print_capture - INFO - 


2025-06-13 07:34:44,117 - print_capture - INFO - 
# --- LINE 1162 --- 
# --- LINE 1162 --- 
2025-06-13 07:34:44,117 - print_capture - INFO - # --- LINE 1162 --- 
# --- LINE 1162 --- 
# --- LINE 1162 --- 
2025-06-13 07:34:44,117 - print_capture - INFO - # --- LINE 1162 --- 


2025-06-13 07:34:44,117 - print_capture - INFO - 


2025-06-13 07:34:44,117 - print_capture - INFO - 
)  # type: ignore
)  # type: ignore
2025-06-13 07:34:44,117 - print_capture - INFO - )  # type: ignore
)  # type: ignore
)  # type: ignore
2025-06-13 07:34:44,117 - print_capture - INFO - )  # type: ignore


2025-06-13 07:34:44,117 - print_capture - INFO - 


2025-06-13 07:34:44,117 - print_capture - INFO - 
# --- LINE 1163 --- 
# --- LINE 1163 --- 
2025-06-13 07:34:44,117 - print_capture - INFO - # --- LINE 1163 --- 
# --- LINE 1163 --- 
# --- LINE 1163 --- 
2025-06-13 07:34:44,117 - print_capture - INFO - # --- LINE 1163 --- 


2025-06-13 07:34:44,117 - print_capture - INFO - 


2025-06-13 07:34:44,117 - print_capture - INFO - 
def _zc_wrapper(
def _zc_wrapper(
2025-06-13 07:34:44,117 - print_capture - INFO - def _zc_wrapper(
def _zc_wrapper(
def _zc_wrapper(
2025-06-13 07:34:44,117 - print_capture - INFO - def _zc_wrapper(


2025-06-13 07:34:44,117 - print_capture - INFO - 


2025-06-13 07:34:44,117 - print_capture - INFO - 
    # --- LINE 1164 --- 
    # --- LINE 1164 --- 
2025-06-13 07:34:44,117 - print_capture - INFO -     # --- LINE 1164 --- 
    # --- LINE 1164 --- 
    # --- LINE 1164 --- 
2025-06-13 07:34:44,117 - print_capture - INFO -     # --- LINE 1164 --- 


2025-06-13 07:34:44,117 - print_capture - INFO - 


2025-06-13 07:34:44,117 - print_capture - INFO - 
    x: np.ndarray,
    x: np.ndarray,
2025-06-13 07:34:44,117 - print_capture - INFO -     x: np.ndarray,
    x: np.ndarray,
    x: np.ndarray,
2025-06-13 07:34:44,117 - print_capture - INFO -     x: np.ndarray,


2025-06-13 07:34:44,117 - print_capture - INFO - 


2025-06-13 07:34:44,117 - print_capture - INFO - 
    # --- LINE 1165 --- 
    # --- LINE 1165 --- 
2025-06-13 07:34:44,117 - print_capture - INFO -     # --- LINE 1165 --- 
    # --- LINE 1165 --- 
    # --- LINE 1165 --- 
2025-06-13 07:34:44,118 - print_capture - INFO -     # --- LINE 1165 --- 


2025-06-13 07:34:44,118 - print_capture - INFO - 


2025-06-13 07:34:44,118 - print_capture - INFO - 
    threshold: float,
    threshold: float,
2025-06-13 07:34:44,118 - print_capture - INFO -     threshold: float,
    threshold: float,
    threshold: float,
2025-06-13 07:34:44,118 - print_capture - INFO -     threshold: float,


2025-06-13 07:34:44,118 - print_capture - INFO - 


2025-06-13 07:34:44,118 - print_capture - INFO - 
    # --- LINE 1166 --- 
    # --- LINE 1166 --- 
2025-06-13 07:34:44,118 - print_capture - INFO -     # --- LINE 1166 --- 
    # --- LINE 1166 --- 
    # --- LINE 1166 --- 
2025-06-13 07:34:44,118 - print_capture - INFO -     # --- LINE 1166 --- 


2025-06-13 07:34:44,118 - print_capture - INFO - 


2025-06-13 07:34:44,118 - print_capture - INFO - 
    zero_pos: bool,
    zero_pos: bool,
2025-06-13 07:34:44,118 - print_capture - INFO -     zero_pos: bool,
    zero_pos: bool,
    zero_pos: bool,
2025-06-13 07:34:44,118 - print_capture - INFO -     zero_pos: bool,


2025-06-13 07:34:44,118 - print_capture - INFO - 


2025-06-13 07:34:44,118 - print_capture - INFO - 
    # --- LINE 1167 --- 
    # --- LINE 1167 --- 
2025-06-13 07:34:44,118 - print_capture - INFO -     # --- LINE 1167 --- 
    # --- LINE 1167 --- 
    # --- LINE 1167 --- 
2025-06-13 07:34:44,118 - print_capture - INFO -     # --- LINE 1167 --- 


2025-06-13 07:34:44,118 - print_capture - INFO - 


2025-06-13 07:34:44,118 - print_capture - INFO - 
    y: np.ndarray,
    y: np.ndarray,
2025-06-13 07:34:44,118 - print_capture - INFO -     y: np.ndarray,
    y: np.ndarray,
    y: np.ndarray,
2025-06-13 07:34:44,118 - print_capture - INFO -     y: np.ndarray,


2025-06-13 07:34:44,118 - print_capture - INFO - 


2025-06-13 07:34:44,118 - print_capture - INFO - 
# --- LINE 1168 --- 
# --- LINE 1168 --- 
2025-06-13 07:34:44,118 - print_capture - INFO - # --- LINE 1168 --- 
# --- LINE 1168 --- 
# --- LINE 1168 --- 
2025-06-13 07:34:44,118 - print_capture - INFO - # --- LINE 1168 --- 


2025-06-13 07:34:44,118 - print_capture - INFO - 


2025-06-13 07:34:44,118 - print_capture - INFO - 
) -> None:  # pragma: no cover
) -> None:  # pragma: no cover
2025-06-13 07:34:44,118 - print_capture - INFO - ) -> None:  # pragma: no cover
) -> None:  # pragma: no cover
) -> None:  # pragma: no cover
2025-06-13 07:34:44,118 - print_capture - INFO - ) -> None:  # pragma: no cover


2025-06-13 07:34:44,118 - print_capture - INFO - 


2025-06-13 07:34:44,118 - print_capture - INFO - 
    # --- LINE 1169 --- 
    # --- LINE 1169 --- 
2025-06-13 07:34:44,118 - print_capture - INFO -     # --- LINE 1169 --- 
    # --- LINE 1169 --- 
    # --- LINE 1169 --- 
2025-06-13 07:34:44,118 - print_capture - INFO -     # --- LINE 1169 --- 


2025-06-13 07:34:44,118 - print_capture - INFO - 


2025-06-13 07:34:44,118 - print_capture - INFO - 
    """Vectorized wrapper for zero crossing stencil"""
    """Vectorized wrapper for zero crossing stencil"""
2025-06-13 07:34:44,118 - print_capture - INFO -     """Vectorized wrapper for zero crossing stencil"""
    """Vectorized wrapper for zero crossing stencil"""
    """Vectorized wrapper for zero crossing stencil"""
2025-06-13 07:34:44,118 - print_capture - INFO -     """Vectorized wrapper for zero crossing stencil"""


2025-06-13 07:34:44,118 - print_capture - INFO - 


2025-06-13 07:34:44,118 - print_capture - INFO - 
    # --- LINE 1170 --- 
    # --- LINE 1170 --- 
2025-06-13 07:34:44,118 - print_capture - INFO -     # --- LINE 1170 --- 
    # --- LINE 1170 --- 
    # --- LINE 1170 --- 
2025-06-13 07:34:44,118 - print_capture - INFO -     # --- LINE 1170 --- 
    #   $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)
    #   $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)
2025-06-13 07:34:44,118 - print_capture - INFO -     #   $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)
    #   $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)
    #   $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)
2025-06-13 07:34:44,118 - print_capture - INFO -     #   $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)
    #   $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True), float32, bool) -> array(bool, 1d, A)
    #   $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True), float32, bool) -> array(bool, 1d, A)
2025-06-13 07:34:44,118 - print_capture - INFO -     #   $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True), float32, bool) -> array(bool, 1d, A)
    #   $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True), float32, bool) -> array(bool, 1d, A)
    #   $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True), float32, bool) -> array(bool, 1d, A)
2025-06-13 07:34:44,118 - print_capture - INFO -     #   $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True), float32, bool) -> array(bool, 1d, A)
    #   del zero_pos
    #   del zero_pos
2025-06-13 07:34:44,118 - print_capture - INFO -     #   del zero_pos
    #   del zero_pos
    #   del zero_pos
2025-06-13 07:34:44,118 - print_capture - INFO -     #   del zero_pos
    #   del x
    #   del x
2025-06-13 07:34:44,118 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:44,118 - print_capture - INFO -     #   del x
    #   del threshold
    #   del threshold
2025-06-13 07:34:44,118 - print_capture - INFO -     #   del threshold
    #   del threshold
    #   del threshold
2025-06-13 07:34:44,119 - print_capture - INFO -     #   del threshold
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:44,119 - print_capture - INFO -     #   del $2load_global.0
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:44,119 - print_capture - INFO -     #   del $2load_global.0
    #   $const14.6.1 = const(NoneType, None)  :: none
    #   $const14.6.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,119 - print_capture - INFO -     #   $const14.6.1 = const(NoneType, None)  :: none
    #   $const14.6.1 = const(NoneType, None)  :: none
    #   $const14.6.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,119 - print_capture - INFO -     #   $const14.6.1 = const(NoneType, None)  :: none
    #   $const16.7.1 = const(NoneType, None)  :: none
    #   $const16.7.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,119 - print_capture - INFO -     #   $const16.7.1 = const(NoneType, None)  :: none
    #   $const16.7.1 = const(NoneType, None)  :: none
    #   $const16.7.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,119 - print_capture - INFO -     #   $const16.7.1 = const(NoneType, None)  :: none
    #   $18build_slice.8 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $18build_slice.8 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:44,119 - print_capture - INFO -     #   $18build_slice.8 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $18build_slice.8 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $18build_slice.8 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:44,119 - print_capture - INFO -     #   $18build_slice.8 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:44,119 - print_capture - INFO -     #   $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:44,119 - print_capture - INFO -     #   $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   del $const16.7.1
    #   del $const16.7.1
2025-06-13 07:34:44,119 - print_capture - INFO -     #   del $const16.7.1
    #   del $const16.7.1
    #   del $const16.7.1
2025-06-13 07:34:44,119 - print_capture - INFO -     #   del $const16.7.1
    #   del $const14.6.1
    #   del $const14.6.1
2025-06-13 07:34:44,119 - print_capture - INFO -     #   del $const14.6.1
    #   del $const14.6.1
    #   del $const14.6.1
2025-06-13 07:34:44,119 - print_capture - INFO -     #   del $const14.6.1
    #   del $18build_slice.8
    #   del $18build_slice.8
2025-06-13 07:34:44,119 - print_capture - INFO -     #   del $18build_slice.8
    #   del $18build_slice.8
    #   del $18build_slice.8
2025-06-13 07:34:44,119 - print_capture - INFO -     #   del $18build_slice.8
    #   y[slice(None, None, None)] = $10call_function.4
    #   y[slice(None, None, None)] = $10call_function.4
2025-06-13 07:34:44,119 - print_capture - INFO -     #   y[slice(None, None, None)] = $10call_function.4
    #   y[slice(None, None, None)] = $10call_function.4
    #   y[slice(None, None, None)] = $10call_function.4
2025-06-13 07:34:44,119 - print_capture - INFO -     #   y[slice(None, None, None)] = $10call_function.4
    #   del y
    #   del y
2025-06-13 07:34:44,119 - print_capture - INFO -     #   del y
    #   del y
    #   del y
2025-06-13 07:34:44,119 - print_capture - INFO -     #   del y
    #   del $18build_slice.9
    #   del $18build_slice.9
2025-06-13 07:34:44,119 - print_capture - INFO -     #   del $18build_slice.9
    #   del $18build_slice.9
    #   del $18build_slice.9
2025-06-13 07:34:44,119 - print_capture - INFO -     #   del $18build_slice.9
    #   del $10call_function.4
    #   del $10call_function.4
2025-06-13 07:34:44,119 - print_capture - INFO -     #   del $10call_function.4
    #   del $10call_function.4
    #   del $10call_function.4
2025-06-13 07:34:44,119 - print_capture - INFO -     #   del $10call_function.4
    #   $const22.10.1 = const(NoneType, None)  :: none
    #   $const22.10.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,119 - print_capture - INFO -     #   $const22.10.1 = const(NoneType, None)  :: none
    #   $const22.10.1 = const(NoneType, None)  :: none
    #   $const22.10.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,119 - print_capture - INFO -     #   $const22.10.1 = const(NoneType, None)  :: none
    #   $24return_value.11 = cast(value=$const22.10.1)  :: none
    #   $24return_value.11 = cast(value=$const22.10.1)  :: none
2025-06-13 07:34:44,119 - print_capture - INFO -     #   $24return_value.11 = cast(value=$const22.10.1)  :: none
    #   $24return_value.11 = cast(value=$const22.10.1)  :: none
    #   $24return_value.11 = cast(value=$const22.10.1)  :: none
2025-06-13 07:34:44,119 - print_capture - INFO -     #   $24return_value.11 = cast(value=$const22.10.1)  :: none
    #   del $const22.10.1
    #   del $const22.10.1
2025-06-13 07:34:44,119 - print_capture - INFO -     #   del $const22.10.1
    #   del $const22.10.1
    #   del $const22.10.1
2025-06-13 07:34:44,119 - print_capture - INFO -     #   del $const22.10.1
    #   return $24return_value.11
    #   return $24return_value.11
2025-06-13 07:34:44,119 - print_capture - INFO -     #   return $24return_value.11
    #   return $24return_value.11
    #   return $24return_value.11
2025-06-13 07:34:44,119 - print_capture - INFO -     #   return $24return_value.11


2025-06-13 07:34:44,119 - print_capture - INFO - 


2025-06-13 07:34:44,119 - print_capture - INFO - 
    y[:] = _zc_stencil(x, threshold, zero_pos)
    y[:] = _zc_stencil(x, threshold, zero_pos)
2025-06-13 07:34:44,119 - print_capture - INFO -     y[:] = _zc_stencil(x, threshold, zero_pos)
    y[:] = _zc_stencil(x, threshold, zero_pos)
    y[:] = _zc_stencil(x, threshold, zero_pos)
2025-06-13 07:34:44,119 - print_capture - INFO -     y[:] = _zc_stencil(x, threshold, zero_pos)


2025-06-13 07:34:44,119 - print_capture - INFO - 


2025-06-13 07:34:44,119 - print_capture - INFO - 
label 0:
label 0:
2025-06-13 07:34:44,122 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:44,122 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,122 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,122 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 07:34:44,122 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 07:34:44,122 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 07:34:44,122 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 07:34:44,122 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    y = arg(3, name=y)                       ['y']
2025-06-13 07:34:44,122 - print_capture - INFO -     y = arg(3, name=y)                       ['y']
    y = arg(3, name=y)                       ['y']
    y = arg(3, name=y)                       ['y']
2025-06-13 07:34:44,122 - print_capture - INFO -     y = arg(3, name=y)                       ['y']
    $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>) ['$2load_global.0']
    $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>) ['$2load_global.0']
2025-06-13 07:34:44,122 - print_capture - INFO -     $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>) ['$2load_global.0']
    $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>) ['$2load_global.0']
    $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>) ['$2load_global.0']
2025-06-13 07:34:44,122 - print_capture - INFO -     $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>) ['$2load_global.0']
    $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', 'threshold', 'x', 'zero_pos']
    $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', 'threshold', 'x', 'zero_pos']
2025-06-13 07:34:44,122 - print_capture - INFO -     $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', 'threshold', 'x', 'zero_pos']
    $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', 'threshold', 'x', 'zero_pos']
    $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', 'threshold', 'x', 'zero_pos']
2025-06-13 07:34:44,122 - print_capture - INFO -     $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', 'threshold', 'x', 'zero_pos']
    $const14.6.1 = const(NoneType, None)     ['$const14.6.1']
    $const14.6.1 = const(NoneType, None)     ['$const14.6.1']
2025-06-13 07:34:44,122 - print_capture - INFO -     $const14.6.1 = const(NoneType, None)     ['$const14.6.1']
    $const14.6.1 = const(NoneType, None)     ['$const14.6.1']
    $const14.6.1 = const(NoneType, None)     ['$const14.6.1']
2025-06-13 07:34:44,122 - print_capture - INFO -     $const14.6.1 = const(NoneType, None)     ['$const14.6.1']
    $const16.7.1 = const(NoneType, None)     ['$const16.7.1']
    $const16.7.1 = const(NoneType, None)     ['$const16.7.1']
2025-06-13 07:34:44,122 - print_capture - INFO -     $const16.7.1 = const(NoneType, None)     ['$const16.7.1']
    $const16.7.1 = const(NoneType, None)     ['$const16.7.1']
    $const16.7.1 = const(NoneType, None)     ['$const16.7.1']
2025-06-13 07:34:44,122 - print_capture - INFO -     $const16.7.1 = const(NoneType, None)     ['$const16.7.1']
    $18build_slice.8 = global(slice: <class 'slice'>) ['$18build_slice.8']
    $18build_slice.8 = global(slice: <class 'slice'>) ['$18build_slice.8']
2025-06-13 07:34:44,122 - print_capture - INFO -     $18build_slice.8 = global(slice: <class 'slice'>) ['$18build_slice.8']
    $18build_slice.8 = global(slice: <class 'slice'>) ['$18build_slice.8']
    $18build_slice.8 = global(slice: <class 'slice'>) ['$18build_slice.8']
2025-06-13 07:34:44,122 - print_capture - INFO -     $18build_slice.8 = global(slice: <class 'slice'>) ['$18build_slice.8']
    $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$18build_slice.8', '$18build_slice.9', '$const14.6.1', '$const16.7.1']
    $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$18build_slice.8', '$18build_slice.9', '$const14.6.1', '$const16.7.1']
2025-06-13 07:34:44,122 - print_capture - INFO -     $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$18build_slice.8', '$18build_slice.9', '$const14.6.1', '$const16.7.1']
    $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$18build_slice.8', '$18build_slice.9', '$const14.6.1', '$const16.7.1']
    $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$18build_slice.8', '$18build_slice.9', '$const14.6.1', '$const16.7.1']
2025-06-13 07:34:44,122 - print_capture - INFO -     $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$18build_slice.8', '$18build_slice.9', '$const14.6.1', '$const16.7.1']
    y[$18build_slice.9] = $10call_function.4 ['$10call_function.4', '$18build_slice.9', 'y']
    y[$18build_slice.9] = $10call_function.4 ['$10call_function.4', '$18build_slice.9', 'y']
2025-06-13 07:34:44,122 - print_capture - INFO -     y[$18build_slice.9] = $10call_function.4 ['$10call_function.4', '$18build_slice.9', 'y']
    y[$18build_slice.9] = $10call_function.4 ['$10call_function.4', '$18build_slice.9', 'y']
    y[$18build_slice.9] = $10call_function.4 ['$10call_function.4', '$18build_slice.9', 'y']
2025-06-13 07:34:44,122 - print_capture - INFO -     y[$18build_slice.9] = $10call_function.4 ['$10call_function.4', '$18build_slice.9', 'y']
    $const22.10.1 = const(NoneType, None)    ['$const22.10.1']
    $const22.10.1 = const(NoneType, None)    ['$const22.10.1']
2025-06-13 07:34:44,122 - print_capture - INFO -     $const22.10.1 = const(NoneType, None)    ['$const22.10.1']
    $const22.10.1 = const(NoneType, None)    ['$const22.10.1']
    $const22.10.1 = const(NoneType, None)    ['$const22.10.1']
2025-06-13 07:34:44,122 - print_capture - INFO -     $const22.10.1 = const(NoneType, None)    ['$const22.10.1']
    $24return_value.11 = cast(value=$const22.10.1) ['$24return_value.11', '$const22.10.1']
    $24return_value.11 = cast(value=$const22.10.1) ['$24return_value.11', '$const22.10.1']
2025-06-13 07:34:44,122 - print_capture - INFO -     $24return_value.11 = cast(value=$const22.10.1) ['$24return_value.11', '$const22.10.1']
    $24return_value.11 = cast(value=$const22.10.1) ['$24return_value.11', '$const22.10.1']
    $24return_value.11 = cast(value=$const22.10.1) ['$24return_value.11', '$const22.10.1']
2025-06-13 07:34:44,122 - print_capture - INFO -     $24return_value.11 = cast(value=$const22.10.1) ['$24return_value.11', '$const22.10.1']
    return $24return_value.11                ['$24return_value.11']
    return $24return_value.11                ['$24return_value.11']
2025-06-13 07:34:44,122 - print_capture - INFO -     return $24return_value.11                ['$24return_value.11']
    return $24return_value.11                ['$24return_value.11']
    return $24return_value.11                ['$24return_value.11']
2025-06-13 07:34:44,122 - print_capture - INFO -     return $24return_value.11                ['$24return_value.11']
label 0:
label 0:
2025-06-13 07:34:44,141 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:44,141 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,141 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,141 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 07:34:44,141 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 07:34:44,141 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 07:34:44,141 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 07:34:44,142 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:44,142 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:44,142 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:44,142 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:44,142 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:44,142 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:44,142 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:44,142 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:44,142 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:44,142 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:44,142 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:44,142 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:44,142 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:44,142 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:44,142 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:44,142 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:44,142 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:44,142 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:44,142 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:44,142 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:44,142 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:44,142 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:44,142 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:44,142 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:44,142 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:44,142 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:44,142 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const40.17.2 = const(int, 0)            ['$const40.17.2']
    $const40.17.2 = const(int, 0)            ['$const40.17.2']
2025-06-13 07:34:44,142 - print_capture - INFO -     $const40.17.2 = const(int, 0)            ['$const40.17.2']
    $const40.17.2 = const(int, 0)            ['$const40.17.2']
    $const40.17.2 = const(int, 0)            ['$const40.17.2']
2025-06-13 07:34:44,142 - print_capture - INFO -     $const40.17.2 = const(int, 0)            ['$const40.17.2']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:44,142 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:44,142 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:44,142 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:44,142 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17.2, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.2, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.2', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.2, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.2, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.2', '$const42.18.0']
2025-06-13 07:34:44,142 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.2, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.2, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.2', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.2, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.2, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.2', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.2, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.2, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.2', '$const42.18.0']
2025-06-13 07:34:44,142 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.2, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.2, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.2', '$const42.18.0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:44,142 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:44,142 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:44,142 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:44,142 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:44,142 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:44,142 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:44,143 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:44,143 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:44,143 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:44,143 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:44,143 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:44,143 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:44,143 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:44,143 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:44,143 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:44,143 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:44,143 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:44,143 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:44,143 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:44,143 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:44,143 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:44,143 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const70.32.2 = const(int, 0)            ['$const70.32.2']
    $const70.32.2 = const(int, 0)            ['$const70.32.2']
2025-06-13 07:34:44,143 - print_capture - INFO -     $const70.32.2 = const(int, 0)            ['$const70.32.2']
    $const70.32.2 = const(int, 0)            ['$const70.32.2']
    $const70.32.2 = const(int, 0)            ['$const70.32.2']
2025-06-13 07:34:44,143 - print_capture - INFO -     $const70.32.2 = const(int, 0)            ['$const70.32.2']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.2, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.2']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.2, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.2']
2025-06-13 07:34:44,143 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.2, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.2']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.2, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.2']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.2, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.2']
2025-06-13 07:34:44,143 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.2, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.2']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:44,143 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:44,143 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:44,143 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:44,143 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:44,143 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:44,143 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:44,143 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:44,143 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:44,143 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:44,143 - print_capture - INFO -     jump 80                                  []
label 80:
label 80:
2025-06-13 07:34:44,143 - print_capture - INFO - label 80:
label 80:
label 80:
2025-06-13 07:34:44,143 - print_capture - INFO - label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:44,143 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:44,143 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:44,143 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:44,143 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:44,143 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:44,143 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:44,143 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:44,143 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:44,143 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:44,144 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
label 82:
2025-06-13 07:34:44,144 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 07:34:44,144 - print_capture - INFO - label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:44,144 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:44,144 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:44,144 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:44,144 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:44,144 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:44,144 - print_capture - INFO -     jump 80                                  []
label 90:
label 90:
2025-06-13 07:34:44,144 - print_capture - INFO - label 90:
label 90:
label 90:
2025-06-13 07:34:44,144 - print_capture - INFO - label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:44,144 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:44,144 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:44,144 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:44,144 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/core/audio.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/core/audio.py
2025-06-13 07:34:44,339 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/core/audio.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/core/audio.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/core/audio.py
2025-06-13 07:34:44,339 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/core/audio.py
# --- LINE 1154 --- 
# --- LINE 1154 --- 
2025-06-13 07:34:44,339 - print_capture - INFO - # --- LINE 1154 --- 
# --- LINE 1154 --- 
# --- LINE 1154 --- 
2025-06-13 07:34:44,339 - print_capture - INFO - # --- LINE 1154 --- 
# label 0
# label 0
2025-06-13 07:34:44,339 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:44,339 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: array(float64, 1d, A)
#   x = arg(0, name=x)  :: array(float64, 1d, A)
2025-06-13 07:34:44,339 - print_capture - INFO - #   x = arg(0, name=x)  :: array(float64, 1d, A)
#   x = arg(0, name=x)  :: array(float64, 1d, A)
#   x = arg(0, name=x)  :: array(float64, 1d, A)
2025-06-13 07:34:44,339 - print_capture - INFO - #   x = arg(0, name=x)  :: array(float64, 1d, A)
#   threshold = arg(1, name=threshold)  :: float64
#   threshold = arg(1, name=threshold)  :: float64
2025-06-13 07:34:44,339 - print_capture - INFO - #   threshold = arg(1, name=threshold)  :: float64
#   threshold = arg(1, name=threshold)  :: float64
#   threshold = arg(1, name=threshold)  :: float64
2025-06-13 07:34:44,339 - print_capture - INFO - #   threshold = arg(1, name=threshold)  :: float64
#   zero_pos = arg(2, name=zero_pos)  :: bool
#   zero_pos = arg(2, name=zero_pos)  :: bool
2025-06-13 07:34:44,339 - print_capture - INFO - #   zero_pos = arg(2, name=zero_pos)  :: bool
#   zero_pos = arg(2, name=zero_pos)  :: bool
#   zero_pos = arg(2, name=zero_pos)  :: bool
2025-06-13 07:34:44,339 - print_capture - INFO - #   zero_pos = arg(2, name=zero_pos)  :: bool
#   y = arg(3, name=y)  :: array(bool, 1d, A)
#   y = arg(3, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:44,339 - print_capture - INFO - #   y = arg(3, name=y)  :: array(bool, 1d, A)
#   y = arg(3, name=y)  :: array(bool, 1d, A)
#   y = arg(3, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:44,339 - print_capture - INFO - #   y = arg(3, name=y)  :: array(bool, 1d, A)


2025-06-13 07:34:44,339 - print_capture - INFO - 


2025-06-13 07:34:44,339 - print_capture - INFO - 
@guvectorize(
@guvectorize(
2025-06-13 07:34:44,339 - print_capture - INFO - @guvectorize(
@guvectorize(
@guvectorize(
2025-06-13 07:34:44,339 - print_capture - INFO - @guvectorize(


2025-06-13 07:34:44,339 - print_capture - INFO - 


2025-06-13 07:34:44,339 - print_capture - INFO - 
    # --- LINE 1155 --- 
    # --- LINE 1155 --- 
2025-06-13 07:34:44,339 - print_capture - INFO -     # --- LINE 1155 --- 
    # --- LINE 1155 --- 
    # --- LINE 1155 --- 
2025-06-13 07:34:44,339 - print_capture - INFO -     # --- LINE 1155 --- 


2025-06-13 07:34:44,339 - print_capture - INFO - 


2025-06-13 07:34:44,339 - print_capture - INFO - 
    [
    [
2025-06-13 07:34:44,339 - print_capture - INFO -     [
    [
    [
2025-06-13 07:34:44,339 - print_capture - INFO -     [


2025-06-13 07:34:44,339 - print_capture - INFO - 


2025-06-13 07:34:44,339 - print_capture - INFO - 
        # --- LINE 1156 --- 
        # --- LINE 1156 --- 
2025-06-13 07:34:44,339 - print_capture - INFO -         # --- LINE 1156 --- 
        # --- LINE 1156 --- 
        # --- LINE 1156 --- 
2025-06-13 07:34:44,339 - print_capture - INFO -         # --- LINE 1156 --- 


2025-06-13 07:34:44,339 - print_capture - INFO - 


2025-06-13 07:34:44,339 - print_capture - INFO - 
        "void(float32[:], float32, bool_, bool_[:])",
        "void(float32[:], float32, bool_, bool_[:])",
2025-06-13 07:34:44,340 - print_capture - INFO -         "void(float32[:], float32, bool_, bool_[:])",
        "void(float32[:], float32, bool_, bool_[:])",
        "void(float32[:], float32, bool_, bool_[:])",
2025-06-13 07:34:44,340 - print_capture - INFO -         "void(float32[:], float32, bool_, bool_[:])",


2025-06-13 07:34:44,340 - print_capture - INFO - 


2025-06-13 07:34:44,340 - print_capture - INFO - 
        # --- LINE 1157 --- 
        # --- LINE 1157 --- 
2025-06-13 07:34:44,340 - print_capture - INFO -         # --- LINE 1157 --- 
        # --- LINE 1157 --- 
        # --- LINE 1157 --- 
2025-06-13 07:34:44,340 - print_capture - INFO -         # --- LINE 1157 --- 


2025-06-13 07:34:44,340 - print_capture - INFO - 


2025-06-13 07:34:44,340 - print_capture - INFO - 
        "void(float64[:], float64, bool_, bool_[:])",
        "void(float64[:], float64, bool_, bool_[:])",
2025-06-13 07:34:44,340 - print_capture - INFO -         "void(float64[:], float64, bool_, bool_[:])",
        "void(float64[:], float64, bool_, bool_[:])",
        "void(float64[:], float64, bool_, bool_[:])",
2025-06-13 07:34:44,340 - print_capture - INFO -         "void(float64[:], float64, bool_, bool_[:])",


2025-06-13 07:34:44,340 - print_capture - INFO - 


2025-06-13 07:34:44,340 - print_capture - INFO - 
    # --- LINE 1158 --- 
    # --- LINE 1158 --- 
2025-06-13 07:34:44,340 - print_capture - INFO -     # --- LINE 1158 --- 
    # --- LINE 1158 --- 
    # --- LINE 1158 --- 
2025-06-13 07:34:44,340 - print_capture - INFO -     # --- LINE 1158 --- 


2025-06-13 07:34:44,340 - print_capture - INFO - 


2025-06-13 07:34:44,340 - print_capture - INFO - 
    ],
    ],
2025-06-13 07:34:44,340 - print_capture - INFO -     ],
    ],
    ],
2025-06-13 07:34:44,340 - print_capture - INFO -     ],


2025-06-13 07:34:44,340 - print_capture - INFO - 


2025-06-13 07:34:44,340 - print_capture - INFO - 
    # --- LINE 1159 --- 
    # --- LINE 1159 --- 
2025-06-13 07:34:44,340 - print_capture - INFO -     # --- LINE 1159 --- 
    # --- LINE 1159 --- 
    # --- LINE 1159 --- 
2025-06-13 07:34:44,340 - print_capture - INFO -     # --- LINE 1159 --- 


2025-06-13 07:34:44,340 - print_capture - INFO - 


2025-06-13 07:34:44,340 - print_capture - INFO - 
    "(n),(),()->(n)",
    "(n),(),()->(n)",
2025-06-13 07:34:44,340 - print_capture - INFO -     "(n),(),()->(n)",
    "(n),(),()->(n)",
    "(n),(),()->(n)",
2025-06-13 07:34:44,340 - print_capture - INFO -     "(n),(),()->(n)",


2025-06-13 07:34:44,340 - print_capture - INFO - 


2025-06-13 07:34:44,340 - print_capture - INFO - 
    # --- LINE 1160 --- 
    # --- LINE 1160 --- 
2025-06-13 07:34:44,340 - print_capture - INFO -     # --- LINE 1160 --- 
    # --- LINE 1160 --- 
    # --- LINE 1160 --- 
2025-06-13 07:34:44,340 - print_capture - INFO -     # --- LINE 1160 --- 


2025-06-13 07:34:44,340 - print_capture - INFO - 


2025-06-13 07:34:44,340 - print_capture - INFO - 
    cache=True,
    cache=True,
2025-06-13 07:34:44,340 - print_capture - INFO -     cache=True,
    cache=True,
    cache=True,
2025-06-13 07:34:44,340 - print_capture - INFO -     cache=True,


2025-06-13 07:34:44,340 - print_capture - INFO - 


2025-06-13 07:34:44,340 - print_capture - INFO - 
    # --- LINE 1161 --- 
    # --- LINE 1161 --- 
2025-06-13 07:34:44,340 - print_capture - INFO -     # --- LINE 1161 --- 
    # --- LINE 1161 --- 
    # --- LINE 1161 --- 
2025-06-13 07:34:44,340 - print_capture - INFO -     # --- LINE 1161 --- 


2025-06-13 07:34:44,340 - print_capture - INFO - 


2025-06-13 07:34:44,340 - print_capture - INFO - 
    nopython=True,
    nopython=True,
2025-06-13 07:34:44,340 - print_capture - INFO -     nopython=True,
    nopython=True,
    nopython=True,
2025-06-13 07:34:44,340 - print_capture - INFO -     nopython=True,


2025-06-13 07:34:44,340 - print_capture - INFO - 


2025-06-13 07:34:44,340 - print_capture - INFO - 
# --- LINE 1162 --- 
# --- LINE 1162 --- 
2025-06-13 07:34:44,340 - print_capture - INFO - # --- LINE 1162 --- 
# --- LINE 1162 --- 
# --- LINE 1162 --- 
2025-06-13 07:34:44,340 - print_capture - INFO - # --- LINE 1162 --- 


2025-06-13 07:34:44,340 - print_capture - INFO - 


2025-06-13 07:34:44,340 - print_capture - INFO - 
)  # type: ignore
)  # type: ignore
2025-06-13 07:34:44,340 - print_capture - INFO - )  # type: ignore
)  # type: ignore
)  # type: ignore
2025-06-13 07:34:44,341 - print_capture - INFO - )  # type: ignore


2025-06-13 07:34:44,341 - print_capture - INFO - 


2025-06-13 07:34:44,341 - print_capture - INFO - 
# --- LINE 1163 --- 
# --- LINE 1163 --- 
2025-06-13 07:34:44,341 - print_capture - INFO - # --- LINE 1163 --- 
# --- LINE 1163 --- 
# --- LINE 1163 --- 
2025-06-13 07:34:44,341 - print_capture - INFO - # --- LINE 1163 --- 


2025-06-13 07:34:44,341 - print_capture - INFO - 


2025-06-13 07:34:44,341 - print_capture - INFO - 
def _zc_wrapper(
def _zc_wrapper(
2025-06-13 07:34:44,341 - print_capture - INFO - def _zc_wrapper(
def _zc_wrapper(
def _zc_wrapper(
2025-06-13 07:34:44,341 - print_capture - INFO - def _zc_wrapper(


2025-06-13 07:34:44,341 - print_capture - INFO - 


2025-06-13 07:34:44,341 - print_capture - INFO - 
    # --- LINE 1164 --- 
    # --- LINE 1164 --- 
2025-06-13 07:34:44,341 - print_capture - INFO -     # --- LINE 1164 --- 
    # --- LINE 1164 --- 
    # --- LINE 1164 --- 
2025-06-13 07:34:44,341 - print_capture - INFO -     # --- LINE 1164 --- 


2025-06-13 07:34:44,341 - print_capture - INFO - 


2025-06-13 07:34:44,341 - print_capture - INFO - 
    x: np.ndarray,
    x: np.ndarray,
2025-06-13 07:34:44,341 - print_capture - INFO -     x: np.ndarray,
    x: np.ndarray,
    x: np.ndarray,
2025-06-13 07:34:44,341 - print_capture - INFO -     x: np.ndarray,


2025-06-13 07:34:44,341 - print_capture - INFO - 


2025-06-13 07:34:44,341 - print_capture - INFO - 
    # --- LINE 1165 --- 
    # --- LINE 1165 --- 
2025-06-13 07:34:44,341 - print_capture - INFO -     # --- LINE 1165 --- 
    # --- LINE 1165 --- 
    # --- LINE 1165 --- 
2025-06-13 07:34:44,341 - print_capture - INFO -     # --- LINE 1165 --- 


2025-06-13 07:34:44,341 - print_capture - INFO - 


2025-06-13 07:34:44,341 - print_capture - INFO - 
    threshold: float,
    threshold: float,
2025-06-13 07:34:44,341 - print_capture - INFO -     threshold: float,
    threshold: float,
    threshold: float,
2025-06-13 07:34:44,341 - print_capture - INFO -     threshold: float,


2025-06-13 07:34:44,341 - print_capture - INFO - 


2025-06-13 07:34:44,341 - print_capture - INFO - 
    # --- LINE 1166 --- 
    # --- LINE 1166 --- 
2025-06-13 07:34:44,341 - print_capture - INFO -     # --- LINE 1166 --- 
    # --- LINE 1166 --- 
    # --- LINE 1166 --- 
2025-06-13 07:34:44,341 - print_capture - INFO -     # --- LINE 1166 --- 


2025-06-13 07:34:44,341 - print_capture - INFO - 


2025-06-13 07:34:44,341 - print_capture - INFO - 
    zero_pos: bool,
    zero_pos: bool,
2025-06-13 07:34:44,341 - print_capture - INFO -     zero_pos: bool,
    zero_pos: bool,
    zero_pos: bool,
2025-06-13 07:34:44,341 - print_capture - INFO -     zero_pos: bool,


2025-06-13 07:34:44,341 - print_capture - INFO - 


2025-06-13 07:34:44,341 - print_capture - INFO - 
    # --- LINE 1167 --- 
    # --- LINE 1167 --- 
2025-06-13 07:34:44,341 - print_capture - INFO -     # --- LINE 1167 --- 
    # --- LINE 1167 --- 
    # --- LINE 1167 --- 
2025-06-13 07:34:44,341 - print_capture - INFO -     # --- LINE 1167 --- 


2025-06-13 07:34:44,341 - print_capture - INFO - 


2025-06-13 07:34:44,341 - print_capture - INFO - 
    y: np.ndarray,
    y: np.ndarray,
2025-06-13 07:34:44,341 - print_capture - INFO -     y: np.ndarray,
    y: np.ndarray,
    y: np.ndarray,
2025-06-13 07:34:44,341 - print_capture - INFO -     y: np.ndarray,


2025-06-13 07:34:44,341 - print_capture - INFO - 


2025-06-13 07:34:44,341 - print_capture - INFO - 
# --- LINE 1168 --- 
# --- LINE 1168 --- 
2025-06-13 07:34:44,341 - print_capture - INFO - # --- LINE 1168 --- 
# --- LINE 1168 --- 
# --- LINE 1168 --- 
2025-06-13 07:34:44,341 - print_capture - INFO - # --- LINE 1168 --- 


2025-06-13 07:34:44,341 - print_capture - INFO - 


2025-06-13 07:34:44,341 - print_capture - INFO - 
) -> None:  # pragma: no cover
) -> None:  # pragma: no cover
2025-06-13 07:34:44,341 - print_capture - INFO - ) -> None:  # pragma: no cover
) -> None:  # pragma: no cover
) -> None:  # pragma: no cover
2025-06-13 07:34:44,341 - print_capture - INFO - ) -> None:  # pragma: no cover


2025-06-13 07:34:44,341 - print_capture - INFO - 


2025-06-13 07:34:44,342 - print_capture - INFO - 
    # --- LINE 1169 --- 
    # --- LINE 1169 --- 
2025-06-13 07:34:44,342 - print_capture - INFO -     # --- LINE 1169 --- 
    # --- LINE 1169 --- 
    # --- LINE 1169 --- 
2025-06-13 07:34:44,342 - print_capture - INFO -     # --- LINE 1169 --- 


2025-06-13 07:34:44,342 - print_capture - INFO - 


2025-06-13 07:34:44,342 - print_capture - INFO - 
    """Vectorized wrapper for zero crossing stencil"""
    """Vectorized wrapper for zero crossing stencil"""
2025-06-13 07:34:44,342 - print_capture - INFO -     """Vectorized wrapper for zero crossing stencil"""
    """Vectorized wrapper for zero crossing stencil"""
    """Vectorized wrapper for zero crossing stencil"""
2025-06-13 07:34:44,342 - print_capture - INFO -     """Vectorized wrapper for zero crossing stencil"""


2025-06-13 07:34:44,342 - print_capture - INFO - 


2025-06-13 07:34:44,342 - print_capture - INFO - 
    # --- LINE 1170 --- 
    # --- LINE 1170 --- 
2025-06-13 07:34:44,342 - print_capture - INFO -     # --- LINE 1170 --- 
    # --- LINE 1170 --- 
    # --- LINE 1170 --- 
2025-06-13 07:34:44,342 - print_capture - INFO -     # --- LINE 1170 --- 
    #   $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)
    #   $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)
2025-06-13 07:34:44,342 - print_capture - INFO -     #   $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)
    #   $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)
    #   $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)
2025-06-13 07:34:44,342 - print_capture - INFO -     #   $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28abced330>)
    #   $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True), float64, bool) -> array(bool, 1d, A)
    #   $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True), float64, bool) -> array(bool, 1d, A)
2025-06-13 07:34:44,342 - print_capture - INFO -     #   $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True), float64, bool) -> array(bool, 1d, A)
    #   $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True), float64, bool) -> array(bool, 1d, A)
    #   $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True), float64, bool) -> array(bool, 1d, A)
2025-06-13 07:34:44,342 - print_capture - INFO -     #   $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True), float64, bool) -> array(bool, 1d, A)
    #   del zero_pos
    #   del zero_pos
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del zero_pos
    #   del zero_pos
    #   del zero_pos
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del zero_pos
    #   del x
    #   del x
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del x
    #   del threshold
    #   del threshold
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del threshold
    #   del threshold
    #   del threshold
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del threshold
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del $2load_global.0
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del $2load_global.0
    #   $const14.6.1 = const(NoneType, None)  :: none
    #   $const14.6.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,342 - print_capture - INFO -     #   $const14.6.1 = const(NoneType, None)  :: none
    #   $const14.6.1 = const(NoneType, None)  :: none
    #   $const14.6.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,342 - print_capture - INFO -     #   $const14.6.1 = const(NoneType, None)  :: none
    #   $const16.7.1 = const(NoneType, None)  :: none
    #   $const16.7.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,342 - print_capture - INFO -     #   $const16.7.1 = const(NoneType, None)  :: none
    #   $const16.7.1 = const(NoneType, None)  :: none
    #   $const16.7.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,342 - print_capture - INFO -     #   $const16.7.1 = const(NoneType, None)  :: none
    #   $18build_slice.8 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $18build_slice.8 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:44,342 - print_capture - INFO -     #   $18build_slice.8 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $18build_slice.8 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $18build_slice.8 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:44,342 - print_capture - INFO -     #   $18build_slice.8 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:44,342 - print_capture - INFO -     #   $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:44,342 - print_capture - INFO -     #   $18build_slice.9 = call $18build_slice.8($const14.6.1, $const16.7.1, func=$18build_slice.8, args=(Var($const14.6.1, audio.py:1170), Var($const16.7.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   del $const16.7.1
    #   del $const16.7.1
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del $const16.7.1
    #   del $const16.7.1
    #   del $const16.7.1
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del $const16.7.1
    #   del $const14.6.1
    #   del $const14.6.1
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del $const14.6.1
    #   del $const14.6.1
    #   del $const14.6.1
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del $const14.6.1
    #   del $18build_slice.8
    #   del $18build_slice.8
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del $18build_slice.8
    #   del $18build_slice.8
    #   del $18build_slice.8
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del $18build_slice.8
    #   y[slice(None, None, None)] = $10call_function.4
    #   y[slice(None, None, None)] = $10call_function.4
2025-06-13 07:34:44,342 - print_capture - INFO -     #   y[slice(None, None, None)] = $10call_function.4
    #   y[slice(None, None, None)] = $10call_function.4
    #   y[slice(None, None, None)] = $10call_function.4
2025-06-13 07:34:44,342 - print_capture - INFO -     #   y[slice(None, None, None)] = $10call_function.4
    #   del y
    #   del y
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del y
    #   del y
    #   del y
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del y
    #   del $18build_slice.9
    #   del $18build_slice.9
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del $18build_slice.9
    #   del $18build_slice.9
    #   del $18build_slice.9
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del $18build_slice.9
    #   del $10call_function.4
    #   del $10call_function.4
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del $10call_function.4
    #   del $10call_function.4
    #   del $10call_function.4
2025-06-13 07:34:44,342 - print_capture - INFO -     #   del $10call_function.4
    #   $const22.10.1 = const(NoneType, None)  :: none
    #   $const22.10.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,342 - print_capture - INFO -     #   $const22.10.1 = const(NoneType, None)  :: none
    #   $const22.10.1 = const(NoneType, None)  :: none
    #   $const22.10.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,342 - print_capture - INFO -     #   $const22.10.1 = const(NoneType, None)  :: none
    #   $24return_value.11 = cast(value=$const22.10.1)  :: none
    #   $24return_value.11 = cast(value=$const22.10.1)  :: none
2025-06-13 07:34:44,342 - print_capture - INFO -     #   $24return_value.11 = cast(value=$const22.10.1)  :: none
    #   $24return_value.11 = cast(value=$const22.10.1)  :: none
    #   $24return_value.11 = cast(value=$const22.10.1)  :: none
2025-06-13 07:34:44,343 - print_capture - INFO -     #   $24return_value.11 = cast(value=$const22.10.1)  :: none
    #   del $const22.10.1
    #   del $const22.10.1
2025-06-13 07:34:44,343 - print_capture - INFO -     #   del $const22.10.1
    #   del $const22.10.1
    #   del $const22.10.1
2025-06-13 07:34:44,343 - print_capture - INFO -     #   del $const22.10.1
    #   return $24return_value.11
    #   return $24return_value.11
2025-06-13 07:34:44,343 - print_capture - INFO -     #   return $24return_value.11
    #   return $24return_value.11
    #   return $24return_value.11
2025-06-13 07:34:44,343 - print_capture - INFO -     #   return $24return_value.11


2025-06-13 07:34:44,343 - print_capture - INFO - 


2025-06-13 07:34:44,343 - print_capture - INFO - 
    y[:] = _zc_stencil(x, threshold, zero_pos)
    y[:] = _zc_stencil(x, threshold, zero_pos)
2025-06-13 07:34:44,343 - print_capture - INFO -     y[:] = _zc_stencil(x, threshold, zero_pos)
    y[:] = _zc_stencil(x, threshold, zero_pos)
    y[:] = _zc_stencil(x, threshold, zero_pos)
2025-06-13 07:34:44,343 - print_capture - INFO -     y[:] = _zc_stencil(x, threshold, zero_pos)


2025-06-13 07:34:44,343 - print_capture - INFO - 


2025-06-13 07:34:44,343 - print_capture - INFO - 
label 0:
label 0:
2025-06-13 07:34:44,576 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:44,576 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,576 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,576 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:34:44,577 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:34:44,577 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:34:44,577 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:34:44,577 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 07:34:44,577 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 07:34:44,577 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 07:34:44,577 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 07:34:44,577 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 07:34:44,577 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 07:34:44,577 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 07:34:44,577 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 07:34:44,577 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 07:34:44,577 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 07:34:44,577 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 07:34:44,577 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 07:34:44,577 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 07:34:44,577 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 07:34:44,577 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 07:34:44,577 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 07:34:44,577 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 07:34:44,577 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 07:34:44,577 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 07:34:44,577 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 07:34:44,577 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 07:34:44,577 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 07:34:44,577 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
label 0:
label 0:
2025-06-13 07:34:44,578 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:44,578 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,578 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,578 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:34:44,578 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:34:44,578 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:34:44,578 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:34:44,578 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 07:34:44,578 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 07:34:44,578 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 07:34:44,578 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 07:34:44,578 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 07:34:44,578 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 07:34:44,578 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 07:34:44,578 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 07:34:44,578 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 07:34:44,578 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 07:34:44,578 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 07:34:44,578 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 07:34:44,578 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 07:34:44,578 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 07:34:44,578 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 07:34:44,578 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 07:34:44,578 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 07:34:44,578 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 07:34:44,578 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 07:34:44,578 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 07:34:44,578 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 07:34:44,578 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 07:34:44,578 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
label 0:
label 0:
2025-06-13 07:34:44,580 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:44,580 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,580 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,580 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:44,580 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:44,580 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
2025-06-13 07:34:44,580 - print_capture - INFO -     $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
2025-06-13 07:34:44,580 - print_capture - INFO -     $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:44,580 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:44,580 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:44,580 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:44,580 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:44,580 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:44,580 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:44,580 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:44,580 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:44,580 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:44,580 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:44,580 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:44,580 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:44,580 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:44,580 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:44,580 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:44,580 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:44,581 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:44,581 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
label 0:
label 0:
2025-06-13 07:34:44,591 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:44,591 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,591 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,591 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:44,591 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:44,591 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:44,591 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:44,591 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:44,591 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:44,591 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:44,591 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:44,591 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:44,591 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:44,591 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:44,591 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:44,591 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:44,591 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:44,591 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:44,591 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:44,591 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:44,591 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:44,591 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:44,591 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:44,591 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:44,592 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:44,592 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:44,592 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:44,592 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:44,592 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:44,592 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:44,592 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:44,592 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:44,592 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:44,592 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:44,592 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:44,592 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:44,592 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:44,592 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:44,592 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:44,592 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:44,592 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:44,592 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:44,592 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:44,592 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:44,592 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:44,592 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:44,592 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:44,592 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:44,592 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:44,592 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:44,592 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:44,592 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:44,592 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:44,592 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:44,592 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:44,592 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:44,592 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:44,592 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:44,592 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:44,592 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:44,592 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:44,592 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:44,592 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:44,592 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:44,592 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:44,593 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:44,593 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:44,593 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:44,593 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:44,593 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:44,593 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:44,593 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:44,593 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:44,593 - print_capture - INFO -     jump 80                                  []
label 80:
label 80:
2025-06-13 07:34:44,593 - print_capture - INFO - label 80:
label 80:
label 80:
2025-06-13 07:34:44,593 - print_capture - INFO - label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:44,593 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:44,593 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:44,593 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:44,593 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:44,593 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:44,593 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:44,593 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:44,593 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:44,593 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:44,593 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
label 82:
2025-06-13 07:34:44,593 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 07:34:44,593 - print_capture - INFO - label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:44,593 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:44,593 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:44,593 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:44,593 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:44,593 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:44,593 - print_capture - INFO -     jump 80                                  []
label 90:
label 90:
2025-06-13 07:34:44,593 - print_capture - INFO - label 90:
label 90:
label 90:
2025-06-13 07:34:44,593 - print_capture - INFO - label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:44,593 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:44,593 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:44,593 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:44,593 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:44,767 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:44,767 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# --- LINE 1035 --- 
# --- LINE 1035 --- 
2025-06-13 07:34:44,767 - print_capture - INFO - # --- LINE 1035 --- 
# --- LINE 1035 --- 
# --- LINE 1035 --- 
2025-06-13 07:34:44,767 - print_capture - INFO - # --- LINE 1035 --- 
# label 0
# label 0
2025-06-13 07:34:44,767 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:44,767 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: array(int16, 1d, A)
#   x = arg(0, name=x)  :: array(int16, 1d, A)
2025-06-13 07:34:44,767 - print_capture - INFO - #   x = arg(0, name=x)  :: array(int16, 1d, A)
#   x = arg(0, name=x)  :: array(int16, 1d, A)
#   x = arg(0, name=x)  :: array(int16, 1d, A)
2025-06-13 07:34:44,767 - print_capture - INFO - #   x = arg(0, name=x)  :: array(int16, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:44,767 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:44,767 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)


2025-06-13 07:34:44,767 - print_capture - INFO - 


2025-06-13 07:34:44,767 - print_capture - INFO - 
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:44,767 - print_capture - INFO - @numba.guvectorize(
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:44,767 - print_capture - INFO - @numba.guvectorize(


2025-06-13 07:34:44,767 - print_capture - INFO - 


2025-06-13 07:34:44,767 - print_capture - INFO - 
    # --- LINE 1036 --- 
    # --- LINE 1036 --- 
2025-06-13 07:34:44,767 - print_capture - INFO -     # --- LINE 1036 --- 
    # --- LINE 1036 --- 
    # --- LINE 1036 --- 
2025-06-13 07:34:44,767 - print_capture - INFO -     # --- LINE 1036 --- 


2025-06-13 07:34:44,767 - print_capture - INFO - 


2025-06-13 07:34:44,768 - print_capture - INFO - 
    [
    [
2025-06-13 07:34:44,768 - print_capture - INFO -     [
    [
    [
2025-06-13 07:34:44,768 - print_capture - INFO -     [


2025-06-13 07:34:44,768 - print_capture - INFO - 


2025-06-13 07:34:44,768 - print_capture - INFO - 
        # --- LINE 1037 --- 
        # --- LINE 1037 --- 
2025-06-13 07:34:44,768 - print_capture - INFO -         # --- LINE 1037 --- 
        # --- LINE 1037 --- 
        # --- LINE 1037 --- 
2025-06-13 07:34:44,768 - print_capture - INFO -         # --- LINE 1037 --- 


2025-06-13 07:34:44,768 - print_capture - INFO - 


2025-06-13 07:34:44,768 - print_capture - INFO - 
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:44,768 - print_capture - INFO -         "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:44,768 - print_capture - INFO -         "void(int16[:], bool_[:])",


2025-06-13 07:34:44,768 - print_capture - INFO - 


2025-06-13 07:34:44,768 - print_capture - INFO - 
        # --- LINE 1038 --- 
        # --- LINE 1038 --- 
2025-06-13 07:34:44,768 - print_capture - INFO -         # --- LINE 1038 --- 
        # --- LINE 1038 --- 
        # --- LINE 1038 --- 
2025-06-13 07:34:44,768 - print_capture - INFO -         # --- LINE 1038 --- 


2025-06-13 07:34:44,768 - print_capture - INFO - 


2025-06-13 07:34:44,768 - print_capture - INFO - 
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:44,768 - print_capture - INFO -         "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:44,768 - print_capture - INFO -         "void(int32[:], bool_[:])",


2025-06-13 07:34:44,768 - print_capture - INFO - 


2025-06-13 07:34:44,768 - print_capture - INFO - 
        # --- LINE 1039 --- 
        # --- LINE 1039 --- 
2025-06-13 07:34:44,768 - print_capture - INFO -         # --- LINE 1039 --- 
        # --- LINE 1039 --- 
        # --- LINE 1039 --- 
2025-06-13 07:34:44,768 - print_capture - INFO -         # --- LINE 1039 --- 


2025-06-13 07:34:44,768 - print_capture - INFO - 


2025-06-13 07:34:44,768 - print_capture - INFO - 
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:44,768 - print_capture - INFO -         "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:44,768 - print_capture - INFO -         "void(int64[:], bool_[:])",


2025-06-13 07:34:44,768 - print_capture - INFO - 


2025-06-13 07:34:44,768 - print_capture - INFO - 
        # --- LINE 1040 --- 
        # --- LINE 1040 --- 
2025-06-13 07:34:44,768 - print_capture - INFO -         # --- LINE 1040 --- 
        # --- LINE 1040 --- 
        # --- LINE 1040 --- 
2025-06-13 07:34:44,768 - print_capture - INFO -         # --- LINE 1040 --- 


2025-06-13 07:34:44,768 - print_capture - INFO - 


2025-06-13 07:34:44,768 - print_capture - INFO - 
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:44,768 - print_capture - INFO -         "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:44,768 - print_capture - INFO -         "void(float32[:], bool_[:])",


2025-06-13 07:34:44,768 - print_capture - INFO - 


2025-06-13 07:34:44,768 - print_capture - INFO - 
        # --- LINE 1041 --- 
        # --- LINE 1041 --- 
2025-06-13 07:34:44,768 - print_capture - INFO -         # --- LINE 1041 --- 
        # --- LINE 1041 --- 
        # --- LINE 1041 --- 
2025-06-13 07:34:44,768 - print_capture - INFO -         # --- LINE 1041 --- 


2025-06-13 07:34:44,768 - print_capture - INFO - 


2025-06-13 07:34:44,768 - print_capture - INFO - 
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:44,768 - print_capture - INFO -         "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:44,768 - print_capture - INFO -         "void(float64[:], bool_[:])",


2025-06-13 07:34:44,768 - print_capture - INFO - 


2025-06-13 07:34:44,768 - print_capture - INFO - 
    # --- LINE 1042 --- 
    # --- LINE 1042 --- 
2025-06-13 07:34:44,768 - print_capture - INFO -     # --- LINE 1042 --- 
    # --- LINE 1042 --- 
    # --- LINE 1042 --- 
2025-06-13 07:34:44,768 - print_capture - INFO -     # --- LINE 1042 --- 


2025-06-13 07:34:44,768 - print_capture - INFO - 


2025-06-13 07:34:44,769 - print_capture - INFO - 
    ],
    ],
2025-06-13 07:34:44,769 - print_capture - INFO -     ],
    ],
    ],
2025-06-13 07:34:44,769 - print_capture - INFO -     ],


2025-06-13 07:34:44,769 - print_capture - INFO - 


2025-06-13 07:34:44,769 - print_capture - INFO - 
    # --- LINE 1043 --- 
    # --- LINE 1043 --- 
2025-06-13 07:34:44,769 - print_capture - INFO -     # --- LINE 1043 --- 
    # --- LINE 1043 --- 
    # --- LINE 1043 --- 
2025-06-13 07:34:44,769 - print_capture - INFO -     # --- LINE 1043 --- 


2025-06-13 07:34:44,769 - print_capture - INFO - 


2025-06-13 07:34:44,769 - print_capture - INFO - 
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:44,769 - print_capture - INFO -     "(n)->(n)",
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:44,769 - print_capture - INFO -     "(n)->(n)",


2025-06-13 07:34:44,769 - print_capture - INFO - 


2025-06-13 07:34:44,769 - print_capture - INFO - 
    # --- LINE 1044 --- 
    # --- LINE 1044 --- 
2025-06-13 07:34:44,769 - print_capture - INFO -     # --- LINE 1044 --- 
    # --- LINE 1044 --- 
    # --- LINE 1044 --- 
2025-06-13 07:34:44,769 - print_capture - INFO -     # --- LINE 1044 --- 


2025-06-13 07:34:44,769 - print_capture - INFO - 


2025-06-13 07:34:44,769 - print_capture - INFO - 
    cache=True,
    cache=True,
2025-06-13 07:34:44,769 - print_capture - INFO -     cache=True,
    cache=True,
    cache=True,
2025-06-13 07:34:44,769 - print_capture - INFO -     cache=True,


2025-06-13 07:34:44,769 - print_capture - INFO - 


2025-06-13 07:34:44,769 - print_capture - INFO - 
    # --- LINE 1045 --- 
    # --- LINE 1045 --- 
2025-06-13 07:34:44,769 - print_capture - INFO -     # --- LINE 1045 --- 
    # --- LINE 1045 --- 
    # --- LINE 1045 --- 
2025-06-13 07:34:44,769 - print_capture - INFO -     # --- LINE 1045 --- 


2025-06-13 07:34:44,769 - print_capture - INFO - 


2025-06-13 07:34:44,769 - print_capture - INFO - 
    nopython=True,
    nopython=True,
2025-06-13 07:34:44,769 - print_capture - INFO -     nopython=True,
    nopython=True,
    nopython=True,
2025-06-13 07:34:44,769 - print_capture - INFO -     nopython=True,


2025-06-13 07:34:44,769 - print_capture - INFO - 


2025-06-13 07:34:44,769 - print_capture - INFO - 
# --- LINE 1046 --- 
# --- LINE 1046 --- 
2025-06-13 07:34:44,769 - print_capture - INFO - # --- LINE 1046 --- 
# --- LINE 1046 --- 
# --- LINE 1046 --- 
2025-06-13 07:34:44,769 - print_capture - INFO - # --- LINE 1046 --- 


2025-06-13 07:34:44,769 - print_capture - INFO - 


2025-06-13 07:34:44,769 - print_capture - INFO - 
)
)
2025-06-13 07:34:44,769 - print_capture - INFO - )
)
)
2025-06-13 07:34:44,769 - print_capture - INFO - )


2025-06-13 07:34:44,769 - print_capture - INFO - 


2025-06-13 07:34:44,769 - print_capture - INFO - 
# --- LINE 1047 --- 
# --- LINE 1047 --- 
2025-06-13 07:34:44,769 - print_capture - INFO - # --- LINE 1047 --- 
# --- LINE 1047 --- 
# --- LINE 1047 --- 
2025-06-13 07:34:44,769 - print_capture - INFO - # --- LINE 1047 --- 


2025-06-13 07:34:44,769 - print_capture - INFO - 


2025-06-13 07:34:44,769 - print_capture - INFO - 
def _localmax(x, y):  # pragma: no cover
def _localmax(x, y):  # pragma: no cover
2025-06-13 07:34:44,769 - print_capture - INFO - def _localmax(x, y):  # pragma: no cover
def _localmax(x, y):  # pragma: no cover
def _localmax(x, y):  # pragma: no cover
2025-06-13 07:34:44,769 - print_capture - INFO - def _localmax(x, y):  # pragma: no cover


2025-06-13 07:34:44,769 - print_capture - INFO - 


2025-06-13 07:34:44,769 - print_capture - INFO - 
    # --- LINE 1048 --- 
    # --- LINE 1048 --- 
2025-06-13 07:34:44,769 - print_capture - INFO -     # --- LINE 1048 --- 
    # --- LINE 1048 --- 
    # --- LINE 1048 --- 
2025-06-13 07:34:44,769 - print_capture - INFO -     # --- LINE 1048 --- 


2025-06-13 07:34:44,769 - print_capture - INFO - 


2025-06-13 07:34:44,769 - print_capture - INFO - 
    """Vectorized wrapper for the localmax stencil"""
    """Vectorized wrapper for the localmax stencil"""
2025-06-13 07:34:44,770 - print_capture - INFO -     """Vectorized wrapper for the localmax stencil"""
    """Vectorized wrapper for the localmax stencil"""
    """Vectorized wrapper for the localmax stencil"""
2025-06-13 07:34:44,770 - print_capture - INFO -     """Vectorized wrapper for the localmax stencil"""


2025-06-13 07:34:44,770 - print_capture - INFO - 


2025-06-13 07:34:44,770 - print_capture - INFO - 
    # --- LINE 1049 --- 
    # --- LINE 1049 --- 
2025-06-13 07:34:44,770 - print_capture - INFO -     # --- LINE 1049 --- 
    # --- LINE 1049 --- 
    # --- LINE 1049 --- 
2025-06-13 07:34:44,770 - print_capture - INFO -     # --- LINE 1049 --- 
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
2025-06-13 07:34:44,770 - print_capture - INFO -     #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
2025-06-13 07:34:44,770 - print_capture - INFO -     #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int16, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int16, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:44,770 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int16, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int16, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int16, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:44,770 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int16, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   del x
    #   del x
2025-06-13 07:34:44,770 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:44,770 - print_capture - INFO -     #   del x
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:44,770 - print_capture - INFO -     #   del $2load_global.0
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:44,770 - print_capture - INFO -     #   del $2load_global.0
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,770 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,770 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,770 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,770 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:44,770 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:44,770 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:44,770 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:44,770 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:44,770 - print_capture - INFO -     #   del $const12.5.1
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:44,770 - print_capture - INFO -     #   del $const12.5.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:44,770 - print_capture - INFO -     #   del $const10.4.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:44,770 - print_capture - INFO -     #   del $const10.4.1
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:44,770 - print_capture - INFO -     #   del $14build_slice.6
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:44,770 - print_capture - INFO -     #   del $14build_slice.6
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:44,770 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:44,770 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   del y
    #   del y
2025-06-13 07:34:44,770 - print_capture - INFO -     #   del y
    #   del y
    #   del y
2025-06-13 07:34:44,770 - print_capture - INFO -     #   del y
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:44,770 - print_capture - INFO -     #   del $6call_function.2
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:44,770 - print_capture - INFO -     #   del $6call_function.2
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:44,770 - print_capture - INFO -     #   del $14build_slice.7
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:44,770 - print_capture - INFO -     #   del $14build_slice.7
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,770 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,770 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:44,770 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:44,770 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:44,770 - print_capture - INFO -     #   del $const18.8.1
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:44,770 - print_capture - INFO -     #   del $const18.8.1
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:44,770 - print_capture - INFO -     #   return $20return_value.9
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:44,770 - print_capture - INFO -     #   return $20return_value.9


2025-06-13 07:34:44,770 - print_capture - INFO - 


2025-06-13 07:34:44,770 - print_capture - INFO - 
    y[:] = _localmax_sten(x)
    y[:] = _localmax_sten(x)
2025-06-13 07:34:44,770 - print_capture - INFO -     y[:] = _localmax_sten(x)
    y[:] = _localmax_sten(x)
    y[:] = _localmax_sten(x)
2025-06-13 07:34:44,770 - print_capture - INFO -     y[:] = _localmax_sten(x)


2025-06-13 07:34:44,771 - print_capture - INFO - 


2025-06-13 07:34:44,771 - print_capture - INFO - 
label 0:
label 0:
2025-06-13 07:34:44,773 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:44,773 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,773 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,773 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:44,773 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:44,773 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
2025-06-13 07:34:44,773 - print_capture - INFO -     $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
2025-06-13 07:34:44,773 - print_capture - INFO -     $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:44,773 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:44,773 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:44,773 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:44,773 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:44,773 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:44,773 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:44,773 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:44,773 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:44,773 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:44,773 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:44,773 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:44,773 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:44,773 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:44,773 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:44,773 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:44,773 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:44,773 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:44,773 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
label 0:
label 0:
2025-06-13 07:34:44,782 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:44,783 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,783 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,783 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:44,783 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:44,783 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:44,783 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:44,783 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:44,783 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:44,783 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:44,783 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:44,783 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:44,783 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:44,783 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:44,783 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:44,783 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:44,783 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:44,783 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:44,783 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:44,783 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:44,783 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:44,783 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:44,783 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:44,783 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:44,783 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:44,783 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:44,783 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:44,783 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:44,783 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:44,783 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:44,783 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:44,783 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:44,783 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:44,783 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:44,783 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:44,783 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:44,783 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:44,783 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:44,784 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:44,784 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:44,784 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:44,784 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:44,784 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:44,784 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:44,784 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:44,784 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:44,784 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:44,784 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:44,784 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:44,784 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:44,784 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:44,784 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:44,784 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:44,784 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:44,784 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:44,784 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:44,784 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:44,784 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:44,784 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:44,784 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:44,784 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:44,784 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:44,784 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:44,784 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:44,784 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:44,784 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:44,784 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:44,784 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:44,784 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:44,784 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:44,784 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:44,784 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:44,784 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:44,784 - print_capture - INFO -     jump 80                                  []
label 80:
label 80:
2025-06-13 07:34:44,784 - print_capture - INFO - label 80:
label 80:
label 80:
2025-06-13 07:34:44,784 - print_capture - INFO - label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:44,784 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:44,784 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:44,785 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:44,785 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:44,785 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:44,785 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:44,785 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:44,785 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:44,785 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:44,785 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
label 82:
2025-06-13 07:34:44,785 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 07:34:44,785 - print_capture - INFO - label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:44,785 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:44,785 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:44,785 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:44,785 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:44,785 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:44,785 - print_capture - INFO -     jump 80                                  []
label 90:
label 90:
2025-06-13 07:34:44,785 - print_capture - INFO - label 90:
label 90:
label 90:
2025-06-13 07:34:44,785 - print_capture - INFO - label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:44,785 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:44,785 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:44,785 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:44,785 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:44,958 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:44,958 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# --- LINE 1035 --- 
# --- LINE 1035 --- 
2025-06-13 07:34:44,958 - print_capture - INFO - # --- LINE 1035 --- 
# --- LINE 1035 --- 
# --- LINE 1035 --- 
2025-06-13 07:34:44,958 - print_capture - INFO - # --- LINE 1035 --- 
# label 0
# label 0
2025-06-13 07:34:44,958 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:44,958 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: array(int32, 1d, A)
#   x = arg(0, name=x)  :: array(int32, 1d, A)
2025-06-13 07:34:44,958 - print_capture - INFO - #   x = arg(0, name=x)  :: array(int32, 1d, A)
#   x = arg(0, name=x)  :: array(int32, 1d, A)
#   x = arg(0, name=x)  :: array(int32, 1d, A)
2025-06-13 07:34:44,958 - print_capture - INFO - #   x = arg(0, name=x)  :: array(int32, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:44,958 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:44,958 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)


2025-06-13 07:34:44,958 - print_capture - INFO - 


2025-06-13 07:34:44,958 - print_capture - INFO - 
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:44,958 - print_capture - INFO - @numba.guvectorize(
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:44,958 - print_capture - INFO - @numba.guvectorize(


2025-06-13 07:34:44,958 - print_capture - INFO - 


2025-06-13 07:34:44,958 - print_capture - INFO - 
    # --- LINE 1036 --- 
    # --- LINE 1036 --- 
2025-06-13 07:34:44,958 - print_capture - INFO -     # --- LINE 1036 --- 
    # --- LINE 1036 --- 
    # --- LINE 1036 --- 
2025-06-13 07:34:44,958 - print_capture - INFO -     # --- LINE 1036 --- 


2025-06-13 07:34:44,958 - print_capture - INFO - 


2025-06-13 07:34:44,958 - print_capture - INFO - 
    [
    [
2025-06-13 07:34:44,958 - print_capture - INFO -     [
    [
    [
2025-06-13 07:34:44,958 - print_capture - INFO -     [


2025-06-13 07:34:44,958 - print_capture - INFO - 


2025-06-13 07:34:44,958 - print_capture - INFO - 
        # --- LINE 1037 --- 
        # --- LINE 1037 --- 
2025-06-13 07:34:44,958 - print_capture - INFO -         # --- LINE 1037 --- 
        # --- LINE 1037 --- 
        # --- LINE 1037 --- 
2025-06-13 07:34:44,958 - print_capture - INFO -         # --- LINE 1037 --- 


2025-06-13 07:34:44,958 - print_capture - INFO - 


2025-06-13 07:34:44,958 - print_capture - INFO - 
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:44,958 - print_capture - INFO -         "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:44,958 - print_capture - INFO -         "void(int16[:], bool_[:])",


2025-06-13 07:34:44,958 - print_capture - INFO - 


2025-06-13 07:34:44,958 - print_capture - INFO - 
        # --- LINE 1038 --- 
        # --- LINE 1038 --- 
2025-06-13 07:34:44,958 - print_capture - INFO -         # --- LINE 1038 --- 
        # --- LINE 1038 --- 
        # --- LINE 1038 --- 
2025-06-13 07:34:44,958 - print_capture - INFO -         # --- LINE 1038 --- 


2025-06-13 07:34:44,958 - print_capture - INFO - 


2025-06-13 07:34:44,958 - print_capture - INFO - 
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:44,958 - print_capture - INFO -         "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:44,958 - print_capture - INFO -         "void(int32[:], bool_[:])",


2025-06-13 07:34:44,959 - print_capture - INFO - 


2025-06-13 07:34:44,959 - print_capture - INFO - 
        # --- LINE 1039 --- 
        # --- LINE 1039 --- 
2025-06-13 07:34:44,959 - print_capture - INFO -         # --- LINE 1039 --- 
        # --- LINE 1039 --- 
        # --- LINE 1039 --- 
2025-06-13 07:34:44,959 - print_capture - INFO -         # --- LINE 1039 --- 


2025-06-13 07:34:44,959 - print_capture - INFO - 


2025-06-13 07:34:44,959 - print_capture - INFO - 
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:44,959 - print_capture - INFO -         "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:44,959 - print_capture - INFO -         "void(int64[:], bool_[:])",


2025-06-13 07:34:44,959 - print_capture - INFO - 


2025-06-13 07:34:44,959 - print_capture - INFO - 
        # --- LINE 1040 --- 
        # --- LINE 1040 --- 
2025-06-13 07:34:44,959 - print_capture - INFO -         # --- LINE 1040 --- 
        # --- LINE 1040 --- 
        # --- LINE 1040 --- 
2025-06-13 07:34:44,959 - print_capture - INFO -         # --- LINE 1040 --- 


2025-06-13 07:34:44,959 - print_capture - INFO - 


2025-06-13 07:34:44,959 - print_capture - INFO - 
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:44,959 - print_capture - INFO -         "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:44,959 - print_capture - INFO -         "void(float32[:], bool_[:])",


2025-06-13 07:34:44,959 - print_capture - INFO - 


2025-06-13 07:34:44,959 - print_capture - INFO - 
        # --- LINE 1041 --- 
        # --- LINE 1041 --- 
2025-06-13 07:34:44,959 - print_capture - INFO -         # --- LINE 1041 --- 
        # --- LINE 1041 --- 
        # --- LINE 1041 --- 
2025-06-13 07:34:44,959 - print_capture - INFO -         # --- LINE 1041 --- 


2025-06-13 07:34:44,959 - print_capture - INFO - 


2025-06-13 07:34:44,959 - print_capture - INFO - 
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:44,959 - print_capture - INFO -         "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:44,959 - print_capture - INFO -         "void(float64[:], bool_[:])",


2025-06-13 07:34:44,959 - print_capture - INFO - 


2025-06-13 07:34:44,959 - print_capture - INFO - 
    # --- LINE 1042 --- 
    # --- LINE 1042 --- 
2025-06-13 07:34:44,959 - print_capture - INFO -     # --- LINE 1042 --- 
    # --- LINE 1042 --- 
    # --- LINE 1042 --- 
2025-06-13 07:34:44,959 - print_capture - INFO -     # --- LINE 1042 --- 


2025-06-13 07:34:44,959 - print_capture - INFO - 


2025-06-13 07:34:44,959 - print_capture - INFO - 
    ],
    ],
2025-06-13 07:34:44,959 - print_capture - INFO -     ],
    ],
    ],
2025-06-13 07:34:44,959 - print_capture - INFO -     ],


2025-06-13 07:34:44,959 - print_capture - INFO - 


2025-06-13 07:34:44,959 - print_capture - INFO - 
    # --- LINE 1043 --- 
    # --- LINE 1043 --- 
2025-06-13 07:34:44,959 - print_capture - INFO -     # --- LINE 1043 --- 
    # --- LINE 1043 --- 
    # --- LINE 1043 --- 
2025-06-13 07:34:44,959 - print_capture - INFO -     # --- LINE 1043 --- 


2025-06-13 07:34:44,959 - print_capture - INFO - 


2025-06-13 07:34:44,959 - print_capture - INFO - 
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:44,959 - print_capture - INFO -     "(n)->(n)",
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:44,959 - print_capture - INFO -     "(n)->(n)",


2025-06-13 07:34:44,959 - print_capture - INFO - 


2025-06-13 07:34:44,959 - print_capture - INFO - 
    # --- LINE 1044 --- 
    # --- LINE 1044 --- 
2025-06-13 07:34:44,959 - print_capture - INFO -     # --- LINE 1044 --- 
    # --- LINE 1044 --- 
    # --- LINE 1044 --- 
2025-06-13 07:34:44,959 - print_capture - INFO -     # --- LINE 1044 --- 


2025-06-13 07:34:44,959 - print_capture - INFO - 


2025-06-13 07:34:44,959 - print_capture - INFO - 
    cache=True,
    cache=True,
2025-06-13 07:34:44,959 - print_capture - INFO -     cache=True,
    cache=True,
    cache=True,
2025-06-13 07:34:44,959 - print_capture - INFO -     cache=True,


2025-06-13 07:34:44,959 - print_capture - INFO - 


2025-06-13 07:34:44,960 - print_capture - INFO - 
    # --- LINE 1045 --- 
    # --- LINE 1045 --- 
2025-06-13 07:34:44,960 - print_capture - INFO -     # --- LINE 1045 --- 
    # --- LINE 1045 --- 
    # --- LINE 1045 --- 
2025-06-13 07:34:44,960 - print_capture - INFO -     # --- LINE 1045 --- 


2025-06-13 07:34:44,960 - print_capture - INFO - 


2025-06-13 07:34:44,960 - print_capture - INFO - 
    nopython=True,
    nopython=True,
2025-06-13 07:34:44,960 - print_capture - INFO -     nopython=True,
    nopython=True,
    nopython=True,
2025-06-13 07:34:44,960 - print_capture - INFO -     nopython=True,


2025-06-13 07:34:44,960 - print_capture - INFO - 


2025-06-13 07:34:44,960 - print_capture - INFO - 
# --- LINE 1046 --- 
# --- LINE 1046 --- 
2025-06-13 07:34:44,960 - print_capture - INFO - # --- LINE 1046 --- 
# --- LINE 1046 --- 
# --- LINE 1046 --- 
2025-06-13 07:34:44,960 - print_capture - INFO - # --- LINE 1046 --- 


2025-06-13 07:34:44,960 - print_capture - INFO - 


2025-06-13 07:34:44,960 - print_capture - INFO - 
)
)
2025-06-13 07:34:44,960 - print_capture - INFO - )
)
)
2025-06-13 07:34:44,960 - print_capture - INFO - )


2025-06-13 07:34:44,960 - print_capture - INFO - 


2025-06-13 07:34:44,960 - print_capture - INFO - 
# --- LINE 1047 --- 
# --- LINE 1047 --- 
2025-06-13 07:34:44,960 - print_capture - INFO - # --- LINE 1047 --- 
# --- LINE 1047 --- 
# --- LINE 1047 --- 
2025-06-13 07:34:44,960 - print_capture - INFO - # --- LINE 1047 --- 


2025-06-13 07:34:44,960 - print_capture - INFO - 


2025-06-13 07:34:44,960 - print_capture - INFO - 
def _localmax(x, y):  # pragma: no cover
def _localmax(x, y):  # pragma: no cover
2025-06-13 07:34:44,960 - print_capture - INFO - def _localmax(x, y):  # pragma: no cover
def _localmax(x, y):  # pragma: no cover
def _localmax(x, y):  # pragma: no cover
2025-06-13 07:34:44,960 - print_capture - INFO - def _localmax(x, y):  # pragma: no cover


2025-06-13 07:34:44,960 - print_capture - INFO - 


2025-06-13 07:34:44,960 - print_capture - INFO - 
    # --- LINE 1048 --- 
    # --- LINE 1048 --- 
2025-06-13 07:34:44,960 - print_capture - INFO -     # --- LINE 1048 --- 
    # --- LINE 1048 --- 
    # --- LINE 1048 --- 
2025-06-13 07:34:44,960 - print_capture - INFO -     # --- LINE 1048 --- 


2025-06-13 07:34:44,960 - print_capture - INFO - 


2025-06-13 07:34:44,960 - print_capture - INFO - 
    """Vectorized wrapper for the localmax stencil"""
    """Vectorized wrapper for the localmax stencil"""
2025-06-13 07:34:44,960 - print_capture - INFO -     """Vectorized wrapper for the localmax stencil"""
    """Vectorized wrapper for the localmax stencil"""
    """Vectorized wrapper for the localmax stencil"""
2025-06-13 07:34:44,960 - print_capture - INFO -     """Vectorized wrapper for the localmax stencil"""


2025-06-13 07:34:44,960 - print_capture - INFO - 


2025-06-13 07:34:44,960 - print_capture - INFO - 
    # --- LINE 1049 --- 
    # --- LINE 1049 --- 
2025-06-13 07:34:44,960 - print_capture - INFO -     # --- LINE 1049 --- 
    # --- LINE 1049 --- 
    # --- LINE 1049 --- 
2025-06-13 07:34:44,960 - print_capture - INFO -     # --- LINE 1049 --- 
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
2025-06-13 07:34:44,960 - print_capture - INFO -     #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
2025-06-13 07:34:44,960 - print_capture - INFO -     #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:44,960 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:44,960 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   del x
    #   del x
2025-06-13 07:34:44,960 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:44,960 - print_capture - INFO -     #   del x
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:44,960 - print_capture - INFO -     #   del $2load_global.0
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:44,960 - print_capture - INFO -     #   del $2load_global.0
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,960 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,960 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,960 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,960 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:44,960 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:44,961 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:44,961 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:44,961 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:44,961 - print_capture - INFO -     #   del $const12.5.1
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:44,961 - print_capture - INFO -     #   del $const12.5.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:44,961 - print_capture - INFO -     #   del $const10.4.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:44,961 - print_capture - INFO -     #   del $const10.4.1
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:44,961 - print_capture - INFO -     #   del $14build_slice.6
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:44,961 - print_capture - INFO -     #   del $14build_slice.6
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:44,961 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:44,961 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   del y
    #   del y
2025-06-13 07:34:44,961 - print_capture - INFO -     #   del y
    #   del y
    #   del y
2025-06-13 07:34:44,961 - print_capture - INFO -     #   del y
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:44,961 - print_capture - INFO -     #   del $6call_function.2
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:44,961 - print_capture - INFO -     #   del $6call_function.2
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:44,961 - print_capture - INFO -     #   del $14build_slice.7
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:44,961 - print_capture - INFO -     #   del $14build_slice.7
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,961 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:44,961 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:44,961 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:44,961 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:44,961 - print_capture - INFO -     #   del $const18.8.1
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:44,961 - print_capture - INFO -     #   del $const18.8.1
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:44,961 - print_capture - INFO -     #   return $20return_value.9
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:44,961 - print_capture - INFO -     #   return $20return_value.9


2025-06-13 07:34:44,961 - print_capture - INFO - 


2025-06-13 07:34:44,961 - print_capture - INFO - 
    y[:] = _localmax_sten(x)
    y[:] = _localmax_sten(x)
2025-06-13 07:34:44,961 - print_capture - INFO -     y[:] = _localmax_sten(x)
    y[:] = _localmax_sten(x)
    y[:] = _localmax_sten(x)
2025-06-13 07:34:44,961 - print_capture - INFO -     y[:] = _localmax_sten(x)


2025-06-13 07:34:44,961 - print_capture - INFO - 


2025-06-13 07:34:44,961 - print_capture - INFO - 
label 0:
label 0:
2025-06-13 07:34:44,964 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:44,964 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,964 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,964 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:44,964 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:44,964 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
2025-06-13 07:34:44,964 - print_capture - INFO -     $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
2025-06-13 07:34:44,964 - print_capture - INFO -     $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:44,964 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:44,964 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:44,964 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:44,964 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:44,964 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:44,964 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:44,964 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:44,964 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:44,964 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:44,964 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:44,964 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:44,964 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:44,964 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:44,964 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:44,964 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:44,964 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:44,964 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:44,964 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
label 0:
label 0:
2025-06-13 07:34:44,974 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:44,974 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,974 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:44,974 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:44,974 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:44,974 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:44,974 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:44,974 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:44,974 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:44,974 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:44,974 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:44,974 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:44,974 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:44,974 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:44,974 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:44,974 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:44,974 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:44,974 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:44,974 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:44,974 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:44,975 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:44,975 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:44,975 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:44,975 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:44,975 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:44,975 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:44,975 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:44,975 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:44,975 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:44,975 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:44,975 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:44,975 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:44,975 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:44,975 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:44,975 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:44,975 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:44,975 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:44,975 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:44,975 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:44,975 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:44,975 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:44,975 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:44,975 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:44,975 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:44,975 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:44,975 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:44,975 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:44,975 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:44,975 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:44,975 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:44,975 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:44,975 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:44,975 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:44,975 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:44,975 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:44,975 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:44,975 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:44,975 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:44,975 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:44,975 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:44,976 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:44,976 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:44,976 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:44,976 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:44,976 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:44,976 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:44,976 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:44,976 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:44,976 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:44,976 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:44,976 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:44,976 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:44,976 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:44,976 - print_capture - INFO -     jump 80                                  []
label 80:
label 80:
2025-06-13 07:34:44,976 - print_capture - INFO - label 80:
label 80:
label 80:
2025-06-13 07:34:44,976 - print_capture - INFO - label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:44,976 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:44,976 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:44,976 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:44,976 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:44,976 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:44,976 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:44,976 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:44,976 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:44,976 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:44,976 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
label 82:
2025-06-13 07:34:44,976 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 07:34:44,976 - print_capture - INFO - label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:44,976 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:44,976 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:44,976 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:44,976 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:44,976 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:44,976 - print_capture - INFO -     jump 80                                  []
label 90:
label 90:
2025-06-13 07:34:44,976 - print_capture - INFO - label 90:
label 90:
label 90:
2025-06-13 07:34:44,976 - print_capture - INFO - label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:44,976 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:44,976 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:44,976 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:44,976 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:45,150 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:45,150 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# --- LINE 1035 --- 
# --- LINE 1035 --- 
2025-06-13 07:34:45,150 - print_capture - INFO - # --- LINE 1035 --- 
# --- LINE 1035 --- 
# --- LINE 1035 --- 
2025-06-13 07:34:45,150 - print_capture - INFO - # --- LINE 1035 --- 
# label 0
# label 0
2025-06-13 07:34:45,150 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:45,150 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: array(int64, 1d, A)
#   x = arg(0, name=x)  :: array(int64, 1d, A)
2025-06-13 07:34:45,150 - print_capture - INFO - #   x = arg(0, name=x)  :: array(int64, 1d, A)
#   x = arg(0, name=x)  :: array(int64, 1d, A)
#   x = arg(0, name=x)  :: array(int64, 1d, A)
2025-06-13 07:34:45,150 - print_capture - INFO - #   x = arg(0, name=x)  :: array(int64, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:45,150 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:45,150 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)


2025-06-13 07:34:45,150 - print_capture - INFO - 


2025-06-13 07:34:45,150 - print_capture - INFO - 
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:45,150 - print_capture - INFO - @numba.guvectorize(
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:45,150 - print_capture - INFO - @numba.guvectorize(


2025-06-13 07:34:45,150 - print_capture - INFO - 


2025-06-13 07:34:45,150 - print_capture - INFO - 
    # --- LINE 1036 --- 
    # --- LINE 1036 --- 
2025-06-13 07:34:45,150 - print_capture - INFO -     # --- LINE 1036 --- 
    # --- LINE 1036 --- 
    # --- LINE 1036 --- 
2025-06-13 07:34:45,150 - print_capture - INFO -     # --- LINE 1036 --- 


2025-06-13 07:34:45,150 - print_capture - INFO - 


2025-06-13 07:34:45,150 - print_capture - INFO - 
    [
    [
2025-06-13 07:34:45,150 - print_capture - INFO -     [
    [
    [
2025-06-13 07:34:45,150 - print_capture - INFO -     [


2025-06-13 07:34:45,151 - print_capture - INFO - 


2025-06-13 07:34:45,151 - print_capture - INFO - 
        # --- LINE 1037 --- 
        # --- LINE 1037 --- 
2025-06-13 07:34:45,151 - print_capture - INFO -         # --- LINE 1037 --- 
        # --- LINE 1037 --- 
        # --- LINE 1037 --- 
2025-06-13 07:34:45,151 - print_capture - INFO -         # --- LINE 1037 --- 


2025-06-13 07:34:45,151 - print_capture - INFO - 


2025-06-13 07:34:45,151 - print_capture - INFO - 
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:45,151 - print_capture - INFO -         "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:45,151 - print_capture - INFO -         "void(int16[:], bool_[:])",


2025-06-13 07:34:45,151 - print_capture - INFO - 


2025-06-13 07:34:45,151 - print_capture - INFO - 
        # --- LINE 1038 --- 
        # --- LINE 1038 --- 
2025-06-13 07:34:45,151 - print_capture - INFO -         # --- LINE 1038 --- 
        # --- LINE 1038 --- 
        # --- LINE 1038 --- 
2025-06-13 07:34:45,151 - print_capture - INFO -         # --- LINE 1038 --- 


2025-06-13 07:34:45,151 - print_capture - INFO - 


2025-06-13 07:34:45,151 - print_capture - INFO - 
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:45,151 - print_capture - INFO -         "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:45,151 - print_capture - INFO -         "void(int32[:], bool_[:])",


2025-06-13 07:34:45,151 - print_capture - INFO - 


2025-06-13 07:34:45,151 - print_capture - INFO - 
        # --- LINE 1039 --- 
        # --- LINE 1039 --- 
2025-06-13 07:34:45,151 - print_capture - INFO -         # --- LINE 1039 --- 
        # --- LINE 1039 --- 
        # --- LINE 1039 --- 
2025-06-13 07:34:45,151 - print_capture - INFO -         # --- LINE 1039 --- 


2025-06-13 07:34:45,151 - print_capture - INFO - 


2025-06-13 07:34:45,151 - print_capture - INFO - 
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:45,151 - print_capture - INFO -         "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:45,151 - print_capture - INFO -         "void(int64[:], bool_[:])",


2025-06-13 07:34:45,151 - print_capture - INFO - 


2025-06-13 07:34:45,151 - print_capture - INFO - 
        # --- LINE 1040 --- 
        # --- LINE 1040 --- 
2025-06-13 07:34:45,151 - print_capture - INFO -         # --- LINE 1040 --- 
        # --- LINE 1040 --- 
        # --- LINE 1040 --- 
2025-06-13 07:34:45,151 - print_capture - INFO -         # --- LINE 1040 --- 


2025-06-13 07:34:45,151 - print_capture - INFO - 


2025-06-13 07:34:45,151 - print_capture - INFO - 
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:45,151 - print_capture - INFO -         "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:45,151 - print_capture - INFO -         "void(float32[:], bool_[:])",


2025-06-13 07:34:45,151 - print_capture - INFO - 


2025-06-13 07:34:45,151 - print_capture - INFO - 
        # --- LINE 1041 --- 
        # --- LINE 1041 --- 
2025-06-13 07:34:45,151 - print_capture - INFO -         # --- LINE 1041 --- 
        # --- LINE 1041 --- 
        # --- LINE 1041 --- 
2025-06-13 07:34:45,151 - print_capture - INFO -         # --- LINE 1041 --- 


2025-06-13 07:34:45,151 - print_capture - INFO - 


2025-06-13 07:34:45,151 - print_capture - INFO - 
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:45,151 - print_capture - INFO -         "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:45,151 - print_capture - INFO -         "void(float64[:], bool_[:])",


2025-06-13 07:34:45,151 - print_capture - INFO - 


2025-06-13 07:34:45,151 - print_capture - INFO - 
    # --- LINE 1042 --- 
    # --- LINE 1042 --- 
2025-06-13 07:34:45,151 - print_capture - INFO -     # --- LINE 1042 --- 
    # --- LINE 1042 --- 
    # --- LINE 1042 --- 
2025-06-13 07:34:45,151 - print_capture - INFO -     # --- LINE 1042 --- 


2025-06-13 07:34:45,151 - print_capture - INFO - 


2025-06-13 07:34:45,151 - print_capture - INFO - 
    ],
    ],
2025-06-13 07:34:45,151 - print_capture - INFO -     ],
    ],
    ],
2025-06-13 07:34:45,151 - print_capture - INFO -     ],


2025-06-13 07:34:45,152 - print_capture - INFO - 


2025-06-13 07:34:45,152 - print_capture - INFO - 
    # --- LINE 1043 --- 
    # --- LINE 1043 --- 
2025-06-13 07:34:45,152 - print_capture - INFO -     # --- LINE 1043 --- 
    # --- LINE 1043 --- 
    # --- LINE 1043 --- 
2025-06-13 07:34:45,152 - print_capture - INFO -     # --- LINE 1043 --- 


2025-06-13 07:34:45,152 - print_capture - INFO - 


2025-06-13 07:34:45,152 - print_capture - INFO - 
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:45,152 - print_capture - INFO -     "(n)->(n)",
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:45,152 - print_capture - INFO -     "(n)->(n)",


2025-06-13 07:34:45,152 - print_capture - INFO - 


2025-06-13 07:34:45,152 - print_capture - INFO - 
    # --- LINE 1044 --- 
    # --- LINE 1044 --- 
2025-06-13 07:34:45,152 - print_capture - INFO -     # --- LINE 1044 --- 
    # --- LINE 1044 --- 
    # --- LINE 1044 --- 
2025-06-13 07:34:45,152 - print_capture - INFO -     # --- LINE 1044 --- 


2025-06-13 07:34:45,152 - print_capture - INFO - 


2025-06-13 07:34:45,152 - print_capture - INFO - 
    cache=True,
    cache=True,
2025-06-13 07:34:45,152 - print_capture - INFO -     cache=True,
    cache=True,
    cache=True,
2025-06-13 07:34:45,152 - print_capture - INFO -     cache=True,


2025-06-13 07:34:45,152 - print_capture - INFO - 


2025-06-13 07:34:45,152 - print_capture - INFO - 
    # --- LINE 1045 --- 
    # --- LINE 1045 --- 
2025-06-13 07:34:45,152 - print_capture - INFO -     # --- LINE 1045 --- 
    # --- LINE 1045 --- 
    # --- LINE 1045 --- 
2025-06-13 07:34:45,152 - print_capture - INFO -     # --- LINE 1045 --- 


2025-06-13 07:34:45,152 - print_capture - INFO - 


2025-06-13 07:34:45,152 - print_capture - INFO - 
    nopython=True,
    nopython=True,
2025-06-13 07:34:45,152 - print_capture - INFO -     nopython=True,
    nopython=True,
    nopython=True,
2025-06-13 07:34:45,152 - print_capture - INFO -     nopython=True,


2025-06-13 07:34:45,152 - print_capture - INFO - 


2025-06-13 07:34:45,152 - print_capture - INFO - 
# --- LINE 1046 --- 
# --- LINE 1046 --- 
2025-06-13 07:34:45,152 - print_capture - INFO - # --- LINE 1046 --- 
# --- LINE 1046 --- 
# --- LINE 1046 --- 
2025-06-13 07:34:45,152 - print_capture - INFO - # --- LINE 1046 --- 


2025-06-13 07:34:45,152 - print_capture - INFO - 


2025-06-13 07:34:45,152 - print_capture - INFO - 
)
)
2025-06-13 07:34:45,152 - print_capture - INFO - )
)
)
2025-06-13 07:34:45,152 - print_capture - INFO - )


2025-06-13 07:34:45,152 - print_capture - INFO - 


2025-06-13 07:34:45,152 - print_capture - INFO - 
# --- LINE 1047 --- 
# --- LINE 1047 --- 
2025-06-13 07:34:45,152 - print_capture - INFO - # --- LINE 1047 --- 
# --- LINE 1047 --- 
# --- LINE 1047 --- 
2025-06-13 07:34:45,152 - print_capture - INFO - # --- LINE 1047 --- 


2025-06-13 07:34:45,152 - print_capture - INFO - 


2025-06-13 07:34:45,152 - print_capture - INFO - 
def _localmax(x, y):  # pragma: no cover
def _localmax(x, y):  # pragma: no cover
2025-06-13 07:34:45,152 - print_capture - INFO - def _localmax(x, y):  # pragma: no cover
def _localmax(x, y):  # pragma: no cover
def _localmax(x, y):  # pragma: no cover
2025-06-13 07:34:45,152 - print_capture - INFO - def _localmax(x, y):  # pragma: no cover


2025-06-13 07:34:45,152 - print_capture - INFO - 


2025-06-13 07:34:45,152 - print_capture - INFO - 
    # --- LINE 1048 --- 
    # --- LINE 1048 --- 
2025-06-13 07:34:45,152 - print_capture - INFO -     # --- LINE 1048 --- 
    # --- LINE 1048 --- 
    # --- LINE 1048 --- 
2025-06-13 07:34:45,152 - print_capture - INFO -     # --- LINE 1048 --- 


2025-06-13 07:34:45,152 - print_capture - INFO - 


2025-06-13 07:34:45,152 - print_capture - INFO - 
    """Vectorized wrapper for the localmax stencil"""
    """Vectorized wrapper for the localmax stencil"""
2025-06-13 07:34:45,152 - print_capture - INFO -     """Vectorized wrapper for the localmax stencil"""
    """Vectorized wrapper for the localmax stencil"""
    """Vectorized wrapper for the localmax stencil"""
2025-06-13 07:34:45,152 - print_capture - INFO -     """Vectorized wrapper for the localmax stencil"""


2025-06-13 07:34:45,152 - print_capture - INFO - 


2025-06-13 07:34:45,153 - print_capture - INFO - 
    # --- LINE 1049 --- 
    # --- LINE 1049 --- 
2025-06-13 07:34:45,153 - print_capture - INFO -     # --- LINE 1049 --- 
    # --- LINE 1049 --- 
    # --- LINE 1049 --- 
2025-06-13 07:34:45,153 - print_capture - INFO -     # --- LINE 1049 --- 
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
2025-06-13 07:34:45,153 - print_capture - INFO -     #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
2025-06-13 07:34:45,153 - print_capture - INFO -     #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:45,153 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:45,153 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   del x
    #   del x
2025-06-13 07:34:45,153 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:45,153 - print_capture - INFO -     #   del x
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:45,153 - print_capture - INFO -     #   del $2load_global.0
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:45,153 - print_capture - INFO -     #   del $2load_global.0
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:45,153 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:45,153 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:45,153 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:45,153 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:45,153 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:45,153 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:45,153 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:45,153 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:45,153 - print_capture - INFO -     #   del $const12.5.1
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:45,153 - print_capture - INFO -     #   del $const12.5.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:45,153 - print_capture - INFO -     #   del $const10.4.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:45,153 - print_capture - INFO -     #   del $const10.4.1
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:45,153 - print_capture - INFO -     #   del $14build_slice.6
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:45,153 - print_capture - INFO -     #   del $14build_slice.6
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:45,153 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:45,153 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   del y
    #   del y
2025-06-13 07:34:45,153 - print_capture - INFO -     #   del y
    #   del y
    #   del y
2025-06-13 07:34:45,153 - print_capture - INFO -     #   del y
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:45,153 - print_capture - INFO -     #   del $6call_function.2
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:45,153 - print_capture - INFO -     #   del $6call_function.2
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:45,153 - print_capture - INFO -     #   del $14build_slice.7
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:45,153 - print_capture - INFO -     #   del $14build_slice.7
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:45,153 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:45,153 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:45,153 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:45,153 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:45,153 - print_capture - INFO -     #   del $const18.8.1
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:45,153 - print_capture - INFO -     #   del $const18.8.1
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:45,153 - print_capture - INFO -     #   return $20return_value.9
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:45,153 - print_capture - INFO -     #   return $20return_value.9


2025-06-13 07:34:45,153 - print_capture - INFO - 


2025-06-13 07:34:45,153 - print_capture - INFO - 
    y[:] = _localmax_sten(x)
    y[:] = _localmax_sten(x)
2025-06-13 07:34:45,153 - print_capture - INFO -     y[:] = _localmax_sten(x)
    y[:] = _localmax_sten(x)
    y[:] = _localmax_sten(x)
2025-06-13 07:34:45,153 - print_capture - INFO -     y[:] = _localmax_sten(x)


2025-06-13 07:34:45,153 - print_capture - INFO - 


2025-06-13 07:34:45,153 - print_capture - INFO - 
label 0:
label 0:
2025-06-13 07:34:45,156 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:45,156 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:45,156 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:45,156 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:45,156 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:45,156 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
2025-06-13 07:34:45,156 - print_capture - INFO -     $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
2025-06-13 07:34:45,156 - print_capture - INFO -     $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:45,156 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:45,156 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:45,156 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:45,156 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:45,156 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:45,156 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:45,156 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:45,156 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:45,156 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:45,156 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:45,156 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:45,156 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:45,156 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:45,156 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:45,156 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:45,156 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:45,156 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:45,156 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
label 0:
label 0:
2025-06-13 07:34:45,166 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:45,166 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:45,167 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:45,167 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:45,167 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:45,167 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:45,167 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:45,167 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:45,167 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:45,167 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:45,167 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:45,167 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:45,167 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:45,167 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:45,167 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:45,167 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:45,167 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:45,167 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:45,167 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:45,167 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:45,167 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:45,167 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:45,167 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:45,167 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:45,167 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:45,167 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:45,167 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:45,167 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:45,167 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:45,167 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:45,167 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:45,167 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:45,167 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:45,167 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:45,167 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:45,167 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:45,167 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:45,167 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:45,167 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:45,167 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:45,167 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:45,168 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:45,168 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:45,168 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:45,168 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:45,168 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:45,168 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:45,168 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:45,168 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:45,168 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:45,168 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:45,168 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:45,168 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:45,168 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:45,168 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:45,168 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:45,168 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:45,168 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:45,168 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:45,168 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:45,168 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:45,168 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:45,168 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:45,168 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:45,168 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:45,168 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:45,168 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:45,168 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:45,168 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:45,168 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:45,168 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:45,168 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:45,168 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:45,168 - print_capture - INFO -     jump 80                                  []
label 80:
label 80:
2025-06-13 07:34:45,168 - print_capture - INFO - label 80:
label 80:
label 80:
2025-06-13 07:34:45,168 - print_capture - INFO - label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:45,168 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:45,168 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:45,168 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:45,168 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:45,168 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:45,168 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:45,169 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:45,169 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:45,169 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:45,169 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
label 82:
2025-06-13 07:34:45,169 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 07:34:45,169 - print_capture - INFO - label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:45,169 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:45,169 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:45,169 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:45,169 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:45,169 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:45,169 - print_capture - INFO -     jump 80                                  []
label 90:
label 90:
2025-06-13 07:34:45,169 - print_capture - INFO - label 90:
label 90:
label 90:
2025-06-13 07:34:45,169 - print_capture - INFO - label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:45,169 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:45,169 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:45,169 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:45,169 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:45,404 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:45,405 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# --- LINE 1035 --- 
# --- LINE 1035 --- 
2025-06-13 07:34:45,405 - print_capture - INFO - # --- LINE 1035 --- 
# --- LINE 1035 --- 
# --- LINE 1035 --- 
2025-06-13 07:34:45,405 - print_capture - INFO - # --- LINE 1035 --- 
# label 0
# label 0
2025-06-13 07:34:45,405 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:45,405 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: array(float32, 1d, A)
#   x = arg(0, name=x)  :: array(float32, 1d, A)
2025-06-13 07:34:45,405 - print_capture - INFO - #   x = arg(0, name=x)  :: array(float32, 1d, A)
#   x = arg(0, name=x)  :: array(float32, 1d, A)
#   x = arg(0, name=x)  :: array(float32, 1d, A)
2025-06-13 07:34:45,405 - print_capture - INFO - #   x = arg(0, name=x)  :: array(float32, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:45,405 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:45,405 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)


2025-06-13 07:34:45,405 - print_capture - INFO - 


2025-06-13 07:34:45,405 - print_capture - INFO - 
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:45,405 - print_capture - INFO - @numba.guvectorize(
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:45,405 - print_capture - INFO - @numba.guvectorize(


2025-06-13 07:34:45,405 - print_capture - INFO - 


2025-06-13 07:34:45,405 - print_capture - INFO - 
    # --- LINE 1036 --- 
    # --- LINE 1036 --- 
2025-06-13 07:34:45,405 - print_capture - INFO -     # --- LINE 1036 --- 
    # --- LINE 1036 --- 
    # --- LINE 1036 --- 
2025-06-13 07:34:45,405 - print_capture - INFO -     # --- LINE 1036 --- 


2025-06-13 07:34:45,405 - print_capture - INFO - 


2025-06-13 07:34:45,405 - print_capture - INFO - 
    [
    [
2025-06-13 07:34:45,405 - print_capture - INFO -     [
    [
    [
2025-06-13 07:34:45,405 - print_capture - INFO -     [


2025-06-13 07:34:45,405 - print_capture - INFO - 


2025-06-13 07:34:45,405 - print_capture - INFO - 
        # --- LINE 1037 --- 
        # --- LINE 1037 --- 
2025-06-13 07:34:45,405 - print_capture - INFO -         # --- LINE 1037 --- 
        # --- LINE 1037 --- 
        # --- LINE 1037 --- 
2025-06-13 07:34:45,405 - print_capture - INFO -         # --- LINE 1037 --- 


2025-06-13 07:34:45,405 - print_capture - INFO - 


2025-06-13 07:34:45,405 - print_capture - INFO - 
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:45,405 - print_capture - INFO -         "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:45,405 - print_capture - INFO -         "void(int16[:], bool_[:])",


2025-06-13 07:34:45,405 - print_capture - INFO - 


2025-06-13 07:34:45,405 - print_capture - INFO - 
        # --- LINE 1038 --- 
        # --- LINE 1038 --- 
2025-06-13 07:34:45,405 - print_capture - INFO -         # --- LINE 1038 --- 
        # --- LINE 1038 --- 
        # --- LINE 1038 --- 
2025-06-13 07:34:45,405 - print_capture - INFO -         # --- LINE 1038 --- 


2025-06-13 07:34:45,405 - print_capture - INFO - 


2025-06-13 07:34:45,405 - print_capture - INFO - 
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:45,405 - print_capture - INFO -         "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:45,405 - print_capture - INFO -         "void(int32[:], bool_[:])",


2025-06-13 07:34:45,405 - print_capture - INFO - 


2025-06-13 07:34:45,405 - print_capture - INFO - 
        # --- LINE 1039 --- 
        # --- LINE 1039 --- 
2025-06-13 07:34:45,405 - print_capture - INFO -         # --- LINE 1039 --- 
        # --- LINE 1039 --- 
        # --- LINE 1039 --- 
2025-06-13 07:34:45,405 - print_capture - INFO -         # --- LINE 1039 --- 


2025-06-13 07:34:45,405 - print_capture - INFO - 


2025-06-13 07:34:45,405 - print_capture - INFO - 
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:45,406 - print_capture - INFO -         "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:45,406 - print_capture - INFO -         "void(int64[:], bool_[:])",


2025-06-13 07:34:45,406 - print_capture - INFO - 


2025-06-13 07:34:45,406 - print_capture - INFO - 
        # --- LINE 1040 --- 
        # --- LINE 1040 --- 
2025-06-13 07:34:45,406 - print_capture - INFO -         # --- LINE 1040 --- 
        # --- LINE 1040 --- 
        # --- LINE 1040 --- 
2025-06-13 07:34:45,406 - print_capture - INFO -         # --- LINE 1040 --- 


2025-06-13 07:34:45,406 - print_capture - INFO - 


2025-06-13 07:34:45,406 - print_capture - INFO - 
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:45,406 - print_capture - INFO -         "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:45,406 - print_capture - INFO -         "void(float32[:], bool_[:])",


2025-06-13 07:34:45,406 - print_capture - INFO - 


2025-06-13 07:34:45,406 - print_capture - INFO - 
        # --- LINE 1041 --- 
        # --- LINE 1041 --- 
2025-06-13 07:34:45,406 - print_capture - INFO -         # --- LINE 1041 --- 
        # --- LINE 1041 --- 
        # --- LINE 1041 --- 
2025-06-13 07:34:45,406 - print_capture - INFO -         # --- LINE 1041 --- 


2025-06-13 07:34:45,406 - print_capture - INFO - 


2025-06-13 07:34:45,406 - print_capture - INFO - 
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:45,406 - print_capture - INFO -         "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:45,406 - print_capture - INFO -         "void(float64[:], bool_[:])",


2025-06-13 07:34:45,406 - print_capture - INFO - 


2025-06-13 07:34:45,406 - print_capture - INFO - 
    # --- LINE 1042 --- 
    # --- LINE 1042 --- 
2025-06-13 07:34:45,406 - print_capture - INFO -     # --- LINE 1042 --- 
    # --- LINE 1042 --- 
    # --- LINE 1042 --- 
2025-06-13 07:34:45,406 - print_capture - INFO -     # --- LINE 1042 --- 


2025-06-13 07:34:45,406 - print_capture - INFO - 


2025-06-13 07:34:45,406 - print_capture - INFO - 
    ],
    ],
2025-06-13 07:34:45,406 - print_capture - INFO -     ],
    ],
    ],
2025-06-13 07:34:45,406 - print_capture - INFO -     ],


2025-06-13 07:34:45,406 - print_capture - INFO - 


2025-06-13 07:34:45,406 - print_capture - INFO - 
    # --- LINE 1043 --- 
    # --- LINE 1043 --- 
2025-06-13 07:34:45,406 - print_capture - INFO -     # --- LINE 1043 --- 
    # --- LINE 1043 --- 
    # --- LINE 1043 --- 
2025-06-13 07:34:45,406 - print_capture - INFO -     # --- LINE 1043 --- 


2025-06-13 07:34:45,406 - print_capture - INFO - 


2025-06-13 07:34:45,406 - print_capture - INFO - 
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:45,406 - print_capture - INFO -     "(n)->(n)",
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:45,406 - print_capture - INFO -     "(n)->(n)",


2025-06-13 07:34:45,406 - print_capture - INFO - 


2025-06-13 07:34:45,406 - print_capture - INFO - 
    # --- LINE 1044 --- 
    # --- LINE 1044 --- 
2025-06-13 07:34:45,406 - print_capture - INFO -     # --- LINE 1044 --- 
    # --- LINE 1044 --- 
    # --- LINE 1044 --- 
2025-06-13 07:34:45,406 - print_capture - INFO -     # --- LINE 1044 --- 


2025-06-13 07:34:45,406 - print_capture - INFO - 


2025-06-13 07:34:45,406 - print_capture - INFO - 
    cache=True,
    cache=True,
2025-06-13 07:34:45,406 - print_capture - INFO -     cache=True,
    cache=True,
    cache=True,
2025-06-13 07:34:45,406 - print_capture - INFO -     cache=True,


2025-06-13 07:34:45,406 - print_capture - INFO - 


2025-06-13 07:34:45,406 - print_capture - INFO - 
    # --- LINE 1045 --- 
    # --- LINE 1045 --- 
2025-06-13 07:34:45,406 - print_capture - INFO -     # --- LINE 1045 --- 
    # --- LINE 1045 --- 
    # --- LINE 1045 --- 
2025-06-13 07:34:45,406 - print_capture - INFO -     # --- LINE 1045 --- 


2025-06-13 07:34:45,406 - print_capture - INFO - 


2025-06-13 07:34:45,406 - print_capture - INFO - 
    nopython=True,
    nopython=True,
2025-06-13 07:34:45,406 - print_capture - INFO -     nopython=True,
    nopython=True,
    nopython=True,
2025-06-13 07:34:45,406 - print_capture - INFO -     nopython=True,


2025-06-13 07:34:45,407 - print_capture - INFO - 


2025-06-13 07:34:45,407 - print_capture - INFO - 
# --- LINE 1046 --- 
# --- LINE 1046 --- 
2025-06-13 07:34:45,407 - print_capture - INFO - # --- LINE 1046 --- 
# --- LINE 1046 --- 
# --- LINE 1046 --- 
2025-06-13 07:34:45,407 - print_capture - INFO - # --- LINE 1046 --- 


2025-06-13 07:34:45,407 - print_capture - INFO - 


2025-06-13 07:34:45,407 - print_capture - INFO - 
)
)
2025-06-13 07:34:45,407 - print_capture - INFO - )
)
)
2025-06-13 07:34:45,407 - print_capture - INFO - )


2025-06-13 07:34:45,407 - print_capture - INFO - 


2025-06-13 07:34:45,407 - print_capture - INFO - 
# --- LINE 1047 --- 
# --- LINE 1047 --- 
2025-06-13 07:34:45,407 - print_capture - INFO - # --- LINE 1047 --- 
# --- LINE 1047 --- 
# --- LINE 1047 --- 
2025-06-13 07:34:45,407 - print_capture - INFO - # --- LINE 1047 --- 


2025-06-13 07:34:45,407 - print_capture - INFO - 


2025-06-13 07:34:45,407 - print_capture - INFO - 
def _localmax(x, y):  # pragma: no cover
def _localmax(x, y):  # pragma: no cover
2025-06-13 07:34:45,407 - print_capture - INFO - def _localmax(x, y):  # pragma: no cover
def _localmax(x, y):  # pragma: no cover
def _localmax(x, y):  # pragma: no cover
2025-06-13 07:34:45,407 - print_capture - INFO - def _localmax(x, y):  # pragma: no cover


2025-06-13 07:34:45,407 - print_capture - INFO - 


2025-06-13 07:34:45,407 - print_capture - INFO - 
    # --- LINE 1048 --- 
    # --- LINE 1048 --- 
2025-06-13 07:34:45,407 - print_capture - INFO -     # --- LINE 1048 --- 
    # --- LINE 1048 --- 
    # --- LINE 1048 --- 
2025-06-13 07:34:45,407 - print_capture - INFO -     # --- LINE 1048 --- 


2025-06-13 07:34:45,407 - print_capture - INFO - 


2025-06-13 07:34:45,407 - print_capture - INFO - 
    """Vectorized wrapper for the localmax stencil"""
    """Vectorized wrapper for the localmax stencil"""
2025-06-13 07:34:45,407 - print_capture - INFO -     """Vectorized wrapper for the localmax stencil"""
    """Vectorized wrapper for the localmax stencil"""
    """Vectorized wrapper for the localmax stencil"""
2025-06-13 07:34:45,407 - print_capture - INFO -     """Vectorized wrapper for the localmax stencil"""


2025-06-13 07:34:45,407 - print_capture - INFO - 


2025-06-13 07:34:45,407 - print_capture - INFO - 
    # --- LINE 1049 --- 
    # --- LINE 1049 --- 
2025-06-13 07:34:45,407 - print_capture - INFO -     # --- LINE 1049 --- 
    # --- LINE 1049 --- 
    # --- LINE 1049 --- 
2025-06-13 07:34:45,407 - print_capture - INFO -     # --- LINE 1049 --- 
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
2025-06-13 07:34:45,407 - print_capture - INFO -     #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
2025-06-13 07:34:45,407 - print_capture - INFO -     #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:45,407 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:45,407 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   del x
    #   del x
2025-06-13 07:34:45,407 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:45,407 - print_capture - INFO -     #   del x
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:45,407 - print_capture - INFO -     #   del $2load_global.0
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:45,407 - print_capture - INFO -     #   del $2load_global.0
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:45,407 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:45,407 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:45,407 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:45,407 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:45,407 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:45,407 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:45,407 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:45,407 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:45,407 - print_capture - INFO -     #   del $const12.5.1
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:45,407 - print_capture - INFO -     #   del $const12.5.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:45,407 - print_capture - INFO -     #   del $const10.4.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:45,407 - print_capture - INFO -     #   del $const10.4.1
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:45,407 - print_capture - INFO -     #   del $14build_slice.6
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:45,408 - print_capture - INFO -     #   del $14build_slice.6
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:45,408 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:45,408 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   del y
    #   del y
2025-06-13 07:34:45,408 - print_capture - INFO -     #   del y
    #   del y
    #   del y
2025-06-13 07:34:45,408 - print_capture - INFO -     #   del y
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:45,408 - print_capture - INFO -     #   del $6call_function.2
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:45,408 - print_capture - INFO -     #   del $6call_function.2
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:45,408 - print_capture - INFO -     #   del $14build_slice.7
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:45,408 - print_capture - INFO -     #   del $14build_slice.7
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:45,408 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:45,408 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:45,408 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:45,408 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:45,408 - print_capture - INFO -     #   del $const18.8.1
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:45,408 - print_capture - INFO -     #   del $const18.8.1
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:45,408 - print_capture - INFO -     #   return $20return_value.9
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:45,408 - print_capture - INFO -     #   return $20return_value.9


2025-06-13 07:34:45,408 - print_capture - INFO - 


2025-06-13 07:34:45,408 - print_capture - INFO - 
    y[:] = _localmax_sten(x)
    y[:] = _localmax_sten(x)
2025-06-13 07:34:45,408 - print_capture - INFO -     y[:] = _localmax_sten(x)
    y[:] = _localmax_sten(x)
    y[:] = _localmax_sten(x)
2025-06-13 07:34:45,408 - print_capture - INFO -     y[:] = _localmax_sten(x)


2025-06-13 07:34:45,408 - print_capture - INFO - 


2025-06-13 07:34:45,408 - print_capture - INFO - 
label 0:
label 0:
2025-06-13 07:34:45,410 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:45,410 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:45,410 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:45,410 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:45,410 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:45,410 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
2025-06-13 07:34:45,410 - print_capture - INFO -     $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
2025-06-13 07:34:45,410 - print_capture - INFO -     $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:45,410 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:45,410 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:45,410 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:45,410 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:45,410 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:45,411 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:45,411 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:45,411 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:45,411 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:45,411 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:45,411 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:45,411 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:45,411 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:45,411 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:45,411 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:45,411 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:45,411 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:45,411 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
label 0:
label 0:
2025-06-13 07:34:45,420 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:45,420 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:45,420 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:45,420 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:45,420 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:45,420 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:45,420 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:45,420 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:45,420 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:45,420 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:45,420 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:45,420 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:45,420 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:45,420 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:45,421 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:45,421 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:45,421 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:45,421 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:45,421 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:45,421 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:45,421 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:45,421 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:45,421 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:45,421 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:45,421 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:45,421 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:45,421 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:45,421 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:45,421 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:45,421 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:45,421 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:45,421 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:45,421 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:45,421 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:45,421 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:45,421 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:45,421 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:45,421 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:45,421 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:45,421 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:45,421 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:45,421 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:45,421 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:45,421 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:45,421 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:45,421 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:45,421 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:45,421 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:45,421 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:45,421 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:45,421 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:45,421 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:45,421 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:45,421 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:45,422 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:45,422 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:45,422 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:45,422 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:45,422 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:45,422 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:45,422 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:45,422 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:45,422 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:45,422 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:45,422 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:45,422 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:45,422 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:45,422 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:45,422 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:45,422 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:45,422 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:45,422 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:45,422 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:45,422 - print_capture - INFO -     jump 80                                  []
label 80:
label 80:
2025-06-13 07:34:45,422 - print_capture - INFO - label 80:
label 80:
label 80:
2025-06-13 07:34:45,422 - print_capture - INFO - label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:45,422 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:45,422 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:45,422 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:45,422 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:45,422 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:45,422 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:45,422 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:45,422 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:45,422 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:45,422 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
label 82:
2025-06-13 07:34:45,422 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 07:34:45,422 - print_capture - INFO - label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:45,422 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:45,422 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:45,422 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:45,422 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:45,422 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:45,422 - print_capture - INFO -     jump 80                                  []
label 90:
label 90:
2025-06-13 07:34:45,422 - print_capture - INFO - label 90:
label 90:
label 90:
2025-06-13 07:34:45,422 - print_capture - INFO - label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:45,422 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:45,423 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:45,423 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:45,423 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:45,597 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:45,597 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# --- LINE 1035 --- 
# --- LINE 1035 --- 
2025-06-13 07:34:45,597 - print_capture - INFO - # --- LINE 1035 --- 
# --- LINE 1035 --- 
# --- LINE 1035 --- 
2025-06-13 07:34:45,597 - print_capture - INFO - # --- LINE 1035 --- 
# label 0
# label 0
2025-06-13 07:34:45,597 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:45,597 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: array(float64, 1d, A)
#   x = arg(0, name=x)  :: array(float64, 1d, A)
2025-06-13 07:34:45,597 - print_capture - INFO - #   x = arg(0, name=x)  :: array(float64, 1d, A)
#   x = arg(0, name=x)  :: array(float64, 1d, A)
#   x = arg(0, name=x)  :: array(float64, 1d, A)
2025-06-13 07:34:45,597 - print_capture - INFO - #   x = arg(0, name=x)  :: array(float64, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:45,597 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:45,597 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)


2025-06-13 07:34:45,597 - print_capture - INFO - 


2025-06-13 07:34:45,597 - print_capture - INFO - 
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:45,597 - print_capture - INFO - @numba.guvectorize(
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:45,598 - print_capture - INFO - @numba.guvectorize(


2025-06-13 07:34:45,598 - print_capture - INFO - 


2025-06-13 07:34:45,598 - print_capture - INFO - 
    # --- LINE 1036 --- 
    # --- LINE 1036 --- 
2025-06-13 07:34:45,598 - print_capture - INFO -     # --- LINE 1036 --- 
    # --- LINE 1036 --- 
    # --- LINE 1036 --- 
2025-06-13 07:34:45,598 - print_capture - INFO -     # --- LINE 1036 --- 


2025-06-13 07:34:45,598 - print_capture - INFO - 


2025-06-13 07:34:45,598 - print_capture - INFO - 
    [
    [
2025-06-13 07:34:45,598 - print_capture - INFO -     [
    [
    [
2025-06-13 07:34:45,598 - print_capture - INFO -     [


2025-06-13 07:34:45,598 - print_capture - INFO - 


2025-06-13 07:34:45,598 - print_capture - INFO - 
        # --- LINE 1037 --- 
        # --- LINE 1037 --- 
2025-06-13 07:34:45,598 - print_capture - INFO -         # --- LINE 1037 --- 
        # --- LINE 1037 --- 
        # --- LINE 1037 --- 
2025-06-13 07:34:45,598 - print_capture - INFO -         # --- LINE 1037 --- 


2025-06-13 07:34:45,598 - print_capture - INFO - 


2025-06-13 07:34:45,598 - print_capture - INFO - 
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:45,598 - print_capture - INFO -         "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:45,598 - print_capture - INFO -         "void(int16[:], bool_[:])",


2025-06-13 07:34:45,598 - print_capture - INFO - 


2025-06-13 07:34:45,598 - print_capture - INFO - 
        # --- LINE 1038 --- 
        # --- LINE 1038 --- 
2025-06-13 07:34:45,598 - print_capture - INFO -         # --- LINE 1038 --- 
        # --- LINE 1038 --- 
        # --- LINE 1038 --- 
2025-06-13 07:34:45,598 - print_capture - INFO -         # --- LINE 1038 --- 


2025-06-13 07:34:45,598 - print_capture - INFO - 


2025-06-13 07:34:45,598 - print_capture - INFO - 
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:45,598 - print_capture - INFO -         "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:45,598 - print_capture - INFO -         "void(int32[:], bool_[:])",


2025-06-13 07:34:45,598 - print_capture - INFO - 


2025-06-13 07:34:45,598 - print_capture - INFO - 
        # --- LINE 1039 --- 
        # --- LINE 1039 --- 
2025-06-13 07:34:45,598 - print_capture - INFO -         # --- LINE 1039 --- 
        # --- LINE 1039 --- 
        # --- LINE 1039 --- 
2025-06-13 07:34:45,598 - print_capture - INFO -         # --- LINE 1039 --- 


2025-06-13 07:34:45,598 - print_capture - INFO - 


2025-06-13 07:34:45,598 - print_capture - INFO - 
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:45,598 - print_capture - INFO -         "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:45,598 - print_capture - INFO -         "void(int64[:], bool_[:])",


2025-06-13 07:34:45,598 - print_capture - INFO - 


2025-06-13 07:34:45,598 - print_capture - INFO - 
        # --- LINE 1040 --- 
        # --- LINE 1040 --- 
2025-06-13 07:34:45,598 - print_capture - INFO -         # --- LINE 1040 --- 
        # --- LINE 1040 --- 
        # --- LINE 1040 --- 
2025-06-13 07:34:45,598 - print_capture - INFO -         # --- LINE 1040 --- 


2025-06-13 07:34:45,598 - print_capture - INFO - 


2025-06-13 07:34:45,598 - print_capture - INFO - 
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:45,598 - print_capture - INFO -         "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:45,598 - print_capture - INFO -         "void(float32[:], bool_[:])",


2025-06-13 07:34:45,598 - print_capture - INFO - 


2025-06-13 07:34:45,598 - print_capture - INFO - 
        # --- LINE 1041 --- 
        # --- LINE 1041 --- 
2025-06-13 07:34:45,598 - print_capture - INFO -         # --- LINE 1041 --- 
        # --- LINE 1041 --- 
        # --- LINE 1041 --- 
2025-06-13 07:34:45,598 - print_capture - INFO -         # --- LINE 1041 --- 


2025-06-13 07:34:45,598 - print_capture - INFO - 


2025-06-13 07:34:45,598 - print_capture - INFO - 
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:45,598 - print_capture - INFO -         "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:45,599 - print_capture - INFO -         "void(float64[:], bool_[:])",


2025-06-13 07:34:45,599 - print_capture - INFO - 


2025-06-13 07:34:45,599 - print_capture - INFO - 
    # --- LINE 1042 --- 
    # --- LINE 1042 --- 
2025-06-13 07:34:45,599 - print_capture - INFO -     # --- LINE 1042 --- 
    # --- LINE 1042 --- 
    # --- LINE 1042 --- 
2025-06-13 07:34:45,599 - print_capture - INFO -     # --- LINE 1042 --- 


2025-06-13 07:34:45,599 - print_capture - INFO - 


2025-06-13 07:34:45,599 - print_capture - INFO - 
    ],
    ],
2025-06-13 07:34:45,599 - print_capture - INFO -     ],
    ],
    ],
2025-06-13 07:34:45,599 - print_capture - INFO -     ],


2025-06-13 07:34:45,599 - print_capture - INFO - 


2025-06-13 07:34:45,599 - print_capture - INFO - 
    # --- LINE 1043 --- 
    # --- LINE 1043 --- 
2025-06-13 07:34:45,599 - print_capture - INFO -     # --- LINE 1043 --- 
    # --- LINE 1043 --- 
    # --- LINE 1043 --- 
2025-06-13 07:34:45,599 - print_capture - INFO -     # --- LINE 1043 --- 


2025-06-13 07:34:45,599 - print_capture - INFO - 


2025-06-13 07:34:45,599 - print_capture - INFO - 
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:45,599 - print_capture - INFO -     "(n)->(n)",
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:45,599 - print_capture - INFO -     "(n)->(n)",


2025-06-13 07:34:45,599 - print_capture - INFO - 


2025-06-13 07:34:45,599 - print_capture - INFO - 
    # --- LINE 1044 --- 
    # --- LINE 1044 --- 
2025-06-13 07:34:45,599 - print_capture - INFO -     # --- LINE 1044 --- 
    # --- LINE 1044 --- 
    # --- LINE 1044 --- 
2025-06-13 07:34:45,599 - print_capture - INFO -     # --- LINE 1044 --- 


2025-06-13 07:34:45,599 - print_capture - INFO - 


2025-06-13 07:34:45,599 - print_capture - INFO - 
    cache=True,
    cache=True,
2025-06-13 07:34:45,599 - print_capture - INFO -     cache=True,
    cache=True,
    cache=True,
2025-06-13 07:34:45,599 - print_capture - INFO -     cache=True,


2025-06-13 07:34:45,599 - print_capture - INFO - 


2025-06-13 07:34:45,599 - print_capture - INFO - 
    # --- LINE 1045 --- 
    # --- LINE 1045 --- 
2025-06-13 07:34:45,599 - print_capture - INFO -     # --- LINE 1045 --- 
    # --- LINE 1045 --- 
    # --- LINE 1045 --- 
2025-06-13 07:34:45,599 - print_capture - INFO -     # --- LINE 1045 --- 


2025-06-13 07:34:45,599 - print_capture - INFO - 


2025-06-13 07:34:45,599 - print_capture - INFO - 
    nopython=True,
    nopython=True,
2025-06-13 07:34:45,599 - print_capture - INFO -     nopython=True,
    nopython=True,
    nopython=True,
2025-06-13 07:34:45,599 - print_capture - INFO -     nopython=True,


2025-06-13 07:34:45,599 - print_capture - INFO - 


2025-06-13 07:34:45,599 - print_capture - INFO - 
# --- LINE 1046 --- 
# --- LINE 1046 --- 
2025-06-13 07:34:45,599 - print_capture - INFO - # --- LINE 1046 --- 
# --- LINE 1046 --- 
# --- LINE 1046 --- 
2025-06-13 07:34:45,599 - print_capture - INFO - # --- LINE 1046 --- 


2025-06-13 07:34:45,599 - print_capture - INFO - 


2025-06-13 07:34:45,599 - print_capture - INFO - 
)
)
2025-06-13 07:34:45,599 - print_capture - INFO - )
)
)
2025-06-13 07:34:45,599 - print_capture - INFO - )


2025-06-13 07:34:45,599 - print_capture - INFO - 


2025-06-13 07:34:45,599 - print_capture - INFO - 
# --- LINE 1047 --- 
# --- LINE 1047 --- 
2025-06-13 07:34:45,599 - print_capture - INFO - # --- LINE 1047 --- 
# --- LINE 1047 --- 
# --- LINE 1047 --- 
2025-06-13 07:34:45,599 - print_capture - INFO - # --- LINE 1047 --- 


2025-06-13 07:34:45,599 - print_capture - INFO - 


2025-06-13 07:34:45,599 - print_capture - INFO - 
def _localmax(x, y):  # pragma: no cover
def _localmax(x, y):  # pragma: no cover
2025-06-13 07:34:45,599 - print_capture - INFO - def _localmax(x, y):  # pragma: no cover
def _localmax(x, y):  # pragma: no cover
def _localmax(x, y):  # pragma: no cover
2025-06-13 07:34:45,599 - print_capture - INFO - def _localmax(x, y):  # pragma: no cover


2025-06-13 07:34:45,600 - print_capture - INFO - 


2025-06-13 07:34:45,600 - print_capture - INFO - 
    # --- LINE 1048 --- 
    # --- LINE 1048 --- 
2025-06-13 07:34:45,600 - print_capture - INFO -     # --- LINE 1048 --- 
    # --- LINE 1048 --- 
    # --- LINE 1048 --- 
2025-06-13 07:34:45,600 - print_capture - INFO -     # --- LINE 1048 --- 


2025-06-13 07:34:45,600 - print_capture - INFO - 


2025-06-13 07:34:45,600 - print_capture - INFO - 
    """Vectorized wrapper for the localmax stencil"""
    """Vectorized wrapper for the localmax stencil"""
2025-06-13 07:34:45,600 - print_capture - INFO -     """Vectorized wrapper for the localmax stencil"""
    """Vectorized wrapper for the localmax stencil"""
    """Vectorized wrapper for the localmax stencil"""
2025-06-13 07:34:45,600 - print_capture - INFO -     """Vectorized wrapper for the localmax stencil"""


2025-06-13 07:34:45,600 - print_capture - INFO - 


2025-06-13 07:34:45,600 - print_capture - INFO - 
    # --- LINE 1049 --- 
    # --- LINE 1049 --- 
2025-06-13 07:34:45,600 - print_capture - INFO -     # --- LINE 1049 --- 
    # --- LINE 1049 --- 
    # --- LINE 1049 --- 
2025-06-13 07:34:45,600 - print_capture - INFO -     # --- LINE 1049 --- 
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
2025-06-13 07:34:45,600 - print_capture - INFO -     #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
2025-06-13 07:34:45,600 - print_capture - INFO -     #   $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aaffbf70>)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:45,600 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:45,600 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   del x
    #   del x
2025-06-13 07:34:45,600 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:45,600 - print_capture - INFO -     #   del x
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:45,600 - print_capture - INFO -     #   del $2load_global.0
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:45,600 - print_capture - INFO -     #   del $2load_global.0
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:45,600 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:45,600 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:45,600 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:45,600 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:45,600 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:45,600 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:45,600 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:45,600 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1049), Var($const12.5.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:45,600 - print_capture - INFO -     #   del $const12.5.1
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:45,600 - print_capture - INFO -     #   del $const12.5.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:45,600 - print_capture - INFO -     #   del $const10.4.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:45,600 - print_capture - INFO -     #   del $const10.4.1
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:45,600 - print_capture - INFO -     #   del $14build_slice.6
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:45,600 - print_capture - INFO -     #   del $14build_slice.6
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:45,600 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:45,600 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   del y
    #   del y
2025-06-13 07:34:45,600 - print_capture - INFO -     #   del y
    #   del y
    #   del y
2025-06-13 07:34:45,600 - print_capture - INFO -     #   del y
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:45,600 - print_capture - INFO -     #   del $6call_function.2
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:45,600 - print_capture - INFO -     #   del $6call_function.2
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:45,600 - print_capture - INFO -     #   del $14build_slice.7
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:45,600 - print_capture - INFO -     #   del $14build_slice.7
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:45,600 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:45,600 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:45,600 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:45,600 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:45,600 - print_capture - INFO -     #   del $const18.8.1
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:45,600 - print_capture - INFO -     #   del $const18.8.1
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:45,601 - print_capture - INFO -     #   return $20return_value.9
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:45,601 - print_capture - INFO -     #   return $20return_value.9


2025-06-13 07:34:45,601 - print_capture - INFO - 


2025-06-13 07:34:45,601 - print_capture - INFO - 
    y[:] = _localmax_sten(x)
    y[:] = _localmax_sten(x)
2025-06-13 07:34:45,601 - print_capture - INFO -     y[:] = _localmax_sten(x)
    y[:] = _localmax_sten(x)
    y[:] = _localmax_sten(x)
2025-06-13 07:34:45,601 - print_capture - INFO -     y[:] = _localmax_sten(x)


2025-06-13 07:34:45,601 - print_capture - INFO - 


2025-06-13 07:34:45,601 - print_capture - INFO - 
label 0:
label 0:
2025-06-13 07:34:46,092 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:46,093 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,093 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,093 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:46,093 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:46,093 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
2025-06-13 07:34:46,093 - print_capture - INFO -     $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
2025-06-13 07:34:46,093 - print_capture - INFO -     $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:46,093 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:46,093 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:46,093 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:46,093 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:46,093 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:46,093 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:46,093 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:46,093 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:46,093 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:46,093 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:46,093 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:46,093 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:46,093 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:46,093 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:46,093 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:46,093 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:46,093 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:46,093 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
label 0:
label 0:
2025-06-13 07:34:46,102 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:46,102 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,102 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,102 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:46,103 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:46,103 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:46,103 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:46,103 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:46,103 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:46,103 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:46,103 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:46,103 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:46,103 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:46,103 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:46,103 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:46,103 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:46,103 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:46,103 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:46,103 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:46,103 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:46,103 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:46,103 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:46,103 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:46,103 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:46,103 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:46,103 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:46,103 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:46,103 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:46,103 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:46,103 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:46,103 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:46,103 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:46,103 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:46,103 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:46,103 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:46,103 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:46,103 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:46,103 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:46,103 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:46,103 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:46,103 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:46,103 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:46,103 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:46,103 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:46,104 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:46,104 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:46,104 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:46,104 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:46,104 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:46,104 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:46,104 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:46,104 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:46,104 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:46,104 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:46,104 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:46,104 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:46,104 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:46,104 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:46,104 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:46,104 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:46,104 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:46,104 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:46,104 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:46,104 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:46,104 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:46,104 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:46,104 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:46,104 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:46,104 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:46,104 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:46,104 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:46,104 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,104 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,104 - print_capture - INFO -     jump 80                                  []
label 80:
label 80:
2025-06-13 07:34:46,104 - print_capture - INFO - label 80:
label 80:
label 80:
2025-06-13 07:34:46,104 - print_capture - INFO - label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:46,104 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:46,104 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:46,104 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:46,104 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:46,104 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:46,104 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:46,104 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:46,104 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:46,104 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:46,105 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
label 82:
2025-06-13 07:34:46,105 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 07:34:46,105 - print_capture - INFO - label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:46,105 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:46,105 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:46,105 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:46,105 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,105 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,105 - print_capture - INFO -     jump 80                                  []
label 90:
label 90:
2025-06-13 07:34:46,105 - print_capture - INFO - label 90:
label 90:
label 90:
2025-06-13 07:34:46,105 - print_capture - INFO - label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:46,105 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:46,105 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:46,105 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:46,105 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:46,279 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:46,279 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# --- LINE 1052 --- 
# --- LINE 1052 --- 
2025-06-13 07:34:46,279 - print_capture - INFO - # --- LINE 1052 --- 
# --- LINE 1052 --- 
# --- LINE 1052 --- 
2025-06-13 07:34:46,279 - print_capture - INFO - # --- LINE 1052 --- 
# label 0
# label 0
2025-06-13 07:34:46,279 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:46,279 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: array(int16, 1d, A)
#   x = arg(0, name=x)  :: array(int16, 1d, A)
2025-06-13 07:34:46,279 - print_capture - INFO - #   x = arg(0, name=x)  :: array(int16, 1d, A)
#   x = arg(0, name=x)  :: array(int16, 1d, A)
#   x = arg(0, name=x)  :: array(int16, 1d, A)
2025-06-13 07:34:46,279 - print_capture - INFO - #   x = arg(0, name=x)  :: array(int16, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:46,279 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:46,279 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)


2025-06-13 07:34:46,279 - print_capture - INFO - 


2025-06-13 07:34:46,279 - print_capture - INFO - 
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:46,279 - print_capture - INFO - @numba.guvectorize(
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:46,279 - print_capture - INFO - @numba.guvectorize(


2025-06-13 07:34:46,279 - print_capture - INFO - 


2025-06-13 07:34:46,279 - print_capture - INFO - 
    # --- LINE 1053 --- 
    # --- LINE 1053 --- 
2025-06-13 07:34:46,279 - print_capture - INFO -     # --- LINE 1053 --- 
    # --- LINE 1053 --- 
    # --- LINE 1053 --- 
2025-06-13 07:34:46,279 - print_capture - INFO -     # --- LINE 1053 --- 


2025-06-13 07:34:46,279 - print_capture - INFO - 


2025-06-13 07:34:46,279 - print_capture - INFO - 
    [
    [
2025-06-13 07:34:46,279 - print_capture - INFO -     [
    [
    [
2025-06-13 07:34:46,279 - print_capture - INFO -     [


2025-06-13 07:34:46,279 - print_capture - INFO - 


2025-06-13 07:34:46,279 - print_capture - INFO - 
        # --- LINE 1054 --- 
        # --- LINE 1054 --- 
2025-06-13 07:34:46,279 - print_capture - INFO -         # --- LINE 1054 --- 
        # --- LINE 1054 --- 
        # --- LINE 1054 --- 
2025-06-13 07:34:46,279 - print_capture - INFO -         # --- LINE 1054 --- 


2025-06-13 07:34:46,279 - print_capture - INFO - 


2025-06-13 07:34:46,279 - print_capture - INFO - 
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:46,279 - print_capture - INFO -         "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:46,279 - print_capture - INFO -         "void(int16[:], bool_[:])",


2025-06-13 07:34:46,279 - print_capture - INFO - 


2025-06-13 07:34:46,279 - print_capture - INFO - 
        # --- LINE 1055 --- 
        # --- LINE 1055 --- 
2025-06-13 07:34:46,279 - print_capture - INFO -         # --- LINE 1055 --- 
        # --- LINE 1055 --- 
        # --- LINE 1055 --- 
2025-06-13 07:34:46,279 - print_capture - INFO -         # --- LINE 1055 --- 


2025-06-13 07:34:46,279 - print_capture - INFO - 


2025-06-13 07:34:46,279 - print_capture - INFO - 
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:46,279 - print_capture - INFO -         "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:46,279 - print_capture - INFO -         "void(int32[:], bool_[:])",


2025-06-13 07:34:46,279 - print_capture - INFO - 


2025-06-13 07:34:46,280 - print_capture - INFO - 
        # --- LINE 1056 --- 
        # --- LINE 1056 --- 
2025-06-13 07:34:46,280 - print_capture - INFO -         # --- LINE 1056 --- 
        # --- LINE 1056 --- 
        # --- LINE 1056 --- 
2025-06-13 07:34:46,280 - print_capture - INFO -         # --- LINE 1056 --- 


2025-06-13 07:34:46,280 - print_capture - INFO - 


2025-06-13 07:34:46,280 - print_capture - INFO - 
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:46,280 - print_capture - INFO -         "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:46,280 - print_capture - INFO -         "void(int64[:], bool_[:])",


2025-06-13 07:34:46,280 - print_capture - INFO - 


2025-06-13 07:34:46,280 - print_capture - INFO - 
        # --- LINE 1057 --- 
        # --- LINE 1057 --- 
2025-06-13 07:34:46,280 - print_capture - INFO -         # --- LINE 1057 --- 
        # --- LINE 1057 --- 
        # --- LINE 1057 --- 
2025-06-13 07:34:46,280 - print_capture - INFO -         # --- LINE 1057 --- 


2025-06-13 07:34:46,280 - print_capture - INFO - 


2025-06-13 07:34:46,280 - print_capture - INFO - 
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:46,280 - print_capture - INFO -         "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:46,280 - print_capture - INFO -         "void(float32[:], bool_[:])",


2025-06-13 07:34:46,280 - print_capture - INFO - 


2025-06-13 07:34:46,280 - print_capture - INFO - 
        # --- LINE 1058 --- 
        # --- LINE 1058 --- 
2025-06-13 07:34:46,280 - print_capture - INFO -         # --- LINE 1058 --- 
        # --- LINE 1058 --- 
        # --- LINE 1058 --- 
2025-06-13 07:34:46,280 - print_capture - INFO -         # --- LINE 1058 --- 


2025-06-13 07:34:46,280 - print_capture - INFO - 


2025-06-13 07:34:46,280 - print_capture - INFO - 
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:46,280 - print_capture - INFO -         "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:46,280 - print_capture - INFO -         "void(float64[:], bool_[:])",


2025-06-13 07:34:46,280 - print_capture - INFO - 


2025-06-13 07:34:46,280 - print_capture - INFO - 
    # --- LINE 1059 --- 
    # --- LINE 1059 --- 
2025-06-13 07:34:46,280 - print_capture - INFO -     # --- LINE 1059 --- 
    # --- LINE 1059 --- 
    # --- LINE 1059 --- 
2025-06-13 07:34:46,280 - print_capture - INFO -     # --- LINE 1059 --- 


2025-06-13 07:34:46,280 - print_capture - INFO - 


2025-06-13 07:34:46,280 - print_capture - INFO - 
    ],
    ],
2025-06-13 07:34:46,280 - print_capture - INFO -     ],
    ],
    ],
2025-06-13 07:34:46,280 - print_capture - INFO -     ],


2025-06-13 07:34:46,280 - print_capture - INFO - 


2025-06-13 07:34:46,280 - print_capture - INFO - 
    # --- LINE 1060 --- 
    # --- LINE 1060 --- 
2025-06-13 07:34:46,280 - print_capture - INFO -     # --- LINE 1060 --- 
    # --- LINE 1060 --- 
    # --- LINE 1060 --- 
2025-06-13 07:34:46,280 - print_capture - INFO -     # --- LINE 1060 --- 


2025-06-13 07:34:46,280 - print_capture - INFO - 


2025-06-13 07:34:46,280 - print_capture - INFO - 
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:46,280 - print_capture - INFO -     "(n)->(n)",
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:46,280 - print_capture - INFO -     "(n)->(n)",


2025-06-13 07:34:46,280 - print_capture - INFO - 


2025-06-13 07:34:46,280 - print_capture - INFO - 
    # --- LINE 1061 --- 
    # --- LINE 1061 --- 
2025-06-13 07:34:46,280 - print_capture - INFO -     # --- LINE 1061 --- 
    # --- LINE 1061 --- 
    # --- LINE 1061 --- 
2025-06-13 07:34:46,280 - print_capture - INFO -     # --- LINE 1061 --- 


2025-06-13 07:34:46,280 - print_capture - INFO - 


2025-06-13 07:34:46,280 - print_capture - INFO - 
    cache=True,
    cache=True,
2025-06-13 07:34:46,280 - print_capture - INFO -     cache=True,
    cache=True,
    cache=True,
2025-06-13 07:34:46,280 - print_capture - INFO -     cache=True,


2025-06-13 07:34:46,280 - print_capture - INFO - 


2025-06-13 07:34:46,281 - print_capture - INFO - 
    # --- LINE 1062 --- 
    # --- LINE 1062 --- 
2025-06-13 07:34:46,281 - print_capture - INFO -     # --- LINE 1062 --- 
    # --- LINE 1062 --- 
    # --- LINE 1062 --- 
2025-06-13 07:34:46,281 - print_capture - INFO -     # --- LINE 1062 --- 


2025-06-13 07:34:46,281 - print_capture - INFO - 


2025-06-13 07:34:46,281 - print_capture - INFO - 
    nopython=True,
    nopython=True,
2025-06-13 07:34:46,281 - print_capture - INFO -     nopython=True,
    nopython=True,
    nopython=True,
2025-06-13 07:34:46,281 - print_capture - INFO -     nopython=True,


2025-06-13 07:34:46,281 - print_capture - INFO - 


2025-06-13 07:34:46,281 - print_capture - INFO - 
# --- LINE 1063 --- 
# --- LINE 1063 --- 
2025-06-13 07:34:46,281 - print_capture - INFO - # --- LINE 1063 --- 
# --- LINE 1063 --- 
# --- LINE 1063 --- 
2025-06-13 07:34:46,281 - print_capture - INFO - # --- LINE 1063 --- 


2025-06-13 07:34:46,281 - print_capture - INFO - 


2025-06-13 07:34:46,281 - print_capture - INFO - 
)
)
2025-06-13 07:34:46,281 - print_capture - INFO - )
)
)
2025-06-13 07:34:46,281 - print_capture - INFO - )


2025-06-13 07:34:46,281 - print_capture - INFO - 


2025-06-13 07:34:46,281 - print_capture - INFO - 
# --- LINE 1064 --- 
# --- LINE 1064 --- 
2025-06-13 07:34:46,281 - print_capture - INFO - # --- LINE 1064 --- 
# --- LINE 1064 --- 
# --- LINE 1064 --- 
2025-06-13 07:34:46,281 - print_capture - INFO - # --- LINE 1064 --- 


2025-06-13 07:34:46,281 - print_capture - INFO - 


2025-06-13 07:34:46,281 - print_capture - INFO - 
def _localmin(x, y):  # pragma: no cover
def _localmin(x, y):  # pragma: no cover
2025-06-13 07:34:46,281 - print_capture - INFO - def _localmin(x, y):  # pragma: no cover
def _localmin(x, y):  # pragma: no cover
def _localmin(x, y):  # pragma: no cover
2025-06-13 07:34:46,281 - print_capture - INFO - def _localmin(x, y):  # pragma: no cover


2025-06-13 07:34:46,281 - print_capture - INFO - 


2025-06-13 07:34:46,281 - print_capture - INFO - 
    # --- LINE 1065 --- 
    # --- LINE 1065 --- 
2025-06-13 07:34:46,281 - print_capture - INFO -     # --- LINE 1065 --- 
    # --- LINE 1065 --- 
    # --- LINE 1065 --- 
2025-06-13 07:34:46,281 - print_capture - INFO -     # --- LINE 1065 --- 


2025-06-13 07:34:46,281 - print_capture - INFO - 


2025-06-13 07:34:46,281 - print_capture - INFO - 
    """Vectorized wrapper for the localmin stencil"""
    """Vectorized wrapper for the localmin stencil"""
2025-06-13 07:34:46,281 - print_capture - INFO -     """Vectorized wrapper for the localmin stencil"""
    """Vectorized wrapper for the localmin stencil"""
    """Vectorized wrapper for the localmin stencil"""
2025-06-13 07:34:46,281 - print_capture - INFO -     """Vectorized wrapper for the localmin stencil"""


2025-06-13 07:34:46,281 - print_capture - INFO - 


2025-06-13 07:34:46,281 - print_capture - INFO - 
    # --- LINE 1066 --- 
    # --- LINE 1066 --- 
2025-06-13 07:34:46,281 - print_capture - INFO -     # --- LINE 1066 --- 
    # --- LINE 1066 --- 
    # --- LINE 1066 --- 
2025-06-13 07:34:46,281 - print_capture - INFO -     # --- LINE 1066 --- 
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
2025-06-13 07:34:46,281 - print_capture - INFO -     #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
2025-06-13 07:34:46,281 - print_capture - INFO -     #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int16, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int16, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:46,281 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int16, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int16, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int16, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:46,281 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int16, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   del x
    #   del x
2025-06-13 07:34:46,281 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:46,281 - print_capture - INFO -     #   del x
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:46,281 - print_capture - INFO -     #   del $2load_global.0
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:46,281 - print_capture - INFO -     #   del $2load_global.0
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,281 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,281 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,281 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,281 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:46,281 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:46,282 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:46,282 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:46,282 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:46,282 - print_capture - INFO -     #   del $const12.5.1
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:46,282 - print_capture - INFO -     #   del $const12.5.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:46,282 - print_capture - INFO -     #   del $const10.4.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:46,282 - print_capture - INFO -     #   del $const10.4.1
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:46,282 - print_capture - INFO -     #   del $14build_slice.6
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:46,282 - print_capture - INFO -     #   del $14build_slice.6
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:46,282 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:46,282 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   del y
    #   del y
2025-06-13 07:34:46,282 - print_capture - INFO -     #   del y
    #   del y
    #   del y
2025-06-13 07:34:46,282 - print_capture - INFO -     #   del y
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:46,282 - print_capture - INFO -     #   del $6call_function.2
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:46,282 - print_capture - INFO -     #   del $6call_function.2
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:46,282 - print_capture - INFO -     #   del $14build_slice.7
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:46,282 - print_capture - INFO -     #   del $14build_slice.7
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,282 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,282 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:46,282 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:46,282 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:46,282 - print_capture - INFO -     #   del $const18.8.1
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:46,282 - print_capture - INFO -     #   del $const18.8.1
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:46,282 - print_capture - INFO -     #   return $20return_value.9
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:46,282 - print_capture - INFO -     #   return $20return_value.9


2025-06-13 07:34:46,282 - print_capture - INFO - 


2025-06-13 07:34:46,282 - print_capture - INFO - 
    y[:] = _localmin_sten(x)
    y[:] = _localmin_sten(x)
2025-06-13 07:34:46,282 - print_capture - INFO -     y[:] = _localmin_sten(x)
    y[:] = _localmin_sten(x)
    y[:] = _localmin_sten(x)
2025-06-13 07:34:46,282 - print_capture - INFO -     y[:] = _localmin_sten(x)


2025-06-13 07:34:46,282 - print_capture - INFO - 


2025-06-13 07:34:46,282 - print_capture - INFO - 
label 0:
label 0:
2025-06-13 07:34:46,284 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:46,284 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,284 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,284 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:46,284 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:46,285 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
2025-06-13 07:34:46,285 - print_capture - INFO -     $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
2025-06-13 07:34:46,285 - print_capture - INFO -     $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:46,285 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:46,285 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:46,285 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:46,285 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:46,285 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:46,285 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:46,285 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:46,285 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:46,285 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:46,285 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:46,285 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:46,285 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:46,285 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:46,285 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:46,285 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:46,285 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:46,285 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:46,285 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
label 0:
label 0:
2025-06-13 07:34:46,295 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:46,295 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,295 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,296 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:46,296 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:46,296 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:46,296 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:46,296 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:46,296 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:46,296 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:46,296 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:46,296 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:46,296 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:46,296 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:46,296 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:46,296 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:46,296 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:46,296 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:46,296 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:46,296 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:46,296 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:46,296 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:46,296 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:46,296 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:46,296 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:46,296 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:46,296 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:46,296 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:46,296 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:46,296 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:46,296 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:46,296 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:46,296 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:46,296 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:46,296 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:46,296 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:46,296 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:46,296 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:46,296 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:46,296 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:46,296 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:46,297 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:46,297 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:46,297 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:46,297 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:46,297 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:46,297 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:46,297 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:46,297 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:46,297 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:46,297 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:46,297 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:46,297 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:46,297 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:46,297 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:46,297 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:46,297 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:46,297 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:46,297 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:46,297 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:46,297 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:46,297 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:46,297 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:46,297 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:46,297 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:46,297 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:46,297 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:46,297 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:46,297 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:46,297 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:46,297 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:46,297 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,297 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,297 - print_capture - INFO -     jump 80                                  []
label 80:
label 80:
2025-06-13 07:34:46,297 - print_capture - INFO - label 80:
label 80:
label 80:
2025-06-13 07:34:46,297 - print_capture - INFO - label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:46,297 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:46,297 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:46,297 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:46,297 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:46,297 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:46,298 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:46,298 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:46,298 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:46,298 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:46,298 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
label 82:
2025-06-13 07:34:46,298 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 07:34:46,298 - print_capture - INFO - label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:46,298 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:46,298 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:46,298 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:46,298 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,298 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,298 - print_capture - INFO -     jump 80                                  []
label 90:
label 90:
2025-06-13 07:34:46,298 - print_capture - INFO - label 90:
label 90:
label 90:
2025-06-13 07:34:46,298 - print_capture - INFO - label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:46,298 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:46,298 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:46,298 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:46,298 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:46,472 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:46,472 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# --- LINE 1052 --- 
# --- LINE 1052 --- 
2025-06-13 07:34:46,472 - print_capture - INFO - # --- LINE 1052 --- 
# --- LINE 1052 --- 
# --- LINE 1052 --- 
2025-06-13 07:34:46,472 - print_capture - INFO - # --- LINE 1052 --- 
# label 0
# label 0
2025-06-13 07:34:46,472 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:46,472 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: array(int32, 1d, A)
#   x = arg(0, name=x)  :: array(int32, 1d, A)
2025-06-13 07:34:46,472 - print_capture - INFO - #   x = arg(0, name=x)  :: array(int32, 1d, A)
#   x = arg(0, name=x)  :: array(int32, 1d, A)
#   x = arg(0, name=x)  :: array(int32, 1d, A)
2025-06-13 07:34:46,472 - print_capture - INFO - #   x = arg(0, name=x)  :: array(int32, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:46,472 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:46,472 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)


2025-06-13 07:34:46,472 - print_capture - INFO - 


2025-06-13 07:34:46,472 - print_capture - INFO - 
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:46,472 - print_capture - INFO - @numba.guvectorize(
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:46,472 - print_capture - INFO - @numba.guvectorize(


2025-06-13 07:34:46,472 - print_capture - INFO - 


2025-06-13 07:34:46,472 - print_capture - INFO - 
    # --- LINE 1053 --- 
    # --- LINE 1053 --- 
2025-06-13 07:34:46,472 - print_capture - INFO -     # --- LINE 1053 --- 
    # --- LINE 1053 --- 
    # --- LINE 1053 --- 
2025-06-13 07:34:46,472 - print_capture - INFO -     # --- LINE 1053 --- 


2025-06-13 07:34:46,472 - print_capture - INFO - 


2025-06-13 07:34:46,472 - print_capture - INFO - 
    [
    [
2025-06-13 07:34:46,472 - print_capture - INFO -     [
    [
    [
2025-06-13 07:34:46,472 - print_capture - INFO -     [


2025-06-13 07:34:46,472 - print_capture - INFO - 


2025-06-13 07:34:46,472 - print_capture - INFO - 
        # --- LINE 1054 --- 
        # --- LINE 1054 --- 
2025-06-13 07:34:46,472 - print_capture - INFO -         # --- LINE 1054 --- 
        # --- LINE 1054 --- 
        # --- LINE 1054 --- 
2025-06-13 07:34:46,472 - print_capture - INFO -         # --- LINE 1054 --- 


2025-06-13 07:34:46,472 - print_capture - INFO - 


2025-06-13 07:34:46,472 - print_capture - INFO - 
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:46,472 - print_capture - INFO -         "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:46,472 - print_capture - INFO -         "void(int16[:], bool_[:])",


2025-06-13 07:34:46,472 - print_capture - INFO - 


2025-06-13 07:34:46,472 - print_capture - INFO - 
        # --- LINE 1055 --- 
        # --- LINE 1055 --- 
2025-06-13 07:34:46,472 - print_capture - INFO -         # --- LINE 1055 --- 
        # --- LINE 1055 --- 
        # --- LINE 1055 --- 
2025-06-13 07:34:46,472 - print_capture - INFO -         # --- LINE 1055 --- 


2025-06-13 07:34:46,472 - print_capture - INFO - 


2025-06-13 07:34:46,472 - print_capture - INFO - 
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:46,472 - print_capture - INFO -         "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:46,472 - print_capture - INFO -         "void(int32[:], bool_[:])",


2025-06-13 07:34:46,472 - print_capture - INFO - 


2025-06-13 07:34:46,472 - print_capture - INFO - 
        # --- LINE 1056 --- 
        # --- LINE 1056 --- 
2025-06-13 07:34:46,472 - print_capture - INFO -         # --- LINE 1056 --- 
        # --- LINE 1056 --- 
        # --- LINE 1056 --- 
2025-06-13 07:34:46,472 - print_capture - INFO -         # --- LINE 1056 --- 


2025-06-13 07:34:46,473 - print_capture - INFO - 


2025-06-13 07:34:46,473 - print_capture - INFO - 
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:46,473 - print_capture - INFO -         "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:46,473 - print_capture - INFO -         "void(int64[:], bool_[:])",


2025-06-13 07:34:46,473 - print_capture - INFO - 


2025-06-13 07:34:46,473 - print_capture - INFO - 
        # --- LINE 1057 --- 
        # --- LINE 1057 --- 
2025-06-13 07:34:46,473 - print_capture - INFO -         # --- LINE 1057 --- 
        # --- LINE 1057 --- 
        # --- LINE 1057 --- 
2025-06-13 07:34:46,473 - print_capture - INFO -         # --- LINE 1057 --- 


2025-06-13 07:34:46,473 - print_capture - INFO - 


2025-06-13 07:34:46,473 - print_capture - INFO - 
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:46,473 - print_capture - INFO -         "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:46,473 - print_capture - INFO -         "void(float32[:], bool_[:])",


2025-06-13 07:34:46,473 - print_capture - INFO - 


2025-06-13 07:34:46,473 - print_capture - INFO - 
        # --- LINE 1058 --- 
        # --- LINE 1058 --- 
2025-06-13 07:34:46,473 - print_capture - INFO -         # --- LINE 1058 --- 
        # --- LINE 1058 --- 
        # --- LINE 1058 --- 
2025-06-13 07:34:46,473 - print_capture - INFO -         # --- LINE 1058 --- 


2025-06-13 07:34:46,473 - print_capture - INFO - 


2025-06-13 07:34:46,473 - print_capture - INFO - 
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:46,473 - print_capture - INFO -         "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:46,473 - print_capture - INFO -         "void(float64[:], bool_[:])",


2025-06-13 07:34:46,473 - print_capture - INFO - 


2025-06-13 07:34:46,473 - print_capture - INFO - 
    # --- LINE 1059 --- 
    # --- LINE 1059 --- 
2025-06-13 07:34:46,473 - print_capture - INFO -     # --- LINE 1059 --- 
    # --- LINE 1059 --- 
    # --- LINE 1059 --- 
2025-06-13 07:34:46,473 - print_capture - INFO -     # --- LINE 1059 --- 


2025-06-13 07:34:46,473 - print_capture - INFO - 


2025-06-13 07:34:46,473 - print_capture - INFO - 
    ],
    ],
2025-06-13 07:34:46,473 - print_capture - INFO -     ],
    ],
    ],
2025-06-13 07:34:46,473 - print_capture - INFO -     ],


2025-06-13 07:34:46,473 - print_capture - INFO - 


2025-06-13 07:34:46,473 - print_capture - INFO - 
    # --- LINE 1060 --- 
    # --- LINE 1060 --- 
2025-06-13 07:34:46,473 - print_capture - INFO -     # --- LINE 1060 --- 
    # --- LINE 1060 --- 
    # --- LINE 1060 --- 
2025-06-13 07:34:46,473 - print_capture - INFO -     # --- LINE 1060 --- 


2025-06-13 07:34:46,473 - print_capture - INFO - 


2025-06-13 07:34:46,473 - print_capture - INFO - 
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:46,473 - print_capture - INFO -     "(n)->(n)",
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:46,473 - print_capture - INFO -     "(n)->(n)",


2025-06-13 07:34:46,473 - print_capture - INFO - 


2025-06-13 07:34:46,473 - print_capture - INFO - 
    # --- LINE 1061 --- 
    # --- LINE 1061 --- 
2025-06-13 07:34:46,473 - print_capture - INFO -     # --- LINE 1061 --- 
    # --- LINE 1061 --- 
    # --- LINE 1061 --- 
2025-06-13 07:34:46,473 - print_capture - INFO -     # --- LINE 1061 --- 


2025-06-13 07:34:46,473 - print_capture - INFO - 


2025-06-13 07:34:46,473 - print_capture - INFO - 
    cache=True,
    cache=True,
2025-06-13 07:34:46,473 - print_capture - INFO -     cache=True,
    cache=True,
    cache=True,
2025-06-13 07:34:46,473 - print_capture - INFO -     cache=True,


2025-06-13 07:34:46,473 - print_capture - INFO - 


2025-06-13 07:34:46,473 - print_capture - INFO - 
    # --- LINE 1062 --- 
    # --- LINE 1062 --- 
2025-06-13 07:34:46,473 - print_capture - INFO -     # --- LINE 1062 --- 
    # --- LINE 1062 --- 
    # --- LINE 1062 --- 
2025-06-13 07:34:46,473 - print_capture - INFO -     # --- LINE 1062 --- 


2025-06-13 07:34:46,474 - print_capture - INFO - 


2025-06-13 07:34:46,474 - print_capture - INFO - 
    nopython=True,
    nopython=True,
2025-06-13 07:34:46,474 - print_capture - INFO -     nopython=True,
    nopython=True,
    nopython=True,
2025-06-13 07:34:46,474 - print_capture - INFO -     nopython=True,


2025-06-13 07:34:46,474 - print_capture - INFO - 


2025-06-13 07:34:46,474 - print_capture - INFO - 
# --- LINE 1063 --- 
# --- LINE 1063 --- 
2025-06-13 07:34:46,474 - print_capture - INFO - # --- LINE 1063 --- 
# --- LINE 1063 --- 
# --- LINE 1063 --- 
2025-06-13 07:34:46,474 - print_capture - INFO - # --- LINE 1063 --- 


2025-06-13 07:34:46,474 - print_capture - INFO - 


2025-06-13 07:34:46,474 - print_capture - INFO - 
)
)
2025-06-13 07:34:46,474 - print_capture - INFO - )
)
)
2025-06-13 07:34:46,474 - print_capture - INFO - )


2025-06-13 07:34:46,474 - print_capture - INFO - 


2025-06-13 07:34:46,474 - print_capture - INFO - 
# --- LINE 1064 --- 
# --- LINE 1064 --- 
2025-06-13 07:34:46,474 - print_capture - INFO - # --- LINE 1064 --- 
# --- LINE 1064 --- 
# --- LINE 1064 --- 
2025-06-13 07:34:46,474 - print_capture - INFO - # --- LINE 1064 --- 


2025-06-13 07:34:46,474 - print_capture - INFO - 


2025-06-13 07:34:46,474 - print_capture - INFO - 
def _localmin(x, y):  # pragma: no cover
def _localmin(x, y):  # pragma: no cover
2025-06-13 07:34:46,474 - print_capture - INFO - def _localmin(x, y):  # pragma: no cover
def _localmin(x, y):  # pragma: no cover
def _localmin(x, y):  # pragma: no cover
2025-06-13 07:34:46,474 - print_capture - INFO - def _localmin(x, y):  # pragma: no cover


2025-06-13 07:34:46,474 - print_capture - INFO - 


2025-06-13 07:34:46,474 - print_capture - INFO - 
    # --- LINE 1065 --- 
    # --- LINE 1065 --- 
2025-06-13 07:34:46,474 - print_capture - INFO -     # --- LINE 1065 --- 
    # --- LINE 1065 --- 
    # --- LINE 1065 --- 
2025-06-13 07:34:46,474 - print_capture - INFO -     # --- LINE 1065 --- 


2025-06-13 07:34:46,474 - print_capture - INFO - 


2025-06-13 07:34:46,474 - print_capture - INFO - 
    """Vectorized wrapper for the localmin stencil"""
    """Vectorized wrapper for the localmin stencil"""
2025-06-13 07:34:46,474 - print_capture - INFO -     """Vectorized wrapper for the localmin stencil"""
    """Vectorized wrapper for the localmin stencil"""
    """Vectorized wrapper for the localmin stencil"""
2025-06-13 07:34:46,474 - print_capture - INFO -     """Vectorized wrapper for the localmin stencil"""


2025-06-13 07:34:46,474 - print_capture - INFO - 


2025-06-13 07:34:46,474 - print_capture - INFO - 
    # --- LINE 1066 --- 
    # --- LINE 1066 --- 
2025-06-13 07:34:46,474 - print_capture - INFO -     # --- LINE 1066 --- 
    # --- LINE 1066 --- 
    # --- LINE 1066 --- 
2025-06-13 07:34:46,474 - print_capture - INFO -     # --- LINE 1066 --- 
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
2025-06-13 07:34:46,474 - print_capture - INFO -     #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
2025-06-13 07:34:46,474 - print_capture - INFO -     #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:46,474 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:46,474 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   del x
    #   del x
2025-06-13 07:34:46,474 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:46,474 - print_capture - INFO -     #   del x
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:46,474 - print_capture - INFO -     #   del $2load_global.0
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:46,474 - print_capture - INFO -     #   del $2load_global.0
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,474 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,474 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,474 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,474 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:46,474 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:46,474 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:46,474 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:46,474 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:46,475 - print_capture - INFO -     #   del $const12.5.1
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:46,475 - print_capture - INFO -     #   del $const12.5.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:46,475 - print_capture - INFO -     #   del $const10.4.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:46,475 - print_capture - INFO -     #   del $const10.4.1
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:46,475 - print_capture - INFO -     #   del $14build_slice.6
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:46,475 - print_capture - INFO -     #   del $14build_slice.6
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:46,475 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:46,475 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   del y
    #   del y
2025-06-13 07:34:46,475 - print_capture - INFO -     #   del y
    #   del y
    #   del y
2025-06-13 07:34:46,475 - print_capture - INFO -     #   del y
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:46,475 - print_capture - INFO -     #   del $6call_function.2
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:46,475 - print_capture - INFO -     #   del $6call_function.2
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:46,475 - print_capture - INFO -     #   del $14build_slice.7
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:46,475 - print_capture - INFO -     #   del $14build_slice.7
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,475 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,475 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:46,475 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:46,475 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:46,475 - print_capture - INFO -     #   del $const18.8.1
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:46,475 - print_capture - INFO -     #   del $const18.8.1
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:46,475 - print_capture - INFO -     #   return $20return_value.9
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:46,475 - print_capture - INFO -     #   return $20return_value.9


2025-06-13 07:34:46,475 - print_capture - INFO - 


2025-06-13 07:34:46,475 - print_capture - INFO - 
    y[:] = _localmin_sten(x)
    y[:] = _localmin_sten(x)
2025-06-13 07:34:46,475 - print_capture - INFO -     y[:] = _localmin_sten(x)
    y[:] = _localmin_sten(x)
    y[:] = _localmin_sten(x)
2025-06-13 07:34:46,475 - print_capture - INFO -     y[:] = _localmin_sten(x)


2025-06-13 07:34:46,475 - print_capture - INFO - 


2025-06-13 07:34:46,475 - print_capture - INFO - 
label 0:
label 0:
2025-06-13 07:34:46,477 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:46,477 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,477 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,478 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:46,478 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:46,478 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
2025-06-13 07:34:46,478 - print_capture - INFO -     $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
2025-06-13 07:34:46,478 - print_capture - INFO -     $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:46,478 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:46,478 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:46,478 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:46,478 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:46,478 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:46,478 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:46,478 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:46,478 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:46,478 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:46,478 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:46,478 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:46,478 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:46,478 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:46,478 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:46,478 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:46,478 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:46,478 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:46,478 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
label 0:
label 0:
2025-06-13 07:34:46,487 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:46,487 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,487 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,487 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:46,487 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:46,487 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:46,487 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:46,487 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:46,488 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:46,488 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:46,488 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:46,488 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:46,488 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:46,488 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:46,488 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:46,488 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:46,488 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:46,488 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:46,488 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:46,488 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:46,488 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:46,488 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:46,488 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:46,488 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:46,488 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:46,488 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:46,488 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:46,488 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:46,488 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:46,488 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:46,488 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:46,488 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:46,488 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:46,488 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:46,488 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:46,488 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:46,488 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:46,488 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:46,488 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:46,488 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:46,488 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:46,488 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:46,488 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:46,488 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:46,488 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:46,488 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:46,488 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:46,488 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:46,488 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:46,489 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:46,489 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:46,489 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:46,489 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:46,489 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:46,489 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:46,489 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:46,489 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:46,489 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:46,489 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:46,489 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:46,489 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:46,489 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:46,489 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:46,489 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:46,489 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:46,489 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:46,489 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:46,489 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:46,489 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:46,489 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:46,489 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:46,489 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,489 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,489 - print_capture - INFO -     jump 80                                  []
label 80:
label 80:
2025-06-13 07:34:46,489 - print_capture - INFO - label 80:
label 80:
label 80:
2025-06-13 07:34:46,489 - print_capture - INFO - label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:46,489 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:46,489 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:46,489 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:46,489 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:46,489 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:46,489 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:46,489 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:46,489 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:46,489 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:46,489 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
label 82:
2025-06-13 07:34:46,489 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 07:34:46,489 - print_capture - INFO - label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:46,489 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:46,489 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:46,490 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:46,490 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,490 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,490 - print_capture - INFO -     jump 80                                  []
label 90:
label 90:
2025-06-13 07:34:46,490 - print_capture - INFO - label 90:
label 90:
label 90:
2025-06-13 07:34:46,490 - print_capture - INFO - label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:46,490 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:46,490 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:46,490 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:46,490 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:46,663 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:46,663 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# --- LINE 1052 --- 
# --- LINE 1052 --- 
2025-06-13 07:34:46,663 - print_capture - INFO - # --- LINE 1052 --- 
# --- LINE 1052 --- 
# --- LINE 1052 --- 
2025-06-13 07:34:46,663 - print_capture - INFO - # --- LINE 1052 --- 
# label 0
# label 0
2025-06-13 07:34:46,663 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:46,663 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: array(int64, 1d, A)
#   x = arg(0, name=x)  :: array(int64, 1d, A)
2025-06-13 07:34:46,663 - print_capture - INFO - #   x = arg(0, name=x)  :: array(int64, 1d, A)
#   x = arg(0, name=x)  :: array(int64, 1d, A)
#   x = arg(0, name=x)  :: array(int64, 1d, A)
2025-06-13 07:34:46,663 - print_capture - INFO - #   x = arg(0, name=x)  :: array(int64, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:46,663 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:46,663 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)


2025-06-13 07:34:46,663 - print_capture - INFO - 


2025-06-13 07:34:46,663 - print_capture - INFO - 
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:46,663 - print_capture - INFO - @numba.guvectorize(
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:46,663 - print_capture - INFO - @numba.guvectorize(


2025-06-13 07:34:46,663 - print_capture - INFO - 


2025-06-13 07:34:46,663 - print_capture - INFO - 
    # --- LINE 1053 --- 
    # --- LINE 1053 --- 
2025-06-13 07:34:46,663 - print_capture - INFO -     # --- LINE 1053 --- 
    # --- LINE 1053 --- 
    # --- LINE 1053 --- 
2025-06-13 07:34:46,663 - print_capture - INFO -     # --- LINE 1053 --- 


2025-06-13 07:34:46,663 - print_capture - INFO - 


2025-06-13 07:34:46,663 - print_capture - INFO - 
    [
    [
2025-06-13 07:34:46,663 - print_capture - INFO -     [
    [
    [
2025-06-13 07:34:46,663 - print_capture - INFO -     [


2025-06-13 07:34:46,663 - print_capture - INFO - 


2025-06-13 07:34:46,663 - print_capture - INFO - 
        # --- LINE 1054 --- 
        # --- LINE 1054 --- 
2025-06-13 07:34:46,663 - print_capture - INFO -         # --- LINE 1054 --- 
        # --- LINE 1054 --- 
        # --- LINE 1054 --- 
2025-06-13 07:34:46,663 - print_capture - INFO -         # --- LINE 1054 --- 


2025-06-13 07:34:46,663 - print_capture - INFO - 


2025-06-13 07:34:46,663 - print_capture - INFO - 
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:46,663 - print_capture - INFO -         "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:46,663 - print_capture - INFO -         "void(int16[:], bool_[:])",


2025-06-13 07:34:46,663 - print_capture - INFO - 


2025-06-13 07:34:46,663 - print_capture - INFO - 
        # --- LINE 1055 --- 
        # --- LINE 1055 --- 
2025-06-13 07:34:46,663 - print_capture - INFO -         # --- LINE 1055 --- 
        # --- LINE 1055 --- 
        # --- LINE 1055 --- 
2025-06-13 07:34:46,663 - print_capture - INFO -         # --- LINE 1055 --- 


2025-06-13 07:34:46,663 - print_capture - INFO - 


2025-06-13 07:34:46,663 - print_capture - INFO - 
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:46,663 - print_capture - INFO -         "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:46,663 - print_capture - INFO -         "void(int32[:], bool_[:])",


2025-06-13 07:34:46,663 - print_capture - INFO - 


2025-06-13 07:34:46,664 - print_capture - INFO - 
        # --- LINE 1056 --- 
        # --- LINE 1056 --- 
2025-06-13 07:34:46,664 - print_capture - INFO -         # --- LINE 1056 --- 
        # --- LINE 1056 --- 
        # --- LINE 1056 --- 
2025-06-13 07:34:46,664 - print_capture - INFO -         # --- LINE 1056 --- 


2025-06-13 07:34:46,664 - print_capture - INFO - 


2025-06-13 07:34:46,664 - print_capture - INFO - 
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:46,664 - print_capture - INFO -         "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:46,664 - print_capture - INFO -         "void(int64[:], bool_[:])",


2025-06-13 07:34:46,664 - print_capture - INFO - 


2025-06-13 07:34:46,664 - print_capture - INFO - 
        # --- LINE 1057 --- 
        # --- LINE 1057 --- 
2025-06-13 07:34:46,664 - print_capture - INFO -         # --- LINE 1057 --- 
        # --- LINE 1057 --- 
        # --- LINE 1057 --- 
2025-06-13 07:34:46,664 - print_capture - INFO -         # --- LINE 1057 --- 


2025-06-13 07:34:46,664 - print_capture - INFO - 


2025-06-13 07:34:46,664 - print_capture - INFO - 
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:46,664 - print_capture - INFO -         "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:46,664 - print_capture - INFO -         "void(float32[:], bool_[:])",


2025-06-13 07:34:46,664 - print_capture - INFO - 


2025-06-13 07:34:46,664 - print_capture - INFO - 
        # --- LINE 1058 --- 
        # --- LINE 1058 --- 
2025-06-13 07:34:46,664 - print_capture - INFO -         # --- LINE 1058 --- 
        # --- LINE 1058 --- 
        # --- LINE 1058 --- 
2025-06-13 07:34:46,664 - print_capture - INFO -         # --- LINE 1058 --- 


2025-06-13 07:34:46,664 - print_capture - INFO - 


2025-06-13 07:34:46,664 - print_capture - INFO - 
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:46,664 - print_capture - INFO -         "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:46,664 - print_capture - INFO -         "void(float64[:], bool_[:])",


2025-06-13 07:34:46,664 - print_capture - INFO - 


2025-06-13 07:34:46,664 - print_capture - INFO - 
    # --- LINE 1059 --- 
    # --- LINE 1059 --- 
2025-06-13 07:34:46,664 - print_capture - INFO -     # --- LINE 1059 --- 
    # --- LINE 1059 --- 
    # --- LINE 1059 --- 
2025-06-13 07:34:46,664 - print_capture - INFO -     # --- LINE 1059 --- 


2025-06-13 07:34:46,664 - print_capture - INFO - 


2025-06-13 07:34:46,664 - print_capture - INFO - 
    ],
    ],
2025-06-13 07:34:46,664 - print_capture - INFO -     ],
    ],
    ],
2025-06-13 07:34:46,664 - print_capture - INFO -     ],


2025-06-13 07:34:46,664 - print_capture - INFO - 


2025-06-13 07:34:46,664 - print_capture - INFO - 
    # --- LINE 1060 --- 
    # --- LINE 1060 --- 
2025-06-13 07:34:46,664 - print_capture - INFO -     # --- LINE 1060 --- 
    # --- LINE 1060 --- 
    # --- LINE 1060 --- 
2025-06-13 07:34:46,664 - print_capture - INFO -     # --- LINE 1060 --- 


2025-06-13 07:34:46,664 - print_capture - INFO - 


2025-06-13 07:34:46,664 - print_capture - INFO - 
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:46,664 - print_capture - INFO -     "(n)->(n)",
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:46,664 - print_capture - INFO -     "(n)->(n)",


2025-06-13 07:34:46,664 - print_capture - INFO - 


2025-06-13 07:34:46,664 - print_capture - INFO - 
    # --- LINE 1061 --- 
    # --- LINE 1061 --- 
2025-06-13 07:34:46,664 - print_capture - INFO -     # --- LINE 1061 --- 
    # --- LINE 1061 --- 
    # --- LINE 1061 --- 
2025-06-13 07:34:46,664 - print_capture - INFO -     # --- LINE 1061 --- 


2025-06-13 07:34:46,664 - print_capture - INFO - 


2025-06-13 07:34:46,664 - print_capture - INFO - 
    cache=True,
    cache=True,
2025-06-13 07:34:46,664 - print_capture - INFO -     cache=True,
    cache=True,
    cache=True,
2025-06-13 07:34:46,665 - print_capture - INFO -     cache=True,


2025-06-13 07:34:46,665 - print_capture - INFO - 


2025-06-13 07:34:46,665 - print_capture - INFO - 
    # --- LINE 1062 --- 
    # --- LINE 1062 --- 
2025-06-13 07:34:46,665 - print_capture - INFO -     # --- LINE 1062 --- 
    # --- LINE 1062 --- 
    # --- LINE 1062 --- 
2025-06-13 07:34:46,665 - print_capture - INFO -     # --- LINE 1062 --- 


2025-06-13 07:34:46,665 - print_capture - INFO - 


2025-06-13 07:34:46,665 - print_capture - INFO - 
    nopython=True,
    nopython=True,
2025-06-13 07:34:46,665 - print_capture - INFO -     nopython=True,
    nopython=True,
    nopython=True,
2025-06-13 07:34:46,665 - print_capture - INFO -     nopython=True,


2025-06-13 07:34:46,665 - print_capture - INFO - 


2025-06-13 07:34:46,665 - print_capture - INFO - 
# --- LINE 1063 --- 
# --- LINE 1063 --- 
2025-06-13 07:34:46,665 - print_capture - INFO - # --- LINE 1063 --- 
# --- LINE 1063 --- 
# --- LINE 1063 --- 
2025-06-13 07:34:46,665 - print_capture - INFO - # --- LINE 1063 --- 


2025-06-13 07:34:46,665 - print_capture - INFO - 


2025-06-13 07:34:46,665 - print_capture - INFO - 
)
)
2025-06-13 07:34:46,665 - print_capture - INFO - )
)
)
2025-06-13 07:34:46,665 - print_capture - INFO - )


2025-06-13 07:34:46,665 - print_capture - INFO - 


2025-06-13 07:34:46,665 - print_capture - INFO - 
# --- LINE 1064 --- 
# --- LINE 1064 --- 
2025-06-13 07:34:46,665 - print_capture - INFO - # --- LINE 1064 --- 
# --- LINE 1064 --- 
# --- LINE 1064 --- 
2025-06-13 07:34:46,665 - print_capture - INFO - # --- LINE 1064 --- 


2025-06-13 07:34:46,665 - print_capture - INFO - 


2025-06-13 07:34:46,665 - print_capture - INFO - 
def _localmin(x, y):  # pragma: no cover
def _localmin(x, y):  # pragma: no cover
2025-06-13 07:34:46,665 - print_capture - INFO - def _localmin(x, y):  # pragma: no cover
def _localmin(x, y):  # pragma: no cover
def _localmin(x, y):  # pragma: no cover
2025-06-13 07:34:46,665 - print_capture - INFO - def _localmin(x, y):  # pragma: no cover


2025-06-13 07:34:46,665 - print_capture - INFO - 


2025-06-13 07:34:46,665 - print_capture - INFO - 
    # --- LINE 1065 --- 
    # --- LINE 1065 --- 
2025-06-13 07:34:46,665 - print_capture - INFO -     # --- LINE 1065 --- 
    # --- LINE 1065 --- 
    # --- LINE 1065 --- 
2025-06-13 07:34:46,665 - print_capture - INFO -     # --- LINE 1065 --- 


2025-06-13 07:34:46,665 - print_capture - INFO - 


2025-06-13 07:34:46,665 - print_capture - INFO - 
    """Vectorized wrapper for the localmin stencil"""
    """Vectorized wrapper for the localmin stencil"""
2025-06-13 07:34:46,665 - print_capture - INFO -     """Vectorized wrapper for the localmin stencil"""
    """Vectorized wrapper for the localmin stencil"""
    """Vectorized wrapper for the localmin stencil"""
2025-06-13 07:34:46,665 - print_capture - INFO -     """Vectorized wrapper for the localmin stencil"""


2025-06-13 07:34:46,665 - print_capture - INFO - 


2025-06-13 07:34:46,665 - print_capture - INFO - 
    # --- LINE 1066 --- 
    # --- LINE 1066 --- 
2025-06-13 07:34:46,665 - print_capture - INFO -     # --- LINE 1066 --- 
    # --- LINE 1066 --- 
    # --- LINE 1066 --- 
2025-06-13 07:34:46,665 - print_capture - INFO -     # --- LINE 1066 --- 
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
2025-06-13 07:34:46,665 - print_capture - INFO -     #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
2025-06-13 07:34:46,665 - print_capture - INFO -     #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:46,665 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:46,665 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   del x
    #   del x
2025-06-13 07:34:46,665 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:46,665 - print_capture - INFO -     #   del x
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:46,665 - print_capture - INFO -     #   del $2load_global.0
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:46,665 - print_capture - INFO -     #   del $2load_global.0
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,665 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,665 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,666 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,666 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:46,666 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:46,666 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:46,666 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:46,666 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:46,666 - print_capture - INFO -     #   del $const12.5.1
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:46,666 - print_capture - INFO -     #   del $const12.5.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:46,666 - print_capture - INFO -     #   del $const10.4.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:46,666 - print_capture - INFO -     #   del $const10.4.1
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:46,666 - print_capture - INFO -     #   del $14build_slice.6
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:46,666 - print_capture - INFO -     #   del $14build_slice.6
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:46,666 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:46,666 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   del y
    #   del y
2025-06-13 07:34:46,666 - print_capture - INFO -     #   del y
    #   del y
    #   del y
2025-06-13 07:34:46,666 - print_capture - INFO -     #   del y
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:46,666 - print_capture - INFO -     #   del $6call_function.2
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:46,666 - print_capture - INFO -     #   del $6call_function.2
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:46,666 - print_capture - INFO -     #   del $14build_slice.7
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:46,666 - print_capture - INFO -     #   del $14build_slice.7
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,666 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,666 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:46,666 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:46,666 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:46,666 - print_capture - INFO -     #   del $const18.8.1
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:46,666 - print_capture - INFO -     #   del $const18.8.1
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:46,666 - print_capture - INFO -     #   return $20return_value.9
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:46,666 - print_capture - INFO -     #   return $20return_value.9


2025-06-13 07:34:46,666 - print_capture - INFO - 


2025-06-13 07:34:46,666 - print_capture - INFO - 
    y[:] = _localmin_sten(x)
    y[:] = _localmin_sten(x)
2025-06-13 07:34:46,666 - print_capture - INFO -     y[:] = _localmin_sten(x)
    y[:] = _localmin_sten(x)
    y[:] = _localmin_sten(x)
2025-06-13 07:34:46,666 - print_capture - INFO -     y[:] = _localmin_sten(x)


2025-06-13 07:34:46,666 - print_capture - INFO - 


2025-06-13 07:34:46,666 - print_capture - INFO - 
label 0:
label 0:
2025-06-13 07:34:46,668 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:46,669 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,669 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,669 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:46,669 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:46,669 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
2025-06-13 07:34:46,669 - print_capture - INFO -     $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
2025-06-13 07:34:46,669 - print_capture - INFO -     $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:46,669 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:46,669 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:46,669 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:46,669 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:46,669 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:46,669 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:46,669 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:46,669 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:46,669 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:46,669 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:46,669 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:46,669 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:46,669 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:46,669 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:46,669 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:46,669 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:46,669 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:46,669 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
label 0:
label 0:
2025-06-13 07:34:46,679 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:46,680 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,680 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,680 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:46,680 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:46,680 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:46,680 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:46,680 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:46,680 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:46,680 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:46,680 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:46,680 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:46,680 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:46,680 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:46,680 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:46,680 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:46,680 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:46,680 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:46,680 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:46,680 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:46,680 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:46,680 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:46,680 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:46,680 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:46,680 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:46,680 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:46,680 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:46,680 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:46,680 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:46,680 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:46,680 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:46,680 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:46,680 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:46,680 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:46,680 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:46,680 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:46,680 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:46,680 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:46,681 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:46,681 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:46,681 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:46,681 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:46,681 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:46,681 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:46,681 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:46,681 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:46,681 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:46,681 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:46,681 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:46,681 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:46,681 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:46,681 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:46,681 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:46,681 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:46,681 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:46,681 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:46,681 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:46,681 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:46,681 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:46,681 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:46,681 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:46,681 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:46,681 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:46,681 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:46,681 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:46,681 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:46,681 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:46,681 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:46,681 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:46,681 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:46,681 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:46,681 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,681 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,681 - print_capture - INFO -     jump 80                                  []
label 80:
label 80:
2025-06-13 07:34:46,681 - print_capture - INFO - label 80:
label 80:
label 80:
2025-06-13 07:34:46,681 - print_capture - INFO - label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:46,681 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:46,682 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:46,682 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:46,682 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:46,682 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:46,682 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:46,682 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:46,682 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:46,682 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:46,682 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
label 82:
2025-06-13 07:34:46,682 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 07:34:46,682 - print_capture - INFO - label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:46,682 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:46,682 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:46,682 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:46,682 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,682 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,682 - print_capture - INFO -     jump 80                                  []
label 90:
label 90:
2025-06-13 07:34:46,682 - print_capture - INFO - label 90:
label 90:
label 90:
2025-06-13 07:34:46,682 - print_capture - INFO - label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:46,682 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:46,682 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:46,682 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:46,682 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:46,856 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:46,857 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# --- LINE 1052 --- 
# --- LINE 1052 --- 
2025-06-13 07:34:46,857 - print_capture - INFO - # --- LINE 1052 --- 
# --- LINE 1052 --- 
# --- LINE 1052 --- 
2025-06-13 07:34:46,857 - print_capture - INFO - # --- LINE 1052 --- 
# label 0
# label 0
2025-06-13 07:34:46,857 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:46,857 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: array(float32, 1d, A)
#   x = arg(0, name=x)  :: array(float32, 1d, A)
2025-06-13 07:34:46,857 - print_capture - INFO - #   x = arg(0, name=x)  :: array(float32, 1d, A)
#   x = arg(0, name=x)  :: array(float32, 1d, A)
#   x = arg(0, name=x)  :: array(float32, 1d, A)
2025-06-13 07:34:46,857 - print_capture - INFO - #   x = arg(0, name=x)  :: array(float32, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:46,857 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:46,857 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)


2025-06-13 07:34:46,857 - print_capture - INFO - 


2025-06-13 07:34:46,857 - print_capture - INFO - 
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:46,857 - print_capture - INFO - @numba.guvectorize(
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:46,857 - print_capture - INFO - @numba.guvectorize(


2025-06-13 07:34:46,857 - print_capture - INFO - 


2025-06-13 07:34:46,857 - print_capture - INFO - 
    # --- LINE 1053 --- 
    # --- LINE 1053 --- 
2025-06-13 07:34:46,857 - print_capture - INFO -     # --- LINE 1053 --- 
    # --- LINE 1053 --- 
    # --- LINE 1053 --- 
2025-06-13 07:34:46,857 - print_capture - INFO -     # --- LINE 1053 --- 


2025-06-13 07:34:46,857 - print_capture - INFO - 


2025-06-13 07:34:46,857 - print_capture - INFO - 
    [
    [
2025-06-13 07:34:46,857 - print_capture - INFO -     [
    [
    [
2025-06-13 07:34:46,857 - print_capture - INFO -     [


2025-06-13 07:34:46,857 - print_capture - INFO - 


2025-06-13 07:34:46,857 - print_capture - INFO - 
        # --- LINE 1054 --- 
        # --- LINE 1054 --- 
2025-06-13 07:34:46,857 - print_capture - INFO -         # --- LINE 1054 --- 
        # --- LINE 1054 --- 
        # --- LINE 1054 --- 
2025-06-13 07:34:46,857 - print_capture - INFO -         # --- LINE 1054 --- 


2025-06-13 07:34:46,857 - print_capture - INFO - 


2025-06-13 07:34:46,857 - print_capture - INFO - 
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:46,857 - print_capture - INFO -         "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:46,857 - print_capture - INFO -         "void(int16[:], bool_[:])",


2025-06-13 07:34:46,857 - print_capture - INFO - 


2025-06-13 07:34:46,857 - print_capture - INFO - 
        # --- LINE 1055 --- 
        # --- LINE 1055 --- 
2025-06-13 07:34:46,857 - print_capture - INFO -         # --- LINE 1055 --- 
        # --- LINE 1055 --- 
        # --- LINE 1055 --- 
2025-06-13 07:34:46,857 - print_capture - INFO -         # --- LINE 1055 --- 


2025-06-13 07:34:46,857 - print_capture - INFO - 


2025-06-13 07:34:46,857 - print_capture - INFO - 
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:46,857 - print_capture - INFO -         "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:46,857 - print_capture - INFO -         "void(int32[:], bool_[:])",


2025-06-13 07:34:46,857 - print_capture - INFO - 


2025-06-13 07:34:46,857 - print_capture - INFO - 
        # --- LINE 1056 --- 
        # --- LINE 1056 --- 
2025-06-13 07:34:46,857 - print_capture - INFO -         # --- LINE 1056 --- 
        # --- LINE 1056 --- 
        # --- LINE 1056 --- 
2025-06-13 07:34:46,857 - print_capture - INFO -         # --- LINE 1056 --- 


2025-06-13 07:34:46,857 - print_capture - INFO - 


2025-06-13 07:34:46,858 - print_capture - INFO - 
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:46,858 - print_capture - INFO -         "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:46,858 - print_capture - INFO -         "void(int64[:], bool_[:])",


2025-06-13 07:34:46,858 - print_capture - INFO - 


2025-06-13 07:34:46,858 - print_capture - INFO - 
        # --- LINE 1057 --- 
        # --- LINE 1057 --- 
2025-06-13 07:34:46,858 - print_capture - INFO -         # --- LINE 1057 --- 
        # --- LINE 1057 --- 
        # --- LINE 1057 --- 
2025-06-13 07:34:46,858 - print_capture - INFO -         # --- LINE 1057 --- 


2025-06-13 07:34:46,858 - print_capture - INFO - 


2025-06-13 07:34:46,858 - print_capture - INFO - 
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:46,858 - print_capture - INFO -         "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:46,858 - print_capture - INFO -         "void(float32[:], bool_[:])",


2025-06-13 07:34:46,858 - print_capture - INFO - 


2025-06-13 07:34:46,858 - print_capture - INFO - 
        # --- LINE 1058 --- 
        # --- LINE 1058 --- 
2025-06-13 07:34:46,858 - print_capture - INFO -         # --- LINE 1058 --- 
        # --- LINE 1058 --- 
        # --- LINE 1058 --- 
2025-06-13 07:34:46,858 - print_capture - INFO -         # --- LINE 1058 --- 


2025-06-13 07:34:46,858 - print_capture - INFO - 


2025-06-13 07:34:46,858 - print_capture - INFO - 
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:46,858 - print_capture - INFO -         "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:46,858 - print_capture - INFO -         "void(float64[:], bool_[:])",


2025-06-13 07:34:46,858 - print_capture - INFO - 


2025-06-13 07:34:46,858 - print_capture - INFO - 
    # --- LINE 1059 --- 
    # --- LINE 1059 --- 
2025-06-13 07:34:46,858 - print_capture - INFO -     # --- LINE 1059 --- 
    # --- LINE 1059 --- 
    # --- LINE 1059 --- 
2025-06-13 07:34:46,858 - print_capture - INFO -     # --- LINE 1059 --- 


2025-06-13 07:34:46,858 - print_capture - INFO - 


2025-06-13 07:34:46,858 - print_capture - INFO - 
    ],
    ],
2025-06-13 07:34:46,858 - print_capture - INFO -     ],
    ],
    ],
2025-06-13 07:34:46,858 - print_capture - INFO -     ],


2025-06-13 07:34:46,858 - print_capture - INFO - 


2025-06-13 07:34:46,858 - print_capture - INFO - 
    # --- LINE 1060 --- 
    # --- LINE 1060 --- 
2025-06-13 07:34:46,858 - print_capture - INFO -     # --- LINE 1060 --- 
    # --- LINE 1060 --- 
    # --- LINE 1060 --- 
2025-06-13 07:34:46,858 - print_capture - INFO -     # --- LINE 1060 --- 


2025-06-13 07:34:46,858 - print_capture - INFO - 


2025-06-13 07:34:46,858 - print_capture - INFO - 
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:46,858 - print_capture - INFO -     "(n)->(n)",
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:46,858 - print_capture - INFO -     "(n)->(n)",


2025-06-13 07:34:46,858 - print_capture - INFO - 


2025-06-13 07:34:46,858 - print_capture - INFO - 
    # --- LINE 1061 --- 
    # --- LINE 1061 --- 
2025-06-13 07:34:46,858 - print_capture - INFO -     # --- LINE 1061 --- 
    # --- LINE 1061 --- 
    # --- LINE 1061 --- 
2025-06-13 07:34:46,858 - print_capture - INFO -     # --- LINE 1061 --- 


2025-06-13 07:34:46,858 - print_capture - INFO - 


2025-06-13 07:34:46,858 - print_capture - INFO - 
    cache=True,
    cache=True,
2025-06-13 07:34:46,858 - print_capture - INFO -     cache=True,
    cache=True,
    cache=True,
2025-06-13 07:34:46,858 - print_capture - INFO -     cache=True,


2025-06-13 07:34:46,858 - print_capture - INFO - 


2025-06-13 07:34:46,858 - print_capture - INFO - 
    # --- LINE 1062 --- 
    # --- LINE 1062 --- 
2025-06-13 07:34:46,858 - print_capture - INFO -     # --- LINE 1062 --- 
    # --- LINE 1062 --- 
    # --- LINE 1062 --- 
2025-06-13 07:34:46,858 - print_capture - INFO -     # --- LINE 1062 --- 


2025-06-13 07:34:46,858 - print_capture - INFO - 


2025-06-13 07:34:46,858 - print_capture - INFO - 
    nopython=True,
    nopython=True,
2025-06-13 07:34:46,859 - print_capture - INFO -     nopython=True,
    nopython=True,
    nopython=True,
2025-06-13 07:34:46,859 - print_capture - INFO -     nopython=True,


2025-06-13 07:34:46,859 - print_capture - INFO - 


2025-06-13 07:34:46,859 - print_capture - INFO - 
# --- LINE 1063 --- 
# --- LINE 1063 --- 
2025-06-13 07:34:46,859 - print_capture - INFO - # --- LINE 1063 --- 
# --- LINE 1063 --- 
# --- LINE 1063 --- 
2025-06-13 07:34:46,859 - print_capture - INFO - # --- LINE 1063 --- 


2025-06-13 07:34:46,859 - print_capture - INFO - 


2025-06-13 07:34:46,859 - print_capture - INFO - 
)
)
2025-06-13 07:34:46,859 - print_capture - INFO - )
)
)
2025-06-13 07:34:46,859 - print_capture - INFO - )


2025-06-13 07:34:46,859 - print_capture - INFO - 


2025-06-13 07:34:46,859 - print_capture - INFO - 
# --- LINE 1064 --- 
# --- LINE 1064 --- 
2025-06-13 07:34:46,859 - print_capture - INFO - # --- LINE 1064 --- 
# --- LINE 1064 --- 
# --- LINE 1064 --- 
2025-06-13 07:34:46,859 - print_capture - INFO - # --- LINE 1064 --- 


2025-06-13 07:34:46,859 - print_capture - INFO - 


2025-06-13 07:34:46,859 - print_capture - INFO - 
def _localmin(x, y):  # pragma: no cover
def _localmin(x, y):  # pragma: no cover
2025-06-13 07:34:46,859 - print_capture - INFO - def _localmin(x, y):  # pragma: no cover
def _localmin(x, y):  # pragma: no cover
def _localmin(x, y):  # pragma: no cover
2025-06-13 07:34:46,859 - print_capture - INFO - def _localmin(x, y):  # pragma: no cover


2025-06-13 07:34:46,859 - print_capture - INFO - 


2025-06-13 07:34:46,859 - print_capture - INFO - 
    # --- LINE 1065 --- 
    # --- LINE 1065 --- 
2025-06-13 07:34:46,859 - print_capture - INFO -     # --- LINE 1065 --- 
    # --- LINE 1065 --- 
    # --- LINE 1065 --- 
2025-06-13 07:34:46,859 - print_capture - INFO -     # --- LINE 1065 --- 


2025-06-13 07:34:46,859 - print_capture - INFO - 


2025-06-13 07:34:46,859 - print_capture - INFO - 
    """Vectorized wrapper for the localmin stencil"""
    """Vectorized wrapper for the localmin stencil"""
2025-06-13 07:34:46,859 - print_capture - INFO -     """Vectorized wrapper for the localmin stencil"""
    """Vectorized wrapper for the localmin stencil"""
    """Vectorized wrapper for the localmin stencil"""
2025-06-13 07:34:46,859 - print_capture - INFO -     """Vectorized wrapper for the localmin stencil"""


2025-06-13 07:34:46,859 - print_capture - INFO - 


2025-06-13 07:34:46,859 - print_capture - INFO - 
    # --- LINE 1066 --- 
    # --- LINE 1066 --- 
2025-06-13 07:34:46,859 - print_capture - INFO -     # --- LINE 1066 --- 
    # --- LINE 1066 --- 
    # --- LINE 1066 --- 
2025-06-13 07:34:46,859 - print_capture - INFO -     # --- LINE 1066 --- 
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
2025-06-13 07:34:46,859 - print_capture - INFO -     #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
2025-06-13 07:34:46,859 - print_capture - INFO -     #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:46,859 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:46,859 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   del x
    #   del x
2025-06-13 07:34:46,859 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:46,859 - print_capture - INFO -     #   del x
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:46,859 - print_capture - INFO -     #   del $2load_global.0
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:46,859 - print_capture - INFO -     #   del $2load_global.0
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,859 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,859 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,859 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,859 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:46,859 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:46,859 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:46,859 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:46,859 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:46,859 - print_capture - INFO -     #   del $const12.5.1
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:46,859 - print_capture - INFO -     #   del $const12.5.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:46,860 - print_capture - INFO -     #   del $const10.4.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:46,860 - print_capture - INFO -     #   del $const10.4.1
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:46,860 - print_capture - INFO -     #   del $14build_slice.6
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:46,860 - print_capture - INFO -     #   del $14build_slice.6
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:46,860 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:46,860 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   del y
    #   del y
2025-06-13 07:34:46,860 - print_capture - INFO -     #   del y
    #   del y
    #   del y
2025-06-13 07:34:46,860 - print_capture - INFO -     #   del y
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:46,860 - print_capture - INFO -     #   del $6call_function.2
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:46,860 - print_capture - INFO -     #   del $6call_function.2
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:46,860 - print_capture - INFO -     #   del $14build_slice.7
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:46,860 - print_capture - INFO -     #   del $14build_slice.7
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,860 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:46,860 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:46,860 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:46,860 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:46,860 - print_capture - INFO -     #   del $const18.8.1
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:46,860 - print_capture - INFO -     #   del $const18.8.1
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:46,860 - print_capture - INFO -     #   return $20return_value.9
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:46,860 - print_capture - INFO -     #   return $20return_value.9


2025-06-13 07:34:46,860 - print_capture - INFO - 


2025-06-13 07:34:46,860 - print_capture - INFO - 
    y[:] = _localmin_sten(x)
    y[:] = _localmin_sten(x)
2025-06-13 07:34:46,860 - print_capture - INFO -     y[:] = _localmin_sten(x)
    y[:] = _localmin_sten(x)
    y[:] = _localmin_sten(x)
2025-06-13 07:34:46,860 - print_capture - INFO -     y[:] = _localmin_sten(x)


2025-06-13 07:34:46,860 - print_capture - INFO - 


2025-06-13 07:34:46,860 - print_capture - INFO - 
label 0:
label 0:
2025-06-13 07:34:46,862 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:46,862 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,862 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,862 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:46,862 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
    y = arg(1, name=y)                       ['y']
2025-06-13 07:34:46,862 - print_capture - INFO -     y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
2025-06-13 07:34:46,863 - print_capture - INFO -     $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
2025-06-13 07:34:46,863 - print_capture - INFO -     $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:46,863 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
2025-06-13 07:34:46,863 - print_capture - INFO -     $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:46,863 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
2025-06-13 07:34:46,863 - print_capture - INFO -     $const10.4.1 = const(NoneType, None)     ['$const10.4.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:46,863 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
2025-06-13 07:34:46,863 - print_capture - INFO -     $const12.5.1 = const(NoneType, None)     ['$const12.5.1']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:46,863 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
2025-06-13 07:34:46,863 - print_capture - INFO -     $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:46,863 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
2025-06-13 07:34:46,863 - print_capture - INFO -     $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4.1', '$const12.5.1']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:46,863 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
2025-06-13 07:34:46,863 - print_capture - INFO -     y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:46,863 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
2025-06-13 07:34:46,863 - print_capture - INFO -     $const18.8.1 = const(NoneType, None)     ['$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:46,863 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
2025-06-13 07:34:46,863 - print_capture - INFO -     $20return_value.9 = cast(value=$const18.8.1) ['$20return_value.9', '$const18.8.1']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:46,863 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:46,863 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
label 0:
label 0:
2025-06-13 07:34:46,872 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:46,872 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,872 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:46,872 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:46,872 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
2025-06-13 07:34:46,872 - print_capture - INFO -     full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:46,872 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
2025-06-13 07:34:46,872 - print_capture - INFO -     $8load_global.2 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:46,872 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
2025-06-13 07:34:46,872 - print_capture - INFO -     $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:46,873 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
2025-06-13 07:34:46,873 - print_capture - INFO -     $14load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:46,873 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
2025-06-13 07:34:46,873 - print_capture - INFO -     $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:46,873 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
2025-06-13 07:34:46,873 - print_capture - INFO -     out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:46,873 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const24.9.2 = const(int, 0)             ['$const24.9.2']
2025-06-13 07:34:46,873 - print_capture - INFO -     $const24.9.2 = const(int, 0)             ['$const24.9.2']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:46,873 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
2025-06-13 07:34:46,873 - print_capture - INFO -     $const28.11.0 = const(NoneType, None)    ['$const28.11.0']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:46,873 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $const30.12.3 = const(int, 1)            ['$const30.12.3']
2025-06-13 07:34:46,873 - print_capture - INFO -     $const30.12.3 = const(int, 1)            ['$const30.12.3']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:46,873 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
2025-06-13 07:34:46,873 - print_capture - INFO -     $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:46,873 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
2025-06-13 07:34:46,873 - print_capture - INFO -     $32build_slice.14 = call $32build_slice.13($const28.11.0, $const30.12.3, func=$32build_slice.13, args=(Var($const28.11.0, <string>:4), Var($const30.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11.0', '$const30.12.3']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:46,873 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
2025-06-13 07:34:46,873 - print_capture - INFO -     out0[$32build_slice.14] = $const24.9.2   ['$32build_slice.14', '$const24.9.2', 'out0']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:46,873 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const36.15.2 = const(int, 0)            ['$const36.15.2']
2025-06-13 07:34:46,873 - print_capture - INFO -     $const36.15.2 = const(int, 0)            ['$const36.15.2']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:46,873 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const40.17.4 = const(int, -1)           ['$const40.17.4']
2025-06-13 07:34:46,873 - print_capture - INFO -     $const40.17.4 = const(int, -1)           ['$const40.17.4']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:46,873 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
2025-06-13 07:34:46,873 - print_capture - INFO -     $const42.18.0 = const(NoneType, None)    ['$const42.18.0']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:46,873 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
2025-06-13 07:34:46,873 - print_capture - INFO -     $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:46,873 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
2025-06-13 07:34:46,873 - print_capture - INFO -     $44build_slice.20 = call $44build_slice.19($const40.17.4, $const42.18.0, func=$44build_slice.19, args=(Var($const40.17.4, <string>:5), Var($const42.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17.4', '$const42.18.0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:46,873 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
2025-06-13 07:34:46,873 - print_capture - INFO -     out0[$44build_slice.20] = $const36.15.2  ['$44build_slice.20', '$const36.15.2', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:46,873 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
2025-06-13 07:34:46,873 - print_capture - INFO -     $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:46,873 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
2025-06-13 07:34:46,873 - print_capture - INFO -     $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:46,873 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const52.23.2 = const(int, 0)            ['$const52.23.2']
2025-06-13 07:34:46,873 - print_capture - INFO -     $const52.23.2 = const(int, 0)            ['$const52.23.2']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:46,873 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $const54.24.4 = const(int, -1)           ['$const54.24.4']
2025-06-13 07:34:46,873 - print_capture - INFO -     $const54.24.4 = const(int, -1)           ['$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:46,873 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
2025-06-13 07:34:46,873 - print_capture - INFO -     $56call_function.25 = call $50load_global.22($const52.23.2, $const54.24.4, func=$50load_global.22, args=[Var($const52.23.2, <string>:6), Var($const54.24.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23.2', '$const54.24.4']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:46,874 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
2025-06-13 07:34:46,874 - print_capture - INFO -     $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:46,874 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $const62.28.2 = const(int, 0)            ['$const62.28.2']
2025-06-13 07:34:46,874 - print_capture - INFO -     $const62.28.2 = const(int, 0)            ['$const62.28.2']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:46,874 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
2025-06-13 07:34:46,874 - print_capture - INFO -     $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28.2, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28.2', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:46,874 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
2025-06-13 07:34:46,874 - print_capture - INFO -     $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:46,874 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const68.31.2 = const(int, 0)            ['$const68.31.2']
2025-06-13 07:34:46,874 - print_capture - INFO -     $const68.31.2 = const(int, 0)            ['$const68.31.2']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:46,874 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $const70.32.3 = const(int, 1)            ['$const70.32.3']
2025-06-13 07:34:46,874 - print_capture - INFO -     $const70.32.3 = const(int, 1)            ['$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:46,874 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
2025-06-13 07:34:46,874 - print_capture - INFO -     $72call_function.33 = call $66load_global.30($const68.31.2, $const70.32.3, func=$66load_global.30, args=[Var($const68.31.2, <string>:6), Var($const70.32.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31.2', '$const70.32.3']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:46,874 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
2025-06-13 07:34:46,874 - print_capture - INFO -     $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:46,874 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
2025-06-13 07:34:46,874 - print_capture - INFO -     $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:46,874 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
2025-06-13 07:34:46,874 - print_capture - INFO -     $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:46,874 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
2025-06-13 07:34:46,874 - print_capture - INFO -     $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,874 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,874 - print_capture - INFO -     jump 80                                  []
label 80:
label 80:
2025-06-13 07:34:46,874 - print_capture - INFO - label 80:
label 80:
label 80:
2025-06-13 07:34:46,874 - print_capture - INFO - label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:46,874 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
2025-06-13 07:34:46,874 - print_capture - INFO -     $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:46,874 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
2025-06-13 07:34:46,874 - print_capture - INFO -     $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:46,874 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
2025-06-13 07:34:46,874 - print_capture - INFO -     $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:46,874 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
2025-06-13 07:34:46,874 - print_capture - INFO -     $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:46,874 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
2025-06-13 07:34:46,874 - print_capture - INFO -     branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
label 82:
2025-06-13 07:34:46,874 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 07:34:46,874 - print_capture - INFO - label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:46,874 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    index00 = $phi82.1                       ['$phi82.1', 'index00']
2025-06-13 07:34:46,874 - print_capture - INFO -     index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:46,874 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
2025-06-13 07:34:46,875 - print_capture - INFO -     __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,875 - print_capture - INFO -     jump 80                                  []
    jump 80                                  []
    jump 80                                  []
2025-06-13 07:34:46,875 - print_capture - INFO -     jump 80                                  []
label 90:
label 90:
2025-06-13 07:34:46,875 - print_capture - INFO - label 90:
label 90:
label 90:
2025-06-13 07:34:46,875 - print_capture - INFO - label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:46,875 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
2025-06-13 07:34:46,875 - print_capture - INFO -     $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:46,875 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
    return $92return_value.1                 ['$92return_value.1']
2025-06-13 07:34:46,875 - print_capture - INFO -     return $92return_value.1                 ['$92return_value.1']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:47,115 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:47,115 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# --- LINE 1052 --- 
# --- LINE 1052 --- 
2025-06-13 07:34:47,115 - print_capture - INFO - # --- LINE 1052 --- 
# --- LINE 1052 --- 
# --- LINE 1052 --- 
2025-06-13 07:34:47,115 - print_capture - INFO - # --- LINE 1052 --- 
# label 0
# label 0
2025-06-13 07:34:47,115 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:47,115 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: array(float64, 1d, A)
#   x = arg(0, name=x)  :: array(float64, 1d, A)
2025-06-13 07:34:47,115 - print_capture - INFO - #   x = arg(0, name=x)  :: array(float64, 1d, A)
#   x = arg(0, name=x)  :: array(float64, 1d, A)
#   x = arg(0, name=x)  :: array(float64, 1d, A)
2025-06-13 07:34:47,115 - print_capture - INFO - #   x = arg(0, name=x)  :: array(float64, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:47,115 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
#   y = arg(1, name=y)  :: array(bool, 1d, A)
2025-06-13 07:34:47,115 - print_capture - INFO - #   y = arg(1, name=y)  :: array(bool, 1d, A)


2025-06-13 07:34:47,115 - print_capture - INFO - 


2025-06-13 07:34:47,115 - print_capture - INFO - 
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:47,115 - print_capture - INFO - @numba.guvectorize(
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:47,115 - print_capture - INFO - @numba.guvectorize(


2025-06-13 07:34:47,115 - print_capture - INFO - 


2025-06-13 07:34:47,115 - print_capture - INFO - 
    # --- LINE 1053 --- 
    # --- LINE 1053 --- 
2025-06-13 07:34:47,115 - print_capture - INFO -     # --- LINE 1053 --- 
    # --- LINE 1053 --- 
    # --- LINE 1053 --- 
2025-06-13 07:34:47,115 - print_capture - INFO -     # --- LINE 1053 --- 


2025-06-13 07:34:47,115 - print_capture - INFO - 


2025-06-13 07:34:47,115 - print_capture - INFO - 
    [
    [
2025-06-13 07:34:47,115 - print_capture - INFO -     [
    [
    [
2025-06-13 07:34:47,115 - print_capture - INFO -     [


2025-06-13 07:34:47,115 - print_capture - INFO - 


2025-06-13 07:34:47,115 - print_capture - INFO - 
        # --- LINE 1054 --- 
        # --- LINE 1054 --- 
2025-06-13 07:34:47,115 - print_capture - INFO -         # --- LINE 1054 --- 
        # --- LINE 1054 --- 
        # --- LINE 1054 --- 
2025-06-13 07:34:47,115 - print_capture - INFO -         # --- LINE 1054 --- 


2025-06-13 07:34:47,115 - print_capture - INFO - 


2025-06-13 07:34:47,115 - print_capture - INFO - 
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:47,115 - print_capture - INFO -         "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
        "void(int16[:], bool_[:])",
2025-06-13 07:34:47,115 - print_capture - INFO -         "void(int16[:], bool_[:])",


2025-06-13 07:34:47,115 - print_capture - INFO - 


2025-06-13 07:34:47,115 - print_capture - INFO - 
        # --- LINE 1055 --- 
        # --- LINE 1055 --- 
2025-06-13 07:34:47,115 - print_capture - INFO -         # --- LINE 1055 --- 
        # --- LINE 1055 --- 
        # --- LINE 1055 --- 
2025-06-13 07:34:47,115 - print_capture - INFO -         # --- LINE 1055 --- 


2025-06-13 07:34:47,115 - print_capture - INFO - 


2025-06-13 07:34:47,115 - print_capture - INFO - 
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:47,115 - print_capture - INFO -         "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
        "void(int32[:], bool_[:])",
2025-06-13 07:34:47,115 - print_capture - INFO -         "void(int32[:], bool_[:])",


2025-06-13 07:34:47,115 - print_capture - INFO - 


2025-06-13 07:34:47,115 - print_capture - INFO - 
        # --- LINE 1056 --- 
        # --- LINE 1056 --- 
2025-06-13 07:34:47,116 - print_capture - INFO -         # --- LINE 1056 --- 
        # --- LINE 1056 --- 
        # --- LINE 1056 --- 
2025-06-13 07:34:47,116 - print_capture - INFO -         # --- LINE 1056 --- 


2025-06-13 07:34:47,116 - print_capture - INFO - 


2025-06-13 07:34:47,116 - print_capture - INFO - 
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:47,116 - print_capture - INFO -         "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
        "void(int64[:], bool_[:])",
2025-06-13 07:34:47,116 - print_capture - INFO -         "void(int64[:], bool_[:])",


2025-06-13 07:34:47,116 - print_capture - INFO - 


2025-06-13 07:34:47,116 - print_capture - INFO - 
        # --- LINE 1057 --- 
        # --- LINE 1057 --- 
2025-06-13 07:34:47,116 - print_capture - INFO -         # --- LINE 1057 --- 
        # --- LINE 1057 --- 
        # --- LINE 1057 --- 
2025-06-13 07:34:47,116 - print_capture - INFO -         # --- LINE 1057 --- 


2025-06-13 07:34:47,116 - print_capture - INFO - 


2025-06-13 07:34:47,116 - print_capture - INFO - 
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:47,116 - print_capture - INFO -         "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
        "void(float32[:], bool_[:])",
2025-06-13 07:34:47,116 - print_capture - INFO -         "void(float32[:], bool_[:])",


2025-06-13 07:34:47,116 - print_capture - INFO - 


2025-06-13 07:34:47,116 - print_capture - INFO - 
        # --- LINE 1058 --- 
        # --- LINE 1058 --- 
2025-06-13 07:34:47,116 - print_capture - INFO -         # --- LINE 1058 --- 
        # --- LINE 1058 --- 
        # --- LINE 1058 --- 
2025-06-13 07:34:47,116 - print_capture - INFO -         # --- LINE 1058 --- 


2025-06-13 07:34:47,116 - print_capture - INFO - 


2025-06-13 07:34:47,116 - print_capture - INFO - 
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:47,116 - print_capture - INFO -         "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
        "void(float64[:], bool_[:])",
2025-06-13 07:34:47,116 - print_capture - INFO -         "void(float64[:], bool_[:])",


2025-06-13 07:34:47,116 - print_capture - INFO - 


2025-06-13 07:34:47,116 - print_capture - INFO - 
    # --- LINE 1059 --- 
    # --- LINE 1059 --- 
2025-06-13 07:34:47,116 - print_capture - INFO -     # --- LINE 1059 --- 
    # --- LINE 1059 --- 
    # --- LINE 1059 --- 
2025-06-13 07:34:47,116 - print_capture - INFO -     # --- LINE 1059 --- 


2025-06-13 07:34:47,116 - print_capture - INFO - 


2025-06-13 07:34:47,116 - print_capture - INFO - 
    ],
    ],
2025-06-13 07:34:47,116 - print_capture - INFO -     ],
    ],
    ],
2025-06-13 07:34:47,116 - print_capture - INFO -     ],


2025-06-13 07:34:47,116 - print_capture - INFO - 


2025-06-13 07:34:47,116 - print_capture - INFO - 
    # --- LINE 1060 --- 
    # --- LINE 1060 --- 
2025-06-13 07:34:47,116 - print_capture - INFO -     # --- LINE 1060 --- 
    # --- LINE 1060 --- 
    # --- LINE 1060 --- 
2025-06-13 07:34:47,116 - print_capture - INFO -     # --- LINE 1060 --- 


2025-06-13 07:34:47,116 - print_capture - INFO - 


2025-06-13 07:34:47,116 - print_capture - INFO - 
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:47,116 - print_capture - INFO -     "(n)->(n)",
    "(n)->(n)",
    "(n)->(n)",
2025-06-13 07:34:47,116 - print_capture - INFO -     "(n)->(n)",


2025-06-13 07:34:47,116 - print_capture - INFO - 


2025-06-13 07:34:47,116 - print_capture - INFO - 
    # --- LINE 1061 --- 
    # --- LINE 1061 --- 
2025-06-13 07:34:47,116 - print_capture - INFO -     # --- LINE 1061 --- 
    # --- LINE 1061 --- 
    # --- LINE 1061 --- 
2025-06-13 07:34:47,116 - print_capture - INFO -     # --- LINE 1061 --- 


2025-06-13 07:34:47,116 - print_capture - INFO - 


2025-06-13 07:34:47,116 - print_capture - INFO - 
    cache=True,
    cache=True,
2025-06-13 07:34:47,116 - print_capture - INFO -     cache=True,
    cache=True,
    cache=True,
2025-06-13 07:34:47,116 - print_capture - INFO -     cache=True,


2025-06-13 07:34:47,116 - print_capture - INFO - 


2025-06-13 07:34:47,116 - print_capture - INFO - 
    # --- LINE 1062 --- 
    # --- LINE 1062 --- 
2025-06-13 07:34:47,116 - print_capture - INFO -     # --- LINE 1062 --- 
    # --- LINE 1062 --- 
    # --- LINE 1062 --- 
2025-06-13 07:34:47,117 - print_capture - INFO -     # --- LINE 1062 --- 


2025-06-13 07:34:47,117 - print_capture - INFO - 


2025-06-13 07:34:47,117 - print_capture - INFO - 
    nopython=True,
    nopython=True,
2025-06-13 07:34:47,117 - print_capture - INFO -     nopython=True,
    nopython=True,
    nopython=True,
2025-06-13 07:34:47,117 - print_capture - INFO -     nopython=True,


2025-06-13 07:34:47,117 - print_capture - INFO - 


2025-06-13 07:34:47,117 - print_capture - INFO - 
# --- LINE 1063 --- 
# --- LINE 1063 --- 
2025-06-13 07:34:47,117 - print_capture - INFO - # --- LINE 1063 --- 
# --- LINE 1063 --- 
# --- LINE 1063 --- 
2025-06-13 07:34:47,117 - print_capture - INFO - # --- LINE 1063 --- 


2025-06-13 07:34:47,117 - print_capture - INFO - 


2025-06-13 07:34:47,117 - print_capture - INFO - 
)
)
2025-06-13 07:34:47,117 - print_capture - INFO - )
)
)
2025-06-13 07:34:47,117 - print_capture - INFO - )


2025-06-13 07:34:47,117 - print_capture - INFO - 


2025-06-13 07:34:47,117 - print_capture - INFO - 
# --- LINE 1064 --- 
# --- LINE 1064 --- 
2025-06-13 07:34:47,117 - print_capture - INFO - # --- LINE 1064 --- 
# --- LINE 1064 --- 
# --- LINE 1064 --- 
2025-06-13 07:34:47,117 - print_capture - INFO - # --- LINE 1064 --- 


2025-06-13 07:34:47,117 - print_capture - INFO - 


2025-06-13 07:34:47,117 - print_capture - INFO - 
def _localmin(x, y):  # pragma: no cover
def _localmin(x, y):  # pragma: no cover
2025-06-13 07:34:47,117 - print_capture - INFO - def _localmin(x, y):  # pragma: no cover
def _localmin(x, y):  # pragma: no cover
def _localmin(x, y):  # pragma: no cover
2025-06-13 07:34:47,117 - print_capture - INFO - def _localmin(x, y):  # pragma: no cover


2025-06-13 07:34:47,117 - print_capture - INFO - 


2025-06-13 07:34:47,117 - print_capture - INFO - 
    # --- LINE 1065 --- 
    # --- LINE 1065 --- 
2025-06-13 07:34:47,117 - print_capture - INFO -     # --- LINE 1065 --- 
    # --- LINE 1065 --- 
    # --- LINE 1065 --- 
2025-06-13 07:34:47,117 - print_capture - INFO -     # --- LINE 1065 --- 


2025-06-13 07:34:47,117 - print_capture - INFO - 


2025-06-13 07:34:47,117 - print_capture - INFO - 
    """Vectorized wrapper for the localmin stencil"""
    """Vectorized wrapper for the localmin stencil"""
2025-06-13 07:34:47,117 - print_capture - INFO -     """Vectorized wrapper for the localmin stencil"""
    """Vectorized wrapper for the localmin stencil"""
    """Vectorized wrapper for the localmin stencil"""
2025-06-13 07:34:47,117 - print_capture - INFO -     """Vectorized wrapper for the localmin stencil"""


2025-06-13 07:34:47,117 - print_capture - INFO - 


2025-06-13 07:34:47,117 - print_capture - INFO - 
    # --- LINE 1066 --- 
    # --- LINE 1066 --- 
2025-06-13 07:34:47,117 - print_capture - INFO -     # --- LINE 1066 --- 
    # --- LINE 1066 --- 
    # --- LINE 1066 --- 
2025-06-13 07:34:47,117 - print_capture - INFO -     # --- LINE 1066 --- 
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
2025-06-13 07:34:47,117 - print_capture - INFO -     #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
2025-06-13 07:34:47,117 - print_capture - INFO -     #   $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)  :: Function(<numba.stencils.stencil.StencilFunc object at 0x7f28aae84550>)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:47,117 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
2025-06-13 07:34:47,117 - print_capture - INFO -     #   $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> array(bool, 1d, A)
    #   del x
    #   del x
2025-06-13 07:34:47,117 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:47,117 - print_capture - INFO -     #   del x
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:47,117 - print_capture - INFO -     #   del $2load_global.0
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:47,117 - print_capture - INFO -     #   del $2load_global.0
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:47,117 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const10.4.1 = const(NoneType, None)  :: none
2025-06-13 07:34:47,117 - print_capture - INFO -     #   $const10.4.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:47,117 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
    #   $const12.5.1 = const(NoneType, None)  :: none
2025-06-13 07:34:47,117 - print_capture - INFO -     #   $const12.5.1 = const(NoneType, None)  :: none
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:47,117 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:47,117 - print_capture - INFO -     #   $14build_slice.6 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:47,118 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
2025-06-13 07:34:47,118 - print_capture - INFO -     #   $14build_slice.7 = call $14build_slice.6($const10.4.1, $const12.5.1, func=$14build_slice.6, args=(Var($const10.4.1, utils.py:1066), Var($const12.5.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, none) -> slice<a:b>
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:47,118 - print_capture - INFO -     #   del $const12.5.1
    #   del $const12.5.1
    #   del $const12.5.1
2025-06-13 07:34:47,118 - print_capture - INFO -     #   del $const12.5.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:47,118 - print_capture - INFO -     #   del $const10.4.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:47,118 - print_capture - INFO -     #   del $const10.4.1
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:47,118 - print_capture - INFO -     #   del $14build_slice.6
    #   del $14build_slice.6
    #   del $14build_slice.6
2025-06-13 07:34:47,118 - print_capture - INFO -     #   del $14build_slice.6
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:47,118 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
    #   y[slice(None, None, None)] = $6call_function.2
2025-06-13 07:34:47,118 - print_capture - INFO -     #   y[slice(None, None, None)] = $6call_function.2
    #   del y
    #   del y
2025-06-13 07:34:47,118 - print_capture - INFO -     #   del y
    #   del y
    #   del y
2025-06-13 07:34:47,118 - print_capture - INFO -     #   del y
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:47,118 - print_capture - INFO -     #   del $6call_function.2
    #   del $6call_function.2
    #   del $6call_function.2
2025-06-13 07:34:47,118 - print_capture - INFO -     #   del $6call_function.2
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:47,118 - print_capture - INFO -     #   del $14build_slice.7
    #   del $14build_slice.7
    #   del $14build_slice.7
2025-06-13 07:34:47,118 - print_capture - INFO -     #   del $14build_slice.7
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:47,118 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
    #   $const18.8.1 = const(NoneType, None)  :: none
2025-06-13 07:34:47,118 - print_capture - INFO -     #   $const18.8.1 = const(NoneType, None)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:47,118 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   $20return_value.9 = cast(value=$const18.8.1)  :: none
2025-06-13 07:34:47,118 - print_capture - INFO -     #   $20return_value.9 = cast(value=$const18.8.1)  :: none
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:47,118 - print_capture - INFO -     #   del $const18.8.1
    #   del $const18.8.1
    #   del $const18.8.1
2025-06-13 07:34:47,118 - print_capture - INFO -     #   del $const18.8.1
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:47,118 - print_capture - INFO -     #   return $20return_value.9
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:47,118 - print_capture - INFO -     #   return $20return_value.9


2025-06-13 07:34:47,118 - print_capture - INFO - 


2025-06-13 07:34:47,118 - print_capture - INFO - 
    y[:] = _localmin_sten(x)
    y[:] = _localmin_sten(x)
2025-06-13 07:34:47,118 - print_capture - INFO -     y[:] = _localmin_sten(x)
    y[:] = _localmin_sten(x)
    y[:] = _localmin_sten(x)
2025-06-13 07:34:47,118 - print_capture - INFO -     y[:] = _localmin_sten(x)


2025-06-13 07:34:47,118 - print_capture - INFO - 


2025-06-13 07:34:47,118 - print_capture - INFO - 
label 0:
label 0:
2025-06-13 07:34:47,611 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:47,611 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:47,611 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:47,611 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    pre_max = arg(1, name=pre_max)           ['pre_max']
2025-06-13 07:34:47,611 - print_capture - INFO -     pre_max = arg(1, name=pre_max)           ['pre_max']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    pre_max = arg(1, name=pre_max)           ['pre_max']
2025-06-13 07:34:47,611 - print_capture - INFO -     pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    post_max = arg(2, name=post_max)         ['post_max']
2025-06-13 07:34:47,611 - print_capture - INFO -     post_max = arg(2, name=post_max)         ['post_max']
    post_max = arg(2, name=post_max)         ['post_max']
    post_max = arg(2, name=post_max)         ['post_max']
2025-06-13 07:34:47,611 - print_capture - INFO -     post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
2025-06-13 07:34:47,611 - print_capture - INFO -     pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
2025-06-13 07:34:47,611 - print_capture - INFO -     pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
2025-06-13 07:34:47,611 - print_capture - INFO -     post_avg = arg(4, name=post_avg)         ['post_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
2025-06-13 07:34:47,611 - print_capture - INFO -     post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    delta = arg(5, name=delta)               ['delta']
2025-06-13 07:34:47,611 - print_capture - INFO -     delta = arg(5, name=delta)               ['delta']
    delta = arg(5, name=delta)               ['delta']
    delta = arg(5, name=delta)               ['delta']
2025-06-13 07:34:47,611 - print_capture - INFO -     delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    wait = arg(6, name=wait)                 ['wait']
2025-06-13 07:34:47,612 - print_capture - INFO -     wait = arg(6, name=wait)                 ['wait']
    wait = arg(6, name=wait)                 ['wait']
    wait = arg(6, name=wait)                 ['wait']
2025-06-13 07:34:47,612 - print_capture - INFO -     wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    peaks = arg(7, name=peaks)               ['peaks']
2025-06-13 07:34:47,612 - print_capture - INFO -     peaks = arg(7, name=peaks)               ['peaks']
    peaks = arg(7, name=peaks)               ['peaks']
    peaks = arg(7, name=peaks)               ['peaks']
2025-06-13 07:34:47,612 - print_capture - INFO -     peaks = arg(7, name=peaks)               ['peaks']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:34:47,612 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:34:47,612 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:34:47,612 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:34:47,612 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
2025-06-13 07:34:47,612 - print_capture - INFO -     $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
2025-06-13 07:34:47,612 - print_capture - INFO -     $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
2025-06-13 07:34:47,612 - print_capture - INFO -     $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
2025-06-13 07:34:47,612 - print_capture - INFO -     $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
    $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
2025-06-13 07:34:47,612 - print_capture - INFO -     $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
    $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
    $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
2025-06-13 07:34:47,612 - print_capture - INFO -     $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
2025-06-13 07:34:47,612 - print_capture - INFO -     $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
2025-06-13 07:34:47,612 - print_capture - INFO -     $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
2025-06-13 07:34:47,612 - print_capture - INFO -     $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
2025-06-13 07:34:47,612 - print_capture - INFO -     $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $const24.11.1 = const(int, 0)            ['$const24.11.1']
    $const24.11.1 = const(int, 0)            ['$const24.11.1']
2025-06-13 07:34:47,612 - print_capture - INFO -     $const24.11.1 = const(int, 0)            ['$const24.11.1']
    $const24.11.1 = const(int, 0)            ['$const24.11.1']
    $const24.11.1 = const(int, 0)            ['$const24.11.1']
2025-06-13 07:34:47,612 - print_capture - INFO -     $const24.11.1 = const(int, 0)            ['$const24.11.1']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
2025-06-13 07:34:47,612 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
2025-06-13 07:34:47,612 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
2025-06-13 07:34:47,612 - print_capture - INFO -     $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
2025-06-13 07:34:47,612 - print_capture - INFO -     $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
2025-06-13 07:34:47,612 - print_capture - INFO -     $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
2025-06-13 07:34:47,612 - print_capture - INFO -     $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
    $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
2025-06-13 07:34:47,612 - print_capture - INFO -     $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
    $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
    $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
2025-06-13 07:34:47,612 - print_capture - INFO -     $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
2025-06-13 07:34:47,612 - print_capture - INFO -     $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
2025-06-13 07:34:47,612 - print_capture - INFO -     $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
2025-06-13 07:34:47,612 - print_capture - INFO -     $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
2025-06-13 07:34:47,612 - print_capture - INFO -     $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
2025-06-13 07:34:47,612 - print_capture - INFO -     $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
2025-06-13 07:34:47,612 - print_capture - INFO -     $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $const40.20.1 = const(int, 0)            ['$const40.20.1']
    $const40.20.1 = const(int, 0)            ['$const40.20.1']
2025-06-13 07:34:47,612 - print_capture - INFO -     $const40.20.1 = const(int, 0)            ['$const40.20.1']
    $const40.20.1 = const(int, 0)            ['$const40.20.1']
    $const40.20.1 = const(int, 0)            ['$const40.20.1']
2025-06-13 07:34:47,612 - print_capture - INFO -     $const40.20.1 = const(int, 0)            ['$const40.20.1']
    peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
    peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
2025-06-13 07:34:47,612 - print_capture - INFO -     peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
    peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
    peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
2025-06-13 07:34:47,613 - print_capture - INFO -     peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
    $const46.22.1 = const(int, 0)            ['$const46.22.1']
    $const46.22.1 = const(int, 0)            ['$const46.22.1']
2025-06-13 07:34:47,613 - print_capture - INFO -     $const46.22.1 = const(int, 0)            ['$const46.22.1']
    $const46.22.1 = const(int, 0)            ['$const46.22.1']
    $const46.22.1 = const(int, 0)            ['$const46.22.1']
2025-06-13 07:34:47,613 - print_capture - INFO -     $const46.22.1 = const(int, 0)            ['$const46.22.1']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
2025-06-13 07:34:47,613 - print_capture - INFO -     $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
2025-06-13 07:34:47,613 - print_capture - INFO -     $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
    $const54.27.1 = const(int, 0)            ['$const54.27.1']
    $const54.27.1 = const(int, 0)            ['$const54.27.1']
2025-06-13 07:34:47,613 - print_capture - INFO -     $const54.27.1 = const(int, 0)            ['$const54.27.1']
    $const54.27.1 = const(int, 0)            ['$const54.27.1']
    $const54.27.1 = const(int, 0)            ['$const54.27.1']
2025-06-13 07:34:47,613 - print_capture - INFO -     $const54.27.1 = const(int, 0)            ['$const54.27.1']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
2025-06-13 07:34:47,613 - print_capture - INFO -     $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
2025-06-13 07:34:47,613 - print_capture - INFO -     $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
    $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
2025-06-13 07:34:47,613 - print_capture - INFO -     $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
2025-06-13 07:34:47,613 - print_capture - INFO -     $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
2025-06-13 07:34:47,613 - print_capture - INFO -     $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
2025-06-13 07:34:47,613 - print_capture - INFO -     $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
    $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
2025-06-13 07:34:47,613 - print_capture - INFO -     $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
    $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
    $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
2025-06-13 07:34:47,613 - print_capture - INFO -     $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
2025-06-13 07:34:47,613 - print_capture - INFO -     $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
2025-06-13 07:34:47,613 - print_capture - INFO -     $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
2025-06-13 07:34:47,613 - print_capture - INFO -     $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
2025-06-13 07:34:47,613 - print_capture - INFO -     $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $const74.37.1 = const(int, 0)            ['$const74.37.1']
    $const74.37.1 = const(int, 0)            ['$const74.37.1']
2025-06-13 07:34:47,613 - print_capture - INFO -     $const74.37.1 = const(int, 0)            ['$const74.37.1']
    $const74.37.1 = const(int, 0)            ['$const74.37.1']
    $const74.37.1 = const(int, 0)            ['$const74.37.1']
2025-06-13 07:34:47,613 - print_capture - INFO -     $const74.37.1 = const(int, 0)            ['$const74.37.1']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
2025-06-13 07:34:47,613 - print_capture - INFO -     $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
2025-06-13 07:34:47,613 - print_capture - INFO -     $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
2025-06-13 07:34:47,613 - print_capture - INFO -     $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
2025-06-13 07:34:47,613 - print_capture - INFO -     $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
2025-06-13 07:34:47,613 - print_capture - INFO -     $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
2025-06-13 07:34:47,613 - print_capture - INFO -     $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
    $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
2025-06-13 07:34:47,613 - print_capture - INFO -     $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
    $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
    $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
2025-06-13 07:34:47,613 - print_capture - INFO -     $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
2025-06-13 07:34:47,613 - print_capture - INFO -     $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
2025-06-13 07:34:47,613 - print_capture - INFO -     $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
2025-06-13 07:34:47,613 - print_capture - INFO -     $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
2025-06-13 07:34:47,613 - print_capture - INFO -     $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
2025-06-13 07:34:47,613 - print_capture - INFO -     $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
2025-06-13 07:34:47,613 - print_capture - INFO -     $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
2025-06-13 07:34:47,613 - print_capture - INFO -     $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
2025-06-13 07:34:47,613 - print_capture - INFO -     $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
2025-06-13 07:34:47,613 - print_capture - INFO -     $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
2025-06-13 07:34:47,614 - print_capture - INFO -     $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
    peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
2025-06-13 07:34:47,614 - print_capture - INFO -     peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
    peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
    peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
2025-06-13 07:34:47,614 - print_capture - INFO -     peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
    $const100.49.1 = const(int, 0)           ['$const100.49.1']
    $const100.49.1 = const(int, 0)           ['$const100.49.1']
2025-06-13 07:34:47,614 - print_capture - INFO -     $const100.49.1 = const(int, 0)           ['$const100.49.1']
    $const100.49.1 = const(int, 0)           ['$const100.49.1']
    $const100.49.1 = const(int, 0)           ['$const100.49.1']
2025-06-13 07:34:47,614 - print_capture - INFO -     $const100.49.1 = const(int, 0)           ['$const100.49.1']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
2025-06-13 07:34:47,614 - print_capture - INFO -     $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
2025-06-13 07:34:47,614 - print_capture - INFO -     $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
2025-06-13 07:34:47,614 - print_capture - INFO -     bool104 = global(bool: <class 'bool'>)   ['bool104']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
2025-06-13 07:34:47,614 - print_capture - INFO -     bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
2025-06-13 07:34:47,614 - print_capture - INFO -     $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
2025-06-13 07:34:47,614 - print_capture - INFO -     $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    branch $104pred, 106, 116                ['$104pred']
    branch $104pred, 106, 116                ['$104pred']
2025-06-13 07:34:47,614 - print_capture - INFO -     branch $104pred, 106, 116                ['$104pred']
    branch $104pred, 106, 116                ['$104pred']
    branch $104pred, 106, 116                ['$104pred']
2025-06-13 07:34:47,614 - print_capture - INFO -     branch $104pred, 106, 116                ['$104pred']
label 106:
label 106:
2025-06-13 07:34:47,614 - print_capture - INFO - label 106:
label 106:
label 106:
2025-06-13 07:34:47,614 - print_capture - INFO - label 106:
    $const108.1.3 = const(int, 1)            ['$const108.1.3']
    $const108.1.3 = const(int, 1)            ['$const108.1.3']
2025-06-13 07:34:47,614 - print_capture - INFO -     $const108.1.3 = const(int, 1)            ['$const108.1.3']
    $const108.1.3 = const(int, 1)            ['$const108.1.3']
    $const108.1.3 = const(int, 1)            ['$const108.1.3']
2025-06-13 07:34:47,614 - print_capture - INFO -     $const108.1.3 = const(int, 1)            ['$const108.1.3']
    n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
    n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
2025-06-13 07:34:47,614 - print_capture - INFO -     n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
    n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
    n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
2025-06-13 07:34:47,614 - print_capture - INFO -     n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:47,614 - print_capture - INFO -     jump 120                                 []
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:47,614 - print_capture - INFO -     jump 120                                 []
label 116:
label 116:
2025-06-13 07:34:47,614 - print_capture - INFO - label 116:
label 116:
label 116:
2025-06-13 07:34:47,614 - print_capture - INFO - label 116:
    n = const(int, 1)                        ['n']
    n = const(int, 1)                        ['n']
2025-06-13 07:34:47,614 - print_capture - INFO -     n = const(int, 1)                        ['n']
    n = const(int, 1)                        ['n']
    n = const(int, 1)                        ['n']
2025-06-13 07:34:47,614 - print_capture - INFO -     n = const(int, 1)                        ['n']
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:47,614 - print_capture - INFO -     jump 120                                 []
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:47,614 - print_capture - INFO -     jump 120                                 []
label 120:
label 120:
2025-06-13 07:34:47,614 - print_capture - INFO - label 120:
label 120:
label 120:
2025-06-13 07:34:47,614 - print_capture - INFO - label 120:
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
2025-06-13 07:34:47,614 - print_capture - INFO -     $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
2025-06-13 07:34:47,614 - print_capture - INFO -     $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $const126.3.1 = const(int, 0)            ['$const126.3.1']
    $const126.3.1 = const(int, 0)            ['$const126.3.1']
2025-06-13 07:34:47,614 - print_capture - INFO -     $const126.3.1 = const(int, 0)            ['$const126.3.1']
    $const126.3.1 = const(int, 0)            ['$const126.3.1']
    $const126.3.1 = const(int, 0)            ['$const126.3.1']
2025-06-13 07:34:47,614 - print_capture - INFO -     $const126.3.1 = const(int, 0)            ['$const126.3.1']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
2025-06-13 07:34:47,614 - print_capture - INFO -     $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
2025-06-13 07:34:47,614 - print_capture - INFO -     $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
2025-06-13 07:34:47,614 - print_capture - INFO -     $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
2025-06-13 07:34:47,614 - print_capture - INFO -     $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
2025-06-13 07:34:47,614 - print_capture - INFO -     bool132 = global(bool: <class 'bool'>)   ['bool132']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
2025-06-13 07:34:47,614 - print_capture - INFO -     bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
2025-06-13 07:34:47,614 - print_capture - INFO -     $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
2025-06-13 07:34:47,615 - print_capture - INFO -     $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    branch $132pred, 134, 332                ['$132pred']
    branch $132pred, 134, 332                ['$132pred']
2025-06-13 07:34:47,615 - print_capture - INFO -     branch $132pred, 134, 332                ['$132pred']
    branch $132pred, 134, 332                ['$132pred']
    branch $132pred, 134, 332                ['$132pred']
2025-06-13 07:34:47,615 - print_capture - INFO -     branch $132pred, 134, 332                ['$132pred']
label 134:
label 134:
2025-06-13 07:34:47,615 - print_capture - INFO - label 134:
label 134:
label 134:
2025-06-13 07:34:47,615 - print_capture - INFO - label 134:
    $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
2025-06-13 07:34:47,615 - print_capture - INFO -     $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
2025-06-13 07:34:47,615 - print_capture - INFO -     $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
2025-06-13 07:34:47,615 - print_capture - INFO -     $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
2025-06-13 07:34:47,615 - print_capture - INFO -     $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
2025-06-13 07:34:47,615 - print_capture - INFO -     $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
2025-06-13 07:34:47,615 - print_capture - INFO -     $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $const142.4.1 = const(int, 0)            ['$const142.4.1']
    $const142.4.1 = const(int, 0)            ['$const142.4.1']
2025-06-13 07:34:47,615 - print_capture - INFO -     $const142.4.1 = const(int, 0)            ['$const142.4.1']
    $const142.4.1 = const(int, 0)            ['$const142.4.1']
    $const142.4.1 = const(int, 0)            ['$const142.4.1']
2025-06-13 07:34:47,615 - print_capture - INFO -     $const142.4.1 = const(int, 0)            ['$const142.4.1']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
2025-06-13 07:34:47,615 - print_capture - INFO -     $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
2025-06-13 07:34:47,615 - print_capture - INFO -     $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
    $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
2025-06-13 07:34:47,615 - print_capture - INFO -     $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
    $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
    $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
2025-06-13 07:34:47,615 - print_capture - INFO -     $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
2025-06-13 07:34:47,615 - print_capture - INFO -     $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
2025-06-13 07:34:47,615 - print_capture - INFO -     $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
2025-06-13 07:34:47,615 - print_capture - INFO -     $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
2025-06-13 07:34:47,615 - print_capture - INFO -     $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
2025-06-13 07:34:47,615 - print_capture - INFO -     $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
2025-06-13 07:34:47,615 - print_capture - INFO -     $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $const164.15.1 = const(int, 0)           ['$const164.15.1']
    $const164.15.1 = const(int, 0)           ['$const164.15.1']
2025-06-13 07:34:47,615 - print_capture - INFO -     $const164.15.1 = const(int, 0)           ['$const164.15.1']
    $const164.15.1 = const(int, 0)           ['$const164.15.1']
    $const164.15.1 = const(int, 0)           ['$const164.15.1']
2025-06-13 07:34:47,615 - print_capture - INFO -     $const164.15.1 = const(int, 0)           ['$const164.15.1']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
2025-06-13 07:34:47,615 - print_capture - INFO -     $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
2025-06-13 07:34:47,615 - print_capture - INFO -     $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
2025-06-13 07:34:47,615 - print_capture - INFO -     $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
2025-06-13 07:34:47,615 - print_capture - INFO -     $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
2025-06-13 07:34:47,615 - print_capture - INFO -     $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
2025-06-13 07:34:47,615 - print_capture - INFO -     $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
2025-06-13 07:34:47,615 - print_capture - INFO -     $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
2025-06-13 07:34:47,615 - print_capture - INFO -     $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
2025-06-13 07:34:47,615 - print_capture - INFO -     $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
2025-06-13 07:34:47,615 - print_capture - INFO -     $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
2025-06-13 07:34:47,615 - print_capture - INFO -     maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
2025-06-13 07:34:47,615 - print_capture - INFO -     maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
2025-06-13 07:34:47,615 - print_capture - INFO -     $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
2025-06-13 07:34:47,615 - print_capture - INFO -     $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
2025-06-13 07:34:47,616 - print_capture - INFO -     $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
2025-06-13 07:34:47,616 - print_capture - INFO -     $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
2025-06-13 07:34:47,616 - print_capture - INFO -     peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
2025-06-13 07:34:47,616 - print_capture - INFO -     peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
2025-06-13 07:34:47,616 - print_capture - INFO -     $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
2025-06-13 07:34:47,616 - print_capture - INFO -     $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
2025-06-13 07:34:47,616 - print_capture - INFO -     bool200 = global(bool: <class 'bool'>)   ['bool200']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
2025-06-13 07:34:47,616 - print_capture - INFO -     bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
2025-06-13 07:34:47,616 - print_capture - INFO -     $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
2025-06-13 07:34:47,616 - print_capture - INFO -     $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    branch $200pred, 212, 202                ['$200pred']
    branch $200pred, 212, 202                ['$200pred']
2025-06-13 07:34:47,616 - print_capture - INFO -     branch $200pred, 212, 202                ['$200pred']
    branch $200pred, 212, 202                ['$200pred']
    branch $200pred, 212, 202                ['$200pred']
2025-06-13 07:34:47,616 - print_capture - INFO -     branch $200pred, 212, 202                ['$200pred']
label 202:
label 202:
2025-06-13 07:34:47,616 - print_capture - INFO - label 202:
label 202:
label 202:
2025-06-13 07:34:47,616 - print_capture - INFO - label 202:
    $const204.1.3 = const(int, 1)            ['$const204.1.3']
    $const204.1.3 = const(int, 1)            ['$const204.1.3']
2025-06-13 07:34:47,616 - print_capture - INFO -     $const204.1.3 = const(int, 1)            ['$const204.1.3']
    $const204.1.3 = const(int, 1)            ['$const204.1.3']
    $const204.1.3 = const(int, 1)            ['$const204.1.3']
2025-06-13 07:34:47,616 - print_capture - INFO -     $const204.1.3 = const(int, 1)            ['$const204.1.3']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
2025-06-13 07:34:47,616 - print_capture - INFO -     $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
2025-06-13 07:34:47,616 - print_capture - INFO -     $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
2025-06-13 07:34:47,616 - print_capture - INFO -     n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
2025-06-13 07:34:47,616 - print_capture - INFO -     n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:47,616 - print_capture - INFO -     jump 120                                 []
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:47,616 - print_capture - INFO -     jump 120                                 []
label 212:
label 212:
2025-06-13 07:34:47,616 - print_capture - INFO - label 212:
label 212:
label 212:
2025-06-13 07:34:47,616 - print_capture - INFO - label 212:
    $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
2025-06-13 07:34:47,616 - print_capture - INFO -     $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
2025-06-13 07:34:47,616 - print_capture - INFO -     $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
2025-06-13 07:34:47,616 - print_capture - INFO -     $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
2025-06-13 07:34:47,616 - print_capture - INFO -     $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
2025-06-13 07:34:47,616 - print_capture - INFO -     $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
2025-06-13 07:34:47,616 - print_capture - INFO -     $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $const220.4.1 = const(int, 0)            ['$const220.4.1']
    $const220.4.1 = const(int, 0)            ['$const220.4.1']
2025-06-13 07:34:47,616 - print_capture - INFO -     $const220.4.1 = const(int, 0)            ['$const220.4.1']
    $const220.4.1 = const(int, 0)            ['$const220.4.1']
    $const220.4.1 = const(int, 0)            ['$const220.4.1']
2025-06-13 07:34:47,616 - print_capture - INFO -     $const220.4.1 = const(int, 0)            ['$const220.4.1']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
2025-06-13 07:34:47,616 - print_capture - INFO -     $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
2025-06-13 07:34:47,616 - print_capture - INFO -     $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
    $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
2025-06-13 07:34:47,616 - print_capture - INFO -     $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
    $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
    $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
2025-06-13 07:34:47,616 - print_capture - INFO -     $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
2025-06-13 07:34:47,616 - print_capture - INFO -     $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
2025-06-13 07:34:47,616 - print_capture - INFO -     $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
2025-06-13 07:34:47,616 - print_capture - INFO -     $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
2025-06-13 07:34:47,616 - print_capture - INFO -     $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
2025-06-13 07:34:47,617 - print_capture - INFO -     $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
2025-06-13 07:34:47,617 - print_capture - INFO -     $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $const242.15.1 = const(int, 0)           ['$const242.15.1']
    $const242.15.1 = const(int, 0)           ['$const242.15.1']
2025-06-13 07:34:47,617 - print_capture - INFO -     $const242.15.1 = const(int, 0)           ['$const242.15.1']
    $const242.15.1 = const(int, 0)           ['$const242.15.1']
    $const242.15.1 = const(int, 0)           ['$const242.15.1']
2025-06-13 07:34:47,617 - print_capture - INFO -     $const242.15.1 = const(int, 0)           ['$const242.15.1']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
2025-06-13 07:34:47,617 - print_capture - INFO -     $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
2025-06-13 07:34:47,617 - print_capture - INFO -     $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
2025-06-13 07:34:47,617 - print_capture - INFO -     $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
2025-06-13 07:34:47,617 - print_capture - INFO -     $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
2025-06-13 07:34:47,617 - print_capture - INFO -     $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
2025-06-13 07:34:47,617 - print_capture - INFO -     $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
2025-06-13 07:34:47,617 - print_capture - INFO -     $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
2025-06-13 07:34:47,617 - print_capture - INFO -     $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
2025-06-13 07:34:47,617 - print_capture - INFO -     $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
2025-06-13 07:34:47,617 - print_capture - INFO -     $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
2025-06-13 07:34:47,617 - print_capture - INFO -     avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
2025-06-13 07:34:47,617 - print_capture - INFO -     avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
2025-06-13 07:34:47,617 - print_capture - INFO -     $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
2025-06-13 07:34:47,617 - print_capture - INFO -     $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
2025-06-13 07:34:47,617 - print_capture - INFO -     $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
2025-06-13 07:34:47,617 - print_capture - INFO -     $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
2025-06-13 07:34:47,617 - print_capture - INFO -     $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
2025-06-13 07:34:47,617 - print_capture - INFO -     $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
2025-06-13 07:34:47,617 - print_capture - INFO -     $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
2025-06-13 07:34:47,617 - print_capture - INFO -     $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
2025-06-13 07:34:47,617 - print_capture - INFO -     $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
2025-06-13 07:34:47,617 - print_capture - INFO -     $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
2025-06-13 07:34:47,617 - print_capture - INFO -     peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
2025-06-13 07:34:47,617 - print_capture - INFO -     peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
2025-06-13 07:34:47,617 - print_capture - INFO -     $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
2025-06-13 07:34:47,617 - print_capture - INFO -     $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
2025-06-13 07:34:47,617 - print_capture - INFO -     bool290 = global(bool: <class 'bool'>)   ['bool290']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
2025-06-13 07:34:47,617 - print_capture - INFO -     bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
2025-06-13 07:34:47,617 - print_capture - INFO -     $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
2025-06-13 07:34:47,617 - print_capture - INFO -     $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    branch $290pred, 302, 292                ['$290pred']
    branch $290pred, 302, 292                ['$290pred']
2025-06-13 07:34:47,617 - print_capture - INFO -     branch $290pred, 302, 292                ['$290pred']
    branch $290pred, 302, 292                ['$290pred']
    branch $290pred, 302, 292                ['$290pred']
2025-06-13 07:34:47,617 - print_capture - INFO -     branch $290pred, 302, 292                ['$290pred']
label 292:
label 292:
2025-06-13 07:34:47,617 - print_capture - INFO - label 292:
label 292:
label 292:
2025-06-13 07:34:47,618 - print_capture - INFO - label 292:
    $const294.1.3 = const(int, 1)            ['$const294.1.3']
    $const294.1.3 = const(int, 1)            ['$const294.1.3']
2025-06-13 07:34:47,618 - print_capture - INFO -     $const294.1.3 = const(int, 1)            ['$const294.1.3']
    $const294.1.3 = const(int, 1)            ['$const294.1.3']
    $const294.1.3 = const(int, 1)            ['$const294.1.3']
2025-06-13 07:34:47,618 - print_capture - INFO -     $const294.1.3 = const(int, 1)            ['$const294.1.3']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
2025-06-13 07:34:47,618 - print_capture - INFO -     $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
2025-06-13 07:34:47,618 - print_capture - INFO -     $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
2025-06-13 07:34:47,618 - print_capture - INFO -     n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
2025-06-13 07:34:47,618 - print_capture - INFO -     n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:47,618 - print_capture - INFO -     jump 120                                 []
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:47,618 - print_capture - INFO -     jump 120                                 []
label 302:
label 302:
2025-06-13 07:34:47,618 - print_capture - INFO - label 302:
label 302:
label 302:
2025-06-13 07:34:47,618 - print_capture - INFO - label 302:
    $const306.2.3 = const(int, 1)            ['$const306.2.3']
    $const306.2.3 = const(int, 1)            ['$const306.2.3']
2025-06-13 07:34:47,618 - print_capture - INFO -     $const306.2.3 = const(int, 1)            ['$const306.2.3']
    $const306.2.3 = const(int, 1)            ['$const306.2.3']
    $const306.2.3 = const(int, 1)            ['$const306.2.3']
2025-06-13 07:34:47,618 - print_capture - INFO -     $const306.2.3 = const(int, 1)            ['$const306.2.3']
    $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
    $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
2025-06-13 07:34:47,618 - print_capture - INFO -     $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
    $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
    $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
2025-06-13 07:34:47,618 - print_capture - INFO -     $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
2025-06-13 07:34:47,618 - print_capture - INFO -     $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
2025-06-13 07:34:47,618 - print_capture - INFO -     $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
2025-06-13 07:34:47,618 - print_capture - INFO -     n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
2025-06-13 07:34:47,618 - print_capture - INFO -     n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
2025-06-13 07:34:47,618 - print_capture - INFO -     $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
2025-06-13 07:34:47,618 - print_capture - INFO -     $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $const320.8.1 = const(int, 0)            ['$const320.8.1']
    $const320.8.1 = const(int, 0)            ['$const320.8.1']
2025-06-13 07:34:47,618 - print_capture - INFO -     $const320.8.1 = const(int, 0)            ['$const320.8.1']
    $const320.8.1 = const(int, 0)            ['$const320.8.1']
    $const320.8.1 = const(int, 0)            ['$const320.8.1']
2025-06-13 07:34:47,618 - print_capture - INFO -     $const320.8.1 = const(int, 0)            ['$const320.8.1']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
2025-06-13 07:34:47,618 - print_capture - INFO -     $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
2025-06-13 07:34:47,618 - print_capture - INFO -     $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
2025-06-13 07:34:47,618 - print_capture - INFO -     $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
2025-06-13 07:34:47,618 - print_capture - INFO -     $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
2025-06-13 07:34:47,618 - print_capture - INFO -     bool326 = global(bool: <class 'bool'>)   ['bool326']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
2025-06-13 07:34:47,618 - print_capture - INFO -     bool326 = global(bool: <class 'bool'>)   ['bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
2025-06-13 07:34:47,618 - print_capture - INFO -     $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
2025-06-13 07:34:47,618 - print_capture - INFO -     $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    branch $326pred, 134, 328                ['$326pred']
    branch $326pred, 134, 328                ['$326pred']
2025-06-13 07:34:47,618 - print_capture - INFO -     branch $326pred, 134, 328                ['$326pred']
    branch $326pred, 134, 328                ['$326pred']
    branch $326pred, 134, 328                ['$326pred']
2025-06-13 07:34:47,618 - print_capture - INFO -     branch $326pred, 134, 328                ['$326pred']
label 328:
label 328:
2025-06-13 07:34:47,618 - print_capture - INFO - label 328:
label 328:
label 328:
2025-06-13 07:34:47,618 - print_capture - INFO - label 328:
    $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
    $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
2025-06-13 07:34:47,618 - print_capture - INFO -     $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
    $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
    $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
2025-06-13 07:34:47,618 - print_capture - INFO -     $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
    $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
    $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
2025-06-13 07:34:47,618 - print_capture - INFO -     $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
    $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
    $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
2025-06-13 07:34:47,618 - print_capture - INFO -     $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
    return $330return_value.1                ['$330return_value.1']
    return $330return_value.1                ['$330return_value.1']
2025-06-13 07:34:47,618 - print_capture - INFO -     return $330return_value.1                ['$330return_value.1']
    return $330return_value.1                ['$330return_value.1']
    return $330return_value.1                ['$330return_value.1']
2025-06-13 07:34:47,618 - print_capture - INFO -     return $330return_value.1                ['$330return_value.1']
label 332:
label 332:
2025-06-13 07:34:47,618 - print_capture - INFO - label 332:
label 332:
label 332:
2025-06-13 07:34:47,619 - print_capture - INFO - label 332:
    $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
    $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
2025-06-13 07:34:47,619 - print_capture - INFO -     $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
    $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
    $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
2025-06-13 07:34:47,619 - print_capture - INFO -     $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
    $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
    $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
2025-06-13 07:34:47,619 - print_capture - INFO -     $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
    $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
    $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
2025-06-13 07:34:47,619 - print_capture - INFO -     $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
    return $334return_value.1                ['$334return_value.1']
    return $334return_value.1                ['$334return_value.1']
2025-06-13 07:34:47,619 - print_capture - INFO -     return $334return_value.1                ['$334return_value.1']
    return $334return_value.1                ['$334return_value.1']
    return $334return_value.1                ['$334return_value.1']
2025-06-13 07:34:47,619 - print_capture - INFO -     return $334return_value.1                ['$334return_value.1']
label 0:
label 0:
2025-06-13 07:34:47,631 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:47,631 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:47,631 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:47,631 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
2025-06-13 07:34:47,631 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
2025-06-13 07:34:47,631 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $const6.2.1 = const(int, 0)              ['$const6.2.1']
    $const6.2.1 = const(int, 0)              ['$const6.2.1']
2025-06-13 07:34:47,631 - print_capture - INFO -     $const6.2.1 = const(int, 0)              ['$const6.2.1']
    $const6.2.1 = const(int, 0)              ['$const6.2.1']
    $const6.2.1 = const(int, 0)              ['$const6.2.1']
2025-06-13 07:34:47,631 - print_capture - INFO -     $const6.2.1 = const(int, 0)              ['$const6.2.1']
    $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
    $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
2025-06-13 07:34:47,631 - print_capture - INFO -     $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
    $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
    $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
2025-06-13 07:34:47,631 - print_capture - INFO -     $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
2025-06-13 07:34:47,631 - print_capture - INFO -     bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
2025-06-13 07:34:47,631 - print_capture - INFO -     bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
2025-06-13 07:34:47,632 - print_capture - INFO -     $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
2025-06-13 07:34:47,632 - print_capture - INFO -     $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 20                   ['$10pred']
    branch $10pred, 12, 20                   ['$10pred']
2025-06-13 07:34:47,632 - print_capture - INFO -     branch $10pred, 12, 20                   ['$10pred']
    branch $10pred, 12, 20                   ['$10pred']
    branch $10pred, 12, 20                   ['$10pred']
2025-06-13 07:34:47,632 - print_capture - INFO -     branch $10pred, 12, 20                   ['$10pred']
label 12:
label 12:
2025-06-13 07:34:47,632 - print_capture - INFO - label 12:
label 12:
label 12:
2025-06-13 07:34:47,632 - print_capture - INFO - label 12:
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
2025-06-13 07:34:47,632 - print_capture - INFO -     $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
2025-06-13 07:34:47,632 - print_capture - INFO -     $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
    $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
2025-06-13 07:34:47,632 - print_capture - INFO -     $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
    $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
    $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
2025-06-13 07:34:47,632 - print_capture - INFO -     $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
    $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
    $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
2025-06-13 07:34:47,632 - print_capture - INFO -     $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
    $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
    $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
2025-06-13 07:34:47,632 - print_capture - INFO -     $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
    raise $16call_function.2                 ['$16call_function.2']
    raise $16call_function.2                 ['$16call_function.2']
2025-06-13 07:34:47,632 - print_capture - INFO -     raise $16call_function.2                 ['$16call_function.2']
    raise $16call_function.2                 ['$16call_function.2']
    raise $16call_function.2                 ['$16call_function.2']
2025-06-13 07:34:47,632 - print_capture - INFO -     raise $16call_function.2                 ['$16call_function.2']
label 20:
label 20:
2025-06-13 07:34:47,632 - print_capture - INFO - label 20:
label 20:
label 20:
2025-06-13 07:34:47,632 - print_capture - INFO - label 20:
    $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
2025-06-13 07:34:47,632 - print_capture - INFO -     $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
2025-06-13 07:34:47,632 - print_capture - INFO -     $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
2025-06-13 07:34:47,632 - print_capture - INFO -     $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
2025-06-13 07:34:47,632 - print_capture - INFO -     $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
2025-06-13 07:34:47,632 - print_capture - INFO -     it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
2025-06-13 07:34:47,632 - print_capture - INFO -     it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
2025-06-13 07:34:47,632 - print_capture - INFO -     $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
2025-06-13 07:34:47,632 - print_capture - INFO -     $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
2025-06-13 07:34:47,632 - print_capture - INFO -     $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
2025-06-13 07:34:47,632 - print_capture - INFO -     $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
2025-06-13 07:34:47,632 - print_capture - INFO -     $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
2025-06-13 07:34:47,632 - print_capture - INFO -     $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $const38.8.1 = const(int, 0)             ['$const38.8.1']
    $const38.8.1 = const(int, 0)             ['$const38.8.1']
2025-06-13 07:34:47,632 - print_capture - INFO -     $const38.8.1 = const(int, 0)             ['$const38.8.1']
    $const38.8.1 = const(int, 0)             ['$const38.8.1']
    $const38.8.1 = const(int, 0)             ['$const38.8.1']
2025-06-13 07:34:47,632 - print_capture - INFO -     $const38.8.1 = const(int, 0)             ['$const38.8.1']
    max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
    max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
2025-06-13 07:34:47,632 - print_capture - INFO -     max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
    max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
    max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
2025-06-13 07:34:47,632 - print_capture - INFO -     max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
    $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>) ['$44load_deref.10']
    $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>) ['$44load_deref.10']
2025-06-13 07:34:47,632 - print_capture - INFO -     $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>) ['$44load_deref.10']
    $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>) ['$44load_deref.10']
    $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>) ['$44load_deref.10']
2025-06-13 07:34:47,632 - print_capture - INFO -     $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>) ['$44load_deref.10']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
2025-06-13 07:34:47,632 - print_capture - INFO -     $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
2025-06-13 07:34:47,632 - print_capture - INFO -     $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
2025-06-13 07:34:47,632 - print_capture - INFO -     bool50 = global(bool: <class 'bool'>)    ['bool50']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
2025-06-13 07:34:47,633 - print_capture - INFO -     bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
2025-06-13 07:34:47,633 - print_capture - INFO -     $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
2025-06-13 07:34:47,633 - print_capture - INFO -     $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    branch $50pred, 52, 56                   ['$50pred']
    branch $50pred, 52, 56                   ['$50pred']
2025-06-13 07:34:47,633 - print_capture - INFO -     branch $50pred, 52, 56                   ['$50pred']
    branch $50pred, 52, 56                   ['$50pred']
    branch $50pred, 52, 56                   ['$50pred']
2025-06-13 07:34:47,633 - print_capture - INFO -     branch $50pred, 52, 56                   ['$50pred']
label 52:
label 52:
2025-06-13 07:34:47,633 - print_capture - INFO - label 52:
label 52:
label 52:
2025-06-13 07:34:47,633 - print_capture - INFO - label 52:
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
2025-06-13 07:34:47,633 - print_capture - INFO -     $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
2025-06-13 07:34:47,633 - print_capture - INFO -     $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    return $54return_value.1                 ['$54return_value.1']
    return $54return_value.1                 ['$54return_value.1']
2025-06-13 07:34:47,633 - print_capture - INFO -     return $54return_value.1                 ['$54return_value.1']
    return $54return_value.1                 ['$54return_value.1']
    return $54return_value.1                 ['$54return_value.1']
2025-06-13 07:34:47,633 - print_capture - INFO -     return $54return_value.1                 ['$54return_value.1']
label 56:
label 56:
2025-06-13 07:34:47,633 - print_capture - INFO - label 56:
label 56:
label 56:
2025-06-13 07:34:47,633 - print_capture - INFO - label 56:
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
2025-06-13 07:34:47,633 - print_capture - INFO -     $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
2025-06-13 07:34:47,633 - print_capture - INFO -     $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
2025-06-13 07:34:47,633 - print_capture - INFO -     $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
2025-06-13 07:34:47,633 - print_capture - INFO -     $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    jump 60                                  []
    jump 60                                  []
2025-06-13 07:34:47,633 - print_capture - INFO -     jump 60                                  []
    jump 60                                  []
    jump 60                                  []
2025-06-13 07:34:47,633 - print_capture - INFO -     jump 60                                  []
label 60:
label 60:
2025-06-13 07:34:47,633 - print_capture - INFO - label 60:
label 60:
label 60:
2025-06-13 07:34:47,633 - print_capture - INFO - label 60:
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
2025-06-13 07:34:47,633 - print_capture - INFO -     $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
2025-06-13 07:34:47,633 - print_capture - INFO -     $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
2025-06-13 07:34:47,633 - print_capture - INFO -     $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
2025-06-13 07:34:47,633 - print_capture - INFO -     $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
2025-06-13 07:34:47,633 - print_capture - INFO -     $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
2025-06-13 07:34:47,633 - print_capture - INFO -     $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
2025-06-13 07:34:47,633 - print_capture - INFO -     $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
2025-06-13 07:34:47,633 - print_capture - INFO -     $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
2025-06-13 07:34:47,633 - print_capture - INFO -     branch $60for_iter.3, 62, 104            ['$60for_iter.3']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
2025-06-13 07:34:47,633 - print_capture - INFO -     branch $60for_iter.3, 62, 104            ['$60for_iter.3']
label 62:
label 62:
2025-06-13 07:34:47,633 - print_capture - INFO - label 62:
label 62:
label 62:
2025-06-13 07:34:47,633 - print_capture - INFO - label 62:
    view = $phi62.1                          ['$phi62.1', 'view']
    view = $phi62.1                          ['$phi62.1', 'view']
2025-06-13 07:34:47,633 - print_capture - INFO -     view = $phi62.1                          ['$phi62.1', 'view']
    view = $phi62.1                          ['$phi62.1', 'view']
    view = $phi62.1                          ['$phi62.1', 'view']
2025-06-13 07:34:47,633 - print_capture - INFO -     view = $phi62.1                          ['$phi62.1', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
2025-06-13 07:34:47,633 - print_capture - INFO -     $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
2025-06-13 07:34:47,633 - print_capture - INFO -     $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
2025-06-13 07:34:47,633 - print_capture - INFO -     v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
2025-06-13 07:34:47,633 - print_capture - INFO -     v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>) ['$72load_deref.5']
    $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>) ['$72load_deref.5']
2025-06-13 07:34:47,633 - print_capture - INFO -     $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>) ['$72load_deref.5']
    $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>) ['$72load_deref.5']
    $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>) ['$72load_deref.5']
2025-06-13 07:34:47,633 - print_capture - INFO -     $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>) ['$72load_deref.5']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
2025-06-13 07:34:47,634 - print_capture - INFO -     $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
2025-06-13 07:34:47,634 - print_capture - INFO -     $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
2025-06-13 07:34:47,634 - print_capture - INFO -     bool78 = global(bool: <class 'bool'>)    ['bool78']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
2025-06-13 07:34:47,634 - print_capture - INFO -     bool78 = global(bool: <class 'bool'>)    ['bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
2025-06-13 07:34:47,634 - print_capture - INFO -     $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
2025-06-13 07:34:47,634 - print_capture - INFO -     $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    branch $78pred, 80, 88                   ['$78pred']
    branch $78pred, 80, 88                   ['$78pred']
2025-06-13 07:34:47,634 - print_capture - INFO -     branch $78pred, 80, 88                   ['$78pred']
    branch $78pred, 80, 88                   ['$78pred']
    branch $78pred, 80, 88                   ['$78pred']
2025-06-13 07:34:47,634 - print_capture - INFO -     branch $78pred, 80, 88                   ['$78pred']
label 80:
label 80:
2025-06-13 07:34:47,634 - print_capture - INFO - label 80:
label 80:
label 80:
2025-06-13 07:34:47,634 - print_capture - INFO - label 80:
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
2025-06-13 07:34:47,634 - print_capture - INFO -     $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
2025-06-13 07:34:47,634 - print_capture - INFO -     $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    return $86return_value.2                 ['$86return_value.2']
    return $86return_value.2                 ['$86return_value.2']
2025-06-13 07:34:47,634 - print_capture - INFO -     return $86return_value.2                 ['$86return_value.2']
    return $86return_value.2                 ['$86return_value.2']
    return $86return_value.2                 ['$86return_value.2']
2025-06-13 07:34:47,634 - print_capture - INFO -     return $86return_value.2                 ['$86return_value.2']
label 88:
label 88:
2025-06-13 07:34:47,634 - print_capture - INFO - label 88:
label 88:
label 88:
2025-06-13 07:34:47,634 - print_capture - INFO - label 88:
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
2025-06-13 07:34:47,634 - print_capture - INFO -     $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
2025-06-13 07:34:47,634 - print_capture - INFO -     $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
2025-06-13 07:34:47,634 - print_capture - INFO -     $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
2025-06-13 07:34:47,634 - print_capture - INFO -     $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
2025-06-13 07:34:47,634 - print_capture - INFO -     bool96 = global(bool: <class 'bool'>)    ['bool96']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
2025-06-13 07:34:47,634 - print_capture - INFO -     bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
2025-06-13 07:34:47,634 - print_capture - INFO -     $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
2025-06-13 07:34:47,634 - print_capture - INFO -     $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    branch $96pred, 98, 102                  ['$96pred']
    branch $96pred, 98, 102                  ['$96pred']
2025-06-13 07:34:47,634 - print_capture - INFO -     branch $96pred, 98, 102                  ['$96pred']
    branch $96pred, 98, 102                  ['$96pred']
    branch $96pred, 98, 102                  ['$96pred']
2025-06-13 07:34:47,634 - print_capture - INFO -     branch $96pred, 98, 102                  ['$96pred']
label 98:
label 98:
2025-06-13 07:34:47,634 - print_capture - INFO - label 98:
label 98:
label 98:
2025-06-13 07:34:47,634 - print_capture - INFO - label 98:
    max_value = v                            ['max_value', 'v']
    max_value = v                            ['max_value', 'v']
2025-06-13 07:34:47,634 - print_capture - INFO -     max_value = v                            ['max_value', 'v']
    max_value = v                            ['max_value', 'v']
    max_value = v                            ['max_value', 'v']
2025-06-13 07:34:47,634 - print_capture - INFO -     max_value = v                            ['max_value', 'v']
    jump 102                                 []
    jump 102                                 []
2025-06-13 07:34:47,634 - print_capture - INFO -     jump 102                                 []
    jump 102                                 []
    jump 102                                 []
2025-06-13 07:34:47,634 - print_capture - INFO -     jump 102                                 []
label 102:
label 102:
2025-06-13 07:34:47,634 - print_capture - INFO - label 102:
label 102:
label 102:
2025-06-13 07:34:47,634 - print_capture - INFO - label 102:
    jump 60                                  []
    jump 60                                  []
2025-06-13 07:34:47,634 - print_capture - INFO -     jump 60                                  []
    jump 60                                  []
    jump 60                                  []
2025-06-13 07:34:47,634 - print_capture - INFO -     jump 60                                  []
label 104:
label 104:
2025-06-13 07:34:47,634 - print_capture - INFO - label 104:
label 104:
label 104:
2025-06-13 07:34:47,634 - print_capture - INFO - label 104:
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
2025-06-13 07:34:47,634 - print_capture - INFO -     $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
2025-06-13 07:34:47,634 - print_capture - INFO -     $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    return $106return_value.1                ['$106return_value.1']
    return $106return_value.1                ['$106return_value.1']
2025-06-13 07:34:47,634 - print_capture - INFO -     return $106return_value.1                ['$106return_value.1']
    return $106return_value.1                ['$106return_value.1']
    return $106return_value.1                ['$106return_value.1']
2025-06-13 07:34:47,635 - print_capture - INFO -     return $106return_value.1                ['$106return_value.1']
label 0:
label 0:
2025-06-13 07:34:47,642 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:47,642 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:47,642 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:47,642 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
2025-06-13 07:34:47,642 - print_capture - INFO -     indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
2025-06-13 07:34:47,642 - print_capture - INFO -     indices = arg(1, name=indices)           ['indices']
    axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
2025-06-13 07:34:47,642 - print_capture - INFO -     axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
2025-06-13 07:34:47,642 - print_capture - INFO -     axis = arg(2, name=axis)                 ['axis']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
2025-06-13 07:34:47,642 - print_capture - INFO -     $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
2025-06-13 07:34:47,642 - print_capture - INFO -     $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
2025-06-13 07:34:47,642 - print_capture - INFO -     $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
2025-06-13 07:34:47,642 - print_capture - INFO -     $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
2025-06-13 07:34:47,643 - print_capture - INFO -     $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
2025-06-13 07:34:47,643 - print_capture - INFO -     $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
2025-06-13 07:34:47,643 - print_capture - INFO -     $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
2025-06-13 07:34:47,643 - print_capture - INFO -     $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
2025-06-13 07:34:47,643 - print_capture - INFO -     bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
2025-06-13 07:34:47,643 - print_capture - INFO -     bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
2025-06-13 07:34:47,643 - print_capture - INFO -     $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
2025-06-13 07:34:47,643 - print_capture - INFO -     $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
2025-06-13 07:34:47,643 - print_capture - INFO -     branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
2025-06-13 07:34:47,643 - print_capture - INFO -     branch $14pred, 28, 16                   ['$14pred']
label 16:
label 16:
2025-06-13 07:34:47,643 - print_capture - INFO - label 16:
label 16:
label 16:
2025-06-13 07:34:47,643 - print_capture - INFO - label 16:
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
2025-06-13 07:34:47,643 - print_capture - INFO -     $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
2025-06-13 07:34:47,643 - print_capture - INFO -     $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
2025-06-13 07:34:47,643 - print_capture - INFO -     $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
2025-06-13 07:34:47,643 - print_capture - INFO -     $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
2025-06-13 07:34:47,643 - print_capture - INFO -     $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
2025-06-13 07:34:47,643 - print_capture - INFO -     $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
2025-06-13 07:34:47,643 - print_capture - INFO -     bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
2025-06-13 07:34:47,643 - print_capture - INFO -     bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
2025-06-13 07:34:47,643 - print_capture - INFO -     $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
2025-06-13 07:34:47,643 - print_capture - INFO -     $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
2025-06-13 07:34:47,643 - print_capture - INFO -     branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
2025-06-13 07:34:47,643 - print_capture - INFO -     branch $26pred, 28, 36                   ['$26pred']
label 28:
label 28:
2025-06-13 07:34:47,643 - print_capture - INFO - label 28:
label 28:
label 28:
2025-06-13 07:34:47,643 - print_capture - INFO - label 28:
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
2025-06-13 07:34:47,643 - print_capture - INFO -     $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
2025-06-13 07:34:47,643 - print_capture - INFO -     $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
2025-06-13 07:34:47,643 - print_capture - INFO -     $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
2025-06-13 07:34:47,643 - print_capture - INFO -     $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
2025-06-13 07:34:47,643 - print_capture - INFO -     $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
2025-06-13 07:34:47,643 - print_capture - INFO -     $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
2025-06-13 07:34:47,643 - print_capture - INFO -     raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
2025-06-13 07:34:47,643 - print_capture - INFO -     raise $32call_function.2                 ['$32call_function.2']
label 36:
label 36:
2025-06-13 07:34:47,643 - print_capture - INFO - label 36:
label 36:
label 36:
2025-06-13 07:34:47,643 - print_capture - INFO - label 36:
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
2025-06-13 07:34:47,643 - print_capture - INFO -     $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
2025-06-13 07:34:47,643 - print_capture - INFO -     $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
2025-06-13 07:34:47,643 - print_capture - INFO -     $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
2025-06-13 07:34:47,644 - print_capture - INFO -     $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
2025-06-13 07:34:47,644 - print_capture - INFO -     $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
2025-06-13 07:34:47,644 - print_capture - INFO -     $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
2025-06-13 07:34:47,644 - print_capture - INFO -     $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
2025-06-13 07:34:47,644 - print_capture - INFO -     $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
2025-06-13 07:34:47,644 - print_capture - INFO -     return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
2025-06-13 07:34:47,644 - print_capture - INFO -     return $46return_value.5                 ['$46return_value.5']
label 0:
label 0:
2025-06-13 07:34:47,655 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:47,655 - print_capture - INFO - label 0:
    ary = arg(0, name=ary)                   ['ary']
    ary = arg(0, name=ary)                   ['ary']
2025-06-13 07:34:47,656 - print_capture - INFO -     ary = arg(0, name=ary)                   ['ary']
    ary = arg(0, name=ary)                   ['ary']
    ary = arg(0, name=ary)                   ['ary']
2025-06-13 07:34:47,656 - print_capture - INFO -     ary = arg(0, name=ary)                   ['ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
2025-06-13 07:34:47,656 - print_capture - INFO -     $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
2025-06-13 07:34:47,656 - print_capture - INFO -     $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
2025-06-13 07:34:47,656 - print_capture - INFO -     $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
2025-06-13 07:34:47,656 - print_capture - INFO -     $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
2025-06-13 07:34:47,656 - print_capture - INFO -     $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
2025-06-13 07:34:47,656 - print_capture - INFO -     $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
2025-06-13 07:34:47,656 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
2025-06-13 07:34:47,656 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:47,656 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:47,656 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
label 0:
label 0:
2025-06-13 07:34:47,661 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:47,661 - print_capture - INFO - label 0:
    origsize = arg(0, name=origsize)         ['origsize']
    origsize = arg(0, name=origsize)         ['origsize']
2025-06-13 07:34:47,662 - print_capture - INFO -     origsize = arg(0, name=origsize)         ['origsize']
    origsize = arg(0, name=origsize)         ['origsize']
    origsize = arg(0, name=origsize)         ['origsize']
2025-06-13 07:34:47,662 - print_capture - INFO -     origsize = arg(0, name=origsize)         ['origsize']
    shape = arg(1, name=shape)               ['shape']
    shape = arg(1, name=shape)               ['shape']
2025-06-13 07:34:47,662 - print_capture - INFO -     shape = arg(1, name=shape)               ['shape']
    shape = arg(1, name=shape)               ['shape']
    shape = arg(1, name=shape)               ['shape']
2025-06-13 07:34:47,662 - print_capture - INFO -     shape = arg(1, name=shape)               ['shape']
    num_neg_value = const(int, 0)            ['num_neg_value']
    num_neg_value = const(int, 0)            ['num_neg_value']
2025-06-13 07:34:47,662 - print_capture - INFO -     num_neg_value = const(int, 0)            ['num_neg_value']
    num_neg_value = const(int, 0)            ['num_neg_value']
    num_neg_value = const(int, 0)            ['num_neg_value']
2025-06-13 07:34:47,662 - print_capture - INFO -     num_neg_value = const(int, 0)            ['num_neg_value']
    known_size = const(int, 1)               ['known_size']
    known_size = const(int, 1)               ['known_size']
2025-06-13 07:34:47,662 - print_capture - INFO -     known_size = const(int, 1)               ['known_size']
    known_size = const(int, 1)               ['known_size']
    known_size = const(int, 1)               ['known_size']
2025-06-13 07:34:47,662 - print_capture - INFO -     known_size = const(int, 1)               ['known_size']
    $10load_global.2 = global(enumerate: <class 'enumerate'>) ['$10load_global.2']
    $10load_global.2 = global(enumerate: <class 'enumerate'>) ['$10load_global.2']
2025-06-13 07:34:47,662 - print_capture - INFO -     $10load_global.2 = global(enumerate: <class 'enumerate'>) ['$10load_global.2']
    $10load_global.2 = global(enumerate: <class 'enumerate'>) ['$10load_global.2']
    $10load_global.2 = global(enumerate: <class 'enumerate'>) ['$10load_global.2']
2025-06-13 07:34:47,662 - print_capture - INFO -     $10load_global.2 = global(enumerate: <class 'enumerate'>) ['$10load_global.2']
    $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2077)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.2', '$14call_function.4', 'shape']
    $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2077)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.2', '$14call_function.4', 'shape']
2025-06-13 07:34:47,662 - print_capture - INFO -     $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2077)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.2', '$14call_function.4', 'shape']
    $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2077)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.2', '$14call_function.4', 'shape']
    $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2077)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.2', '$14call_function.4', 'shape']
2025-06-13 07:34:47,662 - print_capture - INFO -     $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2077)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.2', '$14call_function.4', 'shape']
    $16get_iter.5 = getiter(value=$14call_function.4) ['$14call_function.4', '$16get_iter.5']
    $16get_iter.5 = getiter(value=$14call_function.4) ['$14call_function.4', '$16get_iter.5']
2025-06-13 07:34:47,662 - print_capture - INFO -     $16get_iter.5 = getiter(value=$14call_function.4) ['$14call_function.4', '$16get_iter.5']
    $16get_iter.5 = getiter(value=$14call_function.4) ['$14call_function.4', '$16get_iter.5']
    $16get_iter.5 = getiter(value=$14call_function.4) ['$14call_function.4', '$16get_iter.5']
2025-06-13 07:34:47,662 - print_capture - INFO -     $16get_iter.5 = getiter(value=$14call_function.4) ['$14call_function.4', '$16get_iter.5']
    $phi18.0 = $16get_iter.5                 ['$16get_iter.5', '$phi18.0']
    $phi18.0 = $16get_iter.5                 ['$16get_iter.5', '$phi18.0']
2025-06-13 07:34:47,662 - print_capture - INFO -     $phi18.0 = $16get_iter.5                 ['$16get_iter.5', '$phi18.0']
    $phi18.0 = $16get_iter.5                 ['$16get_iter.5', '$phi18.0']
    $phi18.0 = $16get_iter.5                 ['$16get_iter.5', '$phi18.0']
2025-06-13 07:34:47,662 - print_capture - INFO -     $phi18.0 = $16get_iter.5                 ['$16get_iter.5', '$phi18.0']
    jump 18                                  []
    jump 18                                  []
2025-06-13 07:34:47,662 - print_capture - INFO -     jump 18                                  []
    jump 18                                  []
    jump 18                                  []
2025-06-13 07:34:47,662 - print_capture - INFO -     jump 18                                  []
label 18:
label 18:
2025-06-13 07:34:47,662 - print_capture - INFO - label 18:
label 18:
label 18:
2025-06-13 07:34:47,662 - print_capture - INFO - label 18:
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
2025-06-13 07:34:47,662 - print_capture - INFO -     $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
2025-06-13 07:34:47,662 - print_capture - INFO -     $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
2025-06-13 07:34:47,662 - print_capture - INFO -     $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
2025-06-13 07:34:47,662 - print_capture - INFO -     $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
2025-06-13 07:34:47,662 - print_capture - INFO -     $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
2025-06-13 07:34:47,662 - print_capture - INFO -     $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
2025-06-13 07:34:47,662 - print_capture - INFO -     $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
2025-06-13 07:34:47,662 - print_capture - INFO -     $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    branch $18for_iter.3, 20, 58             ['$18for_iter.3']
    branch $18for_iter.3, 20, 58             ['$18for_iter.3']
2025-06-13 07:34:47,662 - print_capture - INFO -     branch $18for_iter.3, 20, 58             ['$18for_iter.3']
    branch $18for_iter.3, 20, 58             ['$18for_iter.3']
    branch $18for_iter.3, 20, 58             ['$18for_iter.3']
2025-06-13 07:34:47,662 - print_capture - INFO -     branch $18for_iter.3, 20, 58             ['$18for_iter.3']
label 20:
label 20:
2025-06-13 07:34:47,662 - print_capture - INFO - label 20:
label 20:
label 20:
2025-06-13 07:34:47,662 - print_capture - INFO - label 20:
    $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2) ['$20unpack_sequence.4', '$phi20.1']
    $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2) ['$20unpack_sequence.4', '$phi20.1']
2025-06-13 07:34:47,662 - print_capture - INFO -     $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2) ['$20unpack_sequence.4', '$phi20.1']
    $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2) ['$20unpack_sequence.4', '$phi20.1']
    $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2) ['$20unpack_sequence.4', '$phi20.1']
2025-06-13 07:34:47,662 - print_capture - INFO -     $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2) ['$20unpack_sequence.4', '$phi20.1']
    $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.2', '$20unpack_sequence.4']
    $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.2', '$20unpack_sequence.4']
2025-06-13 07:34:47,662 - print_capture - INFO -     $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.2', '$20unpack_sequence.4']
    $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.2', '$20unpack_sequence.4']
    $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.2', '$20unpack_sequence.4']
2025-06-13 07:34:47,662 - print_capture - INFO -     $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.2', '$20unpack_sequence.4']
    $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.3', '$20unpack_sequence.4']
    $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.3', '$20unpack_sequence.4']
2025-06-13 07:34:47,662 - print_capture - INFO -     $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.3', '$20unpack_sequence.4']
    $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.3', '$20unpack_sequence.4']
    $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.3', '$20unpack_sequence.4']
2025-06-13 07:34:47,662 - print_capture - INFO -     $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.3', '$20unpack_sequence.4']
    ax = $20unpack_sequence.2                ['$20unpack_sequence.2', 'ax']
    ax = $20unpack_sequence.2                ['$20unpack_sequence.2', 'ax']
2025-06-13 07:34:47,662 - print_capture - INFO -     ax = $20unpack_sequence.2                ['$20unpack_sequence.2', 'ax']
    ax = $20unpack_sequence.2                ['$20unpack_sequence.2', 'ax']
    ax = $20unpack_sequence.2                ['$20unpack_sequence.2', 'ax']
2025-06-13 07:34:47,662 - print_capture - INFO -     ax = $20unpack_sequence.2                ['$20unpack_sequence.2', 'ax']
    s = $20unpack_sequence.3                 ['$20unpack_sequence.3', 's']
    s = $20unpack_sequence.3                 ['$20unpack_sequence.3', 's']
2025-06-13 07:34:47,662 - print_capture - INFO -     s = $20unpack_sequence.3                 ['$20unpack_sequence.3', 's']
    s = $20unpack_sequence.3                 ['$20unpack_sequence.3', 's']
    s = $20unpack_sequence.3                 ['$20unpack_sequence.3', 's']
2025-06-13 07:34:47,663 - print_capture - INFO -     s = $20unpack_sequence.3                 ['$20unpack_sequence.3', 's']
    $const28.6.1 = const(int, 0)             ['$const28.6.1']
    $const28.6.1 = const(int, 0)             ['$const28.6.1']
2025-06-13 07:34:47,663 - print_capture - INFO -     $const28.6.1 = const(int, 0)             ['$const28.6.1']
    $const28.6.1 = const(int, 0)             ['$const28.6.1']
    $const28.6.1 = const(int, 0)             ['$const28.6.1']
2025-06-13 07:34:47,663 - print_capture - INFO -     $const28.6.1 = const(int, 0)             ['$const28.6.1']
    $30compare_op.7 = s < $const28.6.1       ['$30compare_op.7', '$const28.6.1', 's']
    $30compare_op.7 = s < $const28.6.1       ['$30compare_op.7', '$const28.6.1', 's']
2025-06-13 07:34:47,663 - print_capture - INFO -     $30compare_op.7 = s < $const28.6.1       ['$30compare_op.7', '$const28.6.1', 's']
    $30compare_op.7 = s < $const28.6.1       ['$30compare_op.7', '$const28.6.1', 's']
    $30compare_op.7 = s < $const28.6.1       ['$30compare_op.7', '$const28.6.1', 's']
2025-06-13 07:34:47,663 - print_capture - INFO -     $30compare_op.7 = s < $const28.6.1       ['$30compare_op.7', '$const28.6.1', 's']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
2025-06-13 07:34:47,663 - print_capture - INFO -     bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
2025-06-13 07:34:47,663 - print_capture - INFO -     bool32 = global(bool: <class 'bool'>)    ['bool32']
    $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2081),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.7', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2081),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.7', '$32pred', 'bool32']
2025-06-13 07:34:47,663 - print_capture - INFO -     $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2081),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.7', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2081),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.7', '$32pred', 'bool32']
    $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2081),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.7', '$32pred', 'bool32']
2025-06-13 07:34:47,663 - print_capture - INFO -     $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2081),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.7', '$32pred', 'bool32']
    branch $32pred, 34, 48                   ['$32pred']
    branch $32pred, 34, 48                   ['$32pred']
2025-06-13 07:34:47,663 - print_capture - INFO -     branch $32pred, 34, 48                   ['$32pred']
    branch $32pred, 34, 48                   ['$32pred']
    branch $32pred, 34, 48                   ['$32pred']
2025-06-13 07:34:47,663 - print_capture - INFO -     branch $32pred, 34, 48                   ['$32pred']
label 34:
label 34:
2025-06-13 07:34:47,663 - print_capture - INFO - label 34:
label 34:
label 34:
2025-06-13 07:34:47,663 - print_capture - INFO - label 34:
    $const36.2.2 = const(int, 1)             ['$const36.2.2']
    $const36.2.2 = const(int, 1)             ['$const36.2.2']
2025-06-13 07:34:47,663 - print_capture - INFO -     $const36.2.2 = const(int, 1)             ['$const36.2.2']
    $const36.2.2 = const(int, 1)             ['$const36.2.2']
    $const36.2.2 = const(int, 1)             ['$const36.2.2']
2025-06-13 07:34:47,663 - print_capture - INFO -     $const36.2.2 = const(int, 1)             ['$const36.2.2']
    $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2.2, static_lhs=Undefined, static_rhs=Undefined) ['$38inplace_add.3', '$const36.2.2', 'num_neg_value']
    $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2.2, static_lhs=Undefined, static_rhs=Undefined) ['$38inplace_add.3', '$const36.2.2', 'num_neg_value']
2025-06-13 07:34:47,663 - print_capture - INFO -     $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2.2, static_lhs=Undefined, static_rhs=Undefined) ['$38inplace_add.3', '$const36.2.2', 'num_neg_value']
    $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2.2, static_lhs=Undefined, static_rhs=Undefined) ['$38inplace_add.3', '$const36.2.2', 'num_neg_value']
    $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2.2, static_lhs=Undefined, static_rhs=Undefined) ['$38inplace_add.3', '$const36.2.2', 'num_neg_value']
2025-06-13 07:34:47,663 - print_capture - INFO -     $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2.2, static_lhs=Undefined, static_rhs=Undefined) ['$38inplace_add.3', '$const36.2.2', 'num_neg_value']
    num_neg_value = $38inplace_add.3         ['$38inplace_add.3', 'num_neg_value']
    num_neg_value = $38inplace_add.3         ['$38inplace_add.3', 'num_neg_value']
2025-06-13 07:34:47,663 - print_capture - INFO -     num_neg_value = $38inplace_add.3         ['$38inplace_add.3', 'num_neg_value']
    num_neg_value = $38inplace_add.3         ['$38inplace_add.3', 'num_neg_value']
    num_neg_value = $38inplace_add.3         ['$38inplace_add.3', 'num_neg_value']
2025-06-13 07:34:47,663 - print_capture - INFO -     num_neg_value = $38inplace_add.3         ['$38inplace_add.3', 'num_neg_value']
    neg_ax = ax                              ['ax', 'neg_ax']
    neg_ax = ax                              ['ax', 'neg_ax']
2025-06-13 07:34:47,663 - print_capture - INFO -     neg_ax = ax                              ['ax', 'neg_ax']
    neg_ax = ax                              ['ax', 'neg_ax']
    neg_ax = ax                              ['ax', 'neg_ax']
2025-06-13 07:34:47,663 - print_capture - INFO -     neg_ax = ax                              ['ax', 'neg_ax']
    jump 18                                  []
    jump 18                                  []
2025-06-13 07:34:47,663 - print_capture - INFO -     jump 18                                  []
    jump 18                                  []
    jump 18                                  []
2025-06-13 07:34:47,663 - print_capture - INFO -     jump 18                                  []
label 48:
label 48:
2025-06-13 07:34:47,663 - print_capture - INFO - label 48:
label 48:
label 48:
2025-06-13 07:34:47,663 - print_capture - INFO - label 48:
    $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined) ['$52inplace_multiply.3', 'known_size', 's']
    $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined) ['$52inplace_multiply.3', 'known_size', 's']
2025-06-13 07:34:47,663 - print_capture - INFO -     $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined) ['$52inplace_multiply.3', 'known_size', 's']
    $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined) ['$52inplace_multiply.3', 'known_size', 's']
    $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined) ['$52inplace_multiply.3', 'known_size', 's']
2025-06-13 07:34:47,663 - print_capture - INFO -     $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined) ['$52inplace_multiply.3', 'known_size', 's']
    known_size = $52inplace_multiply.3       ['$52inplace_multiply.3', 'known_size']
    known_size = $52inplace_multiply.3       ['$52inplace_multiply.3', 'known_size']
2025-06-13 07:34:47,663 - print_capture - INFO -     known_size = $52inplace_multiply.3       ['$52inplace_multiply.3', 'known_size']
    known_size = $52inplace_multiply.3       ['$52inplace_multiply.3', 'known_size']
    known_size = $52inplace_multiply.3       ['$52inplace_multiply.3', 'known_size']
2025-06-13 07:34:47,663 - print_capture - INFO -     known_size = $52inplace_multiply.3       ['$52inplace_multiply.3', 'known_size']
    jump 18                                  []
    jump 18                                  []
2025-06-13 07:34:47,663 - print_capture - INFO -     jump 18                                  []
    jump 18                                  []
    jump 18                                  []
2025-06-13 07:34:47,663 - print_capture - INFO -     jump 18                                  []
label 58:
label 58:
2025-06-13 07:34:47,663 - print_capture - INFO - label 58:
label 58:
label 58:
2025-06-13 07:34:47,663 - print_capture - INFO - label 58:
    $const60.1.1 = const(int, 0)             ['$const60.1.1']
    $const60.1.1 = const(int, 0)             ['$const60.1.1']
2025-06-13 07:34:47,663 - print_capture - INFO -     $const60.1.1 = const(int, 0)             ['$const60.1.1']
    $const60.1.1 = const(int, 0)             ['$const60.1.1']
    $const60.1.1 = const(int, 0)             ['$const60.1.1']
2025-06-13 07:34:47,663 - print_capture - INFO -     $const60.1.1 = const(int, 0)             ['$const60.1.1']
    $62compare_op.2 = num_neg_value == $const60.1.1 ['$62compare_op.2', '$const60.1.1', 'num_neg_value']
    $62compare_op.2 = num_neg_value == $const60.1.1 ['$62compare_op.2', '$const60.1.1', 'num_neg_value']
2025-06-13 07:34:47,663 - print_capture - INFO -     $62compare_op.2 = num_neg_value == $const60.1.1 ['$62compare_op.2', '$const60.1.1', 'num_neg_value']
    $62compare_op.2 = num_neg_value == $const60.1.1 ['$62compare_op.2', '$const60.1.1', 'num_neg_value']
    $62compare_op.2 = num_neg_value == $const60.1.1 ['$62compare_op.2', '$const60.1.1', 'num_neg_value']
2025-06-13 07:34:47,663 - print_capture - INFO -     $62compare_op.2 = num_neg_value == $const60.1.1 ['$62compare_op.2', '$const60.1.1', 'num_neg_value']
    bool64 = global(bool: <class 'bool'>)    ['bool64']
    bool64 = global(bool: <class 'bool'>)    ['bool64']
2025-06-13 07:34:47,663 - print_capture - INFO -     bool64 = global(bool: <class 'bool'>)    ['bool64']
    bool64 = global(bool: <class 'bool'>)    ['bool64']
    bool64 = global(bool: <class 'bool'>)    ['bool64']
2025-06-13 07:34:47,663 - print_capture - INFO -     bool64 = global(bool: <class 'bool'>)    ['bool64']
    $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2087),), kws=(), vararg=None, varkwarg=None, target=None) ['$62compare_op.2', '$64pred', 'bool64']
    $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2087),), kws=(), vararg=None, varkwarg=None, target=None) ['$62compare_op.2', '$64pred', 'bool64']
2025-06-13 07:34:47,663 - print_capture - INFO -     $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2087),), kws=(), vararg=None, varkwarg=None, target=None) ['$62compare_op.2', '$64pred', 'bool64']
    $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2087),), kws=(), vararg=None, varkwarg=None, target=None) ['$62compare_op.2', '$64pred', 'bool64']
    $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2087),), kws=(), vararg=None, varkwarg=None, target=None) ['$62compare_op.2', '$64pred', 'bool64']
2025-06-13 07:34:47,663 - print_capture - INFO -     $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2087),), kws=(), vararg=None, varkwarg=None, target=None) ['$62compare_op.2', '$64pred', 'bool64']
    branch $64pred, 66, 86                   ['$64pred']
    branch $64pred, 66, 86                   ['$64pred']
2025-06-13 07:34:47,663 - print_capture - INFO -     branch $64pred, 66, 86                   ['$64pred']
    branch $64pred, 66, 86                   ['$64pred']
    branch $64pred, 66, 86                   ['$64pred']
2025-06-13 07:34:47,664 - print_capture - INFO -     branch $64pred, 66, 86                   ['$64pred']
label 66:
label 66:
2025-06-13 07:34:47,664 - print_capture - INFO - label 66:
label 66:
label 66:
2025-06-13 07:34:47,664 - print_capture - INFO - label 66:
    $70compare_op.2 = origsize != known_size ['$70compare_op.2', 'known_size', 'origsize']
    $70compare_op.2 = origsize != known_size ['$70compare_op.2', 'known_size', 'origsize']
2025-06-13 07:34:47,664 - print_capture - INFO -     $70compare_op.2 = origsize != known_size ['$70compare_op.2', 'known_size', 'origsize']
    $70compare_op.2 = origsize != known_size ['$70compare_op.2', 'known_size', 'origsize']
    $70compare_op.2 = origsize != known_size ['$70compare_op.2', 'known_size', 'origsize']
2025-06-13 07:34:47,664 - print_capture - INFO -     $70compare_op.2 = origsize != known_size ['$70compare_op.2', 'known_size', 'origsize']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
2025-06-13 07:34:47,664 - print_capture - INFO -     bool72 = global(bool: <class 'bool'>)    ['bool72']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
2025-06-13 07:34:47,664 - print_capture - INFO -     bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2088),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.2', '$72pred', 'bool72']
    $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2088),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.2', '$72pred', 'bool72']
2025-06-13 07:34:47,664 - print_capture - INFO -     $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2088),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.2', '$72pred', 'bool72']
    $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2088),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.2', '$72pred', 'bool72']
    $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2088),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.2', '$72pred', 'bool72']
2025-06-13 07:34:47,664 - print_capture - INFO -     $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2088),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.2', '$72pred', 'bool72']
    branch $72pred, 74, 82                   ['$72pred']
    branch $72pred, 74, 82                   ['$72pred']
2025-06-13 07:34:47,664 - print_capture - INFO -     branch $72pred, 74, 82                   ['$72pred']
    branch $72pred, 74, 82                   ['$72pred']
    branch $72pred, 74, 82                   ['$72pred']
2025-06-13 07:34:47,664 - print_capture - INFO -     branch $72pred, 74, 82                   ['$72pred']
label 74:
label 74:
2025-06-13 07:34:47,664 - print_capture - INFO - label 74:
label 74:
label 74:
2025-06-13 07:34:47,664 - print_capture - INFO - label 74:
    $74load_global.0 = global(ValueError: <class 'ValueError'>) ['$74load_global.0']
    $74load_global.0 = global(ValueError: <class 'ValueError'>) ['$74load_global.0']
2025-06-13 07:34:47,664 - print_capture - INFO -     $74load_global.0 = global(ValueError: <class 'ValueError'>) ['$74load_global.0']
    $74load_global.0 = global(ValueError: <class 'ValueError'>) ['$74load_global.0']
    $74load_global.0 = global(ValueError: <class 'ValueError'>) ['$74load_global.0']
2025-06-13 07:34:47,664 - print_capture - INFO -     $74load_global.0 = global(ValueError: <class 'ValueError'>) ['$74load_global.0']
    $const76.1.3 = const(str, total size of new array must be unchanged) ['$const76.1.3']
    $const76.1.3 = const(str, total size of new array must be unchanged) ['$const76.1.3']
2025-06-13 07:34:47,664 - print_capture - INFO -     $const76.1.3 = const(str, total size of new array must be unchanged) ['$const76.1.3']
    $const76.1.3 = const(str, total size of new array must be unchanged) ['$const76.1.3']
    $const76.1.3 = const(str, total size of new array must be unchanged) ['$const76.1.3']
2025-06-13 07:34:47,664 - print_capture - INFO -     $const76.1.3 = const(str, total size of new array must be unchanged) ['$const76.1.3']
    $78call_function.2 = call $74load_global.0($const76.1.3, func=$74load_global.0, args=[Var($const76.1.3, arrayobj.py:2089)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.0', '$78call_function.2', '$const76.1.3']
    $78call_function.2 = call $74load_global.0($const76.1.3, func=$74load_global.0, args=[Var($const76.1.3, arrayobj.py:2089)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.0', '$78call_function.2', '$const76.1.3']
2025-06-13 07:34:47,664 - print_capture - INFO -     $78call_function.2 = call $74load_global.0($const76.1.3, func=$74load_global.0, args=[Var($const76.1.3, arrayobj.py:2089)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.0', '$78call_function.2', '$const76.1.3']
    $78call_function.2 = call $74load_global.0($const76.1.3, func=$74load_global.0, args=[Var($const76.1.3, arrayobj.py:2089)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.0', '$78call_function.2', '$const76.1.3']
    $78call_function.2 = call $74load_global.0($const76.1.3, func=$74load_global.0, args=[Var($const76.1.3, arrayobj.py:2089)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.0', '$78call_function.2', '$const76.1.3']
2025-06-13 07:34:47,664 - print_capture - INFO -     $78call_function.2 = call $74load_global.0($const76.1.3, func=$74load_global.0, args=[Var($const76.1.3, arrayobj.py:2089)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.0', '$78call_function.2', '$const76.1.3']
    raise $78call_function.2                 ['$78call_function.2']
    raise $78call_function.2                 ['$78call_function.2']
2025-06-13 07:34:47,664 - print_capture - INFO -     raise $78call_function.2                 ['$78call_function.2']
    raise $78call_function.2                 ['$78call_function.2']
    raise $78call_function.2                 ['$78call_function.2']
2025-06-13 07:34:47,664 - print_capture - INFO -     raise $78call_function.2                 ['$78call_function.2']
label 82:
label 82:
2025-06-13 07:34:47,664 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 07:34:47,664 - print_capture - INFO - label 82:
    $const82.0.0 = const(NoneType, None)     ['$const82.0.0']
    $const82.0.0 = const(NoneType, None)     ['$const82.0.0']
2025-06-13 07:34:47,664 - print_capture - INFO -     $const82.0.0 = const(NoneType, None)     ['$const82.0.0']
    $const82.0.0 = const(NoneType, None)     ['$const82.0.0']
    $const82.0.0 = const(NoneType, None)     ['$const82.0.0']
2025-06-13 07:34:47,664 - print_capture - INFO -     $const82.0.0 = const(NoneType, None)     ['$const82.0.0']
    $84return_value.1 = cast(value=$const82.0.0) ['$84return_value.1', '$const82.0.0']
    $84return_value.1 = cast(value=$const82.0.0) ['$84return_value.1', '$const82.0.0']
2025-06-13 07:34:47,664 - print_capture - INFO -     $84return_value.1 = cast(value=$const82.0.0) ['$84return_value.1', '$const82.0.0']
    $84return_value.1 = cast(value=$const82.0.0) ['$84return_value.1', '$const82.0.0']
    $84return_value.1 = cast(value=$const82.0.0) ['$84return_value.1', '$const82.0.0']
2025-06-13 07:34:47,664 - print_capture - INFO -     $84return_value.1 = cast(value=$const82.0.0) ['$84return_value.1', '$const82.0.0']
    return $84return_value.1                 ['$84return_value.1']
    return $84return_value.1                 ['$84return_value.1']
2025-06-13 07:34:47,664 - print_capture - INFO -     return $84return_value.1                 ['$84return_value.1']
    return $84return_value.1                 ['$84return_value.1']
    return $84return_value.1                 ['$84return_value.1']
2025-06-13 07:34:47,664 - print_capture - INFO -     return $84return_value.1                 ['$84return_value.1']
label 86:
label 86:
2025-06-13 07:34:47,664 - print_capture - INFO - label 86:
label 86:
label 86:
2025-06-13 07:34:47,664 - print_capture - INFO - label 86:
    $const88.1.2 = const(int, 1)             ['$const88.1.2']
    $const88.1.2 = const(int, 1)             ['$const88.1.2']
2025-06-13 07:34:47,664 - print_capture - INFO -     $const88.1.2 = const(int, 1)             ['$const88.1.2']
    $const88.1.2 = const(int, 1)             ['$const88.1.2']
    $const88.1.2 = const(int, 1)             ['$const88.1.2']
2025-06-13 07:34:47,664 - print_capture - INFO -     $const88.1.2 = const(int, 1)             ['$const88.1.2']
    $90compare_op.2 = num_neg_value == $const88.1.2 ['$90compare_op.2', '$const88.1.2', 'num_neg_value']
    $90compare_op.2 = num_neg_value == $const88.1.2 ['$90compare_op.2', '$const88.1.2', 'num_neg_value']
2025-06-13 07:34:47,664 - print_capture - INFO -     $90compare_op.2 = num_neg_value == $const88.1.2 ['$90compare_op.2', '$const88.1.2', 'num_neg_value']
    $90compare_op.2 = num_neg_value == $const88.1.2 ['$90compare_op.2', '$const88.1.2', 'num_neg_value']
    $90compare_op.2 = num_neg_value == $const88.1.2 ['$90compare_op.2', '$const88.1.2', 'num_neg_value']
2025-06-13 07:34:47,664 - print_capture - INFO -     $90compare_op.2 = num_neg_value == $const88.1.2 ['$90compare_op.2', '$const88.1.2', 'num_neg_value']
    bool92 = global(bool: <class 'bool'>)    ['bool92']
    bool92 = global(bool: <class 'bool'>)    ['bool92']
2025-06-13 07:34:47,664 - print_capture - INFO -     bool92 = global(bool: <class 'bool'>)    ['bool92']
    bool92 = global(bool: <class 'bool'>)    ['bool92']
    bool92 = global(bool: <class 'bool'>)    ['bool92']
2025-06-13 07:34:47,664 - print_capture - INFO -     bool92 = global(bool: <class 'bool'>)    ['bool92']
    $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2091),), kws=(), vararg=None, varkwarg=None, target=None) ['$90compare_op.2', '$92pred', 'bool92']
    $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2091),), kws=(), vararg=None, varkwarg=None, target=None) ['$90compare_op.2', '$92pred', 'bool92']
2025-06-13 07:34:47,664 - print_capture - INFO -     $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2091),), kws=(), vararg=None, varkwarg=None, target=None) ['$90compare_op.2', '$92pred', 'bool92']
    $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2091),), kws=(), vararg=None, varkwarg=None, target=None) ['$90compare_op.2', '$92pred', 'bool92']
    $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2091),), kws=(), vararg=None, varkwarg=None, target=None) ['$90compare_op.2', '$92pred', 'bool92']
2025-06-13 07:34:47,664 - print_capture - INFO -     $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2091),), kws=(), vararg=None, varkwarg=None, target=None) ['$90compare_op.2', '$92pred', 'bool92']
    branch $92pred, 94, 160                  ['$92pred']
    branch $92pred, 94, 160                  ['$92pred']
2025-06-13 07:34:47,664 - print_capture - INFO -     branch $92pred, 94, 160                  ['$92pred']
    branch $92pred, 94, 160                  ['$92pred']
    branch $92pred, 94, 160                  ['$92pred']
2025-06-13 07:34:47,664 - print_capture - INFO -     branch $92pred, 94, 160                  ['$92pred']
label 94:
label 94:
2025-06-13 07:34:47,664 - print_capture - INFO - label 94:
label 94:
label 94:
2025-06-13 07:34:47,664 - print_capture - INFO - label 94:
    $const96.1.1 = const(int, 0)             ['$const96.1.1']
    $const96.1.1 = const(int, 0)             ['$const96.1.1']
2025-06-13 07:34:47,665 - print_capture - INFO -     $const96.1.1 = const(int, 0)             ['$const96.1.1']
    $const96.1.1 = const(int, 0)             ['$const96.1.1']
    $const96.1.1 = const(int, 0)             ['$const96.1.1']
2025-06-13 07:34:47,665 - print_capture - INFO -     $const96.1.1 = const(int, 0)             ['$const96.1.1']
    $98compare_op.2 = known_size == $const96.1.1 ['$98compare_op.2', '$const96.1.1', 'known_size']
    $98compare_op.2 = known_size == $const96.1.1 ['$98compare_op.2', '$const96.1.1', 'known_size']
2025-06-13 07:34:47,665 - print_capture - INFO -     $98compare_op.2 = known_size == $const96.1.1 ['$98compare_op.2', '$const96.1.1', 'known_size']
    $98compare_op.2 = known_size == $const96.1.1 ['$98compare_op.2', '$const96.1.1', 'known_size']
    $98compare_op.2 = known_size == $const96.1.1 ['$98compare_op.2', '$const96.1.1', 'known_size']
2025-06-13 07:34:47,665 - print_capture - INFO -     $98compare_op.2 = known_size == $const96.1.1 ['$98compare_op.2', '$const96.1.1', 'known_size']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
2025-06-13 07:34:47,665 - print_capture - INFO -     bool100 = global(bool: <class 'bool'>)   ['bool100']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
2025-06-13 07:34:47,665 - print_capture - INFO -     bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2093),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98compare_op.2', 'bool100']
    $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2093),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98compare_op.2', 'bool100']
2025-06-13 07:34:47,665 - print_capture - INFO -     $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2093),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98compare_op.2', 'bool100']
    $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2093),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98compare_op.2', 'bool100']
    $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2093),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98compare_op.2', 'bool100']
2025-06-13 07:34:47,665 - print_capture - INFO -     $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2093),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98compare_op.2', 'bool100']
    branch $100pred, 102, 116                ['$100pred']
    branch $100pred, 102, 116                ['$100pred']
2025-06-13 07:34:47,665 - print_capture - INFO -     branch $100pred, 102, 116                ['$100pred']
    branch $100pred, 102, 116                ['$100pred']
    branch $100pred, 102, 116                ['$100pred']
2025-06-13 07:34:47,665 - print_capture - INFO -     branch $100pred, 102, 116                ['$100pred']
label 102:
label 102:
2025-06-13 07:34:47,665 - print_capture - INFO - label 102:
label 102:
label 102:
2025-06-13 07:34:47,665 - print_capture - INFO - label 102:
    inferred = const(int, 0)                 ['inferred']
    inferred = const(int, 0)                 ['inferred']
2025-06-13 07:34:47,665 - print_capture - INFO -     inferred = const(int, 0)                 ['inferred']
    inferred = const(int, 0)                 ['inferred']
    inferred = const(int, 0)                 ['inferred']
2025-06-13 07:34:47,665 - print_capture - INFO -     inferred = const(int, 0)                 ['inferred']
    $const108.2.1 = const(int, 0)            ['$const108.2.1']
    $const108.2.1 = const(int, 0)            ['$const108.2.1']
2025-06-13 07:34:47,665 - print_capture - INFO -     $const108.2.1 = const(int, 0)            ['$const108.2.1']
    $const108.2.1 = const(int, 0)            ['$const108.2.1']
    $const108.2.1 = const(int, 0)            ['$const108.2.1']
2025-06-13 07:34:47,665 - print_capture - INFO -     $const108.2.1 = const(int, 0)            ['$const108.2.1']
    ok = origsize == $const108.2.1           ['$const108.2.1', 'ok', 'origsize']
    ok = origsize == $const108.2.1           ['$const108.2.1', 'ok', 'origsize']
2025-06-13 07:34:47,665 - print_capture - INFO -     ok = origsize == $const108.2.1           ['$const108.2.1', 'ok', 'origsize']
    ok = origsize == $const108.2.1           ['$const108.2.1', 'ok', 'origsize']
    ok = origsize == $const108.2.1           ['$const108.2.1', 'ok', 'origsize']
2025-06-13 07:34:47,665 - print_capture - INFO -     ok = origsize == $const108.2.1           ['$const108.2.1', 'ok', 'origsize']
    jump 136                                 []
    jump 136                                 []
2025-06-13 07:34:47,665 - print_capture - INFO -     jump 136                                 []
    jump 136                                 []
    jump 136                                 []
2025-06-13 07:34:47,665 - print_capture - INFO -     jump 136                                 []
label 116:
label 116:
2025-06-13 07:34:47,665 - print_capture - INFO - label 116:
label 116:
label 116:
2025-06-13 07:34:47,665 - print_capture - INFO - label 116:
    inferred = origsize // known_size        ['inferred', 'known_size', 'origsize']
    inferred = origsize // known_size        ['inferred', 'known_size', 'origsize']
2025-06-13 07:34:47,665 - print_capture - INFO -     inferred = origsize // known_size        ['inferred', 'known_size', 'origsize']
    inferred = origsize // known_size        ['inferred', 'known_size', 'origsize']
    inferred = origsize // known_size        ['inferred', 'known_size', 'origsize']
2025-06-13 07:34:47,665 - print_capture - INFO -     inferred = origsize // known_size        ['inferred', 'known_size', 'origsize']
    $128binary_modulo.5 = origsize % known_size ['$128binary_modulo.5', 'known_size', 'origsize']
    $128binary_modulo.5 = origsize % known_size ['$128binary_modulo.5', 'known_size', 'origsize']
2025-06-13 07:34:47,665 - print_capture - INFO -     $128binary_modulo.5 = origsize % known_size ['$128binary_modulo.5', 'known_size', 'origsize']
    $128binary_modulo.5 = origsize % known_size ['$128binary_modulo.5', 'known_size', 'origsize']
    $128binary_modulo.5 = origsize % known_size ['$128binary_modulo.5', 'known_size', 'origsize']
2025-06-13 07:34:47,665 - print_capture - INFO -     $128binary_modulo.5 = origsize % known_size ['$128binary_modulo.5', 'known_size', 'origsize']
    $const130.6.1 = const(int, 0)            ['$const130.6.1']
    $const130.6.1 = const(int, 0)            ['$const130.6.1']
2025-06-13 07:34:47,665 - print_capture - INFO -     $const130.6.1 = const(int, 0)            ['$const130.6.1']
    $const130.6.1 = const(int, 0)            ['$const130.6.1']
    $const130.6.1 = const(int, 0)            ['$const130.6.1']
2025-06-13 07:34:47,665 - print_capture - INFO -     $const130.6.1 = const(int, 0)            ['$const130.6.1']
    ok = $128binary_modulo.5 == $const130.6.1 ['$128binary_modulo.5', '$const130.6.1', 'ok']
    ok = $128binary_modulo.5 == $const130.6.1 ['$128binary_modulo.5', '$const130.6.1', 'ok']
2025-06-13 07:34:47,665 - print_capture - INFO -     ok = $128binary_modulo.5 == $const130.6.1 ['$128binary_modulo.5', '$const130.6.1', 'ok']
    ok = $128binary_modulo.5 == $const130.6.1 ['$128binary_modulo.5', '$const130.6.1', 'ok']
    ok = $128binary_modulo.5 == $const130.6.1 ['$128binary_modulo.5', '$const130.6.1', 'ok']
2025-06-13 07:34:47,665 - print_capture - INFO -     ok = $128binary_modulo.5 == $const130.6.1 ['$128binary_modulo.5', '$const130.6.1', 'ok']
    jump 136                                 []
    jump 136                                 []
2025-06-13 07:34:47,665 - print_capture - INFO -     jump 136                                 []
    jump 136                                 []
    jump 136                                 []
2025-06-13 07:34:47,665 - print_capture - INFO -     jump 136                                 []
label 136:
label 136:
2025-06-13 07:34:47,665 - print_capture - INFO - label 136:
label 136:
label 136:
2025-06-13 07:34:47,665 - print_capture - INFO - label 136:
    bool138 = global(bool: <class 'bool'>)   ['bool138']
    bool138 = global(bool: <class 'bool'>)   ['bool138']
2025-06-13 07:34:47,665 - print_capture - INFO -     bool138 = global(bool: <class 'bool'>)   ['bool138']
    bool138 = global(bool: <class 'bool'>)   ['bool138']
    bool138 = global(bool: <class 'bool'>)   ['bool138']
2025-06-13 07:34:47,665 - print_capture - INFO -     bool138 = global(bool: <class 'bool'>)   ['bool138']
    $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2095),), kws=(), vararg=None, varkwarg=None, target=None) ['$138pred', 'bool138', 'ok']
    $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2095),), kws=(), vararg=None, varkwarg=None, target=None) ['$138pred', 'bool138', 'ok']
2025-06-13 07:34:47,665 - print_capture - INFO -     $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2095),), kws=(), vararg=None, varkwarg=None, target=None) ['$138pred', 'bool138', 'ok']
    $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2095),), kws=(), vararg=None, varkwarg=None, target=None) ['$138pred', 'bool138', 'ok']
    $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2095),), kws=(), vararg=None, varkwarg=None, target=None) ['$138pred', 'bool138', 'ok']
2025-06-13 07:34:47,665 - print_capture - INFO -     $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2095),), kws=(), vararg=None, varkwarg=None, target=None) ['$138pred', 'bool138', 'ok']
    branch $138pred, 148, 140                ['$138pred']
    branch $138pred, 148, 140                ['$138pred']
2025-06-13 07:34:47,665 - print_capture - INFO -     branch $138pred, 148, 140                ['$138pred']
    branch $138pred, 148, 140                ['$138pred']
    branch $138pred, 148, 140                ['$138pred']
2025-06-13 07:34:47,665 - print_capture - INFO -     branch $138pred, 148, 140                ['$138pred']
label 140:
label 140:
2025-06-13 07:34:47,665 - print_capture - INFO - label 140:
label 140:
label 140:
2025-06-13 07:34:47,666 - print_capture - INFO - label 140:
    $140load_global.0 = global(ValueError: <class 'ValueError'>) ['$140load_global.0']
    $140load_global.0 = global(ValueError: <class 'ValueError'>) ['$140load_global.0']
2025-06-13 07:34:47,666 - print_capture - INFO -     $140load_global.0 = global(ValueError: <class 'ValueError'>) ['$140load_global.0']
    $140load_global.0 = global(ValueError: <class 'ValueError'>) ['$140load_global.0']
    $140load_global.0 = global(ValueError: <class 'ValueError'>) ['$140load_global.0']
2025-06-13 07:34:47,666 - print_capture - INFO -     $140load_global.0 = global(ValueError: <class 'ValueError'>) ['$140load_global.0']
    $const142.1.3 = const(str, total size of new array must be unchanged) ['$const142.1.3']
    $const142.1.3 = const(str, total size of new array must be unchanged) ['$const142.1.3']
2025-06-13 07:34:47,666 - print_capture - INFO -     $const142.1.3 = const(str, total size of new array must be unchanged) ['$const142.1.3']
    $const142.1.3 = const(str, total size of new array must be unchanged) ['$const142.1.3']
    $const142.1.3 = const(str, total size of new array must be unchanged) ['$const142.1.3']
2025-06-13 07:34:47,666 - print_capture - INFO -     $const142.1.3 = const(str, total size of new array must be unchanged) ['$const142.1.3']
    $144call_function.2 = call $140load_global.0($const142.1.3, func=$140load_global.0, args=[Var($const142.1.3, arrayobj.py:2100)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.0', '$144call_function.2', '$const142.1.3']
    $144call_function.2 = call $140load_global.0($const142.1.3, func=$140load_global.0, args=[Var($const142.1.3, arrayobj.py:2100)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.0', '$144call_function.2', '$const142.1.3']
2025-06-13 07:34:47,666 - print_capture - INFO -     $144call_function.2 = call $140load_global.0($const142.1.3, func=$140load_global.0, args=[Var($const142.1.3, arrayobj.py:2100)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.0', '$144call_function.2', '$const142.1.3']
    $144call_function.2 = call $140load_global.0($const142.1.3, func=$140load_global.0, args=[Var($const142.1.3, arrayobj.py:2100)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.0', '$144call_function.2', '$const142.1.3']
    $144call_function.2 = call $140load_global.0($const142.1.3, func=$140load_global.0, args=[Var($const142.1.3, arrayobj.py:2100)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.0', '$144call_function.2', '$const142.1.3']
2025-06-13 07:34:47,666 - print_capture - INFO -     $144call_function.2 = call $140load_global.0($const142.1.3, func=$140load_global.0, args=[Var($const142.1.3, arrayobj.py:2100)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.0', '$144call_function.2', '$const142.1.3']
    raise $144call_function.2                ['$144call_function.2']
    raise $144call_function.2                ['$144call_function.2']
2025-06-13 07:34:47,666 - print_capture - INFO -     raise $144call_function.2                ['$144call_function.2']
    raise $144call_function.2                ['$144call_function.2']
    raise $144call_function.2                ['$144call_function.2']
2025-06-13 07:34:47,666 - print_capture - INFO -     raise $144call_function.2                ['$144call_function.2']
label 148:
label 148:
2025-06-13 07:34:47,666 - print_capture - INFO - label 148:
label 148:
label 148:
2025-06-13 07:34:47,666 - print_capture - INFO - label 148:
    shape[neg_ax] = inferred                 ['inferred', 'neg_ax', 'shape']
    shape[neg_ax] = inferred                 ['inferred', 'neg_ax', 'shape']
2025-06-13 07:34:47,666 - print_capture - INFO -     shape[neg_ax] = inferred                 ['inferred', 'neg_ax', 'shape']
    shape[neg_ax] = inferred                 ['inferred', 'neg_ax', 'shape']
    shape[neg_ax] = inferred                 ['inferred', 'neg_ax', 'shape']
2025-06-13 07:34:47,666 - print_capture - INFO -     shape[neg_ax] = inferred                 ['inferred', 'neg_ax', 'shape']
    $const156.3.0 = const(NoneType, None)    ['$const156.3.0']
    $const156.3.0 = const(NoneType, None)    ['$const156.3.0']
2025-06-13 07:34:47,666 - print_capture - INFO -     $const156.3.0 = const(NoneType, None)    ['$const156.3.0']
    $const156.3.0 = const(NoneType, None)    ['$const156.3.0']
    $const156.3.0 = const(NoneType, None)    ['$const156.3.0']
2025-06-13 07:34:47,666 - print_capture - INFO -     $const156.3.0 = const(NoneType, None)    ['$const156.3.0']
    $158return_value.4 = cast(value=$const156.3.0) ['$158return_value.4', '$const156.3.0']
    $158return_value.4 = cast(value=$const156.3.0) ['$158return_value.4', '$const156.3.0']
2025-06-13 07:34:47,666 - print_capture - INFO -     $158return_value.4 = cast(value=$const156.3.0) ['$158return_value.4', '$const156.3.0']
    $158return_value.4 = cast(value=$const156.3.0) ['$158return_value.4', '$const156.3.0']
    $158return_value.4 = cast(value=$const156.3.0) ['$158return_value.4', '$const156.3.0']
2025-06-13 07:34:47,666 - print_capture - INFO -     $158return_value.4 = cast(value=$const156.3.0) ['$158return_value.4', '$const156.3.0']
    return $158return_value.4                ['$158return_value.4']
    return $158return_value.4                ['$158return_value.4']
2025-06-13 07:34:47,666 - print_capture - INFO -     return $158return_value.4                ['$158return_value.4']
    return $158return_value.4                ['$158return_value.4']
    return $158return_value.4                ['$158return_value.4']
2025-06-13 07:34:47,666 - print_capture - INFO -     return $158return_value.4                ['$158return_value.4']
label 160:
label 160:
2025-06-13 07:34:47,666 - print_capture - INFO - label 160:
label 160:
label 160:
2025-06-13 07:34:47,666 - print_capture - INFO - label 160:
    $160load_global.0 = global(ValueError: <class 'ValueError'>) ['$160load_global.0']
    $160load_global.0 = global(ValueError: <class 'ValueError'>) ['$160load_global.0']
2025-06-13 07:34:47,666 - print_capture - INFO -     $160load_global.0 = global(ValueError: <class 'ValueError'>) ['$160load_global.0']
    $160load_global.0 = global(ValueError: <class 'ValueError'>) ['$160load_global.0']
    $160load_global.0 = global(ValueError: <class 'ValueError'>) ['$160load_global.0']
2025-06-13 07:34:47,666 - print_capture - INFO -     $160load_global.0 = global(ValueError: <class 'ValueError'>) ['$160load_global.0']
    $const162.1.4 = const(str, multiple negative shape values) ['$const162.1.4']
    $const162.1.4 = const(str, multiple negative shape values) ['$const162.1.4']
2025-06-13 07:34:47,666 - print_capture - INFO -     $const162.1.4 = const(str, multiple negative shape values) ['$const162.1.4']
    $const162.1.4 = const(str, multiple negative shape values) ['$const162.1.4']
    $const162.1.4 = const(str, multiple negative shape values) ['$const162.1.4']
2025-06-13 07:34:47,666 - print_capture - INFO -     $const162.1.4 = const(str, multiple negative shape values) ['$const162.1.4']
    $164call_function.2 = call $160load_global.0($const162.1.4, func=$160load_global.0, args=[Var($const162.1.4, arrayobj.py:2104)], kws=(), vararg=None, varkwarg=None, target=None) ['$160load_global.0', '$164call_function.2', '$const162.1.4']
    $164call_function.2 = call $160load_global.0($const162.1.4, func=$160load_global.0, args=[Var($const162.1.4, arrayobj.py:2104)], kws=(), vararg=None, varkwarg=None, target=None) ['$160load_global.0', '$164call_function.2', '$const162.1.4']
2025-06-13 07:34:47,666 - print_capture - INFO -     $164call_function.2 = call $160load_global.0($const162.1.4, func=$160load_global.0, args=[Var($const162.1.4, arrayobj.py:2104)], kws=(), vararg=None, varkwarg=None, target=None) ['$160load_global.0', '$164call_function.2', '$const162.1.4']
    $164call_function.2 = call $160load_global.0($const162.1.4, func=$160load_global.0, args=[Var($const162.1.4, arrayobj.py:2104)], kws=(), vararg=None, varkwarg=None, target=None) ['$160load_global.0', '$164call_function.2', '$const162.1.4']
    $164call_function.2 = call $160load_global.0($const162.1.4, func=$160load_global.0, args=[Var($const162.1.4, arrayobj.py:2104)], kws=(), vararg=None, varkwarg=None, target=None) ['$160load_global.0', '$164call_function.2', '$const162.1.4']
2025-06-13 07:34:47,666 - print_capture - INFO -     $164call_function.2 = call $160load_global.0($const162.1.4, func=$160load_global.0, args=[Var($const162.1.4, arrayobj.py:2104)], kws=(), vararg=None, varkwarg=None, target=None) ['$160load_global.0', '$164call_function.2', '$const162.1.4']
    raise $164call_function.2                ['$164call_function.2']
    raise $164call_function.2                ['$164call_function.2']
2025-06-13 07:34:47,666 - print_capture - INFO -     raise $164call_function.2                ['$164call_function.2']
    raise $164call_function.2                ['$164call_function.2']
    raise $164call_function.2                ['$164call_function.2']
2025-06-13 07:34:47,666 - print_capture - INFO -     raise $164call_function.2                ['$164call_function.2']
label 0:
label 0:
2025-06-13 07:34:47,740 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:47,740 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:47,740 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:47,740 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    min_val = arg(1, name=min_val)           ['min_val']
2025-06-13 07:34:47,740 - print_capture - INFO -     min_val = arg(1, name=min_val)           ['min_val']
    min_val = arg(1, name=min_val)           ['min_val']
    min_val = arg(1, name=min_val)           ['min_val']
2025-06-13 07:34:47,740 - print_capture - INFO -     min_val = arg(1, name=min_val)           ['min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
2025-06-13 07:34:47,740 - print_capture - INFO -     $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
2025-06-13 07:34:47,740 - print_capture - INFO -     $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
2025-06-13 07:34:47,740 - print_capture - INFO -     $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
2025-06-13 07:34:47,740 - print_capture - INFO -     $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
2025-06-13 07:34:47,740 - print_capture - INFO -     return $8return_value.3                  ['$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
2025-06-13 07:34:47,740 - print_capture - INFO -     return $8return_value.3                  ['$8return_value.3']
label 0:
label 0:
2025-06-13 07:34:47,760 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:47,760 - print_capture - INFO - label 0:
    shape = arg(0, name=shape)               ['shape']
    shape = arg(0, name=shape)               ['shape']
2025-06-13 07:34:47,760 - print_capture - INFO -     shape = arg(0, name=shape)               ['shape']
    shape = arg(0, name=shape)               ['shape']
    shape = arg(0, name=shape)               ['shape']
2025-06-13 07:34:47,760 - print_capture - INFO -     shape = arg(0, name=shape)               ['shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
2025-06-13 07:34:47,760 - print_capture - INFO -     main_shape = arg(1, name=main_shape)     ['main_shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
2025-06-13 07:34:47,760 - print_capture - INFO -     main_shape = arg(1, name=main_shape)     ['main_shape']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
2025-06-13 07:34:47,760 - print_capture - INFO -     $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
2025-06-13 07:34:47,760 - print_capture - INFO -     $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    n = call $2load_global.0(shape, func=$2load_global.0, args=[Var(shape, arrayobj.py:3567)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'n', 'shape']
    n = call $2load_global.0(shape, func=$2load_global.0, args=[Var(shape, arrayobj.py:3567)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'n', 'shape']
2025-06-13 07:34:47,760 - print_capture - INFO -     n = call $2load_global.0(shape, func=$2load_global.0, args=[Var(shape, arrayobj.py:3567)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'n', 'shape']
    n = call $2load_global.0(shape, func=$2load_global.0, args=[Var(shape, arrayobj.py:3567)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'n', 'shape']
    n = call $2load_global.0(shape, func=$2load_global.0, args=[Var(shape, arrayobj.py:3567)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'n', 'shape']
2025-06-13 07:34:47,760 - print_capture - INFO -     n = call $2load_global.0(shape, func=$2load_global.0, args=[Var(shape, arrayobj.py:3567)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'n', 'shape']
    $10load_global.3 = global(range: <class 'range'>) ['$10load_global.3']
    $10load_global.3 = global(range: <class 'range'>) ['$10load_global.3']
2025-06-13 07:34:47,760 - print_capture - INFO -     $10load_global.3 = global(range: <class 'range'>) ['$10load_global.3']
    $10load_global.3 = global(range: <class 'range'>) ['$10load_global.3']
    $10load_global.3 = global(range: <class 'range'>) ['$10load_global.3']
2025-06-13 07:34:47,760 - print_capture - INFO -     $10load_global.3 = global(range: <class 'range'>) ['$10load_global.3']
    $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:3568)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'n']
    $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:3568)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'n']
2025-06-13 07:34:47,760 - print_capture - INFO -     $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:3568)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'n']
    $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:3568)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'n']
    $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:3568)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'n']
2025-06-13 07:34:47,760 - print_capture - INFO -     $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:3568)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'n']
    $16get_iter.6 = getiter(value=$14call_function.5) ['$14call_function.5', '$16get_iter.6']
    $16get_iter.6 = getiter(value=$14call_function.5) ['$14call_function.5', '$16get_iter.6']
2025-06-13 07:34:47,760 - print_capture - INFO -     $16get_iter.6 = getiter(value=$14call_function.5) ['$14call_function.5', '$16get_iter.6']
    $16get_iter.6 = getiter(value=$14call_function.5) ['$14call_function.5', '$16get_iter.6']
    $16get_iter.6 = getiter(value=$14call_function.5) ['$14call_function.5', '$16get_iter.6']
2025-06-13 07:34:47,760 - print_capture - INFO -     $16get_iter.6 = getiter(value=$14call_function.5) ['$14call_function.5', '$16get_iter.6']
    $phi18.0 = $16get_iter.6                 ['$16get_iter.6', '$phi18.0']
    $phi18.0 = $16get_iter.6                 ['$16get_iter.6', '$phi18.0']
2025-06-13 07:34:47,760 - print_capture - INFO -     $phi18.0 = $16get_iter.6                 ['$16get_iter.6', '$phi18.0']
    $phi18.0 = $16get_iter.6                 ['$16get_iter.6', '$phi18.0']
    $phi18.0 = $16get_iter.6                 ['$16get_iter.6', '$phi18.0']
2025-06-13 07:34:47,760 - print_capture - INFO -     $phi18.0 = $16get_iter.6                 ['$16get_iter.6', '$phi18.0']
    jump 18                                  []
    jump 18                                  []
2025-06-13 07:34:47,760 - print_capture - INFO -     jump 18                                  []
    jump 18                                  []
    jump 18                                  []
2025-06-13 07:34:47,760 - print_capture - INFO -     jump 18                                  []
label 18:
label 18:
2025-06-13 07:34:47,760 - print_capture - INFO - label 18:
label 18:
label 18:
2025-06-13 07:34:47,760 - print_capture - INFO - label 18:
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
2025-06-13 07:34:47,760 - print_capture - INFO -     $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
2025-06-13 07:34:47,760 - print_capture - INFO -     $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
2025-06-13 07:34:47,760 - print_capture - INFO -     $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
2025-06-13 07:34:47,760 - print_capture - INFO -     $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
2025-06-13 07:34:47,760 - print_capture - INFO -     $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
2025-06-13 07:34:47,760 - print_capture - INFO -     $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
2025-06-13 07:34:47,760 - print_capture - INFO -     $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
2025-06-13 07:34:47,761 - print_capture - INFO -     $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    branch $18for_iter.3, 20, 60             ['$18for_iter.3']
    branch $18for_iter.3, 20, 60             ['$18for_iter.3']
2025-06-13 07:34:47,761 - print_capture - INFO -     branch $18for_iter.3, 20, 60             ['$18for_iter.3']
    branch $18for_iter.3, 20, 60             ['$18for_iter.3']
    branch $18for_iter.3, 20, 60             ['$18for_iter.3']
2025-06-13 07:34:47,761 - print_capture - INFO -     branch $18for_iter.3, 20, 60             ['$18for_iter.3']
label 20:
label 20:
2025-06-13 07:34:47,761 - print_capture - INFO - label 20:
label 20:
label 20:
2025-06-13 07:34:47,761 - print_capture - INFO - label 20:
    i = $phi20.1                             ['$phi20.1', 'i']
    i = $phi20.1                             ['$phi20.1', 'i']
2025-06-13 07:34:47,761 - print_capture - INFO -     i = $phi20.1                             ['$phi20.1', 'i']
    i = $phi20.1                             ['$phi20.1', 'i']
    i = $phi20.1                             ['$phi20.1', 'i']
2025-06-13 07:34:47,761 - print_capture - INFO -     i = $phi20.1                             ['$phi20.1', 'i']
    $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$26binary_subscr.4', 'i', 'shape']
    $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$26binary_subscr.4', 'i', 'shape']
2025-06-13 07:34:47,761 - print_capture - INFO -     $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$26binary_subscr.4', 'i', 'shape']
    $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$26binary_subscr.4', 'i', 'shape']
    $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$26binary_subscr.4', 'i', 'shape']
2025-06-13 07:34:47,761 - print_capture - INFO -     $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$26binary_subscr.4', 'i', 'shape']
    $30load_global.6 = global(len: <built-in function len>) ['$30load_global.6']
    $30load_global.6 = global(len: <built-in function len>) ['$30load_global.6']
2025-06-13 07:34:47,761 - print_capture - INFO -     $30load_global.6 = global(len: <built-in function len>) ['$30load_global.6']
    $30load_global.6 = global(len: <built-in function len>) ['$30load_global.6']
    $30load_global.6 = global(len: <built-in function len>) ['$30load_global.6']
2025-06-13 07:34:47,761 - print_capture - INFO -     $30load_global.6 = global(len: <built-in function len>) ['$30load_global.6']
    $34call_function.8 = call $30load_global.6(main_shape, func=$30load_global.6, args=[Var(main_shape, arrayobj.py:3567)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.6', '$34call_function.8', 'main_shape']
    $34call_function.8 = call $30load_global.6(main_shape, func=$30load_global.6, args=[Var(main_shape, arrayobj.py:3567)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.6', '$34call_function.8', 'main_shape']
2025-06-13 07:34:47,761 - print_capture - INFO -     $34call_function.8 = call $30load_global.6(main_shape, func=$30load_global.6, args=[Var(main_shape, arrayobj.py:3567)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.6', '$34call_function.8', 'main_shape']
    $34call_function.8 = call $30load_global.6(main_shape, func=$30load_global.6, args=[Var(main_shape, arrayobj.py:3567)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.6', '$34call_function.8', 'main_shape']
    $34call_function.8 = call $30load_global.6(main_shape, func=$30load_global.6, args=[Var(main_shape, arrayobj.py:3567)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.6', '$34call_function.8', 'main_shape']
2025-06-13 07:34:47,761 - print_capture - INFO -     $34call_function.8 = call $30load_global.6(main_shape, func=$30load_global.6, args=[Var(main_shape, arrayobj.py:3567)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.6', '$34call_function.8', 'main_shape']
    $38binary_subtract.10 = $34call_function.8 - n ['$34call_function.8', '$38binary_subtract.10', 'n']
    $38binary_subtract.10 = $34call_function.8 - n ['$34call_function.8', '$38binary_subtract.10', 'n']
2025-06-13 07:34:47,761 - print_capture - INFO -     $38binary_subtract.10 = $34call_function.8 - n ['$34call_function.8', '$38binary_subtract.10', 'n']
    $38binary_subtract.10 = $34call_function.8 - n ['$34call_function.8', '$38binary_subtract.10', 'n']
    $38binary_subtract.10 = $34call_function.8 - n ['$34call_function.8', '$38binary_subtract.10', 'n']
2025-06-13 07:34:47,761 - print_capture - INFO -     $38binary_subtract.10 = $34call_function.8 - n ['$34call_function.8', '$38binary_subtract.10', 'n']
    $42binary_add.12 = $38binary_subtract.10 + i ['$38binary_subtract.10', '$42binary_add.12', 'i']
    $42binary_add.12 = $38binary_subtract.10 + i ['$38binary_subtract.10', '$42binary_add.12', 'i']
2025-06-13 07:34:47,761 - print_capture - INFO -     $42binary_add.12 = $38binary_subtract.10 + i ['$38binary_subtract.10', '$42binary_add.12', 'i']
    $42binary_add.12 = $38binary_subtract.10 + i ['$38binary_subtract.10', '$42binary_add.12', 'i']
    $42binary_add.12 = $38binary_subtract.10 + i ['$38binary_subtract.10', '$42binary_add.12', 'i']
2025-06-13 07:34:47,761 - print_capture - INFO -     $42binary_add.12 = $38binary_subtract.10 + i ['$38binary_subtract.10', '$42binary_add.12', 'i']
    $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>) ['$42binary_add.12', '$44binary_subscr.13', 'main_shape']
    $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>) ['$42binary_add.12', '$44binary_subscr.13', 'main_shape']
2025-06-13 07:34:47,761 - print_capture - INFO -     $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>) ['$42binary_add.12', '$44binary_subscr.13', 'main_shape']
    $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>) ['$42binary_add.12', '$44binary_subscr.13', 'main_shape']
    $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>) ['$42binary_add.12', '$44binary_subscr.13', 'main_shape']
2025-06-13 07:34:47,761 - print_capture - INFO -     $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>) ['$42binary_add.12', '$44binary_subscr.13', 'main_shape']
    $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13 ['$26binary_subscr.4', '$44binary_subscr.13', '$46compare_op.14']
    $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13 ['$26binary_subscr.4', '$44binary_subscr.13', '$46compare_op.14']
2025-06-13 07:34:47,761 - print_capture - INFO -     $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13 ['$26binary_subscr.4', '$44binary_subscr.13', '$46compare_op.14']
    $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13 ['$26binary_subscr.4', '$44binary_subscr.13', '$46compare_op.14']
    $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13 ['$26binary_subscr.4', '$44binary_subscr.13', '$46compare_op.14']
2025-06-13 07:34:47,761 - print_capture - INFO -     $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13 ['$26binary_subscr.4', '$44binary_subscr.13', '$46compare_op.14']
    bool48 = global(bool: <class 'bool'>)    ['bool48']
    bool48 = global(bool: <class 'bool'>)    ['bool48']
2025-06-13 07:34:47,761 - print_capture - INFO -     bool48 = global(bool: <class 'bool'>)    ['bool48']
    bool48 = global(bool: <class 'bool'>)    ['bool48']
    bool48 = global(bool: <class 'bool'>)    ['bool48']
2025-06-13 07:34:47,761 - print_capture - INFO -     bool48 = global(bool: <class 'bool'>)    ['bool48']
    $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:3570),), kws=(), vararg=None, varkwarg=None, target=None) ['$46compare_op.14', '$48pred', 'bool48']
    $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:3570),), kws=(), vararg=None, varkwarg=None, target=None) ['$46compare_op.14', '$48pred', 'bool48']
2025-06-13 07:34:47,761 - print_capture - INFO -     $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:3570),), kws=(), vararg=None, varkwarg=None, target=None) ['$46compare_op.14', '$48pred', 'bool48']
    $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:3570),), kws=(), vararg=None, varkwarg=None, target=None) ['$46compare_op.14', '$48pred', 'bool48']
    $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:3570),), kws=(), vararg=None, varkwarg=None, target=None) ['$46compare_op.14', '$48pred', 'bool48']
2025-06-13 07:34:47,761 - print_capture - INFO -     $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:3570),), kws=(), vararg=None, varkwarg=None, target=None) ['$46compare_op.14', '$48pred', 'bool48']
    branch $48pred, 50, 58                   ['$48pred']
    branch $48pred, 50, 58                   ['$48pred']
2025-06-13 07:34:47,761 - print_capture - INFO -     branch $48pred, 50, 58                   ['$48pred']
    branch $48pred, 50, 58                   ['$48pred']
    branch $48pred, 50, 58                   ['$48pred']
2025-06-13 07:34:47,761 - print_capture - INFO -     branch $48pred, 50, 58                   ['$48pred']
label 50:
label 50:
2025-06-13 07:34:47,761 - print_capture - INFO - label 50:
label 50:
label 50:
2025-06-13 07:34:47,761 - print_capture - INFO - label 50:
    $50load_global.1 = global(ValueError: <class 'ValueError'>) ['$50load_global.1']
    $50load_global.1 = global(ValueError: <class 'ValueError'>) ['$50load_global.1']
2025-06-13 07:34:47,761 - print_capture - INFO -     $50load_global.1 = global(ValueError: <class 'ValueError'>) ['$50load_global.1']
    $50load_global.1 = global(ValueError: <class 'ValueError'>) ['$50load_global.1']
    $50load_global.1 = global(ValueError: <class 'ValueError'>) ['$50load_global.1']
2025-06-13 07:34:47,761 - print_capture - INFO -     $50load_global.1 = global(ValueError: <class 'ValueError'>) ['$50load_global.1']
    $const52.2.1 = const(str, nditer(): operands could not be broadcast together) ['$const52.2.1']
    $const52.2.1 = const(str, nditer(): operands could not be broadcast together) ['$const52.2.1']
2025-06-13 07:34:47,761 - print_capture - INFO -     $const52.2.1 = const(str, nditer(): operands could not be broadcast together) ['$const52.2.1']
    $const52.2.1 = const(str, nditer(): operands could not be broadcast together) ['$const52.2.1']
    $const52.2.1 = const(str, nditer(): operands could not be broadcast together) ['$const52.2.1']
2025-06-13 07:34:47,761 - print_capture - INFO -     $const52.2.1 = const(str, nditer(): operands could not be broadcast together) ['$const52.2.1']
    $54call_function.3 = call $50load_global.1($const52.2.1, func=$50load_global.1, args=[Var($const52.2.1, arrayobj.py:3571)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.1', '$54call_function.3', '$const52.2.1']
    $54call_function.3 = call $50load_global.1($const52.2.1, func=$50load_global.1, args=[Var($const52.2.1, arrayobj.py:3571)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.1', '$54call_function.3', '$const52.2.1']
2025-06-13 07:34:47,761 - print_capture - INFO -     $54call_function.3 = call $50load_global.1($const52.2.1, func=$50load_global.1, args=[Var($const52.2.1, arrayobj.py:3571)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.1', '$54call_function.3', '$const52.2.1']
    $54call_function.3 = call $50load_global.1($const52.2.1, func=$50load_global.1, args=[Var($const52.2.1, arrayobj.py:3571)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.1', '$54call_function.3', '$const52.2.1']
    $54call_function.3 = call $50load_global.1($const52.2.1, func=$50load_global.1, args=[Var($const52.2.1, arrayobj.py:3571)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.1', '$54call_function.3', '$const52.2.1']
2025-06-13 07:34:47,761 - print_capture - INFO -     $54call_function.3 = call $50load_global.1($const52.2.1, func=$50load_global.1, args=[Var($const52.2.1, arrayobj.py:3571)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.1', '$54call_function.3', '$const52.2.1']
    raise $54call_function.3                 ['$54call_function.3']
    raise $54call_function.3                 ['$54call_function.3']
2025-06-13 07:34:47,761 - print_capture - INFO -     raise $54call_function.3                 ['$54call_function.3']
    raise $54call_function.3                 ['$54call_function.3']
    raise $54call_function.3                 ['$54call_function.3']
2025-06-13 07:34:47,761 - print_capture - INFO -     raise $54call_function.3                 ['$54call_function.3']
label 58:
label 58:
2025-06-13 07:34:47,761 - print_capture - INFO - label 58:
label 58:
label 58:
2025-06-13 07:34:47,761 - print_capture - INFO - label 58:
    jump 18                                  []
    jump 18                                  []
2025-06-13 07:34:47,761 - print_capture - INFO -     jump 18                                  []
    jump 18                                  []
    jump 18                                  []
2025-06-13 07:34:47,761 - print_capture - INFO -     jump 18                                  []
label 60:
label 60:
2025-06-13 07:34:47,828 - print_capture - INFO - label 60:
label 60:
label 60:
2025-06-13 07:34:47,828 - print_capture - INFO - label 60:
    $const60.0.0 = const(NoneType, None)     ['$const60.0.0']
    $const60.0.0 = const(NoneType, None)     ['$const60.0.0']
2025-06-13 07:34:47,828 - print_capture - INFO -     $const60.0.0 = const(NoneType, None)     ['$const60.0.0']
    $const60.0.0 = const(NoneType, None)     ['$const60.0.0']
    $const60.0.0 = const(NoneType, None)     ['$const60.0.0']
2025-06-13 07:34:47,828 - print_capture - INFO -     $const60.0.0 = const(NoneType, None)     ['$const60.0.0']
    $62return_value.1 = cast(value=$const60.0.0) ['$62return_value.1', '$const60.0.0']
    $62return_value.1 = cast(value=$const60.0.0) ['$62return_value.1', '$const60.0.0']
2025-06-13 07:34:47,828 - print_capture - INFO -     $62return_value.1 = cast(value=$const60.0.0) ['$62return_value.1', '$const60.0.0']
    $62return_value.1 = cast(value=$const60.0.0) ['$62return_value.1', '$const60.0.0']
    $62return_value.1 = cast(value=$const60.0.0) ['$62return_value.1', '$const60.0.0']
2025-06-13 07:34:47,829 - print_capture - INFO -     $62return_value.1 = cast(value=$const60.0.0) ['$62return_value.1', '$const60.0.0']
    return $62return_value.1                 ['$62return_value.1']
    return $62return_value.1                 ['$62return_value.1']
2025-06-13 07:34:47,829 - print_capture - INFO -     return $62return_value.1                 ['$62return_value.1']
    return $62return_value.1                 ['$62return_value.1']
    return $62return_value.1                 ['$62return_value.1']
2025-06-13 07:34:47,829 - print_capture - INFO -     return $62return_value.1                 ['$62return_value.1']
label 0:
label 0:
2025-06-13 07:34:47,866 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:47,866 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:47,866 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:47,866 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
2025-06-13 07:34:47,867 - print_capture - INFO -     indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
2025-06-13 07:34:47,867 - print_capture - INFO -     indices = arg(1, name=indices)           ['indices']
    axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
2025-06-13 07:34:47,867 - print_capture - INFO -     axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
2025-06-13 07:34:47,867 - print_capture - INFO -     axis = arg(2, name=axis)                 ['axis']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
2025-06-13 07:34:47,867 - print_capture - INFO -     $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
2025-06-13 07:34:47,867 - print_capture - INFO -     $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
2025-06-13 07:34:47,867 - print_capture - INFO -     $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
2025-06-13 07:34:47,867 - print_capture - INFO -     $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
2025-06-13 07:34:47,867 - print_capture - INFO -     $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
2025-06-13 07:34:47,867 - print_capture - INFO -     $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
2025-06-13 07:34:47,867 - print_capture - INFO -     $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
2025-06-13 07:34:47,867 - print_capture - INFO -     $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
2025-06-13 07:34:47,867 - print_capture - INFO -     bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
2025-06-13 07:34:47,867 - print_capture - INFO -     bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
2025-06-13 07:34:47,867 - print_capture - INFO -     $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
2025-06-13 07:34:47,867 - print_capture - INFO -     $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
2025-06-13 07:34:47,867 - print_capture - INFO -     branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
2025-06-13 07:34:47,867 - print_capture - INFO -     branch $14pred, 28, 16                   ['$14pred']
label 16:
label 16:
2025-06-13 07:34:47,867 - print_capture - INFO - label 16:
label 16:
label 16:
2025-06-13 07:34:47,867 - print_capture - INFO - label 16:
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
2025-06-13 07:34:47,867 - print_capture - INFO -     $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
2025-06-13 07:34:47,867 - print_capture - INFO -     $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
2025-06-13 07:34:47,867 - print_capture - INFO -     $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
2025-06-13 07:34:47,867 - print_capture - INFO -     $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
2025-06-13 07:34:47,867 - print_capture - INFO -     $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
2025-06-13 07:34:47,867 - print_capture - INFO -     $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
2025-06-13 07:34:47,867 - print_capture - INFO -     bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
2025-06-13 07:34:47,867 - print_capture - INFO -     bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
2025-06-13 07:34:47,867 - print_capture - INFO -     $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
2025-06-13 07:34:47,867 - print_capture - INFO -     $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
2025-06-13 07:34:47,867 - print_capture - INFO -     branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
2025-06-13 07:34:47,867 - print_capture - INFO -     branch $26pred, 28, 36                   ['$26pred']
label 28:
label 28:
2025-06-13 07:34:47,867 - print_capture - INFO - label 28:
label 28:
label 28:
2025-06-13 07:34:47,867 - print_capture - INFO - label 28:
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
2025-06-13 07:34:47,867 - print_capture - INFO -     $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
2025-06-13 07:34:47,867 - print_capture - INFO -     $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
2025-06-13 07:34:47,867 - print_capture - INFO -     $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
2025-06-13 07:34:47,867 - print_capture - INFO -     $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
2025-06-13 07:34:47,867 - print_capture - INFO -     $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
2025-06-13 07:34:47,867 - print_capture - INFO -     $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
2025-06-13 07:34:47,868 - print_capture - INFO -     raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
2025-06-13 07:34:47,868 - print_capture - INFO -     raise $32call_function.2                 ['$32call_function.2']
label 36:
label 36:
2025-06-13 07:34:47,868 - print_capture - INFO - label 36:
label 36:
label 36:
2025-06-13 07:34:47,868 - print_capture - INFO - label 36:
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
2025-06-13 07:34:47,868 - print_capture - INFO -     $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
2025-06-13 07:34:47,868 - print_capture - INFO -     $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
2025-06-13 07:34:47,868 - print_capture - INFO -     $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
2025-06-13 07:34:47,868 - print_capture - INFO -     $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
2025-06-13 07:34:47,868 - print_capture - INFO -     $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
2025-06-13 07:34:47,868 - print_capture - INFO -     $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
2025-06-13 07:34:47,868 - print_capture - INFO -     $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
2025-06-13 07:34:47,868 - print_capture - INFO -     $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
2025-06-13 07:34:47,868 - print_capture - INFO -     return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
2025-06-13 07:34:47,868 - print_capture - INFO -     return $46return_value.5                 ['$46return_value.5']
label 0:
label 0:
2025-06-13 07:34:47,925 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:47,925 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:47,925 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:47,925 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    c = freevar(acc_init: 0.0)               ['c']
2025-06-13 07:34:47,925 - print_capture - INFO -     c = freevar(acc_init: 0.0)               ['c']
    c = freevar(acc_init: 0.0)               ['c']
    c = freevar(acc_init: 0.0)               ['c']
2025-06-13 07:34:47,925 - print_capture - INFO -     c = freevar(acc_init: 0.0)               ['c']
    $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
2025-06-13 07:34:47,925 - print_capture - INFO -     $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
2025-06-13 07:34:47,925 - print_capture - INFO -     $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
2025-06-13 07:34:47,925 - print_capture - INFO -     $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
2025-06-13 07:34:47,925 - print_capture - INFO -     $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
2025-06-13 07:34:47,925 - print_capture - INFO -     $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
2025-06-13 07:34:47,925 - print_capture - INFO -     $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
2025-06-13 07:34:47,925 - print_capture - INFO -     $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
2025-06-13 07:34:47,925 - print_capture - INFO -     $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
2025-06-13 07:34:47,925 - print_capture - INFO -     $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
2025-06-13 07:34:47,925 - print_capture - INFO -     $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    jump 16                                  []
    jump 16                                  []
2025-06-13 07:34:47,925 - print_capture - INFO -     jump 16                                  []
    jump 16                                  []
    jump 16                                  []
2025-06-13 07:34:47,925 - print_capture - INFO -     jump 16                                  []
label 16:
label 16:
2025-06-13 07:34:47,925 - print_capture - INFO - label 16:
label 16:
label 16:
2025-06-13 07:34:47,925 - print_capture - INFO - label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
2025-06-13 07:34:47,925 - print_capture - INFO -     $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
2025-06-13 07:34:47,925 - print_capture - INFO -     $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
2025-06-13 07:34:47,925 - print_capture - INFO -     $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
2025-06-13 07:34:47,925 - print_capture - INFO -     $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
2025-06-13 07:34:47,925 - print_capture - INFO -     $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
2025-06-13 07:34:47,925 - print_capture - INFO -     $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
2025-06-13 07:34:47,926 - print_capture - INFO -     $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
2025-06-13 07:34:47,926 - print_capture - INFO -     $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
2025-06-13 07:34:47,926 - print_capture - INFO -     branch $16for_iter.3, 18, 34             ['$16for_iter.3']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
2025-06-13 07:34:47,926 - print_capture - INFO -     branch $16for_iter.3, 18, 34             ['$16for_iter.3']
label 18:
label 18:
2025-06-13 07:34:47,926 - print_capture - INFO - label 18:
label 18:
label 18:
2025-06-13 07:34:47,926 - print_capture - INFO - label 18:
    v = $phi18.1                             ['$phi18.1', 'v']
    v = $phi18.1                             ['$phi18.1', 'v']
2025-06-13 07:34:47,926 - print_capture - INFO -     v = $phi18.1                             ['$phi18.1', 'v']
    v = $phi18.1                             ['$phi18.1', 'v']
    v = $phi18.1                             ['$phi18.1', 'v']
2025-06-13 07:34:47,926 - print_capture - INFO -     v = $phi18.1                             ['$phi18.1', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
2025-06-13 07:34:47,926 - print_capture - INFO -     $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
2025-06-13 07:34:47,926 - print_capture - INFO -     $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
2025-06-13 07:34:47,926 - print_capture - INFO -     $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
2025-06-13 07:34:47,926 - print_capture - INFO -     $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
2025-06-13 07:34:47,926 - print_capture - INFO -     $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
2025-06-13 07:34:47,926 - print_capture - INFO -     $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
2025-06-13 07:34:47,926 - print_capture - INFO -     c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
2025-06-13 07:34:47,926 - print_capture - INFO -     c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    jump 16                                  []
    jump 16                                  []
2025-06-13 07:34:47,926 - print_capture - INFO -     jump 16                                  []
    jump 16                                  []
    jump 16                                  []
2025-06-13 07:34:47,926 - print_capture - INFO -     jump 16                                  []
label 34:
label 34:
2025-06-13 07:34:47,926 - print_capture - INFO - label 34:
label 34:
label 34:
2025-06-13 07:34:47,926 - print_capture - INFO - label 34:
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
2025-06-13 07:34:47,926 - print_capture - INFO -     $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
2025-06-13 07:34:47,926 - print_capture - INFO -     $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
2025-06-13 07:34:47,926 - print_capture - INFO -     $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
2025-06-13 07:34:47,926 - print_capture - INFO -     $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
2025-06-13 07:34:47,926 - print_capture - INFO -     $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
2025-06-13 07:34:47,926 - print_capture - INFO -     $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']
2025-06-13 07:34:47,926 - print_capture - INFO -     return $42return_value.4                 ['$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']
2025-06-13 07:34:47,926 - print_capture - INFO -     return $42return_value.4                 ['$42return_value.4']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:48,044 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:48,044 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# --- LINE 1193 --- 
# --- LINE 1193 --- 
2025-06-13 07:34:48,044 - print_capture - INFO - # --- LINE 1193 --- 
# --- LINE 1193 --- 
# --- LINE 1193 --- 
2025-06-13 07:34:48,044 - print_capture - INFO - # --- LINE 1193 --- 
# label 0
# label 0
2025-06-13 07:34:48,044 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:48,044 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: array(float32, 1d, A)
#   x = arg(0, name=x)  :: array(float32, 1d, A)
2025-06-13 07:34:48,044 - print_capture - INFO - #   x = arg(0, name=x)  :: array(float32, 1d, A)
#   x = arg(0, name=x)  :: array(float32, 1d, A)
#   x = arg(0, name=x)  :: array(float32, 1d, A)
2025-06-13 07:34:48,044 - print_capture - INFO - #   x = arg(0, name=x)  :: array(float32, 1d, A)
#   pre_max = arg(1, name=pre_max)  :: uint32
#   pre_max = arg(1, name=pre_max)  :: uint32
2025-06-13 07:34:48,044 - print_capture - INFO - #   pre_max = arg(1, name=pre_max)  :: uint32
#   pre_max = arg(1, name=pre_max)  :: uint32
#   pre_max = arg(1, name=pre_max)  :: uint32
2025-06-13 07:34:48,044 - print_capture - INFO - #   pre_max = arg(1, name=pre_max)  :: uint32
#   post_max = arg(2, name=post_max)  :: uint32
#   post_max = arg(2, name=post_max)  :: uint32
2025-06-13 07:34:48,044 - print_capture - INFO - #   post_max = arg(2, name=post_max)  :: uint32
#   post_max = arg(2, name=post_max)  :: uint32
#   post_max = arg(2, name=post_max)  :: uint32
2025-06-13 07:34:48,044 - print_capture - INFO - #   post_max = arg(2, name=post_max)  :: uint32
#   pre_avg = arg(3, name=pre_avg)  :: uint32
#   pre_avg = arg(3, name=pre_avg)  :: uint32
2025-06-13 07:34:48,044 - print_capture - INFO - #   pre_avg = arg(3, name=pre_avg)  :: uint32
#   pre_avg = arg(3, name=pre_avg)  :: uint32
#   pre_avg = arg(3, name=pre_avg)  :: uint32
2025-06-13 07:34:48,044 - print_capture - INFO - #   pre_avg = arg(3, name=pre_avg)  :: uint32
#   post_avg = arg(4, name=post_avg)  :: uint32
#   post_avg = arg(4, name=post_avg)  :: uint32
2025-06-13 07:34:48,044 - print_capture - INFO - #   post_avg = arg(4, name=post_avg)  :: uint32
#   post_avg = arg(4, name=post_avg)  :: uint32
#   post_avg = arg(4, name=post_avg)  :: uint32
2025-06-13 07:34:48,044 - print_capture - INFO - #   post_avg = arg(4, name=post_avg)  :: uint32
#   delta = arg(5, name=delta)  :: float32
#   delta = arg(5, name=delta)  :: float32
2025-06-13 07:34:48,044 - print_capture - INFO - #   delta = arg(5, name=delta)  :: float32
#   delta = arg(5, name=delta)  :: float32
#   delta = arg(5, name=delta)  :: float32
2025-06-13 07:34:48,044 - print_capture - INFO - #   delta = arg(5, name=delta)  :: float32
#   wait = arg(6, name=wait)  :: uint32
#   wait = arg(6, name=wait)  :: uint32
2025-06-13 07:34:48,044 - print_capture - INFO - #   wait = arg(6, name=wait)  :: uint32
#   wait = arg(6, name=wait)  :: uint32
#   wait = arg(6, name=wait)  :: uint32
2025-06-13 07:34:48,044 - print_capture - INFO - #   wait = arg(6, name=wait)  :: uint32
#   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
#   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
2025-06-13 07:34:48,044 - print_capture - INFO - #   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
#   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
#   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
2025-06-13 07:34:48,044 - print_capture - INFO - #   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)


2025-06-13 07:34:48,044 - print_capture - INFO - 


2025-06-13 07:34:48,044 - print_capture - INFO - 
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:48,044 - print_capture - INFO - @numba.guvectorize(
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:48,044 - print_capture - INFO - @numba.guvectorize(


2025-06-13 07:34:48,044 - print_capture - INFO - 


2025-06-13 07:34:48,044 - print_capture - INFO - 
    # --- LINE 1194 --- 
    # --- LINE 1194 --- 
2025-06-13 07:34:48,044 - print_capture - INFO -     # --- LINE 1194 --- 
    # --- LINE 1194 --- 
    # --- LINE 1194 --- 
2025-06-13 07:34:48,044 - print_capture - INFO -     # --- LINE 1194 --- 


2025-06-13 07:34:48,044 - print_capture - INFO - 


2025-06-13 07:34:48,044 - print_capture - INFO - 
    [
    [
2025-06-13 07:34:48,044 - print_capture - INFO -     [
    [
    [
2025-06-13 07:34:48,044 - print_capture - INFO -     [


2025-06-13 07:34:48,045 - print_capture - INFO - 


2025-06-13 07:34:48,045 - print_capture - INFO - 
        # --- LINE 1195 --- 
        # --- LINE 1195 --- 
2025-06-13 07:34:48,045 - print_capture - INFO -         # --- LINE 1195 --- 
        # --- LINE 1195 --- 
        # --- LINE 1195 --- 
2025-06-13 07:34:48,045 - print_capture - INFO -         # --- LINE 1195 --- 


2025-06-13 07:34:48,045 - print_capture - INFO - 


2025-06-13 07:34:48,045 - print_capture - INFO - 
        "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:48,045 - print_capture - INFO -         "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:48,045 - print_capture - INFO -         "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",


2025-06-13 07:34:48,045 - print_capture - INFO - 


2025-06-13 07:34:48,045 - print_capture - INFO - 
        # --- LINE 1196 --- 
        # --- LINE 1196 --- 
2025-06-13 07:34:48,045 - print_capture - INFO -         # --- LINE 1196 --- 
        # --- LINE 1196 --- 
        # --- LINE 1196 --- 
2025-06-13 07:34:48,045 - print_capture - INFO -         # --- LINE 1196 --- 


2025-06-13 07:34:48,045 - print_capture - INFO - 


2025-06-13 07:34:48,045 - print_capture - INFO - 
        "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:48,045 - print_capture - INFO -         "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:48,045 - print_capture - INFO -         "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",


2025-06-13 07:34:48,045 - print_capture - INFO - 


2025-06-13 07:34:48,045 - print_capture - INFO - 
        # --- LINE 1197 --- 
        # --- LINE 1197 --- 
2025-06-13 07:34:48,045 - print_capture - INFO -         # --- LINE 1197 --- 
        # --- LINE 1197 --- 
        # --- LINE 1197 --- 
2025-06-13 07:34:48,045 - print_capture - INFO -         # --- LINE 1197 --- 


2025-06-13 07:34:48,045 - print_capture - INFO - 


2025-06-13 07:34:48,045 - print_capture - INFO - 
        "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:48,045 - print_capture - INFO -         "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:48,045 - print_capture - INFO -         "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",


2025-06-13 07:34:48,045 - print_capture - INFO - 


2025-06-13 07:34:48,045 - print_capture - INFO - 
        # --- LINE 1198 --- 
        # --- LINE 1198 --- 
2025-06-13 07:34:48,045 - print_capture - INFO -         # --- LINE 1198 --- 
        # --- LINE 1198 --- 
        # --- LINE 1198 --- 
2025-06-13 07:34:48,045 - print_capture - INFO -         # --- LINE 1198 --- 


2025-06-13 07:34:48,045 - print_capture - INFO - 


2025-06-13 07:34:48,045 - print_capture - INFO - 
        "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:48,045 - print_capture - INFO -         "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:48,045 - print_capture - INFO -         "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",


2025-06-13 07:34:48,045 - print_capture - INFO - 


2025-06-13 07:34:48,045 - print_capture - INFO - 
    # --- LINE 1199 --- 
    # --- LINE 1199 --- 
2025-06-13 07:34:48,045 - print_capture - INFO -     # --- LINE 1199 --- 
    # --- LINE 1199 --- 
    # --- LINE 1199 --- 
2025-06-13 07:34:48,045 - print_capture - INFO -     # --- LINE 1199 --- 


2025-06-13 07:34:48,045 - print_capture - INFO - 


2025-06-13 07:34:48,045 - print_capture - INFO - 
    ],
    ],
2025-06-13 07:34:48,045 - print_capture - INFO -     ],
    ],
    ],
2025-06-13 07:34:48,045 - print_capture - INFO -     ],


2025-06-13 07:34:48,045 - print_capture - INFO - 


2025-06-13 07:34:48,045 - print_capture - INFO - 
    # --- LINE 1200 --- 
    # --- LINE 1200 --- 
2025-06-13 07:34:48,045 - print_capture - INFO -     # --- LINE 1200 --- 
    # --- LINE 1200 --- 
    # --- LINE 1200 --- 
2025-06-13 07:34:48,045 - print_capture - INFO -     # --- LINE 1200 --- 


2025-06-13 07:34:48,045 - print_capture - INFO - 


2025-06-13 07:34:48,045 - print_capture - INFO - 
    "(n),(),(),(),(),(),()->(n)",
    "(n),(),(),(),(),(),()->(n)",
2025-06-13 07:34:48,046 - print_capture - INFO -     "(n),(),(),(),(),(),()->(n)",
    "(n),(),(),(),(),(),()->(n)",
    "(n),(),(),(),(),(),()->(n)",
2025-06-13 07:34:48,046 - print_capture - INFO -     "(n),(),(),(),(),(),()->(n)",


2025-06-13 07:34:48,046 - print_capture - INFO - 


2025-06-13 07:34:48,046 - print_capture - INFO - 
    # --- LINE 1201 --- 
    # --- LINE 1201 --- 
2025-06-13 07:34:48,046 - print_capture - INFO -     # --- LINE 1201 --- 
    # --- LINE 1201 --- 
    # --- LINE 1201 --- 
2025-06-13 07:34:48,046 - print_capture - INFO -     # --- LINE 1201 --- 


2025-06-13 07:34:48,046 - print_capture - INFO - 


2025-06-13 07:34:48,046 - print_capture - INFO - 
    nopython=True, cache=True)
    nopython=True, cache=True)
2025-06-13 07:34:48,046 - print_capture - INFO -     nopython=True, cache=True)
    nopython=True, cache=True)
    nopython=True, cache=True)
2025-06-13 07:34:48,046 - print_capture - INFO -     nopython=True, cache=True)


2025-06-13 07:34:48,046 - print_capture - INFO - 


2025-06-13 07:34:48,046 - print_capture - INFO - 
# --- LINE 1202 --- 
# --- LINE 1202 --- 
2025-06-13 07:34:48,046 - print_capture - INFO - # --- LINE 1202 --- 
# --- LINE 1202 --- 
# --- LINE 1202 --- 
2025-06-13 07:34:48,046 - print_capture - INFO - # --- LINE 1202 --- 


2025-06-13 07:34:48,046 - print_capture - INFO - 


2025-06-13 07:34:48,046 - print_capture - INFO - 
def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
2025-06-13 07:34:48,046 - print_capture - INFO - def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
2025-06-13 07:34:48,046 - print_capture - INFO - def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):


2025-06-13 07:34:48,046 - print_capture - INFO - 


2025-06-13 07:34:48,046 - print_capture - INFO - 
    # --- LINE 1203 --- 
    # --- LINE 1203 --- 
2025-06-13 07:34:48,046 - print_capture - INFO -     # --- LINE 1203 --- 
    # --- LINE 1203 --- 
    # --- LINE 1203 --- 
2025-06-13 07:34:48,046 - print_capture - INFO -     # --- LINE 1203 --- 


2025-06-13 07:34:48,046 - print_capture - INFO - 


2025-06-13 07:34:48,046 - print_capture - INFO - 
    """Vectorized wrapper for the peak-picker"""
    """Vectorized wrapper for the peak-picker"""
2025-06-13 07:34:48,046 - print_capture - INFO -     """Vectorized wrapper for the peak-picker"""
    """Vectorized wrapper for the peak-picker"""
    """Vectorized wrapper for the peak-picker"""
2025-06-13 07:34:48,046 - print_capture - INFO -     """Vectorized wrapper for the peak-picker"""


2025-06-13 07:34:48,046 - print_capture - INFO - 


2025-06-13 07:34:48,046 - print_capture - INFO - 
    # --- LINE 1204 --- 
    # --- LINE 1204 --- 
2025-06-13 07:34:48,046 - print_capture - INFO -     # --- LINE 1204 --- 
    # --- LINE 1204 --- 
    # --- LINE 1204 --- 
2025-06-13 07:34:48,046 - print_capture - INFO -     # --- LINE 1204 --- 


2025-06-13 07:34:48,046 - print_capture - INFO - 


2025-06-13 07:34:48,046 - print_capture - INFO - 
    # Special case the first frame
    # Special case the first frame
2025-06-13 07:34:48,046 - print_capture - INFO -     # Special case the first frame
    # Special case the first frame
    # Special case the first frame
2025-06-13 07:34:48,046 - print_capture - INFO -     # Special case the first frame


2025-06-13 07:34:48,046 - print_capture - INFO - 


2025-06-13 07:34:48,046 - print_capture - INFO - 
    # --- LINE 1205 --- 
    # --- LINE 1205 --- 
2025-06-13 07:34:48,046 - print_capture - INFO -     # --- LINE 1205 --- 
    # --- LINE 1205 --- 
    # --- LINE 1205 --- 
2025-06-13 07:34:48,046 - print_capture - INFO -     # --- LINE 1205 --- 
    #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
    #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,046 - print_capture - INFO -     #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
    #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
    #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,046 - print_capture - INFO -     #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
    #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: float32
    #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: float32
2025-06-13 07:34:48,046 - print_capture - INFO -     #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: float32
    #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: float32
    #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: float32
2025-06-13 07:34:48,046 - print_capture - INFO -     #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: float32
    #   del $const4.1.1
    #   del $const4.1.1
2025-06-13 07:34:48,046 - print_capture - INFO -     #   del $const4.1.1
    #   del $const4.1.1
    #   del $const4.1.1
2025-06-13 07:34:48,046 - print_capture - INFO -     #   del $const4.1.1
    #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:48,046 - print_capture - INFO -     #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:48,046 - print_capture - INFO -     #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
    #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
2025-06-13 07:34:48,046 - print_capture - INFO -     #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
    #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
    #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
    #   del $8load_global.3
    #   del $8load_global.3
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $8load_global.3
    #   del $8load_global.3
    #   del $8load_global.3
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $8load_global.3
    #   $const14.6.2 = const(NoneType, None)  :: none
    #   $const14.6.2 = const(NoneType, None)  :: none
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $const14.6.2 = const(NoneType, None)  :: none
    #   $const14.6.2 = const(NoneType, None)  :: none
    #   $const14.6.2 = const(NoneType, None)  :: none
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $const14.6.2 = const(NoneType, None)  :: none
    #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
    #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
    #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
    #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
    #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
    #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
    #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
    #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
    #   del $const24.11.1
    #   del $const24.11.1
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $const24.11.1
    #   del $const24.11.1
    #   del $const24.11.1
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $const24.11.1
    #   del $22load_attr.10
    #   del $22load_attr.10
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $22load_attr.10
    #   del $22load_attr.10
    #   del $22load_attr.10
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $22load_attr.10
    #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   del $26binary_subscr.12
    #   del $26binary_subscr.12
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $26binary_subscr.12
    #   del $26binary_subscr.12
    #   del $26binary_subscr.12
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $26binary_subscr.12
    #   del $16load_global.7
    #   del $16load_global.7
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $16load_global.7
    #   del $16load_global.7
    #   del $16load_global.7
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $16load_global.7
    #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   del $const14.6.2
    #   del $const14.6.2
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $const14.6.2
    #   del $const14.6.2
    #   del $const14.6.2
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $const14.6.2
    #   del $30build_slice.14
    #   del $30build_slice.14
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $30build_slice.14
    #   del $30build_slice.14
    #   del $30build_slice.14
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $30build_slice.14
    #   del $28call_function.13
    #   del $28call_function.13
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $28call_function.13
    #   del $28call_function.13
    #   del $28call_function.13
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $28call_function.13
    #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(float32, 1d, A)
    #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(float32, 1d, A)
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(float32, 1d, A)
    #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(float32, 1d, A)
    #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(float32, 1d, A)
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(float32, 1d, A)
    #   del $30build_slice.15
    #   del $30build_slice.15
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $30build_slice.15
    #   del $30build_slice.15
    #   del $30build_slice.15
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $30build_slice.15
    #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float32
    #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float32
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float32
    #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float32
    #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float32
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float32
    #   del $32binary_subscr.16
    #   del $32binary_subscr.16
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $32binary_subscr.16
    #   del $32binary_subscr.16
    #   del $32binary_subscr.16
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $32binary_subscr.16
    #   del $10load_method.4
    #   del $10load_method.4
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $10load_method.4
    #   del $10load_method.4
    #   del $10load_method.4
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $10load_method.4
    #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
    #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
    #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
    #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
2025-06-13 07:34:48,047 - print_capture - INFO -     #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
    #   del $6binary_subscr.2
    #   del $6binary_subscr.2
2025-06-13 07:34:48,047 - print_capture - INFO -     #   del $6binary_subscr.2
    #   del $6binary_subscr.2
    #   del $6binary_subscr.2
2025-06-13 07:34:48,048 - print_capture - INFO -     #   del $6binary_subscr.2
    #   del $34call_method.17
    #   del $34call_method.17
2025-06-13 07:34:48,048 - print_capture - INFO -     #   del $34call_method.17
    #   del $34call_method.17
    #   del $34call_method.17
2025-06-13 07:34:48,048 - print_capture - INFO -     #   del $34call_method.17
    #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
    #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
    #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
    #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
    #   peaks[0] = $36compare_op.18
    #   peaks[0] = $36compare_op.18
2025-06-13 07:34:48,048 - print_capture - INFO -     #   peaks[0] = $36compare_op.18
    #   peaks[0] = $36compare_op.18
    #   peaks[0] = $36compare_op.18
2025-06-13 07:34:48,048 - print_capture - INFO -     #   peaks[0] = $36compare_op.18
    #   del $const40.20.1
    #   del $const40.20.1
2025-06-13 07:34:48,048 - print_capture - INFO -     #   del $const40.20.1
    #   del $const40.20.1
    #   del $const40.20.1
2025-06-13 07:34:48,048 - print_capture - INFO -     #   del $const40.20.1
    #   del $36compare_op.18
    #   del $36compare_op.18
2025-06-13 07:34:48,048 - print_capture - INFO -     #   del $36compare_op.18
    #   del $36compare_op.18
    #   del $36compare_op.18
2025-06-13 07:34:48,048 - print_capture - INFO -     #   del $36compare_op.18


2025-06-13 07:34:48,048 - print_capture - INFO - 


2025-06-13 07:34:48,048 - print_capture - INFO - 
    peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
    peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
2025-06-13 07:34:48,048 - print_capture - INFO -     peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
    peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
    peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
2025-06-13 07:34:48,048 - print_capture - INFO -     peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))


2025-06-13 07:34:48,048 - print_capture - INFO - 


2025-06-13 07:34:48,048 - print_capture - INFO - 
    # --- LINE 1206 --- 
    # --- LINE 1206 --- 
2025-06-13 07:34:48,048 - print_capture - INFO -     # --- LINE 1206 --- 
    # --- LINE 1206 --- 
    # --- LINE 1206 --- 
2025-06-13 07:34:48,048 - print_capture - INFO -     # --- LINE 1206 --- 
    #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
    #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
    #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
    #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
    #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
    #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
    #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
    #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
    #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
    #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
    #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
    #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
    #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: float32
    #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: float32
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: float32
    #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: float32
    #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: float32
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: float32
    #   del $const54.27.1
    #   del $const54.27.1
2025-06-13 07:34:48,048 - print_capture - INFO -     #   del $const54.27.1
    #   del $const54.27.1
    #   del $const54.27.1
2025-06-13 07:34:48,048 - print_capture - INFO -     #   del $const54.27.1
    #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
    #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
    #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
    #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
    #   del $58load_global.29
    #   del $58load_global.29
2025-06-13 07:34:48,048 - print_capture - INFO -     #   del $58load_global.29
    #   del $58load_global.29
    #   del $58load_global.29
2025-06-13 07:34:48,048 - print_capture - INFO -     #   del $58load_global.29
    #   $const64.32.2 = const(NoneType, None)  :: none
    #   $const64.32.2 = const(NoneType, None)  :: none
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $const64.32.2 = const(NoneType, None)  :: none
    #   $const64.32.2 = const(NoneType, None)  :: none
    #   $const64.32.2 = const(NoneType, None)  :: none
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $const64.32.2 = const(NoneType, None)  :: none
    #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
    #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
    #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
    #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
    #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
    #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
    #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
    #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,048 - print_capture - INFO -     #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
    #   del $const74.37.1
    #   del $const74.37.1
2025-06-13 07:34:48,048 - print_capture - INFO -     #   del $const74.37.1
    #   del $const74.37.1
    #   del $const74.37.1
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $const74.37.1
    #   del $72load_attr.36
    #   del $72load_attr.36
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $72load_attr.36
    #   del $72load_attr.36
    #   del $72load_attr.36
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $72load_attr.36
    #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
2025-06-13 07:34:48,049 - print_capture - INFO -     #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
2025-06-13 07:34:48,049 - print_capture - INFO -     #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   del $76binary_subscr.38
    #   del $76binary_subscr.38
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $76binary_subscr.38
    #   del $76binary_subscr.38
    #   del $76binary_subscr.38
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $76binary_subscr.38
    #   del $66load_global.33
    #   del $66load_global.33
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $66load_global.33
    #   del $66load_global.33
    #   del $66load_global.33
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $66load_global.33
    #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:48,049 - print_capture - INFO -     #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:48,049 - print_capture - INFO -     #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
2025-06-13 07:34:48,049 - print_capture - INFO -     #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
2025-06-13 07:34:48,049 - print_capture - INFO -     #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   del $const64.32.2
    #   del $const64.32.2
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $const64.32.2
    #   del $const64.32.2
    #   del $const64.32.2
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $const64.32.2
    #   del $80build_slice.40
    #   del $80build_slice.40
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $80build_slice.40
    #   del $80build_slice.40
    #   del $80build_slice.40
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $80build_slice.40
    #   del $78call_function.39
    #   del $78call_function.39
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $78call_function.39
    #   del $78call_function.39
    #   del $78call_function.39
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $78call_function.39
    #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(float32, 1d, A)
    #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(float32, 1d, A)
2025-06-13 07:34:48,049 - print_capture - INFO -     #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(float32, 1d, A)
    #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(float32, 1d, A)
    #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(float32, 1d, A)
2025-06-13 07:34:48,049 - print_capture - INFO -     #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(float32, 1d, A)
    #   del $80build_slice.41
    #   del $80build_slice.41
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $80build_slice.41
    #   del $80build_slice.41
    #   del $80build_slice.41
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $80build_slice.41
    #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float64
    #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:48,049 - print_capture - INFO -     #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float64
    #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float64
    #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:48,049 - print_capture - INFO -     #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float64
    #   del $82binary_subscr.42
    #   del $82binary_subscr.42
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $82binary_subscr.42
    #   del $82binary_subscr.42
    #   del $82binary_subscr.42
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $82binary_subscr.42
    #   del $60load_method.30
    #   del $60load_method.30
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $60load_method.30
    #   del $60load_method.30
    #   del $60load_method.30
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $60load_method.30
    #   $88binary_add.45 = $84call_method.43 + delta  :: float64
    #   $88binary_add.45 = $84call_method.43 + delta  :: float64
2025-06-13 07:34:48,049 - print_capture - INFO -     #   $88binary_add.45 = $84call_method.43 + delta  :: float64
    #   $88binary_add.45 = $84call_method.43 + delta  :: float64
    #   $88binary_add.45 = $84call_method.43 + delta  :: float64
2025-06-13 07:34:48,049 - print_capture - INFO -     #   $88binary_add.45 = $84call_method.43 + delta  :: float64
    #   del $84call_method.43
    #   del $84call_method.43
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $84call_method.43
    #   del $84call_method.43
    #   del $84call_method.43
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $84call_method.43
    #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
    #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
2025-06-13 07:34:48,049 - print_capture - INFO -     #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
    #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
    #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
2025-06-13 07:34:48,049 - print_capture - INFO -     #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
    #   del $88binary_add.45
    #   del $88binary_add.45
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $88binary_add.45
    #   del $88binary_add.45
    #   del $88binary_add.45
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $88binary_add.45
    #   del $56binary_subscr.28
    #   del $56binary_subscr.28
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $56binary_subscr.28
    #   del $56binary_subscr.28
    #   del $56binary_subscr.28
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $56binary_subscr.28
    #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
    #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
2025-06-13 07:34:48,049 - print_capture - INFO -     #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
    #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
    #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
2025-06-13 07:34:48,049 - print_capture - INFO -     #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
    #   del $90compare_op.46
    #   del $90compare_op.46
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $90compare_op.46
    #   del $90compare_op.46
    #   del $90compare_op.46
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $90compare_op.46
    #   del $50binary_subscr.25
    #   del $50binary_subscr.25
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $50binary_subscr.25
    #   del $50binary_subscr.25
    #   del $50binary_subscr.25
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $50binary_subscr.25
    #   peaks[0] = $92inplace_and.47
    #   peaks[0] = $92inplace_and.47
2025-06-13 07:34:48,049 - print_capture - INFO -     #   peaks[0] = $92inplace_and.47
    #   peaks[0] = $92inplace_and.47
    #   peaks[0] = $92inplace_and.47
2025-06-13 07:34:48,049 - print_capture - INFO -     #   peaks[0] = $92inplace_and.47
    #   del $const46.22.1
    #   del $const46.22.1
2025-06-13 07:34:48,049 - print_capture - INFO -     #   del $const46.22.1
    #   del $const46.22.1
    #   del $const46.22.1
2025-06-13 07:34:48,050 - print_capture - INFO -     #   del $const46.22.1
    #   del $92inplace_and.47
    #   del $92inplace_and.47
2025-06-13 07:34:48,050 - print_capture - INFO -     #   del $92inplace_and.47
    #   del $92inplace_and.47
    #   del $92inplace_and.47
2025-06-13 07:34:48,050 - print_capture - INFO -     #   del $92inplace_and.47


2025-06-13 07:34:48,050 - print_capture - INFO - 


2025-06-13 07:34:48,050 - print_capture - INFO - 
    peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
    peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
2025-06-13 07:34:48,050 - print_capture - INFO -     peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
    peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
    peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
2025-06-13 07:34:48,050 - print_capture - INFO -     peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)


2025-06-13 07:34:48,050 - print_capture - INFO - 


2025-06-13 07:34:48,050 - print_capture - INFO - 
# --- LINE 1207 --- 
# --- LINE 1207 --- 
2025-06-13 07:34:48,050 - print_capture - INFO - # --- LINE 1207 --- 
# --- LINE 1207 --- 
# --- LINE 1207 --- 
2025-06-13 07:34:48,050 - print_capture - INFO - # --- LINE 1207 --- 


2025-06-13 07:34:48,050 - print_capture - INFO - 


2025-06-13 07:34:48,050 - print_capture - INFO - 


2025-06-13 07:34:48,050 - print_capture - INFO - 


2025-06-13 07:34:48,050 - print_capture - INFO - 


2025-06-13 07:34:48,050 - print_capture - INFO - 


2025-06-13 07:34:48,050 - print_capture - INFO - 
    # --- LINE 1208 --- 
    # --- LINE 1208 --- 
2025-06-13 07:34:48,050 - print_capture - INFO -     # --- LINE 1208 --- 
    # --- LINE 1208 --- 
    # --- LINE 1208 --- 
2025-06-13 07:34:48,050 - print_capture - INFO -     # --- LINE 1208 --- 
    #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
    #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,050 - print_capture - INFO -     #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
    #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
    #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,050 - print_capture - INFO -     #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
    #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
    #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,050 - print_capture - INFO -     #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
    #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
    #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,050 - print_capture - INFO -     #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
    #   del $const100.49.1
    #   del $const100.49.1
2025-06-13 07:34:48,050 - print_capture - INFO -     #   del $const100.49.1
    #   del $const100.49.1
    #   del $const100.49.1
2025-06-13 07:34:48,050 - print_capture - INFO -     #   del $const100.49.1
    #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,050 - print_capture - INFO -     #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,050 - print_capture - INFO -     #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,050 - print_capture - INFO -     #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,050 - print_capture - INFO -     #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   del bool104
    #   del bool104
2025-06-13 07:34:48,050 - print_capture - INFO -     #   del bool104
    #   del bool104
    #   del bool104
2025-06-13 07:34:48,050 - print_capture - INFO -     #   del bool104
    #   del $102binary_subscr.50
    #   del $102binary_subscr.50
2025-06-13 07:34:48,050 - print_capture - INFO -     #   del $102binary_subscr.50
    #   del $102binary_subscr.50
    #   del $102binary_subscr.50
2025-06-13 07:34:48,050 - print_capture - INFO -     #   del $102binary_subscr.50
    #   branch $104pred, 106, 116
    #   branch $104pred, 106, 116
2025-06-13 07:34:48,050 - print_capture - INFO -     #   branch $104pred, 106, 116
    #   branch $104pred, 106, 116
    #   branch $104pred, 106, 116
2025-06-13 07:34:48,050 - print_capture - INFO -     #   branch $104pred, 106, 116


2025-06-13 07:34:48,050 - print_capture - INFO - 


2025-06-13 07:34:48,050 - print_capture - INFO - 
    if peaks[0]:
    if peaks[0]:
2025-06-13 07:34:48,050 - print_capture - INFO -     if peaks[0]:
    if peaks[0]:
    if peaks[0]:
2025-06-13 07:34:48,050 - print_capture - INFO -     if peaks[0]:


2025-06-13 07:34:48,050 - print_capture - INFO - 


2025-06-13 07:34:48,050 - print_capture - INFO - 
        # --- LINE 1209 --- 
        # --- LINE 1209 --- 
2025-06-13 07:34:48,050 - print_capture - INFO -         # --- LINE 1209 --- 
        # --- LINE 1209 --- 
        # --- LINE 1209 --- 
2025-06-13 07:34:48,050 - print_capture - INFO -         # --- LINE 1209 --- 
        # label 106
        # label 106
2025-06-13 07:34:48,050 - print_capture - INFO -         # label 106
        # label 106
        # label 106
2025-06-13 07:34:48,050 - print_capture - INFO -         # label 106
        #   del $104pred
        #   del $104pred
2025-06-13 07:34:48,050 - print_capture - INFO -         #   del $104pred
        #   del $104pred
        #   del $104pred
2025-06-13 07:34:48,050 - print_capture - INFO -         #   del $104pred
        #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
        #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,051 - print_capture - INFO -         #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
        #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
        #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,051 - print_capture - INFO -         #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
        #   n = wait + $const108.1.3  :: int64
        #   n = wait + $const108.1.3  :: int64
2025-06-13 07:34:48,051 - print_capture - INFO -         #   n = wait + $const108.1.3  :: int64
        #   n = wait + $const108.1.3  :: int64
        #   n = wait + $const108.1.3  :: int64
2025-06-13 07:34:48,051 - print_capture - INFO -         #   n = wait + $const108.1.3  :: int64
        #   del $const108.1.3
        #   del $const108.1.3
2025-06-13 07:34:48,051 - print_capture - INFO -         #   del $const108.1.3
        #   del $const108.1.3
        #   del $const108.1.3
2025-06-13 07:34:48,051 - print_capture - INFO -         #   del $const108.1.3
        #   n.5 = n  :: int64
        #   n.5 = n  :: int64
2025-06-13 07:34:48,051 - print_capture - INFO -         #   n.5 = n  :: int64
        #   n.5 = n  :: int64
        #   n.5 = n  :: int64
2025-06-13 07:34:48,051 - print_capture - INFO -         #   n.5 = n  :: int64
        #   del n
        #   del n
2025-06-13 07:34:48,051 - print_capture - INFO -         #   del n
        #   del n
        #   del n
2025-06-13 07:34:48,051 - print_capture - INFO -         #   del n
        #   jump 120
        #   jump 120
2025-06-13 07:34:48,051 - print_capture - INFO -         #   jump 120
        #   jump 120
        #   jump 120
2025-06-13 07:34:48,051 - print_capture - INFO -         #   jump 120


2025-06-13 07:34:48,051 - print_capture - INFO - 


2025-06-13 07:34:48,051 - print_capture - INFO - 
        n = wait + 1
        n = wait + 1
2025-06-13 07:34:48,051 - print_capture - INFO -         n = wait + 1
        n = wait + 1
        n = wait + 1
2025-06-13 07:34:48,051 - print_capture - INFO -         n = wait + 1


2025-06-13 07:34:48,051 - print_capture - INFO - 


2025-06-13 07:34:48,051 - print_capture - INFO - 
    # --- LINE 1210 --- 
    # --- LINE 1210 --- 
2025-06-13 07:34:48,051 - print_capture - INFO -     # --- LINE 1210 --- 
    # --- LINE 1210 --- 
    # --- LINE 1210 --- 
2025-06-13 07:34:48,051 - print_capture - INFO -     # --- LINE 1210 --- 


2025-06-13 07:34:48,051 - print_capture - INFO - 


2025-06-13 07:34:48,051 - print_capture - INFO - 
    else:
    else:
2025-06-13 07:34:48,051 - print_capture - INFO -     else:
    else:
    else:
2025-06-13 07:34:48,051 - print_capture - INFO -     else:


2025-06-13 07:34:48,051 - print_capture - INFO - 


2025-06-13 07:34:48,051 - print_capture - INFO - 
        # --- LINE 1211 --- 
        # --- LINE 1211 --- 
2025-06-13 07:34:48,051 - print_capture - INFO -         # --- LINE 1211 --- 
        # --- LINE 1211 --- 
        # --- LINE 1211 --- 
2025-06-13 07:34:48,051 - print_capture - INFO -         # --- LINE 1211 --- 
        # label 116
        # label 116
2025-06-13 07:34:48,051 - print_capture - INFO -         # label 116
        # label 116
        # label 116
2025-06-13 07:34:48,051 - print_capture - INFO -         # label 116
        #   del $104pred
        #   del $104pred
2025-06-13 07:34:48,051 - print_capture - INFO -         #   del $104pred
        #   del $104pred
        #   del $104pred
2025-06-13 07:34:48,051 - print_capture - INFO -         #   del $104pred
        #   n.1 = const(int, 1)  :: Literal[int](1)
        #   n.1 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,051 - print_capture - INFO -         #   n.1 = const(int, 1)  :: Literal[int](1)
        #   n.1 = const(int, 1)  :: Literal[int](1)
        #   n.1 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,051 - print_capture - INFO -         #   n.1 = const(int, 1)  :: Literal[int](1)
        #   n.5 = n.1  :: int64
        #   n.5 = n.1  :: int64
2025-06-13 07:34:48,051 - print_capture - INFO -         #   n.5 = n.1  :: int64
        #   n.5 = n.1  :: int64
        #   n.5 = n.1  :: int64
2025-06-13 07:34:48,051 - print_capture - INFO -         #   n.5 = n.1  :: int64
        #   del n.1
        #   del n.1
2025-06-13 07:34:48,051 - print_capture - INFO -         #   del n.1
        #   del n.1
        #   del n.1
2025-06-13 07:34:48,051 - print_capture - INFO -         #   del n.1


2025-06-13 07:34:48,051 - print_capture - INFO - 


2025-06-13 07:34:48,051 - print_capture - INFO - 
        n = 1
        n = 1
2025-06-13 07:34:48,051 - print_capture - INFO -         n = 1
        n = 1
        n = 1
2025-06-13 07:34:48,051 - print_capture - INFO -         n = 1


2025-06-13 07:34:48,051 - print_capture - INFO - 


2025-06-13 07:34:48,051 - print_capture - INFO - 
# --- LINE 1212 --- 
# --- LINE 1212 --- 
2025-06-13 07:34:48,051 - print_capture - INFO - # --- LINE 1212 --- 
# --- LINE 1212 --- 
# --- LINE 1212 --- 
2025-06-13 07:34:48,051 - print_capture - INFO - # --- LINE 1212 --- 


2025-06-13 07:34:48,051 - print_capture - INFO - 


2025-06-13 07:34:48,052 - print_capture - INFO - 


2025-06-13 07:34:48,052 - print_capture - INFO - 


2025-06-13 07:34:48,052 - print_capture - INFO - 


2025-06-13 07:34:48,052 - print_capture - INFO - 


2025-06-13 07:34:48,052 - print_capture - INFO - 
    # --- LINE 1213 --- 
    # --- LINE 1213 --- 
2025-06-13 07:34:48,052 - print_capture - INFO -     # --- LINE 1213 --- 
    # --- LINE 1213 --- 
    # --- LINE 1213 --- 
2025-06-13 07:34:48,052 - print_capture - INFO -     # --- LINE 1213 --- 
    #   jump 120
    #   jump 120
2025-06-13 07:34:48,052 - print_capture - INFO -     #   jump 120
    #   jump 120
    #   jump 120
2025-06-13 07:34:48,052 - print_capture - INFO -     #   jump 120
    # label 120
    # label 120
2025-06-13 07:34:48,052 - print_capture - INFO -     # label 120
    # label 120
    # label 120
2025-06-13 07:34:48,052 - print_capture - INFO -     # label 120
    #   n.7 = n.5  :: int64
    #   n.7 = n.5  :: int64
2025-06-13 07:34:48,052 - print_capture - INFO -     #   n.7 = n.5  :: int64
    #   n.7 = n.5  :: int64
    #   n.7 = n.5  :: int64
2025-06-13 07:34:48,052 - print_capture - INFO -     #   n.7 = n.5  :: int64
    #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,052 - print_capture - INFO -     #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,052 - print_capture - INFO -     #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
    #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,052 - print_capture - INFO -     #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
    #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
    #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,052 - print_capture - INFO -     #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
    #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
    #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,052 - print_capture - INFO -     #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
    #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
    #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,052 - print_capture - INFO -     #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
    #   del $const126.3.1
    #   del $const126.3.1
2025-06-13 07:34:48,052 - print_capture - INFO -     #   del $const126.3.1
    #   del $const126.3.1
    #   del $const126.3.1
2025-06-13 07:34:48,052 - print_capture - INFO -     #   del $const126.3.1
    #   del $124load_attr.2
    #   del $124load_attr.2
2025-06-13 07:34:48,052 - print_capture - INFO -     #   del $124load_attr.2
    #   del $124load_attr.2
    #   del $124load_attr.2
2025-06-13 07:34:48,052 - print_capture - INFO -     #   del $124load_attr.2
    #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
    #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
2025-06-13 07:34:48,052 - print_capture - INFO -     #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
    #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
    #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
2025-06-13 07:34:48,052 - print_capture - INFO -     #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
    #   del n.5
    #   del n.5
2025-06-13 07:34:48,052 - print_capture - INFO -     #   del n.5
    #   del n.5
    #   del n.5
2025-06-13 07:34:48,052 - print_capture - INFO -     #   del n.5
    #   del $128binary_subscr.4
    #   del $128binary_subscr.4
2025-06-13 07:34:48,052 - print_capture - INFO -     #   del $128binary_subscr.4
    #   del $128binary_subscr.4
    #   del $128binary_subscr.4
2025-06-13 07:34:48,052 - print_capture - INFO -     #   del $128binary_subscr.4
    #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,052 - print_capture - INFO -     #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,052 - print_capture - INFO -     #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,052 - print_capture - INFO -     #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,052 - print_capture - INFO -     #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   del bool132
    #   del bool132
2025-06-13 07:34:48,052 - print_capture - INFO -     #   del bool132
    #   del bool132
    #   del bool132
2025-06-13 07:34:48,052 - print_capture - INFO -     #   del bool132
    #   del $130compare_op.5
    #   del $130compare_op.5
2025-06-13 07:34:48,052 - print_capture - INFO -     #   del $130compare_op.5
    #   del $130compare_op.5
    #   del $130compare_op.5
2025-06-13 07:34:48,052 - print_capture - INFO -     #   del $130compare_op.5
    #   branch $132pred, 134, 332
    #   branch $132pred, 134, 332
2025-06-13 07:34:48,052 - print_capture - INFO -     #   branch $132pred, 134, 332
    #   branch $132pred, 134, 332
    #   branch $132pred, 134, 332
2025-06-13 07:34:48,052 - print_capture - INFO -     #   branch $132pred, 134, 332
    #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,052 - print_capture - INFO -     #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,052 - print_capture - INFO -     #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
    #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,052 - print_capture - INFO -     #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
    #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
    #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,052 - print_capture - INFO -     #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
    #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
    #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,052 - print_capture - INFO -     #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
    #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
    #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,052 - print_capture - INFO -     #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
    #   del $const320.8.1
    #   del $const320.8.1
2025-06-13 07:34:48,052 - print_capture - INFO -     #   del $const320.8.1
    #   del $const320.8.1
    #   del $const320.8.1
2025-06-13 07:34:48,052 - print_capture - INFO -     #   del $const320.8.1
    #   del $318load_attr.7
    #   del $318load_attr.7
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del $318load_attr.7
    #   del $318load_attr.7
    #   del $318load_attr.7
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del $318load_attr.7
    #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
    #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
2025-06-13 07:34:48,053 - print_capture - INFO -     #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
    #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
    #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
2025-06-13 07:34:48,053 - print_capture - INFO -     #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
    #   del n.4
    #   del n.4
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del n.4
    #   del n.4
    #   del n.4
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del n.4
    #   del $322binary_subscr.9
    #   del $322binary_subscr.9
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del $322binary_subscr.9
    #   del $322binary_subscr.9
    #   del $322binary_subscr.9
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del $322binary_subscr.9
    #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,053 - print_capture - INFO -     #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,053 - print_capture - INFO -     #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,053 - print_capture - INFO -     #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,053 - print_capture - INFO -     #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   del bool326
    #   del bool326
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del bool326
    #   del bool326
    #   del bool326
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del bool326
    #   del $324compare_op.10
    #   del $324compare_op.10
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del $324compare_op.10
    #   del $324compare_op.10
    #   del $324compare_op.10
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del $324compare_op.10
    #   branch $326pred, 134, 328
    #   branch $326pred, 134, 328
2025-06-13 07:34:48,053 - print_capture - INFO -     #   branch $326pred, 134, 328
    #   branch $326pred, 134, 328
    #   branch $326pred, 134, 328
2025-06-13 07:34:48,053 - print_capture - INFO -     #   branch $326pred, 134, 328
    # label 328
    # label 328
2025-06-13 07:34:48,053 - print_capture - INFO -     # label 328
    # label 328
    # label 328
2025-06-13 07:34:48,053 - print_capture - INFO -     # label 328
    #   del x
    #   del x
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del x
    #   del wait
    #   del wait
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del wait
    #   del wait
    #   del wait
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del wait
    #   del pre_max
    #   del pre_max
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del pre_max
    #   del pre_max
    #   del pre_max
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del pre_max
    #   del pre_avg
    #   del pre_avg
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del pre_avg
    #   del pre_avg
    #   del pre_avg
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del pre_avg
    #   del post_max
    #   del post_max
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del post_max
    #   del post_max
    #   del post_max
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del post_max
    #   del post_avg
    #   del post_avg
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del post_avg
    #   del post_avg
    #   del post_avg
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del post_avg
    #   del peaks
    #   del peaks
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del peaks
    #   del peaks
    #   del peaks
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del peaks
    #   del n.7
    #   del n.7
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del n.7
    #   del n.7
    #   del n.7
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del n.7
    #   del delta
    #   del delta
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del delta
    #   del delta
    #   del delta
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del delta
    #   del $326pred
    #   del $326pred
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del $326pred
    #   del $326pred
    #   del $326pred
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del $326pred
    #   $const328.0.2 = const(NoneType, None)  :: none
    #   $const328.0.2 = const(NoneType, None)  :: none
2025-06-13 07:34:48,053 - print_capture - INFO -     #   $const328.0.2 = const(NoneType, None)  :: none
    #   $const328.0.2 = const(NoneType, None)  :: none
    #   $const328.0.2 = const(NoneType, None)  :: none
2025-06-13 07:34:48,053 - print_capture - INFO -     #   $const328.0.2 = const(NoneType, None)  :: none
    #   $330return_value.1 = cast(value=$const328.0.2)  :: none
    #   $330return_value.1 = cast(value=$const328.0.2)  :: none
2025-06-13 07:34:48,053 - print_capture - INFO -     #   $330return_value.1 = cast(value=$const328.0.2)  :: none
    #   $330return_value.1 = cast(value=$const328.0.2)  :: none
    #   $330return_value.1 = cast(value=$const328.0.2)  :: none
2025-06-13 07:34:48,053 - print_capture - INFO -     #   $330return_value.1 = cast(value=$const328.0.2)  :: none
    #   del $const328.0.2
    #   del $const328.0.2
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del $const328.0.2
    #   del $const328.0.2
    #   del $const328.0.2
2025-06-13 07:34:48,053 - print_capture - INFO -     #   del $const328.0.2
    #   return $330return_value.1
    #   return $330return_value.1
2025-06-13 07:34:48,053 - print_capture - INFO -     #   return $330return_value.1
    #   return $330return_value.1
    #   return $330return_value.1
2025-06-13 07:34:48,053 - print_capture - INFO -     #   return $330return_value.1
    # label 332
    # label 332
2025-06-13 07:34:48,054 - print_capture - INFO -     # label 332
    # label 332
    # label 332
2025-06-13 07:34:48,054 - print_capture - INFO -     # label 332
    #   del x
    #   del x
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del x
    #   del wait
    #   del wait
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del wait
    #   del wait
    #   del wait
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del wait
    #   del pre_max
    #   del pre_max
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del pre_max
    #   del pre_max
    #   del pre_max
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del pre_max
    #   del pre_avg
    #   del pre_avg
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del pre_avg
    #   del pre_avg
    #   del pre_avg
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del pre_avg
    #   del post_max
    #   del post_max
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del post_max
    #   del post_max
    #   del post_max
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del post_max
    #   del post_avg
    #   del post_avg
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del post_avg
    #   del post_avg
    #   del post_avg
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del post_avg
    #   del peaks
    #   del peaks
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del peaks
    #   del peaks
    #   del peaks
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del peaks
    #   del n.7
    #   del n.7
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del n.7
    #   del n.7
    #   del n.7
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del n.7
    #   del delta
    #   del delta
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del delta
    #   del delta
    #   del delta
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del delta
    #   del $132pred
    #   del $132pred
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del $132pred
    #   del $132pred
    #   del $132pred
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del $132pred
    #   $const332.0.2 = const(NoneType, None)  :: none
    #   $const332.0.2 = const(NoneType, None)  :: none
2025-06-13 07:34:48,054 - print_capture - INFO -     #   $const332.0.2 = const(NoneType, None)  :: none
    #   $const332.0.2 = const(NoneType, None)  :: none
    #   $const332.0.2 = const(NoneType, None)  :: none
2025-06-13 07:34:48,054 - print_capture - INFO -     #   $const332.0.2 = const(NoneType, None)  :: none
    #   $334return_value.1 = cast(value=$const332.0.2)  :: none
    #   $334return_value.1 = cast(value=$const332.0.2)  :: none
2025-06-13 07:34:48,054 - print_capture - INFO -     #   $334return_value.1 = cast(value=$const332.0.2)  :: none
    #   $334return_value.1 = cast(value=$const332.0.2)  :: none
    #   $334return_value.1 = cast(value=$const332.0.2)  :: none
2025-06-13 07:34:48,054 - print_capture - INFO -     #   $334return_value.1 = cast(value=$const332.0.2)  :: none
    #   del $const332.0.2
    #   del $const332.0.2
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del $const332.0.2
    #   del $const332.0.2
    #   del $const332.0.2
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del $const332.0.2
    #   return $334return_value.1
    #   return $334return_value.1
2025-06-13 07:34:48,054 - print_capture - INFO -     #   return $334return_value.1
    #   return $334return_value.1
    #   return $334return_value.1
2025-06-13 07:34:48,054 - print_capture - INFO -     #   return $334return_value.1
    # label 333
    # label 333
2025-06-13 07:34:48,054 - print_capture - INFO -     # label 333
    # label 333
    # label 333
2025-06-13 07:34:48,054 - print_capture - INFO -     # label 333
    #   n.5 = n.6  :: int64
    #   n.5 = n.6  :: int64
2025-06-13 07:34:48,054 - print_capture - INFO -     #   n.5 = n.6  :: int64
    #   n.5 = n.6  :: int64
    #   n.5 = n.6  :: int64
2025-06-13 07:34:48,054 - print_capture - INFO -     #   n.5 = n.6  :: int64
    #   del n.6
    #   del n.6
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del n.6
    #   del n.6
    #   del n.6
2025-06-13 07:34:48,054 - print_capture - INFO -     #   del n.6
    #   jump 120
    #   jump 120
2025-06-13 07:34:48,054 - print_capture - INFO -     #   jump 120
    #   jump 120
    #   jump 120
2025-06-13 07:34:48,054 - print_capture - INFO -     #   jump 120


2025-06-13 07:34:48,054 - print_capture - INFO - 


2025-06-13 07:34:48,054 - print_capture - INFO - 
    while n < x.shape[0]:
    while n < x.shape[0]:
2025-06-13 07:34:48,054 - print_capture - INFO -     while n < x.shape[0]:
    while n < x.shape[0]:
    while n < x.shape[0]:
2025-06-13 07:34:48,054 - print_capture - INFO -     while n < x.shape[0]:


2025-06-13 07:34:48,054 - print_capture - INFO - 


2025-06-13 07:34:48,054 - print_capture - INFO - 
        # --- LINE 1214 --- 
        # --- LINE 1214 --- 
2025-06-13 07:34:48,054 - print_capture - INFO -         # --- LINE 1214 --- 
        # --- LINE 1214 --- 
        # --- LINE 1214 --- 
2025-06-13 07:34:48,054 - print_capture - INFO -         # --- LINE 1214 --- 
        # label 134
        # label 134
2025-06-13 07:34:48,054 - print_capture - INFO -         # label 134
        # label 134
        # label 134
2025-06-13 07:34:48,054 - print_capture - INFO -         # label 134
        #   del $326pred
        #   del $326pred
2025-06-13 07:34:48,054 - print_capture - INFO -         #   del $326pred
        #   del $326pred
        #   del $326pred
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $326pred
        #   del $132pred
        #   del $132pred
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $132pred
        #   del $132pred
        #   del $132pred
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $132pred
        #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
        #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
        #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
        #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
        #   del $134load_global.0
        #   del $134load_global.0
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $134load_global.0
        #   del $134load_global.0
        #   del $134load_global.0
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $134load_global.0
        #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
        #   $148binary_subtract.7 = n.7 - pre_max  :: int64
        #   $148binary_subtract.7 = n.7 - pre_max  :: int64
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $148binary_subtract.7 = n.7 - pre_max  :: int64
        #   $148binary_subtract.7 = n.7 - pre_max  :: int64
        #   $148binary_subtract.7 = n.7 - pre_max  :: int64
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $148binary_subtract.7 = n.7 - pre_max  :: int64
        #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   del $const142.4.1
        #   del $const142.4.1
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $const142.4.1
        #   del $const142.4.1
        #   del $const142.4.1
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $const142.4.1
        #   del $148binary_subtract.7
        #   del $148binary_subtract.7
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $148binary_subtract.7
        #   del $148binary_subtract.7
        #   del $148binary_subtract.7
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $148binary_subtract.7
        #   del $140load_global.3
        #   del $140load_global.3
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $140load_global.3
        #   del $140load_global.3
        #   del $140load_global.3
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $140load_global.3
        #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $158binary_add.12 = n.7 + post_max  :: int64
        #   $158binary_add.12 = n.7 + post_max  :: int64
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $158binary_add.12 = n.7 + post_max  :: int64
        #   $158binary_add.12 = n.7 + post_max  :: int64
        #   $158binary_add.12 = n.7 + post_max  :: int64
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $158binary_add.12 = n.7 + post_max  :: int64
        #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
        #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
        #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
        #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
        #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
        #   del $const164.15.1
        #   del $const164.15.1
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $const164.15.1
        #   del $const164.15.1
        #   del $const164.15.1
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $const164.15.1
        #   del $162load_attr.14
        #   del $162load_attr.14
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $162load_attr.14
        #   del $162load_attr.14
        #   del $162load_attr.14
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $162load_attr.14
        #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   del $166binary_subscr.16
        #   del $166binary_subscr.16
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $166binary_subscr.16
        #   del $166binary_subscr.16
        #   del $166binary_subscr.16
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $166binary_subscr.16
        #   del $158binary_add.12
        #   del $158binary_add.12
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $158binary_add.12
        #   del $158binary_add.12
        #   del $158binary_add.12
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $158binary_add.12
        #   del $152load_global.9
        #   del $152load_global.9
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $152load_global.9
        #   del $152load_global.9
        #   del $152load_global.9
2025-06-13 07:34:48,055 - print_capture - INFO -         #   del $152load_global.9
        #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:48,055 - print_capture - INFO -         #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:48,056 - print_capture - INFO -         #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
2025-06-13 07:34:48,056 - print_capture - INFO -         #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
2025-06-13 07:34:48,056 - print_capture - INFO -         #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   del $170build_slice.18
        #   del $170build_slice.18
2025-06-13 07:34:48,056 - print_capture - INFO -         #   del $170build_slice.18
        #   del $170build_slice.18
        #   del $170build_slice.18
2025-06-13 07:34:48,056 - print_capture - INFO -         #   del $170build_slice.18
        #   del $168call_function.17
        #   del $168call_function.17
2025-06-13 07:34:48,056 - print_capture - INFO -         #   del $168call_function.17
        #   del $168call_function.17
        #   del $168call_function.17
2025-06-13 07:34:48,056 - print_capture - INFO -         #   del $168call_function.17
        #   del $150call_function.8
        #   del $150call_function.8
2025-06-13 07:34:48,056 - print_capture - INFO -         #   del $150call_function.8
        #   del $150call_function.8
        #   del $150call_function.8
2025-06-13 07:34:48,056 - print_capture - INFO -         #   del $150call_function.8
        #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(float32, 1d, A)
        #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(float32, 1d, A)
2025-06-13 07:34:48,056 - print_capture - INFO -         #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(float32, 1d, A)
        #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(float32, 1d, A)
        #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(float32, 1d, A)
2025-06-13 07:34:48,056 - print_capture - INFO -         #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(float32, 1d, A)
        #   del $170build_slice.19
        #   del $170build_slice.19
2025-06-13 07:34:48,056 - print_capture - INFO -         #   del $170build_slice.19
        #   del $170build_slice.19
        #   del $170build_slice.19
2025-06-13 07:34:48,056 - print_capture - INFO -         #   del $170build_slice.19
        #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float32
        #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float32
2025-06-13 07:34:48,056 - print_capture - INFO -         #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float32
        #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float32
        #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float32
2025-06-13 07:34:48,056 - print_capture - INFO -         #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float32
        #   del $172binary_subscr.20
        #   del $172binary_subscr.20
2025-06-13 07:34:48,056 - print_capture - INFO -         #   del $172binary_subscr.20
        #   del $172binary_subscr.20
        #   del $172binary_subscr.20
2025-06-13 07:34:48,056 - print_capture - INFO -         #   del $172binary_subscr.20
        #   del $136load_method.1
        #   del $136load_method.1
2025-06-13 07:34:48,056 - print_capture - INFO -         #   del $136load_method.1
        #   del $136load_method.1
        #   del $136load_method.1
2025-06-13 07:34:48,056 - print_capture - INFO -         #   del $136load_method.1


2025-06-13 07:34:48,056 - print_capture - INFO - 


2025-06-13 07:34:48,056 - print_capture - INFO - 
        maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
        maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
2025-06-13 07:34:48,056 - print_capture - INFO -         maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
        maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
        maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
2025-06-13 07:34:48,056 - print_capture - INFO -         maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])


2025-06-13 07:34:48,056 - print_capture - INFO - 


2025-06-13 07:34:48,056 - print_capture - INFO - 
# --- LINE 1215 --- 
# --- LINE 1215 --- 
2025-06-13 07:34:48,056 - print_capture - INFO - # --- LINE 1215 --- 
# --- LINE 1215 --- 
# --- LINE 1215 --- 
2025-06-13 07:34:48,056 - print_capture - INFO - # --- LINE 1215 --- 


2025-06-13 07:34:48,056 - print_capture - INFO - 


2025-06-13 07:34:48,056 - print_capture - INFO - 


2025-06-13 07:34:48,056 - print_capture - INFO - 


2025-06-13 07:34:48,056 - print_capture - INFO - 


2025-06-13 07:34:48,056 - print_capture - INFO - 


2025-06-13 07:34:48,056 - print_capture - INFO - 
        # --- LINE 1216 --- 
        # --- LINE 1216 --- 
2025-06-13 07:34:48,056 - print_capture - INFO -         # --- LINE 1216 --- 
        # --- LINE 1216 --- 
        # --- LINE 1216 --- 
2025-06-13 07:34:48,056 - print_capture - INFO -         # --- LINE 1216 --- 


2025-06-13 07:34:48,056 - print_capture - INFO - 


2025-06-13 07:34:48,056 - print_capture - INFO - 
        # Are we the local max and sufficiently above average?
        # Are we the local max and sufficiently above average?
2025-06-13 07:34:48,056 - print_capture - INFO -         # Are we the local max and sufficiently above average?
        # Are we the local max and sufficiently above average?
        # Are we the local max and sufficiently above average?
2025-06-13 07:34:48,056 - print_capture - INFO -         # Are we the local max and sufficiently above average?


2025-06-13 07:34:48,056 - print_capture - INFO - 


2025-06-13 07:34:48,056 - print_capture - INFO - 
        # --- LINE 1217 --- 
        # --- LINE 1217 --- 
2025-06-13 07:34:48,056 - print_capture - INFO -         # --- LINE 1217 --- 
        # --- LINE 1217 --- 
        # --- LINE 1217 --- 
2025-06-13 07:34:48,056 - print_capture - INFO -         # --- LINE 1217 --- 
        #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float32
        #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float32
2025-06-13 07:34:48,056 - print_capture - INFO -         #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float32
        #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float32
        #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float32
2025-06-13 07:34:48,056 - print_capture - INFO -         #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float32
        #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
        #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
2025-06-13 07:34:48,056 - print_capture - INFO -         #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
        #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
        #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
2025-06-13 07:34:48,056 - print_capture - INFO -         #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
        #   del maxn
        #   del maxn
2025-06-13 07:34:48,057 - print_capture - INFO -         #   del maxn
        #   del maxn
        #   del maxn
2025-06-13 07:34:48,057 - print_capture - INFO -         #   del maxn
        #   del $182binary_subscr.24
        #   del $182binary_subscr.24
2025-06-13 07:34:48,057 - print_capture - INFO -         #   del $182binary_subscr.24
        #   del $182binary_subscr.24
        #   del $182binary_subscr.24
2025-06-13 07:34:48,057 - print_capture - INFO -         #   del $182binary_subscr.24
        #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
2025-06-13 07:34:48,057 - print_capture - INFO -         #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
2025-06-13 07:34:48,057 - print_capture - INFO -         #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   del $186compare_op.26
        #   del $186compare_op.26
2025-06-13 07:34:48,057 - print_capture - INFO -         #   del $186compare_op.26
        #   del $186compare_op.26
        #   del $186compare_op.26
2025-06-13 07:34:48,057 - print_capture - INFO -         #   del $186compare_op.26


2025-06-13 07:34:48,057 - print_capture - INFO - 


2025-06-13 07:34:48,057 - print_capture - INFO - 
        peaks[n] = (x[n] == maxn)
        peaks[n] = (x[n] == maxn)
2025-06-13 07:34:48,057 - print_capture - INFO -         peaks[n] = (x[n] == maxn)
        peaks[n] = (x[n] == maxn)
        peaks[n] = (x[n] == maxn)
2025-06-13 07:34:48,057 - print_capture - INFO -         peaks[n] = (x[n] == maxn)


2025-06-13 07:34:48,057 - print_capture - INFO - 


2025-06-13 07:34:48,057 - print_capture - INFO - 
# --- LINE 1218 --- 
# --- LINE 1218 --- 
2025-06-13 07:34:48,057 - print_capture - INFO - # --- LINE 1218 --- 
# --- LINE 1218 --- 
# --- LINE 1218 --- 
2025-06-13 07:34:48,057 - print_capture - INFO - # --- LINE 1218 --- 


2025-06-13 07:34:48,057 - print_capture - INFO - 


2025-06-13 07:34:48,057 - print_capture - INFO - 


2025-06-13 07:34:48,057 - print_capture - INFO - 


2025-06-13 07:34:48,057 - print_capture - INFO - 


2025-06-13 07:34:48,057 - print_capture - INFO - 


2025-06-13 07:34:48,057 - print_capture - INFO - 
        # --- LINE 1219 --- 
        # --- LINE 1219 --- 
2025-06-13 07:34:48,057 - print_capture - INFO -         # --- LINE 1219 --- 
        # --- LINE 1219 --- 
        # --- LINE 1219 --- 
2025-06-13 07:34:48,057 - print_capture - INFO -         # --- LINE 1219 --- 
        #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,057 - print_capture - INFO -         #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,057 - print_capture - INFO -         #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,057 - print_capture - INFO -         #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,057 - print_capture - INFO -         #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,057 - print_capture - INFO -         #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,057 - print_capture - INFO -         #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   del bool200
        #   del bool200
2025-06-13 07:34:48,057 - print_capture - INFO -         #   del bool200
        #   del bool200
        #   del bool200
2025-06-13 07:34:48,057 - print_capture - INFO -         #   del bool200
        #   del $198binary_subscr.31
        #   del $198binary_subscr.31
2025-06-13 07:34:48,057 - print_capture - INFO -         #   del $198binary_subscr.31
        #   del $198binary_subscr.31
        #   del $198binary_subscr.31
2025-06-13 07:34:48,057 - print_capture - INFO -         #   del $198binary_subscr.31
        #   branch $200pred, 212, 202
        #   branch $200pred, 212, 202
2025-06-13 07:34:48,057 - print_capture - INFO -         #   branch $200pred, 212, 202
        #   branch $200pred, 212, 202
        #   branch $200pred, 212, 202
2025-06-13 07:34:48,057 - print_capture - INFO -         #   branch $200pred, 212, 202


2025-06-13 07:34:48,057 - print_capture - INFO - 


2025-06-13 07:34:48,057 - print_capture - INFO - 
        if not peaks[n]:
        if not peaks[n]:
2025-06-13 07:34:48,057 - print_capture - INFO -         if not peaks[n]:
        if not peaks[n]:
        if not peaks[n]:
2025-06-13 07:34:48,057 - print_capture - INFO -         if not peaks[n]:


2025-06-13 07:34:48,057 - print_capture - INFO - 


2025-06-13 07:34:48,057 - print_capture - INFO - 
            # --- LINE 1220 --- 
            # --- LINE 1220 --- 
2025-06-13 07:34:48,057 - print_capture - INFO -             # --- LINE 1220 --- 
            # --- LINE 1220 --- 
            # --- LINE 1220 --- 
2025-06-13 07:34:48,057 - print_capture - INFO -             # --- LINE 1220 --- 
            # label 202
            # label 202
2025-06-13 07:34:48,058 - print_capture - INFO -             # label 202
            # label 202
            # label 202
2025-06-13 07:34:48,058 - print_capture - INFO -             # label 202
            #   del $200pred
            #   del $200pred
2025-06-13 07:34:48,058 - print_capture - INFO -             #   del $200pred
            #   del $200pred
            #   del $200pred
2025-06-13 07:34:48,058 - print_capture - INFO -             #   del $200pred
            #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,058 - print_capture - INFO -             #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,058 - print_capture - INFO -             #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
            #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:48,058 - print_capture - INFO -             #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:48,058 - print_capture - INFO -             #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   del n.7
            #   del n.7
2025-06-13 07:34:48,058 - print_capture - INFO -             #   del n.7
            #   del n.7
            #   del n.7
2025-06-13 07:34:48,058 - print_capture - INFO -             #   del n.7
            #   del $const204.1.3
            #   del $const204.1.3
2025-06-13 07:34:48,058 - print_capture - INFO -             #   del $const204.1.3
            #   del $const204.1.3
            #   del $const204.1.3
2025-06-13 07:34:48,058 - print_capture - INFO -             #   del $const204.1.3
            #   n.2 = $206inplace_add.2  :: int64
            #   n.2 = $206inplace_add.2  :: int64
2025-06-13 07:34:48,058 - print_capture - INFO -             #   n.2 = $206inplace_add.2  :: int64
            #   n.2 = $206inplace_add.2  :: int64
            #   n.2 = $206inplace_add.2  :: int64
2025-06-13 07:34:48,058 - print_capture - INFO -             #   n.2 = $206inplace_add.2  :: int64
            #   del $206inplace_add.2
            #   del $206inplace_add.2
2025-06-13 07:34:48,058 - print_capture - INFO -             #   del $206inplace_add.2
            #   del $206inplace_add.2
            #   del $206inplace_add.2
2025-06-13 07:34:48,058 - print_capture - INFO -             #   del $206inplace_add.2
            #   n.6 = n.2  :: int64
            #   n.6 = n.2  :: int64
2025-06-13 07:34:48,058 - print_capture - INFO -             #   n.6 = n.2  :: int64
            #   n.6 = n.2  :: int64
            #   n.6 = n.2  :: int64
2025-06-13 07:34:48,058 - print_capture - INFO -             #   n.6 = n.2  :: int64
            #   del n.2
            #   del n.2
2025-06-13 07:34:48,058 - print_capture - INFO -             #   del n.2
            #   del n.2
            #   del n.2
2025-06-13 07:34:48,058 - print_capture - INFO -             #   del n.2


2025-06-13 07:34:48,058 - print_capture - INFO - 


2025-06-13 07:34:48,058 - print_capture - INFO - 
            n += 1
            n += 1
2025-06-13 07:34:48,058 - print_capture - INFO -             n += 1
            n += 1
            n += 1
2025-06-13 07:34:48,058 - print_capture - INFO -             n += 1


2025-06-13 07:34:48,058 - print_capture - INFO - 


2025-06-13 07:34:48,058 - print_capture - INFO - 
            # --- LINE 1221 --- 
            # --- LINE 1221 --- 
2025-06-13 07:34:48,058 - print_capture - INFO -             # --- LINE 1221 --- 
            # --- LINE 1221 --- 
            # --- LINE 1221 --- 
2025-06-13 07:34:48,058 - print_capture - INFO -             # --- LINE 1221 --- 
            #   jump 333
            #   jump 333
2025-06-13 07:34:48,058 - print_capture - INFO -             #   jump 333
            #   jump 333
            #   jump 333
2025-06-13 07:34:48,058 - print_capture - INFO -             #   jump 333


2025-06-13 07:34:48,058 - print_capture - INFO - 


2025-06-13 07:34:48,058 - print_capture - INFO - 
            continue
            continue
2025-06-13 07:34:48,058 - print_capture - INFO -             continue
            continue
            continue
2025-06-13 07:34:48,058 - print_capture - INFO -             continue


2025-06-13 07:34:48,058 - print_capture - INFO - 


2025-06-13 07:34:48,058 - print_capture - INFO - 
# --- LINE 1222 --- 
# --- LINE 1222 --- 
2025-06-13 07:34:48,058 - print_capture - INFO - # --- LINE 1222 --- 
# --- LINE 1222 --- 
# --- LINE 1222 --- 
2025-06-13 07:34:48,058 - print_capture - INFO - # --- LINE 1222 --- 


2025-06-13 07:34:48,058 - print_capture - INFO - 


2025-06-13 07:34:48,058 - print_capture - INFO - 


2025-06-13 07:34:48,058 - print_capture - INFO - 


2025-06-13 07:34:48,058 - print_capture - INFO - 


2025-06-13 07:34:48,058 - print_capture - INFO - 


2025-06-13 07:34:48,058 - print_capture - INFO - 
        # --- LINE 1223 --- 
        # --- LINE 1223 --- 
2025-06-13 07:34:48,058 - print_capture - INFO -         # --- LINE 1223 --- 
        # --- LINE 1223 --- 
        # --- LINE 1223 --- 
2025-06-13 07:34:48,058 - print_capture - INFO -         # --- LINE 1223 --- 
        # label 212
        # label 212
2025-06-13 07:34:48,058 - print_capture - INFO -         # label 212
        # label 212
        # label 212
2025-06-13 07:34:48,058 - print_capture - INFO -         # label 212
        #   del $200pred
        #   del $200pred
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $200pred
        #   del $200pred
        #   del $200pred
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $200pred
        #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
        #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
        #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
        #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
        #   del $212load_global.0
        #   del $212load_global.0
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $212load_global.0
        #   del $212load_global.0
        #   del $212load_global.0
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $212load_global.0
        #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
        #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
        #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
        #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
        #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
        #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   del $const220.4.1
        #   del $const220.4.1
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $const220.4.1
        #   del $const220.4.1
        #   del $const220.4.1
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $const220.4.1
        #   del $226binary_subtract.7
        #   del $226binary_subtract.7
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $226binary_subtract.7
        #   del $226binary_subtract.7
        #   del $226binary_subtract.7
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $226binary_subtract.7
        #   del $218load_global.3
        #   del $218load_global.3
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $218load_global.3
        #   del $218load_global.3
        #   del $218load_global.3
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $218load_global.3
        #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $236binary_add.12 = n.7 + post_avg  :: int64
        #   $236binary_add.12 = n.7 + post_avg  :: int64
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $236binary_add.12 = n.7 + post_avg  :: int64
        #   $236binary_add.12 = n.7 + post_avg  :: int64
        #   $236binary_add.12 = n.7 + post_avg  :: int64
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $236binary_add.12 = n.7 + post_avg  :: int64
        #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
        #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
        #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
        #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
        #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
        #   del $const242.15.1
        #   del $const242.15.1
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $const242.15.1
        #   del $const242.15.1
        #   del $const242.15.1
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $const242.15.1
        #   del $240load_attr.14
        #   del $240load_attr.14
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $240load_attr.14
        #   del $240load_attr.14
        #   del $240load_attr.14
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $240load_attr.14
        #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   del $244binary_subscr.16
        #   del $244binary_subscr.16
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $244binary_subscr.16
        #   del $244binary_subscr.16
        #   del $244binary_subscr.16
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $244binary_subscr.16
        #   del $236binary_add.12
        #   del $236binary_add.12
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $236binary_add.12
        #   del $236binary_add.12
        #   del $236binary_add.12
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $236binary_add.12
        #   del $230load_global.9
        #   del $230load_global.9
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $230load_global.9
        #   del $230load_global.9
        #   del $230load_global.9
2025-06-13 07:34:48,059 - print_capture - INFO -         #   del $230load_global.9
        #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
2025-06-13 07:34:48,059 - print_capture - INFO -         #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   del $248build_slice.18
        #   del $248build_slice.18
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $248build_slice.18
        #   del $248build_slice.18
        #   del $248build_slice.18
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $248build_slice.18
        #   del $246call_function.17
        #   del $246call_function.17
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $246call_function.17
        #   del $246call_function.17
        #   del $246call_function.17
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $246call_function.17
        #   del $228call_function.8
        #   del $228call_function.8
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $228call_function.8
        #   del $228call_function.8
        #   del $228call_function.8
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $228call_function.8
        #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(float32, 1d, A)
        #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(float32, 1d, A)
2025-06-13 07:34:48,060 - print_capture - INFO -         #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(float32, 1d, A)
        #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(float32, 1d, A)
        #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(float32, 1d, A)
2025-06-13 07:34:48,060 - print_capture - INFO -         #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(float32, 1d, A)
        #   del $248build_slice.19
        #   del $248build_slice.19
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $248build_slice.19
        #   del $248build_slice.19
        #   del $248build_slice.19
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $248build_slice.19
        #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float64
        #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:48,060 - print_capture - INFO -         #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float64
        #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float64
        #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:48,060 - print_capture - INFO -         #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float32, 1, 'A', False, aligned=True),) -> float64
        #   del $250binary_subscr.20
        #   del $250binary_subscr.20
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $250binary_subscr.20
        #   del $250binary_subscr.20
        #   del $250binary_subscr.20
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $250binary_subscr.20
        #   del $214load_method.1
        #   del $214load_method.1
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $214load_method.1
        #   del $214load_method.1
        #   del $214load_method.1
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $214load_method.1


2025-06-13 07:34:48,060 - print_capture - INFO - 


2025-06-13 07:34:48,060 - print_capture - INFO - 
        avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
        avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
2025-06-13 07:34:48,060 - print_capture - INFO -         avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
        avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
        avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
2025-06-13 07:34:48,060 - print_capture - INFO -         avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])


2025-06-13 07:34:48,060 - print_capture - INFO - 


2025-06-13 07:34:48,060 - print_capture - INFO - 
        # --- LINE 1224 --- 
        # --- LINE 1224 --- 
2025-06-13 07:34:48,060 - print_capture - INFO -         # --- LINE 1224 --- 
        # --- LINE 1224 --- 
        # --- LINE 1224 --- 
2025-06-13 07:34:48,060 - print_capture - INFO -         # --- LINE 1224 --- 
        #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,060 - print_capture - INFO -         #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,060 - print_capture - INFO -         #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float32
        #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float32
2025-06-13 07:34:48,060 - print_capture - INFO -         #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float32
        #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float32
        #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float32
2025-06-13 07:34:48,060 - print_capture - INFO -         #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float32
        #   $274binary_add.32 = avgn + delta  :: float64
        #   $274binary_add.32 = avgn + delta  :: float64
2025-06-13 07:34:48,060 - print_capture - INFO -         #   $274binary_add.32 = avgn + delta  :: float64
        #   $274binary_add.32 = avgn + delta  :: float64
        #   $274binary_add.32 = avgn + delta  :: float64
2025-06-13 07:34:48,060 - print_capture - INFO -         #   $274binary_add.32 = avgn + delta  :: float64
        #   del avgn
        #   del avgn
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del avgn
        #   del avgn
        #   del avgn
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del avgn
        #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
        #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
2025-06-13 07:34:48,060 - print_capture - INFO -         #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
        #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
        #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
2025-06-13 07:34:48,060 - print_capture - INFO -         #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
        #   del $274binary_add.32
        #   del $274binary_add.32
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $274binary_add.32
        #   del $274binary_add.32
        #   del $274binary_add.32
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $274binary_add.32
        #   del $268binary_subscr.29
        #   del $268binary_subscr.29
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $268binary_subscr.29
        #   del $268binary_subscr.29
        #   del $268binary_subscr.29
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $268binary_subscr.29
        #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
        #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
2025-06-13 07:34:48,060 - print_capture - INFO -         #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
        #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
        #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
2025-06-13 07:34:48,060 - print_capture - INFO -         #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
        #   del $276compare_op.33
        #   del $276compare_op.33
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $276compare_op.33
        #   del $276compare_op.33
        #   del $276compare_op.33
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $276compare_op.33
        #   del $262binary_subscr.26
        #   del $262binary_subscr.26
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $262binary_subscr.26
        #   del $262binary_subscr.26
        #   del $262binary_subscr.26
2025-06-13 07:34:48,060 - print_capture - INFO -         #   del $262binary_subscr.26
        #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
2025-06-13 07:34:48,060 - print_capture - INFO -         #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
2025-06-13 07:34:48,060 - print_capture - INFO -         #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   del $278inplace_and.34
        #   del $278inplace_and.34
2025-06-13 07:34:48,061 - print_capture - INFO -         #   del $278inplace_and.34
        #   del $278inplace_and.34
        #   del $278inplace_and.34
2025-06-13 07:34:48,061 - print_capture - INFO -         #   del $278inplace_and.34


2025-06-13 07:34:48,061 - print_capture - INFO - 


2025-06-13 07:34:48,061 - print_capture - INFO - 
        peaks[n] &= (x[n] >= avgn + delta)
        peaks[n] &= (x[n] >= avgn + delta)
2025-06-13 07:34:48,061 - print_capture - INFO -         peaks[n] &= (x[n] >= avgn + delta)
        peaks[n] &= (x[n] >= avgn + delta)
        peaks[n] &= (x[n] >= avgn + delta)
2025-06-13 07:34:48,061 - print_capture - INFO -         peaks[n] &= (x[n] >= avgn + delta)


2025-06-13 07:34:48,061 - print_capture - INFO - 


2025-06-13 07:34:48,061 - print_capture - INFO - 
# --- LINE 1225 --- 
# --- LINE 1225 --- 
2025-06-13 07:34:48,061 - print_capture - INFO - # --- LINE 1225 --- 
# --- LINE 1225 --- 
# --- LINE 1225 --- 
2025-06-13 07:34:48,061 - print_capture - INFO - # --- LINE 1225 --- 


2025-06-13 07:34:48,061 - print_capture - INFO - 


2025-06-13 07:34:48,061 - print_capture - INFO - 


2025-06-13 07:34:48,061 - print_capture - INFO - 


2025-06-13 07:34:48,061 - print_capture - INFO - 


2025-06-13 07:34:48,061 - print_capture - INFO - 


2025-06-13 07:34:48,061 - print_capture - INFO - 
        # --- LINE 1226 --- 
        # --- LINE 1226 --- 
2025-06-13 07:34:48,061 - print_capture - INFO -         # --- LINE 1226 --- 
        # --- LINE 1226 --- 
        # --- LINE 1226 --- 
2025-06-13 07:34:48,061 - print_capture - INFO -         # --- LINE 1226 --- 
        #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,061 - print_capture - INFO -         #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,061 - print_capture - INFO -         #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,061 - print_capture - INFO -         #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,061 - print_capture - INFO -         #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,061 - print_capture - INFO -         #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,061 - print_capture - INFO -         #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   del bool290
        #   del bool290
2025-06-13 07:34:48,061 - print_capture - INFO -         #   del bool290
        #   del bool290
        #   del bool290
2025-06-13 07:34:48,061 - print_capture - INFO -         #   del bool290
        #   del $288binary_subscr.37
        #   del $288binary_subscr.37
2025-06-13 07:34:48,061 - print_capture - INFO -         #   del $288binary_subscr.37
        #   del $288binary_subscr.37
        #   del $288binary_subscr.37
2025-06-13 07:34:48,061 - print_capture - INFO -         #   del $288binary_subscr.37
        #   branch $290pred, 302, 292
        #   branch $290pred, 302, 292
2025-06-13 07:34:48,061 - print_capture - INFO -         #   branch $290pred, 302, 292
        #   branch $290pred, 302, 292
        #   branch $290pred, 302, 292
2025-06-13 07:34:48,061 - print_capture - INFO -         #   branch $290pred, 302, 292


2025-06-13 07:34:48,061 - print_capture - INFO - 


2025-06-13 07:34:48,061 - print_capture - INFO - 
        if not peaks[n]:
        if not peaks[n]:
2025-06-13 07:34:48,061 - print_capture - INFO -         if not peaks[n]:
        if not peaks[n]:
        if not peaks[n]:
2025-06-13 07:34:48,061 - print_capture - INFO -         if not peaks[n]:


2025-06-13 07:34:48,061 - print_capture - INFO - 


2025-06-13 07:34:48,061 - print_capture - INFO - 
            # --- LINE 1227 --- 
            # --- LINE 1227 --- 
2025-06-13 07:34:48,061 - print_capture - INFO -             # --- LINE 1227 --- 
            # --- LINE 1227 --- 
            # --- LINE 1227 --- 
2025-06-13 07:34:48,061 - print_capture - INFO -             # --- LINE 1227 --- 
            # label 292
            # label 292
2025-06-13 07:34:48,061 - print_capture - INFO -             # label 292
            # label 292
            # label 292
2025-06-13 07:34:48,061 - print_capture - INFO -             # label 292
            #   del $290pred
            #   del $290pred
2025-06-13 07:34:48,061 - print_capture - INFO -             #   del $290pred
            #   del $290pred
            #   del $290pred
2025-06-13 07:34:48,061 - print_capture - INFO -             #   del $290pred
            #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,061 - print_capture - INFO -             #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,061 - print_capture - INFO -             #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
            #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:48,061 - print_capture - INFO -             #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:48,061 - print_capture - INFO -             #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   del n.7
            #   del n.7
2025-06-13 07:34:48,061 - print_capture - INFO -             #   del n.7
            #   del n.7
            #   del n.7
2025-06-13 07:34:48,062 - print_capture - INFO -             #   del n.7
            #   del $const294.1.3
            #   del $const294.1.3
2025-06-13 07:34:48,062 - print_capture - INFO -             #   del $const294.1.3
            #   del $const294.1.3
            #   del $const294.1.3
2025-06-13 07:34:48,062 - print_capture - INFO -             #   del $const294.1.3
            #   n.3 = $296inplace_add.2  :: int64
            #   n.3 = $296inplace_add.2  :: int64
2025-06-13 07:34:48,062 - print_capture - INFO -             #   n.3 = $296inplace_add.2  :: int64
            #   n.3 = $296inplace_add.2  :: int64
            #   n.3 = $296inplace_add.2  :: int64
2025-06-13 07:34:48,062 - print_capture - INFO -             #   n.3 = $296inplace_add.2  :: int64
            #   del $296inplace_add.2
            #   del $296inplace_add.2
2025-06-13 07:34:48,062 - print_capture - INFO -             #   del $296inplace_add.2
            #   del $296inplace_add.2
            #   del $296inplace_add.2
2025-06-13 07:34:48,062 - print_capture - INFO -             #   del $296inplace_add.2
            #   n.6 = n.3  :: int64
            #   n.6 = n.3  :: int64
2025-06-13 07:34:48,062 - print_capture - INFO -             #   n.6 = n.3  :: int64
            #   n.6 = n.3  :: int64
            #   n.6 = n.3  :: int64
2025-06-13 07:34:48,062 - print_capture - INFO -             #   n.6 = n.3  :: int64
            #   del n.3
            #   del n.3
2025-06-13 07:34:48,062 - print_capture - INFO -             #   del n.3
            #   del n.3
            #   del n.3
2025-06-13 07:34:48,062 - print_capture - INFO -             #   del n.3


2025-06-13 07:34:48,062 - print_capture - INFO - 


2025-06-13 07:34:48,062 - print_capture - INFO - 
            n += 1
            n += 1
2025-06-13 07:34:48,062 - print_capture - INFO -             n += 1
            n += 1
            n += 1
2025-06-13 07:34:48,062 - print_capture - INFO -             n += 1


2025-06-13 07:34:48,062 - print_capture - INFO - 


2025-06-13 07:34:48,062 - print_capture - INFO - 
            # --- LINE 1228 --- 
            # --- LINE 1228 --- 
2025-06-13 07:34:48,062 - print_capture - INFO -             # --- LINE 1228 --- 
            # --- LINE 1228 --- 
            # --- LINE 1228 --- 
2025-06-13 07:34:48,062 - print_capture - INFO -             # --- LINE 1228 --- 
            #   jump 333
            #   jump 333
2025-06-13 07:34:48,062 - print_capture - INFO -             #   jump 333
            #   jump 333
            #   jump 333
2025-06-13 07:34:48,062 - print_capture - INFO -             #   jump 333


2025-06-13 07:34:48,062 - print_capture - INFO - 


2025-06-13 07:34:48,062 - print_capture - INFO - 
            continue
            continue
2025-06-13 07:34:48,062 - print_capture - INFO -             continue
            continue
            continue
2025-06-13 07:34:48,062 - print_capture - INFO -             continue


2025-06-13 07:34:48,062 - print_capture - INFO - 


2025-06-13 07:34:48,062 - print_capture - INFO - 
# --- LINE 1229 --- 
# --- LINE 1229 --- 
2025-06-13 07:34:48,062 - print_capture - INFO - # --- LINE 1229 --- 
# --- LINE 1229 --- 
# --- LINE 1229 --- 
2025-06-13 07:34:48,062 - print_capture - INFO - # --- LINE 1229 --- 


2025-06-13 07:34:48,062 - print_capture - INFO - 


2025-06-13 07:34:48,062 - print_capture - INFO - 


2025-06-13 07:34:48,062 - print_capture - INFO - 


2025-06-13 07:34:48,062 - print_capture - INFO - 


2025-06-13 07:34:48,062 - print_capture - INFO - 


2025-06-13 07:34:48,062 - print_capture - INFO - 
        # --- LINE 1230 --- 
        # --- LINE 1230 --- 
2025-06-13 07:34:48,062 - print_capture - INFO -         # --- LINE 1230 --- 
        # --- LINE 1230 --- 
        # --- LINE 1230 --- 
2025-06-13 07:34:48,062 - print_capture - INFO -         # --- LINE 1230 --- 


2025-06-13 07:34:48,062 - print_capture - INFO - 


2025-06-13 07:34:48,062 - print_capture - INFO - 
        # Skip the next `wait` frames
        # Skip the next `wait` frames
2025-06-13 07:34:48,062 - print_capture - INFO -         # Skip the next `wait` frames
        # Skip the next `wait` frames
        # Skip the next `wait` frames
2025-06-13 07:34:48,062 - print_capture - INFO -         # Skip the next `wait` frames


2025-06-13 07:34:48,062 - print_capture - INFO - 


2025-06-13 07:34:48,062 - print_capture - INFO - 
        # --- LINE 1231 --- 
        # --- LINE 1231 --- 
2025-06-13 07:34:48,062 - print_capture - INFO -         # --- LINE 1231 --- 
        # --- LINE 1231 --- 
        # --- LINE 1231 --- 
2025-06-13 07:34:48,062 - print_capture - INFO -         # --- LINE 1231 --- 
        # label 302
        # label 302
2025-06-13 07:34:48,062 - print_capture - INFO -         # label 302
        # label 302
        # label 302
2025-06-13 07:34:48,062 - print_capture - INFO -         # label 302
        #   del $290pred
        #   del $290pred
2025-06-13 07:34:48,062 - print_capture - INFO -         #   del $290pred
        #   del $290pred
        #   del $290pred
2025-06-13 07:34:48,063 - print_capture - INFO -         #   del $290pred
        #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
        #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,063 - print_capture - INFO -         #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
        #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
        #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,063 - print_capture - INFO -         #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
        #   $308binary_add.3 = wait + $const306.2.3  :: int64
        #   $308binary_add.3 = wait + $const306.2.3  :: int64
2025-06-13 07:34:48,063 - print_capture - INFO -         #   $308binary_add.3 = wait + $const306.2.3  :: int64
        #   $308binary_add.3 = wait + $const306.2.3  :: int64
        #   $308binary_add.3 = wait + $const306.2.3  :: int64
2025-06-13 07:34:48,063 - print_capture - INFO -         #   $308binary_add.3 = wait + $const306.2.3  :: int64
        #   del $const306.2.3
        #   del $const306.2.3
2025-06-13 07:34:48,063 - print_capture - INFO -         #   del $const306.2.3
        #   del $const306.2.3
        #   del $const306.2.3
2025-06-13 07:34:48,063 - print_capture - INFO -         #   del $const306.2.3
        #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
        #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:48,063 - print_capture - INFO -         #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
        #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
        #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:48,063 - print_capture - INFO -         #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
        #   del $308binary_add.3
        #   del $308binary_add.3
2025-06-13 07:34:48,063 - print_capture - INFO -         #   del $308binary_add.3
        #   del $308binary_add.3
        #   del $308binary_add.3
2025-06-13 07:34:48,063 - print_capture - INFO -         #   del $308binary_add.3
        #   n.4 = $310inplace_add.4  :: int64
        #   n.4 = $310inplace_add.4  :: int64
2025-06-13 07:34:48,063 - print_capture - INFO -         #   n.4 = $310inplace_add.4  :: int64
        #   n.4 = $310inplace_add.4  :: int64
        #   n.4 = $310inplace_add.4  :: int64
2025-06-13 07:34:48,063 - print_capture - INFO -         #   n.4 = $310inplace_add.4  :: int64
        #   del $310inplace_add.4
        #   del $310inplace_add.4
2025-06-13 07:34:48,063 - print_capture - INFO -         #   del $310inplace_add.4
        #   del $310inplace_add.4
        #   del $310inplace_add.4
2025-06-13 07:34:48,063 - print_capture - INFO -         #   del $310inplace_add.4
        #   n.7 = n.4  :: int64
        #   n.7 = n.4  :: int64
2025-06-13 07:34:48,063 - print_capture - INFO -         #   n.7 = n.4  :: int64
        #   n.7 = n.4  :: int64
        #   n.7 = n.4  :: int64
2025-06-13 07:34:48,063 - print_capture - INFO -         #   n.7 = n.4  :: int64


2025-06-13 07:34:48,063 - print_capture - INFO - 


2025-06-13 07:34:48,063 - print_capture - INFO - 
        n += wait + 1
        n += wait + 1
2025-06-13 07:34:48,063 - print_capture - INFO -         n += wait + 1
        n += wait + 1
        n += wait + 1
2025-06-13 07:34:48,063 - print_capture - INFO -         n += wait + 1


2025-06-13 07:34:48,063 - print_capture - INFO - 


2025-06-13 07:34:48,063 - print_capture - INFO - 
label 0:
label 0:
2025-06-13 07:34:48,067 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:48,067 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:48,067 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:48,067 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    pre_max = arg(1, name=pre_max)           ['pre_max']
2025-06-13 07:34:48,067 - print_capture - INFO -     pre_max = arg(1, name=pre_max)           ['pre_max']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    pre_max = arg(1, name=pre_max)           ['pre_max']
2025-06-13 07:34:48,067 - print_capture - INFO -     pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    post_max = arg(2, name=post_max)         ['post_max']
2025-06-13 07:34:48,067 - print_capture - INFO -     post_max = arg(2, name=post_max)         ['post_max']
    post_max = arg(2, name=post_max)         ['post_max']
    post_max = arg(2, name=post_max)         ['post_max']
2025-06-13 07:34:48,067 - print_capture - INFO -     post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
2025-06-13 07:34:48,068 - print_capture - INFO -     pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
2025-06-13 07:34:48,068 - print_capture - INFO -     pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
2025-06-13 07:34:48,068 - print_capture - INFO -     post_avg = arg(4, name=post_avg)         ['post_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
2025-06-13 07:34:48,068 - print_capture - INFO -     post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    delta = arg(5, name=delta)               ['delta']
2025-06-13 07:34:48,068 - print_capture - INFO -     delta = arg(5, name=delta)               ['delta']
    delta = arg(5, name=delta)               ['delta']
    delta = arg(5, name=delta)               ['delta']
2025-06-13 07:34:48,068 - print_capture - INFO -     delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    wait = arg(6, name=wait)                 ['wait']
2025-06-13 07:34:48,068 - print_capture - INFO -     wait = arg(6, name=wait)                 ['wait']
    wait = arg(6, name=wait)                 ['wait']
    wait = arg(6, name=wait)                 ['wait']
2025-06-13 07:34:48,068 - print_capture - INFO -     wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    peaks = arg(7, name=peaks)               ['peaks']
2025-06-13 07:34:48,068 - print_capture - INFO -     peaks = arg(7, name=peaks)               ['peaks']
    peaks = arg(7, name=peaks)               ['peaks']
    peaks = arg(7, name=peaks)               ['peaks']
2025-06-13 07:34:48,068 - print_capture - INFO -     peaks = arg(7, name=peaks)               ['peaks']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:34:48,068 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:34:48,068 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:34:48,068 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:34:48,068 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
2025-06-13 07:34:48,068 - print_capture - INFO -     $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
2025-06-13 07:34:48,068 - print_capture - INFO -     $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
2025-06-13 07:34:48,068 - print_capture - INFO -     $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
2025-06-13 07:34:48,068 - print_capture - INFO -     $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
    $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
2025-06-13 07:34:48,068 - print_capture - INFO -     $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
    $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
    $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
2025-06-13 07:34:48,068 - print_capture - INFO -     $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
2025-06-13 07:34:48,068 - print_capture - INFO -     $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
2025-06-13 07:34:48,068 - print_capture - INFO -     $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
2025-06-13 07:34:48,068 - print_capture - INFO -     $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
2025-06-13 07:34:48,068 - print_capture - INFO -     $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $const24.11.1 = const(int, 0)            ['$const24.11.1']
    $const24.11.1 = const(int, 0)            ['$const24.11.1']
2025-06-13 07:34:48,068 - print_capture - INFO -     $const24.11.1 = const(int, 0)            ['$const24.11.1']
    $const24.11.1 = const(int, 0)            ['$const24.11.1']
    $const24.11.1 = const(int, 0)            ['$const24.11.1']
2025-06-13 07:34:48,068 - print_capture - INFO -     $const24.11.1 = const(int, 0)            ['$const24.11.1']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
2025-06-13 07:34:48,068 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
2025-06-13 07:34:48,068 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
2025-06-13 07:34:48,068 - print_capture - INFO -     $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
2025-06-13 07:34:48,068 - print_capture - INFO -     $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
2025-06-13 07:34:48,068 - print_capture - INFO -     $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
2025-06-13 07:34:48,068 - print_capture - INFO -     $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
    $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
2025-06-13 07:34:48,068 - print_capture - INFO -     $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
    $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
    $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
2025-06-13 07:34:48,068 - print_capture - INFO -     $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
2025-06-13 07:34:48,068 - print_capture - INFO -     $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
2025-06-13 07:34:48,068 - print_capture - INFO -     $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
2025-06-13 07:34:48,068 - print_capture - INFO -     $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
2025-06-13 07:34:48,068 - print_capture - INFO -     $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
2025-06-13 07:34:48,069 - print_capture - INFO -     $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
2025-06-13 07:34:48,069 - print_capture - INFO -     $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $const40.20.1 = const(int, 0)            ['$const40.20.1']
    $const40.20.1 = const(int, 0)            ['$const40.20.1']
2025-06-13 07:34:48,069 - print_capture - INFO -     $const40.20.1 = const(int, 0)            ['$const40.20.1']
    $const40.20.1 = const(int, 0)            ['$const40.20.1']
    $const40.20.1 = const(int, 0)            ['$const40.20.1']
2025-06-13 07:34:48,069 - print_capture - INFO -     $const40.20.1 = const(int, 0)            ['$const40.20.1']
    peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
    peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
2025-06-13 07:34:48,069 - print_capture - INFO -     peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
    peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
    peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
2025-06-13 07:34:48,069 - print_capture - INFO -     peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
    $const46.22.1 = const(int, 0)            ['$const46.22.1']
    $const46.22.1 = const(int, 0)            ['$const46.22.1']
2025-06-13 07:34:48,069 - print_capture - INFO -     $const46.22.1 = const(int, 0)            ['$const46.22.1']
    $const46.22.1 = const(int, 0)            ['$const46.22.1']
    $const46.22.1 = const(int, 0)            ['$const46.22.1']
2025-06-13 07:34:48,069 - print_capture - INFO -     $const46.22.1 = const(int, 0)            ['$const46.22.1']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
2025-06-13 07:34:48,069 - print_capture - INFO -     $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
2025-06-13 07:34:48,069 - print_capture - INFO -     $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
    $const54.27.1 = const(int, 0)            ['$const54.27.1']
    $const54.27.1 = const(int, 0)            ['$const54.27.1']
2025-06-13 07:34:48,069 - print_capture - INFO -     $const54.27.1 = const(int, 0)            ['$const54.27.1']
    $const54.27.1 = const(int, 0)            ['$const54.27.1']
    $const54.27.1 = const(int, 0)            ['$const54.27.1']
2025-06-13 07:34:48,069 - print_capture - INFO -     $const54.27.1 = const(int, 0)            ['$const54.27.1']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
2025-06-13 07:34:48,069 - print_capture - INFO -     $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
2025-06-13 07:34:48,069 - print_capture - INFO -     $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
    $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
2025-06-13 07:34:48,069 - print_capture - INFO -     $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
2025-06-13 07:34:48,069 - print_capture - INFO -     $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
2025-06-13 07:34:48,069 - print_capture - INFO -     $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
2025-06-13 07:34:48,069 - print_capture - INFO -     $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
    $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
2025-06-13 07:34:48,069 - print_capture - INFO -     $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
    $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
    $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
2025-06-13 07:34:48,069 - print_capture - INFO -     $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
2025-06-13 07:34:48,069 - print_capture - INFO -     $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
2025-06-13 07:34:48,069 - print_capture - INFO -     $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
2025-06-13 07:34:48,069 - print_capture - INFO -     $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
2025-06-13 07:34:48,069 - print_capture - INFO -     $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $const74.37.1 = const(int, 0)            ['$const74.37.1']
    $const74.37.1 = const(int, 0)            ['$const74.37.1']
2025-06-13 07:34:48,069 - print_capture - INFO -     $const74.37.1 = const(int, 0)            ['$const74.37.1']
    $const74.37.1 = const(int, 0)            ['$const74.37.1']
    $const74.37.1 = const(int, 0)            ['$const74.37.1']
2025-06-13 07:34:48,069 - print_capture - INFO -     $const74.37.1 = const(int, 0)            ['$const74.37.1']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
2025-06-13 07:34:48,069 - print_capture - INFO -     $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
2025-06-13 07:34:48,069 - print_capture - INFO -     $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
2025-06-13 07:34:48,069 - print_capture - INFO -     $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
2025-06-13 07:34:48,069 - print_capture - INFO -     $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
2025-06-13 07:34:48,069 - print_capture - INFO -     $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
2025-06-13 07:34:48,069 - print_capture - INFO -     $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
    $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
2025-06-13 07:34:48,069 - print_capture - INFO -     $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
    $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
    $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
2025-06-13 07:34:48,069 - print_capture - INFO -     $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
2025-06-13 07:34:48,069 - print_capture - INFO -     $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
2025-06-13 07:34:48,069 - print_capture - INFO -     $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
2025-06-13 07:34:48,069 - print_capture - INFO -     $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
2025-06-13 07:34:48,069 - print_capture - INFO -     $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
2025-06-13 07:34:48,070 - print_capture - INFO -     $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
2025-06-13 07:34:48,070 - print_capture - INFO -     $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
2025-06-13 07:34:48,070 - print_capture - INFO -     $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
2025-06-13 07:34:48,070 - print_capture - INFO -     $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
2025-06-13 07:34:48,070 - print_capture - INFO -     $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
2025-06-13 07:34:48,070 - print_capture - INFO -     $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
    peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
2025-06-13 07:34:48,070 - print_capture - INFO -     peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
    peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
    peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
2025-06-13 07:34:48,070 - print_capture - INFO -     peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
    $const100.49.1 = const(int, 0)           ['$const100.49.1']
    $const100.49.1 = const(int, 0)           ['$const100.49.1']
2025-06-13 07:34:48,070 - print_capture - INFO -     $const100.49.1 = const(int, 0)           ['$const100.49.1']
    $const100.49.1 = const(int, 0)           ['$const100.49.1']
    $const100.49.1 = const(int, 0)           ['$const100.49.1']
2025-06-13 07:34:48,070 - print_capture - INFO -     $const100.49.1 = const(int, 0)           ['$const100.49.1']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
2025-06-13 07:34:48,070 - print_capture - INFO -     $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
2025-06-13 07:34:48,070 - print_capture - INFO -     $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
2025-06-13 07:34:48,070 - print_capture - INFO -     bool104 = global(bool: <class 'bool'>)   ['bool104']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
2025-06-13 07:34:48,070 - print_capture - INFO -     bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
2025-06-13 07:34:48,070 - print_capture - INFO -     $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
2025-06-13 07:34:48,070 - print_capture - INFO -     $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    branch $104pred, 106, 116                ['$104pred']
    branch $104pred, 106, 116                ['$104pred']
2025-06-13 07:34:48,070 - print_capture - INFO -     branch $104pred, 106, 116                ['$104pred']
    branch $104pred, 106, 116                ['$104pred']
    branch $104pred, 106, 116                ['$104pred']
2025-06-13 07:34:48,070 - print_capture - INFO -     branch $104pred, 106, 116                ['$104pred']
label 106:
label 106:
2025-06-13 07:34:48,070 - print_capture - INFO - label 106:
label 106:
label 106:
2025-06-13 07:34:48,070 - print_capture - INFO - label 106:
    $const108.1.3 = const(int, 1)            ['$const108.1.3']
    $const108.1.3 = const(int, 1)            ['$const108.1.3']
2025-06-13 07:34:48,070 - print_capture - INFO -     $const108.1.3 = const(int, 1)            ['$const108.1.3']
    $const108.1.3 = const(int, 1)            ['$const108.1.3']
    $const108.1.3 = const(int, 1)            ['$const108.1.3']
2025-06-13 07:34:48,070 - print_capture - INFO -     $const108.1.3 = const(int, 1)            ['$const108.1.3']
    n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
    n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
2025-06-13 07:34:48,070 - print_capture - INFO -     n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
    n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
    n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
2025-06-13 07:34:48,070 - print_capture - INFO -     n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:48,070 - print_capture - INFO -     jump 120                                 []
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:48,070 - print_capture - INFO -     jump 120                                 []
label 116:
label 116:
2025-06-13 07:34:48,070 - print_capture - INFO - label 116:
label 116:
label 116:
2025-06-13 07:34:48,070 - print_capture - INFO - label 116:
    n = const(int, 1)                        ['n']
    n = const(int, 1)                        ['n']
2025-06-13 07:34:48,070 - print_capture - INFO -     n = const(int, 1)                        ['n']
    n = const(int, 1)                        ['n']
    n = const(int, 1)                        ['n']
2025-06-13 07:34:48,070 - print_capture - INFO -     n = const(int, 1)                        ['n']
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:48,070 - print_capture - INFO -     jump 120                                 []
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:48,070 - print_capture - INFO -     jump 120                                 []
label 120:
label 120:
2025-06-13 07:34:48,070 - print_capture - INFO - label 120:
label 120:
label 120:
2025-06-13 07:34:48,070 - print_capture - INFO - label 120:
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
2025-06-13 07:34:48,070 - print_capture - INFO -     $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
2025-06-13 07:34:48,070 - print_capture - INFO -     $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $const126.3.1 = const(int, 0)            ['$const126.3.1']
    $const126.3.1 = const(int, 0)            ['$const126.3.1']
2025-06-13 07:34:48,070 - print_capture - INFO -     $const126.3.1 = const(int, 0)            ['$const126.3.1']
    $const126.3.1 = const(int, 0)            ['$const126.3.1']
    $const126.3.1 = const(int, 0)            ['$const126.3.1']
2025-06-13 07:34:48,070 - print_capture - INFO -     $const126.3.1 = const(int, 0)            ['$const126.3.1']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
2025-06-13 07:34:48,070 - print_capture - INFO -     $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
2025-06-13 07:34:48,070 - print_capture - INFO -     $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
2025-06-13 07:34:48,071 - print_capture - INFO -     $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
2025-06-13 07:34:48,071 - print_capture - INFO -     $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
2025-06-13 07:34:48,071 - print_capture - INFO -     bool132 = global(bool: <class 'bool'>)   ['bool132']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
2025-06-13 07:34:48,071 - print_capture - INFO -     bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
2025-06-13 07:34:48,071 - print_capture - INFO -     $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
2025-06-13 07:34:48,071 - print_capture - INFO -     $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    branch $132pred, 134, 332                ['$132pred']
    branch $132pred, 134, 332                ['$132pred']
2025-06-13 07:34:48,071 - print_capture - INFO -     branch $132pred, 134, 332                ['$132pred']
    branch $132pred, 134, 332                ['$132pred']
    branch $132pred, 134, 332                ['$132pred']
2025-06-13 07:34:48,270 - print_capture - INFO -     branch $132pred, 134, 332                ['$132pred']
label 134:
label 134:
2025-06-13 07:34:48,270 - print_capture - INFO - label 134:
label 134:
label 134:
2025-06-13 07:34:48,271 - print_capture - INFO - label 134:
    $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
2025-06-13 07:34:48,271 - print_capture - INFO -     $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
2025-06-13 07:34:48,271 - print_capture - INFO -     $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
2025-06-13 07:34:48,271 - print_capture - INFO -     $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
2025-06-13 07:34:48,271 - print_capture - INFO -     $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
2025-06-13 07:34:48,271 - print_capture - INFO -     $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
2025-06-13 07:34:48,271 - print_capture - INFO -     $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $const142.4.1 = const(int, 0)            ['$const142.4.1']
    $const142.4.1 = const(int, 0)            ['$const142.4.1']
2025-06-13 07:34:48,271 - print_capture - INFO -     $const142.4.1 = const(int, 0)            ['$const142.4.1']
    $const142.4.1 = const(int, 0)            ['$const142.4.1']
    $const142.4.1 = const(int, 0)            ['$const142.4.1']
2025-06-13 07:34:48,271 - print_capture - INFO -     $const142.4.1 = const(int, 0)            ['$const142.4.1']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
2025-06-13 07:34:48,271 - print_capture - INFO -     $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
2025-06-13 07:34:48,272 - print_capture - INFO -     $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
    $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
2025-06-13 07:34:48,272 - print_capture - INFO -     $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
    $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
    $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
2025-06-13 07:34:48,272 - print_capture - INFO -     $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
2025-06-13 07:34:48,272 - print_capture - INFO -     $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
2025-06-13 07:34:48,272 - print_capture - INFO -     $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
2025-06-13 07:34:48,272 - print_capture - INFO -     $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
2025-06-13 07:34:48,272 - print_capture - INFO -     $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
2025-06-13 07:34:48,272 - print_capture - INFO -     $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
2025-06-13 07:34:48,272 - print_capture - INFO -     $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $const164.15.1 = const(int, 0)           ['$const164.15.1']
    $const164.15.1 = const(int, 0)           ['$const164.15.1']
2025-06-13 07:34:48,272 - print_capture - INFO -     $const164.15.1 = const(int, 0)           ['$const164.15.1']
    $const164.15.1 = const(int, 0)           ['$const164.15.1']
    $const164.15.1 = const(int, 0)           ['$const164.15.1']
2025-06-13 07:34:48,272 - print_capture - INFO -     $const164.15.1 = const(int, 0)           ['$const164.15.1']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
2025-06-13 07:34:48,272 - print_capture - INFO -     $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
2025-06-13 07:34:48,272 - print_capture - INFO -     $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
2025-06-13 07:34:48,272 - print_capture - INFO -     $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
2025-06-13 07:34:48,273 - print_capture - INFO -     $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
2025-06-13 07:34:48,273 - print_capture - INFO -     $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
2025-06-13 07:34:48,273 - print_capture - INFO -     $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
2025-06-13 07:34:48,273 - print_capture - INFO -     $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
2025-06-13 07:34:48,273 - print_capture - INFO -     $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
2025-06-13 07:34:48,273 - print_capture - INFO -     $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
2025-06-13 07:34:48,273 - print_capture - INFO -     $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
2025-06-13 07:34:48,273 - print_capture - INFO -     maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
2025-06-13 07:34:48,273 - print_capture - INFO -     maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
2025-06-13 07:34:48,273 - print_capture - INFO -     $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
2025-06-13 07:34:48,273 - print_capture - INFO -     $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
2025-06-13 07:34:48,273 - print_capture - INFO -     $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
2025-06-13 07:34:48,273 - print_capture - INFO -     $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
2025-06-13 07:34:48,273 - print_capture - INFO -     peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
2025-06-13 07:34:48,273 - print_capture - INFO -     peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
2025-06-13 07:34:48,274 - print_capture - INFO -     $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
2025-06-13 07:34:48,274 - print_capture - INFO -     $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
2025-06-13 07:34:48,274 - print_capture - INFO -     bool200 = global(bool: <class 'bool'>)   ['bool200']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
2025-06-13 07:34:48,274 - print_capture - INFO -     bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
2025-06-13 07:34:48,274 - print_capture - INFO -     $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
2025-06-13 07:34:48,274 - print_capture - INFO -     $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    branch $200pred, 212, 202                ['$200pred']
    branch $200pred, 212, 202                ['$200pred']
2025-06-13 07:34:48,274 - print_capture - INFO -     branch $200pred, 212, 202                ['$200pred']
    branch $200pred, 212, 202                ['$200pred']
    branch $200pred, 212, 202                ['$200pred']
2025-06-13 07:34:48,274 - print_capture - INFO -     branch $200pred, 212, 202                ['$200pred']
label 202:
label 202:
2025-06-13 07:34:48,274 - print_capture - INFO - label 202:
label 202:
label 202:
2025-06-13 07:34:48,274 - print_capture - INFO - label 202:
    $const204.1.3 = const(int, 1)            ['$const204.1.3']
    $const204.1.3 = const(int, 1)            ['$const204.1.3']
2025-06-13 07:34:48,274 - print_capture - INFO -     $const204.1.3 = const(int, 1)            ['$const204.1.3']
    $const204.1.3 = const(int, 1)            ['$const204.1.3']
    $const204.1.3 = const(int, 1)            ['$const204.1.3']
2025-06-13 07:34:48,274 - print_capture - INFO -     $const204.1.3 = const(int, 1)            ['$const204.1.3']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
2025-06-13 07:34:48,274 - print_capture - INFO -     $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
2025-06-13 07:34:48,274 - print_capture - INFO -     $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
2025-06-13 07:34:48,274 - print_capture - INFO -     n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
2025-06-13 07:34:48,274 - print_capture - INFO -     n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:48,274 - print_capture - INFO -     jump 120                                 []
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:48,274 - print_capture - INFO -     jump 120                                 []
label 212:
label 212:
2025-06-13 07:34:48,274 - print_capture - INFO - label 212:
label 212:
label 212:
2025-06-13 07:34:48,274 - print_capture - INFO - label 212:
    $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
2025-06-13 07:34:48,274 - print_capture - INFO -     $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
2025-06-13 07:34:48,275 - print_capture - INFO -     $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
2025-06-13 07:34:48,275 - print_capture - INFO -     $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
2025-06-13 07:34:48,275 - print_capture - INFO -     $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
2025-06-13 07:34:48,275 - print_capture - INFO -     $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
2025-06-13 07:34:48,275 - print_capture - INFO -     $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $const220.4.1 = const(int, 0)            ['$const220.4.1']
    $const220.4.1 = const(int, 0)            ['$const220.4.1']
2025-06-13 07:34:48,275 - print_capture - INFO -     $const220.4.1 = const(int, 0)            ['$const220.4.1']
    $const220.4.1 = const(int, 0)            ['$const220.4.1']
    $const220.4.1 = const(int, 0)            ['$const220.4.1']
2025-06-13 07:34:48,275 - print_capture - INFO -     $const220.4.1 = const(int, 0)            ['$const220.4.1']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
2025-06-13 07:34:48,275 - print_capture - INFO -     $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
2025-06-13 07:34:48,275 - print_capture - INFO -     $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
    $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
2025-06-13 07:34:48,275 - print_capture - INFO -     $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
    $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
    $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
2025-06-13 07:34:48,275 - print_capture - INFO -     $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
2025-06-13 07:34:48,275 - print_capture - INFO -     $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
2025-06-13 07:34:48,275 - print_capture - INFO -     $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
2025-06-13 07:34:48,275 - print_capture - INFO -     $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
2025-06-13 07:34:48,275 - print_capture - INFO -     $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
2025-06-13 07:34:48,275 - print_capture - INFO -     $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
2025-06-13 07:34:48,275 - print_capture - INFO -     $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $const242.15.1 = const(int, 0)           ['$const242.15.1']
    $const242.15.1 = const(int, 0)           ['$const242.15.1']
2025-06-13 07:34:48,275 - print_capture - INFO -     $const242.15.1 = const(int, 0)           ['$const242.15.1']
    $const242.15.1 = const(int, 0)           ['$const242.15.1']
    $const242.15.1 = const(int, 0)           ['$const242.15.1']
2025-06-13 07:34:48,275 - print_capture - INFO -     $const242.15.1 = const(int, 0)           ['$const242.15.1']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
2025-06-13 07:34:48,275 - print_capture - INFO -     $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
2025-06-13 07:34:48,275 - print_capture - INFO -     $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
2025-06-13 07:34:48,275 - print_capture - INFO -     $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
2025-06-13 07:34:48,275 - print_capture - INFO -     $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
2025-06-13 07:34:48,276 - print_capture - INFO -     $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
2025-06-13 07:34:48,276 - print_capture - INFO -     $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
2025-06-13 07:34:48,276 - print_capture - INFO -     $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
2025-06-13 07:34:48,276 - print_capture - INFO -     $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
2025-06-13 07:34:48,276 - print_capture - INFO -     $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
2025-06-13 07:34:48,276 - print_capture - INFO -     $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
2025-06-13 07:34:48,276 - print_capture - INFO -     avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
2025-06-13 07:34:48,276 - print_capture - INFO -     avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
2025-06-13 07:34:48,276 - print_capture - INFO -     $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
2025-06-13 07:34:48,276 - print_capture - INFO -     $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
2025-06-13 07:34:48,276 - print_capture - INFO -     $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
2025-06-13 07:34:48,276 - print_capture - INFO -     $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
2025-06-13 07:34:48,276 - print_capture - INFO -     $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
2025-06-13 07:34:48,276 - print_capture - INFO -     $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
2025-06-13 07:34:48,276 - print_capture - INFO -     $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
2025-06-13 07:34:48,276 - print_capture - INFO -     $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
2025-06-13 07:34:48,276 - print_capture - INFO -     $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
2025-06-13 07:34:48,276 - print_capture - INFO -     $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
2025-06-13 07:34:48,276 - print_capture - INFO -     peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
2025-06-13 07:34:48,276 - print_capture - INFO -     peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
2025-06-13 07:34:48,276 - print_capture - INFO -     $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
2025-06-13 07:34:48,276 - print_capture - INFO -     $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
2025-06-13 07:34:48,276 - print_capture - INFO -     bool290 = global(bool: <class 'bool'>)   ['bool290']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
2025-06-13 07:34:48,276 - print_capture - INFO -     bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
2025-06-13 07:34:48,276 - print_capture - INFO -     $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
2025-06-13 07:34:48,276 - print_capture - INFO -     $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    branch $290pred, 302, 292                ['$290pred']
    branch $290pred, 302, 292                ['$290pred']
2025-06-13 07:34:48,277 - print_capture - INFO -     branch $290pred, 302, 292                ['$290pred']
    branch $290pred, 302, 292                ['$290pred']
    branch $290pred, 302, 292                ['$290pred']
2025-06-13 07:34:48,277 - print_capture - INFO -     branch $290pred, 302, 292                ['$290pred']
label 292:
label 292:
2025-06-13 07:34:48,277 - print_capture - INFO - label 292:
label 292:
label 292:
2025-06-13 07:34:48,277 - print_capture - INFO - label 292:
    $const294.1.3 = const(int, 1)            ['$const294.1.3']
    $const294.1.3 = const(int, 1)            ['$const294.1.3']
2025-06-13 07:34:48,277 - print_capture - INFO -     $const294.1.3 = const(int, 1)            ['$const294.1.3']
    $const294.1.3 = const(int, 1)            ['$const294.1.3']
    $const294.1.3 = const(int, 1)            ['$const294.1.3']
2025-06-13 07:34:48,277 - print_capture - INFO -     $const294.1.3 = const(int, 1)            ['$const294.1.3']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
2025-06-13 07:34:48,277 - print_capture - INFO -     $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
2025-06-13 07:34:48,277 - print_capture - INFO -     $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
2025-06-13 07:34:48,277 - print_capture - INFO -     n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
2025-06-13 07:34:48,277 - print_capture - INFO -     n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:48,277 - print_capture - INFO -     jump 120                                 []
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:48,277 - print_capture - INFO -     jump 120                                 []
label 302:
label 302:
2025-06-13 07:34:48,277 - print_capture - INFO - label 302:
label 302:
label 302:
2025-06-13 07:34:48,277 - print_capture - INFO - label 302:
    $const306.2.3 = const(int, 1)            ['$const306.2.3']
    $const306.2.3 = const(int, 1)            ['$const306.2.3']
2025-06-13 07:34:48,277 - print_capture - INFO -     $const306.2.3 = const(int, 1)            ['$const306.2.3']
    $const306.2.3 = const(int, 1)            ['$const306.2.3']
    $const306.2.3 = const(int, 1)            ['$const306.2.3']
2025-06-13 07:34:48,277 - print_capture - INFO -     $const306.2.3 = const(int, 1)            ['$const306.2.3']
    $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
    $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
2025-06-13 07:34:48,277 - print_capture - INFO -     $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
    $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
    $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
2025-06-13 07:34:48,277 - print_capture - INFO -     $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
2025-06-13 07:34:48,277 - print_capture - INFO -     $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
2025-06-13 07:34:48,277 - print_capture - INFO -     $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
2025-06-13 07:34:48,277 - print_capture - INFO -     n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
2025-06-13 07:34:48,277 - print_capture - INFO -     n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
2025-06-13 07:34:48,277 - print_capture - INFO -     $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
2025-06-13 07:34:48,277 - print_capture - INFO -     $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $const320.8.1 = const(int, 0)            ['$const320.8.1']
    $const320.8.1 = const(int, 0)            ['$const320.8.1']
2025-06-13 07:34:48,277 - print_capture - INFO -     $const320.8.1 = const(int, 0)            ['$const320.8.1']
    $const320.8.1 = const(int, 0)            ['$const320.8.1']
    $const320.8.1 = const(int, 0)            ['$const320.8.1']
2025-06-13 07:34:48,277 - print_capture - INFO -     $const320.8.1 = const(int, 0)            ['$const320.8.1']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
2025-06-13 07:34:48,277 - print_capture - INFO -     $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
2025-06-13 07:34:48,277 - print_capture - INFO -     $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
2025-06-13 07:34:48,277 - print_capture - INFO -     $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
2025-06-13 07:34:48,277 - print_capture - INFO -     $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
2025-06-13 07:34:48,277 - print_capture - INFO -     bool326 = global(bool: <class 'bool'>)   ['bool326']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
2025-06-13 07:34:48,277 - print_capture - INFO -     bool326 = global(bool: <class 'bool'>)   ['bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
2025-06-13 07:34:48,277 - print_capture - INFO -     $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
2025-06-13 07:34:48,277 - print_capture - INFO -     $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    branch $326pred, 134, 328                ['$326pred']
    branch $326pred, 134, 328                ['$326pred']
2025-06-13 07:34:48,277 - print_capture - INFO -     branch $326pred, 134, 328                ['$326pred']
    branch $326pred, 134, 328                ['$326pred']
    branch $326pred, 134, 328                ['$326pred']
2025-06-13 07:34:48,277 - print_capture - INFO -     branch $326pred, 134, 328                ['$326pred']
label 328:
label 328:
2025-06-13 07:34:48,277 - print_capture - INFO - label 328:
label 328:
label 328:
2025-06-13 07:34:48,277 - print_capture - INFO - label 328:
    $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
    $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
2025-06-13 07:34:48,277 - print_capture - INFO -     $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
    $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
    $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
2025-06-13 07:34:48,277 - print_capture - INFO -     $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
    $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
    $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
2025-06-13 07:34:48,277 - print_capture - INFO -     $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
    $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
    $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
2025-06-13 07:34:48,278 - print_capture - INFO -     $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
    return $330return_value.1                ['$330return_value.1']
    return $330return_value.1                ['$330return_value.1']
2025-06-13 07:34:48,278 - print_capture - INFO -     return $330return_value.1                ['$330return_value.1']
    return $330return_value.1                ['$330return_value.1']
    return $330return_value.1                ['$330return_value.1']
2025-06-13 07:34:48,278 - print_capture - INFO -     return $330return_value.1                ['$330return_value.1']
label 332:
label 332:
2025-06-13 07:34:48,278 - print_capture - INFO - label 332:
label 332:
label 332:
2025-06-13 07:34:48,278 - print_capture - INFO - label 332:
    $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
    $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
2025-06-13 07:34:48,278 - print_capture - INFO -     $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
    $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
    $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
2025-06-13 07:34:48,278 - print_capture - INFO -     $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
    $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
    $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
2025-06-13 07:34:48,278 - print_capture - INFO -     $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
    $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
    $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
2025-06-13 07:34:48,278 - print_capture - INFO -     $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
    return $334return_value.1                ['$334return_value.1']
    return $334return_value.1                ['$334return_value.1']
2025-06-13 07:34:48,278 - print_capture - INFO -     return $334return_value.1                ['$334return_value.1']
    return $334return_value.1                ['$334return_value.1']
    return $334return_value.1                ['$334return_value.1']
2025-06-13 07:34:48,278 - print_capture - INFO -     return $334return_value.1                ['$334return_value.1']
label 0:
label 0:
2025-06-13 07:34:48,290 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:48,291 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,291 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,291 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
2025-06-13 07:34:48,291 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
2025-06-13 07:34:48,291 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $const6.2.1 = const(int, 0)              ['$const6.2.1']
    $const6.2.1 = const(int, 0)              ['$const6.2.1']
2025-06-13 07:34:48,291 - print_capture - INFO -     $const6.2.1 = const(int, 0)              ['$const6.2.1']
    $const6.2.1 = const(int, 0)              ['$const6.2.1']
    $const6.2.1 = const(int, 0)              ['$const6.2.1']
2025-06-13 07:34:48,291 - print_capture - INFO -     $const6.2.1 = const(int, 0)              ['$const6.2.1']
    $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
    $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
2025-06-13 07:34:48,291 - print_capture - INFO -     $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
    $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
    $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
2025-06-13 07:34:48,291 - print_capture - INFO -     $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
2025-06-13 07:34:48,291 - print_capture - INFO -     bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
2025-06-13 07:34:48,291 - print_capture - INFO -     bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
2025-06-13 07:34:48,291 - print_capture - INFO -     $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
2025-06-13 07:34:48,291 - print_capture - INFO -     $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 20                   ['$10pred']
    branch $10pred, 12, 20                   ['$10pred']
2025-06-13 07:34:48,291 - print_capture - INFO -     branch $10pred, 12, 20                   ['$10pred']
    branch $10pred, 12, 20                   ['$10pred']
    branch $10pred, 12, 20                   ['$10pred']
2025-06-13 07:34:48,291 - print_capture - INFO -     branch $10pred, 12, 20                   ['$10pred']
label 12:
label 12:
2025-06-13 07:34:48,291 - print_capture - INFO - label 12:
label 12:
label 12:
2025-06-13 07:34:48,291 - print_capture - INFO - label 12:
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
2025-06-13 07:34:48,291 - print_capture - INFO -     $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
2025-06-13 07:34:48,291 - print_capture - INFO -     $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
    $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
2025-06-13 07:34:48,291 - print_capture - INFO -     $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
    $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
    $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
2025-06-13 07:34:48,291 - print_capture - INFO -     $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
    $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
    $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
2025-06-13 07:34:48,291 - print_capture - INFO -     $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
    $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
    $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
2025-06-13 07:34:48,291 - print_capture - INFO -     $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
    raise $16call_function.2                 ['$16call_function.2']
    raise $16call_function.2                 ['$16call_function.2']
2025-06-13 07:34:48,291 - print_capture - INFO -     raise $16call_function.2                 ['$16call_function.2']
    raise $16call_function.2                 ['$16call_function.2']
    raise $16call_function.2                 ['$16call_function.2']
2025-06-13 07:34:48,291 - print_capture - INFO -     raise $16call_function.2                 ['$16call_function.2']
label 20:
label 20:
2025-06-13 07:34:48,291 - print_capture - INFO - label 20:
label 20:
label 20:
2025-06-13 07:34:48,291 - print_capture - INFO - label 20:
    $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
2025-06-13 07:34:48,291 - print_capture - INFO -     $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
2025-06-13 07:34:48,291 - print_capture - INFO -     $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
2025-06-13 07:34:48,291 - print_capture - INFO -     $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
2025-06-13 07:34:48,291 - print_capture - INFO -     $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
2025-06-13 07:34:48,291 - print_capture - INFO -     it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
2025-06-13 07:34:48,291 - print_capture - INFO -     it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
2025-06-13 07:34:48,291 - print_capture - INFO -     $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
2025-06-13 07:34:48,291 - print_capture - INFO -     $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
2025-06-13 07:34:48,291 - print_capture - INFO -     $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
2025-06-13 07:34:48,291 - print_capture - INFO -     $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
2025-06-13 07:34:48,292 - print_capture - INFO -     $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
2025-06-13 07:34:48,292 - print_capture - INFO -     $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $const38.8.1 = const(int, 0)             ['$const38.8.1']
    $const38.8.1 = const(int, 0)             ['$const38.8.1']
2025-06-13 07:34:48,292 - print_capture - INFO -     $const38.8.1 = const(int, 0)             ['$const38.8.1']
    $const38.8.1 = const(int, 0)             ['$const38.8.1']
    $const38.8.1 = const(int, 0)             ['$const38.8.1']
2025-06-13 07:34:48,292 - print_capture - INFO -     $const38.8.1 = const(int, 0)             ['$const38.8.1']
    max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
    max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
2025-06-13 07:34:48,292 - print_capture - INFO -     max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
    max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
    max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
2025-06-13 07:34:48,292 - print_capture - INFO -     max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
    $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>) ['$44load_deref.10']
    $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>) ['$44load_deref.10']
2025-06-13 07:34:48,292 - print_capture - INFO -     $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>) ['$44load_deref.10']
    $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>) ['$44load_deref.10']
    $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>) ['$44load_deref.10']
2025-06-13 07:34:48,292 - print_capture - INFO -     $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>) ['$44load_deref.10']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
2025-06-13 07:34:48,292 - print_capture - INFO -     $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
2025-06-13 07:34:48,292 - print_capture - INFO -     $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
2025-06-13 07:34:48,292 - print_capture - INFO -     bool50 = global(bool: <class 'bool'>)    ['bool50']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
2025-06-13 07:34:48,292 - print_capture - INFO -     bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
2025-06-13 07:34:48,292 - print_capture - INFO -     $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
2025-06-13 07:34:48,292 - print_capture - INFO -     $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    branch $50pred, 52, 56                   ['$50pred']
    branch $50pred, 52, 56                   ['$50pred']
2025-06-13 07:34:48,292 - print_capture - INFO -     branch $50pred, 52, 56                   ['$50pred']
    branch $50pred, 52, 56                   ['$50pred']
    branch $50pred, 52, 56                   ['$50pred']
2025-06-13 07:34:48,292 - print_capture - INFO -     branch $50pred, 52, 56                   ['$50pred']
label 52:
label 52:
2025-06-13 07:34:48,292 - print_capture - INFO - label 52:
label 52:
label 52:
2025-06-13 07:34:48,292 - print_capture - INFO - label 52:
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
2025-06-13 07:34:48,292 - print_capture - INFO -     $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
2025-06-13 07:34:48,292 - print_capture - INFO -     $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    return $54return_value.1                 ['$54return_value.1']
    return $54return_value.1                 ['$54return_value.1']
2025-06-13 07:34:48,292 - print_capture - INFO -     return $54return_value.1                 ['$54return_value.1']
    return $54return_value.1                 ['$54return_value.1']
    return $54return_value.1                 ['$54return_value.1']
2025-06-13 07:34:48,292 - print_capture - INFO -     return $54return_value.1                 ['$54return_value.1']
label 56:
label 56:
2025-06-13 07:34:48,292 - print_capture - INFO - label 56:
label 56:
label 56:
2025-06-13 07:34:48,292 - print_capture - INFO - label 56:
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
2025-06-13 07:34:48,292 - print_capture - INFO -     $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
2025-06-13 07:34:48,292 - print_capture - INFO -     $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
2025-06-13 07:34:48,292 - print_capture - INFO -     $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
2025-06-13 07:34:48,292 - print_capture - INFO -     $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    jump 60                                  []
    jump 60                                  []
2025-06-13 07:34:48,292 - print_capture - INFO -     jump 60                                  []
    jump 60                                  []
    jump 60                                  []
2025-06-13 07:34:48,292 - print_capture - INFO -     jump 60                                  []
label 60:
label 60:
2025-06-13 07:34:48,292 - print_capture - INFO - label 60:
label 60:
label 60:
2025-06-13 07:34:48,292 - print_capture - INFO - label 60:
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
2025-06-13 07:34:48,292 - print_capture - INFO -     $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
2025-06-13 07:34:48,292 - print_capture - INFO -     $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
2025-06-13 07:34:48,292 - print_capture - INFO -     $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
2025-06-13 07:34:48,292 - print_capture - INFO -     $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
2025-06-13 07:34:48,292 - print_capture - INFO -     $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
2025-06-13 07:34:48,292 - print_capture - INFO -     $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
2025-06-13 07:34:48,292 - print_capture - INFO -     $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
2025-06-13 07:34:48,292 - print_capture - INFO -     $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
2025-06-13 07:34:48,292 - print_capture - INFO -     branch $60for_iter.3, 62, 104            ['$60for_iter.3']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
2025-06-13 07:34:48,293 - print_capture - INFO -     branch $60for_iter.3, 62, 104            ['$60for_iter.3']
label 62:
label 62:
2025-06-13 07:34:48,293 - print_capture - INFO - label 62:
label 62:
label 62:
2025-06-13 07:34:48,293 - print_capture - INFO - label 62:
    view = $phi62.1                          ['$phi62.1', 'view']
    view = $phi62.1                          ['$phi62.1', 'view']
2025-06-13 07:34:48,293 - print_capture - INFO -     view = $phi62.1                          ['$phi62.1', 'view']
    view = $phi62.1                          ['$phi62.1', 'view']
    view = $phi62.1                          ['$phi62.1', 'view']
2025-06-13 07:34:48,293 - print_capture - INFO -     view = $phi62.1                          ['$phi62.1', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
2025-06-13 07:34:48,293 - print_capture - INFO -     $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
2025-06-13 07:34:48,293 - print_capture - INFO -     $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
2025-06-13 07:34:48,293 - print_capture - INFO -     v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
2025-06-13 07:34:48,293 - print_capture - INFO -     v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>) ['$72load_deref.5']
    $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>) ['$72load_deref.5']
2025-06-13 07:34:48,293 - print_capture - INFO -     $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>) ['$72load_deref.5']
    $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>) ['$72load_deref.5']
    $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>) ['$72load_deref.5']
2025-06-13 07:34:48,293 - print_capture - INFO -     $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>) ['$72load_deref.5']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
2025-06-13 07:34:48,293 - print_capture - INFO -     $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
2025-06-13 07:34:48,293 - print_capture - INFO -     $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
2025-06-13 07:34:48,293 - print_capture - INFO -     bool78 = global(bool: <class 'bool'>)    ['bool78']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
2025-06-13 07:34:48,293 - print_capture - INFO -     bool78 = global(bool: <class 'bool'>)    ['bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
2025-06-13 07:34:48,293 - print_capture - INFO -     $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
2025-06-13 07:34:48,293 - print_capture - INFO -     $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    branch $78pred, 80, 88                   ['$78pred']
    branch $78pred, 80, 88                   ['$78pred']
2025-06-13 07:34:48,293 - print_capture - INFO -     branch $78pred, 80, 88                   ['$78pred']
    branch $78pred, 80, 88                   ['$78pred']
    branch $78pred, 80, 88                   ['$78pred']
2025-06-13 07:34:48,293 - print_capture - INFO -     branch $78pred, 80, 88                   ['$78pred']
label 80:
label 80:
2025-06-13 07:34:48,293 - print_capture - INFO - label 80:
label 80:
label 80:
2025-06-13 07:34:48,293 - print_capture - INFO - label 80:
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
2025-06-13 07:34:48,293 - print_capture - INFO -     $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
2025-06-13 07:34:48,293 - print_capture - INFO -     $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    return $86return_value.2                 ['$86return_value.2']
    return $86return_value.2                 ['$86return_value.2']
2025-06-13 07:34:48,293 - print_capture - INFO -     return $86return_value.2                 ['$86return_value.2']
    return $86return_value.2                 ['$86return_value.2']
    return $86return_value.2                 ['$86return_value.2']
2025-06-13 07:34:48,293 - print_capture - INFO -     return $86return_value.2                 ['$86return_value.2']
label 88:
label 88:
2025-06-13 07:34:48,293 - print_capture - INFO - label 88:
label 88:
label 88:
2025-06-13 07:34:48,293 - print_capture - INFO - label 88:
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
2025-06-13 07:34:48,293 - print_capture - INFO -     $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
2025-06-13 07:34:48,293 - print_capture - INFO -     $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
2025-06-13 07:34:48,293 - print_capture - INFO -     $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
2025-06-13 07:34:48,293 - print_capture - INFO -     $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
2025-06-13 07:34:48,293 - print_capture - INFO -     bool96 = global(bool: <class 'bool'>)    ['bool96']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
2025-06-13 07:34:48,293 - print_capture - INFO -     bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
2025-06-13 07:34:48,293 - print_capture - INFO -     $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
2025-06-13 07:34:48,293 - print_capture - INFO -     $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    branch $96pred, 98, 102                  ['$96pred']
    branch $96pred, 98, 102                  ['$96pred']
2025-06-13 07:34:48,293 - print_capture - INFO -     branch $96pred, 98, 102                  ['$96pred']
    branch $96pred, 98, 102                  ['$96pred']
    branch $96pred, 98, 102                  ['$96pred']
2025-06-13 07:34:48,293 - print_capture - INFO -     branch $96pred, 98, 102                  ['$96pred']
label 98:
label 98:
2025-06-13 07:34:48,293 - print_capture - INFO - label 98:
label 98:
label 98:
2025-06-13 07:34:48,293 - print_capture - INFO - label 98:
    max_value = v                            ['max_value', 'v']
    max_value = v                            ['max_value', 'v']
2025-06-13 07:34:48,293 - print_capture - INFO -     max_value = v                            ['max_value', 'v']
    max_value = v                            ['max_value', 'v']
    max_value = v                            ['max_value', 'v']
2025-06-13 07:34:48,294 - print_capture - INFO -     max_value = v                            ['max_value', 'v']
    jump 102                                 []
    jump 102                                 []
2025-06-13 07:34:48,294 - print_capture - INFO -     jump 102                                 []
    jump 102                                 []
    jump 102                                 []
2025-06-13 07:34:48,294 - print_capture - INFO -     jump 102                                 []
label 102:
label 102:
2025-06-13 07:34:48,294 - print_capture - INFO - label 102:
label 102:
label 102:
2025-06-13 07:34:48,294 - print_capture - INFO - label 102:
    jump 60                                  []
    jump 60                                  []
2025-06-13 07:34:48,294 - print_capture - INFO -     jump 60                                  []
    jump 60                                  []
    jump 60                                  []
2025-06-13 07:34:48,294 - print_capture - INFO -     jump 60                                  []
label 104:
label 104:
2025-06-13 07:34:48,294 - print_capture - INFO - label 104:
label 104:
label 104:
2025-06-13 07:34:48,294 - print_capture - INFO - label 104:
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
2025-06-13 07:34:48,294 - print_capture - INFO -     $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
2025-06-13 07:34:48,294 - print_capture - INFO -     $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    return $106return_value.1                ['$106return_value.1']
    return $106return_value.1                ['$106return_value.1']
2025-06-13 07:34:48,294 - print_capture - INFO -     return $106return_value.1                ['$106return_value.1']
    return $106return_value.1                ['$106return_value.1']
    return $106return_value.1                ['$106return_value.1']
2025-06-13 07:34:48,294 - print_capture - INFO -     return $106return_value.1                ['$106return_value.1']
label 0:
label 0:
2025-06-13 07:34:48,301 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:48,301 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,301 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,301 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
2025-06-13 07:34:48,301 - print_capture - INFO -     indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
2025-06-13 07:34:48,301 - print_capture - INFO -     indices = arg(1, name=indices)           ['indices']
    axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
2025-06-13 07:34:48,301 - print_capture - INFO -     axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
2025-06-13 07:34:48,301 - print_capture - INFO -     axis = arg(2, name=axis)                 ['axis']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
2025-06-13 07:34:48,301 - print_capture - INFO -     $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
2025-06-13 07:34:48,301 - print_capture - INFO -     $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
2025-06-13 07:34:48,301 - print_capture - INFO -     $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
2025-06-13 07:34:48,301 - print_capture - INFO -     $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
2025-06-13 07:34:48,301 - print_capture - INFO -     $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
2025-06-13 07:34:48,301 - print_capture - INFO -     $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
2025-06-13 07:34:48,301 - print_capture - INFO -     $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
2025-06-13 07:34:48,301 - print_capture - INFO -     $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
2025-06-13 07:34:48,301 - print_capture - INFO -     bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
2025-06-13 07:34:48,301 - print_capture - INFO -     bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
2025-06-13 07:34:48,301 - print_capture - INFO -     $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
2025-06-13 07:34:48,301 - print_capture - INFO -     $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
2025-06-13 07:34:48,301 - print_capture - INFO -     branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
2025-06-13 07:34:48,301 - print_capture - INFO -     branch $14pred, 28, 16                   ['$14pred']
label 16:
label 16:
2025-06-13 07:34:48,301 - print_capture - INFO - label 16:
label 16:
label 16:
2025-06-13 07:34:48,301 - print_capture - INFO - label 16:
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
2025-06-13 07:34:48,302 - print_capture - INFO -     $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
2025-06-13 07:34:48,302 - print_capture - INFO -     $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
2025-06-13 07:34:48,302 - print_capture - INFO -     $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
2025-06-13 07:34:48,302 - print_capture - INFO -     $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
2025-06-13 07:34:48,302 - print_capture - INFO -     $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
2025-06-13 07:34:48,302 - print_capture - INFO -     $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
2025-06-13 07:34:48,302 - print_capture - INFO -     bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
2025-06-13 07:34:48,302 - print_capture - INFO -     bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
2025-06-13 07:34:48,302 - print_capture - INFO -     $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
2025-06-13 07:34:48,302 - print_capture - INFO -     $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
2025-06-13 07:34:48,302 - print_capture - INFO -     branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
2025-06-13 07:34:48,302 - print_capture - INFO -     branch $26pred, 28, 36                   ['$26pred']
label 28:
label 28:
2025-06-13 07:34:48,302 - print_capture - INFO - label 28:
label 28:
label 28:
2025-06-13 07:34:48,302 - print_capture - INFO - label 28:
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
2025-06-13 07:34:48,302 - print_capture - INFO -     $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
2025-06-13 07:34:48,302 - print_capture - INFO -     $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
2025-06-13 07:34:48,302 - print_capture - INFO -     $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
2025-06-13 07:34:48,302 - print_capture - INFO -     $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
2025-06-13 07:34:48,302 - print_capture - INFO -     $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
2025-06-13 07:34:48,302 - print_capture - INFO -     $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
2025-06-13 07:34:48,302 - print_capture - INFO -     raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
2025-06-13 07:34:48,302 - print_capture - INFO -     raise $32call_function.2                 ['$32call_function.2']
label 36:
label 36:
2025-06-13 07:34:48,302 - print_capture - INFO - label 36:
label 36:
label 36:
2025-06-13 07:34:48,302 - print_capture - INFO - label 36:
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
2025-06-13 07:34:48,302 - print_capture - INFO -     $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
2025-06-13 07:34:48,302 - print_capture - INFO -     $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
2025-06-13 07:34:48,302 - print_capture - INFO -     $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
2025-06-13 07:34:48,302 - print_capture - INFO -     $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
2025-06-13 07:34:48,302 - print_capture - INFO -     $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
2025-06-13 07:34:48,302 - print_capture - INFO -     $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
2025-06-13 07:34:48,302 - print_capture - INFO -     $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
2025-06-13 07:34:48,302 - print_capture - INFO -     $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
2025-06-13 07:34:48,302 - print_capture - INFO -     return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
2025-06-13 07:34:48,302 - print_capture - INFO -     return $46return_value.5                 ['$46return_value.5']
label 0:
label 0:
2025-06-13 07:34:48,313 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:48,313 - print_capture - INFO - label 0:
    ary = arg(0, name=ary)                   ['ary']
    ary = arg(0, name=ary)                   ['ary']
2025-06-13 07:34:48,314 - print_capture - INFO -     ary = arg(0, name=ary)                   ['ary']
    ary = arg(0, name=ary)                   ['ary']
    ary = arg(0, name=ary)                   ['ary']
2025-06-13 07:34:48,314 - print_capture - INFO -     ary = arg(0, name=ary)                   ['ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
2025-06-13 07:34:48,314 - print_capture - INFO -     $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
2025-06-13 07:34:48,314 - print_capture - INFO -     $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
2025-06-13 07:34:48,314 - print_capture - INFO -     $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
2025-06-13 07:34:48,314 - print_capture - INFO -     $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
2025-06-13 07:34:48,314 - print_capture - INFO -     $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
2025-06-13 07:34:48,314 - print_capture - INFO -     $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
2025-06-13 07:34:48,314 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
2025-06-13 07:34:48,314 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:48,314 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:48,314 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
label 0:
label 0:
2025-06-13 07:34:48,344 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:48,344 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,344 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,344 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    min_val = arg(1, name=min_val)           ['min_val']
2025-06-13 07:34:48,344 - print_capture - INFO -     min_val = arg(1, name=min_val)           ['min_val']
    min_val = arg(1, name=min_val)           ['min_val']
    min_val = arg(1, name=min_val)           ['min_val']
2025-06-13 07:34:48,344 - print_capture - INFO -     min_val = arg(1, name=min_val)           ['min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
2025-06-13 07:34:48,344 - print_capture - INFO -     $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
2025-06-13 07:34:48,344 - print_capture - INFO -     $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
2025-06-13 07:34:48,345 - print_capture - INFO -     $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
2025-06-13 07:34:48,345 - print_capture - INFO -     $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
2025-06-13 07:34:48,345 - print_capture - INFO -     return $8return_value.3                  ['$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
2025-06-13 07:34:48,345 - print_capture - INFO -     return $8return_value.3                  ['$8return_value.3']
label 0:
label 0:
2025-06-13 07:34:48,366 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:48,366 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,366 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,366 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
2025-06-13 07:34:48,366 - print_capture - INFO -     indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
2025-06-13 07:34:48,367 - print_capture - INFO -     indices = arg(1, name=indices)           ['indices']
    axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
2025-06-13 07:34:48,367 - print_capture - INFO -     axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
2025-06-13 07:34:48,367 - print_capture - INFO -     axis = arg(2, name=axis)                 ['axis']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
2025-06-13 07:34:48,367 - print_capture - INFO -     $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
2025-06-13 07:34:48,367 - print_capture - INFO -     $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
2025-06-13 07:34:48,367 - print_capture - INFO -     $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
2025-06-13 07:34:48,367 - print_capture - INFO -     $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
2025-06-13 07:34:48,367 - print_capture - INFO -     $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
2025-06-13 07:34:48,367 - print_capture - INFO -     $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
2025-06-13 07:34:48,367 - print_capture - INFO -     $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
2025-06-13 07:34:48,367 - print_capture - INFO -     $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
2025-06-13 07:34:48,367 - print_capture - INFO -     bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
2025-06-13 07:34:48,367 - print_capture - INFO -     bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
2025-06-13 07:34:48,367 - print_capture - INFO -     $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
2025-06-13 07:34:48,367 - print_capture - INFO -     $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
2025-06-13 07:34:48,367 - print_capture - INFO -     branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
2025-06-13 07:34:48,367 - print_capture - INFO -     branch $14pred, 28, 16                   ['$14pred']
label 16:
label 16:
2025-06-13 07:34:48,367 - print_capture - INFO - label 16:
label 16:
label 16:
2025-06-13 07:34:48,367 - print_capture - INFO - label 16:
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
2025-06-13 07:34:48,367 - print_capture - INFO -     $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
2025-06-13 07:34:48,367 - print_capture - INFO -     $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
2025-06-13 07:34:48,367 - print_capture - INFO -     $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
2025-06-13 07:34:48,367 - print_capture - INFO -     $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
2025-06-13 07:34:48,367 - print_capture - INFO -     $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
2025-06-13 07:34:48,367 - print_capture - INFO -     $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
2025-06-13 07:34:48,367 - print_capture - INFO -     bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
2025-06-13 07:34:48,367 - print_capture - INFO -     bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
2025-06-13 07:34:48,367 - print_capture - INFO -     $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
2025-06-13 07:34:48,367 - print_capture - INFO -     $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
2025-06-13 07:34:48,367 - print_capture - INFO -     branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
2025-06-13 07:34:48,367 - print_capture - INFO -     branch $26pred, 28, 36                   ['$26pred']
label 28:
label 28:
2025-06-13 07:34:48,367 - print_capture - INFO - label 28:
label 28:
label 28:
2025-06-13 07:34:48,367 - print_capture - INFO - label 28:
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
2025-06-13 07:34:48,367 - print_capture - INFO -     $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
2025-06-13 07:34:48,367 - print_capture - INFO -     $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
2025-06-13 07:34:48,367 - print_capture - INFO -     $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
2025-06-13 07:34:48,367 - print_capture - INFO -     $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
2025-06-13 07:34:48,367 - print_capture - INFO -     $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
2025-06-13 07:34:48,367 - print_capture - INFO -     $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
2025-06-13 07:34:48,367 - print_capture - INFO -     raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
2025-06-13 07:34:48,367 - print_capture - INFO -     raise $32call_function.2                 ['$32call_function.2']
label 36:
label 36:
2025-06-13 07:34:48,368 - print_capture - INFO - label 36:
label 36:
label 36:
2025-06-13 07:34:48,368 - print_capture - INFO - label 36:
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
2025-06-13 07:34:48,368 - print_capture - INFO -     $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
2025-06-13 07:34:48,368 - print_capture - INFO -     $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
2025-06-13 07:34:48,368 - print_capture - INFO -     $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
2025-06-13 07:34:48,368 - print_capture - INFO -     $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
2025-06-13 07:34:48,368 - print_capture - INFO -     $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
2025-06-13 07:34:48,368 - print_capture - INFO -     $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
2025-06-13 07:34:48,368 - print_capture - INFO -     $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
2025-06-13 07:34:48,368 - print_capture - INFO -     $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
2025-06-13 07:34:48,368 - print_capture - INFO -     return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
2025-06-13 07:34:48,368 - print_capture - INFO -     return $46return_value.5                 ['$46return_value.5']
label 0:
label 0:
2025-06-13 07:34:48,423 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:48,423 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,423 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,423 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    c = freevar(acc_init: 0.0)               ['c']
2025-06-13 07:34:48,423 - print_capture - INFO -     c = freevar(acc_init: 0.0)               ['c']
    c = freevar(acc_init: 0.0)               ['c']
    c = freevar(acc_init: 0.0)               ['c']
2025-06-13 07:34:48,423 - print_capture - INFO -     c = freevar(acc_init: 0.0)               ['c']
    $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
2025-06-13 07:34:48,423 - print_capture - INFO -     $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
2025-06-13 07:34:48,423 - print_capture - INFO -     $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
2025-06-13 07:34:48,423 - print_capture - INFO -     $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
2025-06-13 07:34:48,424 - print_capture - INFO -     $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
2025-06-13 07:34:48,424 - print_capture - INFO -     $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
2025-06-13 07:34:48,424 - print_capture - INFO -     $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
2025-06-13 07:34:48,424 - print_capture - INFO -     $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
2025-06-13 07:34:48,424 - print_capture - INFO -     $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
2025-06-13 07:34:48,424 - print_capture - INFO -     $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
2025-06-13 07:34:48,424 - print_capture - INFO -     $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    jump 16                                  []
    jump 16                                  []
2025-06-13 07:34:48,424 - print_capture - INFO -     jump 16                                  []
    jump 16                                  []
    jump 16                                  []
2025-06-13 07:34:48,424 - print_capture - INFO -     jump 16                                  []
label 16:
label 16:
2025-06-13 07:34:48,424 - print_capture - INFO - label 16:
label 16:
label 16:
2025-06-13 07:34:48,424 - print_capture - INFO - label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
2025-06-13 07:34:48,424 - print_capture - INFO -     $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
2025-06-13 07:34:48,424 - print_capture - INFO -     $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
2025-06-13 07:34:48,424 - print_capture - INFO -     $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
2025-06-13 07:34:48,424 - print_capture - INFO -     $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
2025-06-13 07:34:48,424 - print_capture - INFO -     $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
2025-06-13 07:34:48,424 - print_capture - INFO -     $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
2025-06-13 07:34:48,424 - print_capture - INFO -     $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
2025-06-13 07:34:48,424 - print_capture - INFO -     $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
2025-06-13 07:34:48,424 - print_capture - INFO -     branch $16for_iter.3, 18, 34             ['$16for_iter.3']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
2025-06-13 07:34:48,424 - print_capture - INFO -     branch $16for_iter.3, 18, 34             ['$16for_iter.3']
label 18:
label 18:
2025-06-13 07:34:48,424 - print_capture - INFO - label 18:
label 18:
label 18:
2025-06-13 07:34:48,424 - print_capture - INFO - label 18:
    v = $phi18.1                             ['$phi18.1', 'v']
    v = $phi18.1                             ['$phi18.1', 'v']
2025-06-13 07:34:48,424 - print_capture - INFO -     v = $phi18.1                             ['$phi18.1', 'v']
    v = $phi18.1                             ['$phi18.1', 'v']
    v = $phi18.1                             ['$phi18.1', 'v']
2025-06-13 07:34:48,424 - print_capture - INFO -     v = $phi18.1                             ['$phi18.1', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
2025-06-13 07:34:48,424 - print_capture - INFO -     $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
2025-06-13 07:34:48,424 - print_capture - INFO -     $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
2025-06-13 07:34:48,424 - print_capture - INFO -     $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
2025-06-13 07:34:48,424 - print_capture - INFO -     $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
2025-06-13 07:34:48,424 - print_capture - INFO -     $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
2025-06-13 07:34:48,424 - print_capture - INFO -     $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
2025-06-13 07:34:48,424 - print_capture - INFO -     c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
2025-06-13 07:34:48,424 - print_capture - INFO -     c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    jump 16                                  []
    jump 16                                  []
2025-06-13 07:34:48,424 - print_capture - INFO -     jump 16                                  []
    jump 16                                  []
    jump 16                                  []
2025-06-13 07:34:48,424 - print_capture - INFO -     jump 16                                  []
label 34:
label 34:
2025-06-13 07:34:48,424 - print_capture - INFO - label 34:
label 34:
label 34:
2025-06-13 07:34:48,424 - print_capture - INFO - label 34:
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
2025-06-13 07:34:48,424 - print_capture - INFO -     $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
2025-06-13 07:34:48,424 - print_capture - INFO -     $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
2025-06-13 07:34:48,424 - print_capture - INFO -     $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
2025-06-13 07:34:48,424 - print_capture - INFO -     $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
2025-06-13 07:34:48,424 - print_capture - INFO -     $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
2025-06-13 07:34:48,425 - print_capture - INFO -     $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']
2025-06-13 07:34:48,425 - print_capture - INFO -     return $42return_value.4                 ['$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']
2025-06-13 07:34:48,425 - print_capture - INFO -     return $42return_value.4                 ['$42return_value.4']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:48,542 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:48,542 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# --- LINE 1193 --- 
# --- LINE 1193 --- 
2025-06-13 07:34:48,542 - print_capture - INFO - # --- LINE 1193 --- 
# --- LINE 1193 --- 
# --- LINE 1193 --- 
2025-06-13 07:34:48,542 - print_capture - INFO - # --- LINE 1193 --- 
# label 0
# label 0
2025-06-13 07:34:48,542 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:48,542 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: array(float64, 1d, A)
#   x = arg(0, name=x)  :: array(float64, 1d, A)
2025-06-13 07:34:48,542 - print_capture - INFO - #   x = arg(0, name=x)  :: array(float64, 1d, A)
#   x = arg(0, name=x)  :: array(float64, 1d, A)
#   x = arg(0, name=x)  :: array(float64, 1d, A)
2025-06-13 07:34:48,542 - print_capture - INFO - #   x = arg(0, name=x)  :: array(float64, 1d, A)
#   pre_max = arg(1, name=pre_max)  :: uint32
#   pre_max = arg(1, name=pre_max)  :: uint32
2025-06-13 07:34:48,542 - print_capture - INFO - #   pre_max = arg(1, name=pre_max)  :: uint32
#   pre_max = arg(1, name=pre_max)  :: uint32
#   pre_max = arg(1, name=pre_max)  :: uint32
2025-06-13 07:34:48,542 - print_capture - INFO - #   pre_max = arg(1, name=pre_max)  :: uint32
#   post_max = arg(2, name=post_max)  :: uint32
#   post_max = arg(2, name=post_max)  :: uint32
2025-06-13 07:34:48,542 - print_capture - INFO - #   post_max = arg(2, name=post_max)  :: uint32
#   post_max = arg(2, name=post_max)  :: uint32
#   post_max = arg(2, name=post_max)  :: uint32
2025-06-13 07:34:48,543 - print_capture - INFO - #   post_max = arg(2, name=post_max)  :: uint32
#   pre_avg = arg(3, name=pre_avg)  :: uint32
#   pre_avg = arg(3, name=pre_avg)  :: uint32
2025-06-13 07:34:48,543 - print_capture - INFO - #   pre_avg = arg(3, name=pre_avg)  :: uint32
#   pre_avg = arg(3, name=pre_avg)  :: uint32
#   pre_avg = arg(3, name=pre_avg)  :: uint32
2025-06-13 07:34:48,543 - print_capture - INFO - #   pre_avg = arg(3, name=pre_avg)  :: uint32
#   post_avg = arg(4, name=post_avg)  :: uint32
#   post_avg = arg(4, name=post_avg)  :: uint32
2025-06-13 07:34:48,543 - print_capture - INFO - #   post_avg = arg(4, name=post_avg)  :: uint32
#   post_avg = arg(4, name=post_avg)  :: uint32
#   post_avg = arg(4, name=post_avg)  :: uint32
2025-06-13 07:34:48,543 - print_capture - INFO - #   post_avg = arg(4, name=post_avg)  :: uint32
#   delta = arg(5, name=delta)  :: float32
#   delta = arg(5, name=delta)  :: float32
2025-06-13 07:34:48,543 - print_capture - INFO - #   delta = arg(5, name=delta)  :: float32
#   delta = arg(5, name=delta)  :: float32
#   delta = arg(5, name=delta)  :: float32
2025-06-13 07:34:48,543 - print_capture - INFO - #   delta = arg(5, name=delta)  :: float32
#   wait = arg(6, name=wait)  :: uint32
#   wait = arg(6, name=wait)  :: uint32
2025-06-13 07:34:48,543 - print_capture - INFO - #   wait = arg(6, name=wait)  :: uint32
#   wait = arg(6, name=wait)  :: uint32
#   wait = arg(6, name=wait)  :: uint32
2025-06-13 07:34:48,543 - print_capture - INFO - #   wait = arg(6, name=wait)  :: uint32
#   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
#   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
2025-06-13 07:34:48,543 - print_capture - INFO - #   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
#   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
#   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
2025-06-13 07:34:48,543 - print_capture - INFO - #   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)


2025-06-13 07:34:48,543 - print_capture - INFO - 


2025-06-13 07:34:48,543 - print_capture - INFO - 
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:48,543 - print_capture - INFO - @numba.guvectorize(
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:48,543 - print_capture - INFO - @numba.guvectorize(


2025-06-13 07:34:48,543 - print_capture - INFO - 


2025-06-13 07:34:48,543 - print_capture - INFO - 
    # --- LINE 1194 --- 
    # --- LINE 1194 --- 
2025-06-13 07:34:48,543 - print_capture - INFO -     # --- LINE 1194 --- 
    # --- LINE 1194 --- 
    # --- LINE 1194 --- 
2025-06-13 07:34:48,543 - print_capture - INFO -     # --- LINE 1194 --- 


2025-06-13 07:34:48,543 - print_capture - INFO - 


2025-06-13 07:34:48,543 - print_capture - INFO - 
    [
    [
2025-06-13 07:34:48,543 - print_capture - INFO -     [
    [
    [
2025-06-13 07:34:48,543 - print_capture - INFO -     [


2025-06-13 07:34:48,543 - print_capture - INFO - 


2025-06-13 07:34:48,543 - print_capture - INFO - 
        # --- LINE 1195 --- 
        # --- LINE 1195 --- 
2025-06-13 07:34:48,543 - print_capture - INFO -         # --- LINE 1195 --- 
        # --- LINE 1195 --- 
        # --- LINE 1195 --- 
2025-06-13 07:34:48,543 - print_capture - INFO -         # --- LINE 1195 --- 


2025-06-13 07:34:48,543 - print_capture - INFO - 


2025-06-13 07:34:48,543 - print_capture - INFO - 
        "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:48,543 - print_capture - INFO -         "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:48,543 - print_capture - INFO -         "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",


2025-06-13 07:34:48,543 - print_capture - INFO - 


2025-06-13 07:34:48,543 - print_capture - INFO - 
        # --- LINE 1196 --- 
        # --- LINE 1196 --- 
2025-06-13 07:34:48,543 - print_capture - INFO -         # --- LINE 1196 --- 
        # --- LINE 1196 --- 
        # --- LINE 1196 --- 
2025-06-13 07:34:48,543 - print_capture - INFO -         # --- LINE 1196 --- 


2025-06-13 07:34:48,543 - print_capture - INFO - 


2025-06-13 07:34:48,543 - print_capture - INFO - 
        "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:48,543 - print_capture - INFO -         "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:48,543 - print_capture - INFO -         "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",


2025-06-13 07:34:48,543 - print_capture - INFO - 


2025-06-13 07:34:48,543 - print_capture - INFO - 
        # --- LINE 1197 --- 
        # --- LINE 1197 --- 
2025-06-13 07:34:48,543 - print_capture - INFO -         # --- LINE 1197 --- 
        # --- LINE 1197 --- 
        # --- LINE 1197 --- 
2025-06-13 07:34:48,543 - print_capture - INFO -         # --- LINE 1197 --- 


2025-06-13 07:34:48,543 - print_capture - INFO - 


2025-06-13 07:34:48,543 - print_capture - INFO - 
        "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:48,543 - print_capture - INFO -         "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:48,543 - print_capture - INFO -         "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",


2025-06-13 07:34:48,543 - print_capture - INFO - 


2025-06-13 07:34:48,543 - print_capture - INFO - 
        # --- LINE 1198 --- 
        # --- LINE 1198 --- 
2025-06-13 07:34:48,543 - print_capture - INFO -         # --- LINE 1198 --- 
        # --- LINE 1198 --- 
        # --- LINE 1198 --- 
2025-06-13 07:34:48,544 - print_capture - INFO -         # --- LINE 1198 --- 


2025-06-13 07:34:48,544 - print_capture - INFO - 


2025-06-13 07:34:48,544 - print_capture - INFO - 
        "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:48,544 - print_capture - INFO -         "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:48,544 - print_capture - INFO -         "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",


2025-06-13 07:34:48,544 - print_capture - INFO - 


2025-06-13 07:34:48,544 - print_capture - INFO - 
    # --- LINE 1199 --- 
    # --- LINE 1199 --- 
2025-06-13 07:34:48,544 - print_capture - INFO -     # --- LINE 1199 --- 
    # --- LINE 1199 --- 
    # --- LINE 1199 --- 
2025-06-13 07:34:48,544 - print_capture - INFO -     # --- LINE 1199 --- 


2025-06-13 07:34:48,544 - print_capture - INFO - 


2025-06-13 07:34:48,544 - print_capture - INFO - 
    ],
    ],
2025-06-13 07:34:48,544 - print_capture - INFO -     ],
    ],
    ],
2025-06-13 07:34:48,544 - print_capture - INFO -     ],


2025-06-13 07:34:48,544 - print_capture - INFO - 


2025-06-13 07:34:48,544 - print_capture - INFO - 
    # --- LINE 1200 --- 
    # --- LINE 1200 --- 
2025-06-13 07:34:48,544 - print_capture - INFO -     # --- LINE 1200 --- 
    # --- LINE 1200 --- 
    # --- LINE 1200 --- 
2025-06-13 07:34:48,544 - print_capture - INFO -     # --- LINE 1200 --- 


2025-06-13 07:34:48,544 - print_capture - INFO - 


2025-06-13 07:34:48,544 - print_capture - INFO - 
    "(n),(),(),(),(),(),()->(n)",
    "(n),(),(),(),(),(),()->(n)",
2025-06-13 07:34:48,544 - print_capture - INFO -     "(n),(),(),(),(),(),()->(n)",
    "(n),(),(),(),(),(),()->(n)",
    "(n),(),(),(),(),(),()->(n)",
2025-06-13 07:34:48,544 - print_capture - INFO -     "(n),(),(),(),(),(),()->(n)",


2025-06-13 07:34:48,544 - print_capture - INFO - 


2025-06-13 07:34:48,544 - print_capture - INFO - 
    # --- LINE 1201 --- 
    # --- LINE 1201 --- 
2025-06-13 07:34:48,544 - print_capture - INFO -     # --- LINE 1201 --- 
    # --- LINE 1201 --- 
    # --- LINE 1201 --- 
2025-06-13 07:34:48,544 - print_capture - INFO -     # --- LINE 1201 --- 


2025-06-13 07:34:48,544 - print_capture - INFO - 


2025-06-13 07:34:48,544 - print_capture - INFO - 
    nopython=True, cache=True)
    nopython=True, cache=True)
2025-06-13 07:34:48,544 - print_capture - INFO -     nopython=True, cache=True)
    nopython=True, cache=True)
    nopython=True, cache=True)
2025-06-13 07:34:48,544 - print_capture - INFO -     nopython=True, cache=True)


2025-06-13 07:34:48,544 - print_capture - INFO - 


2025-06-13 07:34:48,544 - print_capture - INFO - 
# --- LINE 1202 --- 
# --- LINE 1202 --- 
2025-06-13 07:34:48,544 - print_capture - INFO - # --- LINE 1202 --- 
# --- LINE 1202 --- 
# --- LINE 1202 --- 
2025-06-13 07:34:48,544 - print_capture - INFO - # --- LINE 1202 --- 


2025-06-13 07:34:48,544 - print_capture - INFO - 


2025-06-13 07:34:48,544 - print_capture - INFO - 
def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
2025-06-13 07:34:48,544 - print_capture - INFO - def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
2025-06-13 07:34:48,544 - print_capture - INFO - def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):


2025-06-13 07:34:48,544 - print_capture - INFO - 


2025-06-13 07:34:48,544 - print_capture - INFO - 
    # --- LINE 1203 --- 
    # --- LINE 1203 --- 
2025-06-13 07:34:48,544 - print_capture - INFO -     # --- LINE 1203 --- 
    # --- LINE 1203 --- 
    # --- LINE 1203 --- 
2025-06-13 07:34:48,544 - print_capture - INFO -     # --- LINE 1203 --- 


2025-06-13 07:34:48,544 - print_capture - INFO - 


2025-06-13 07:34:48,544 - print_capture - INFO - 
    """Vectorized wrapper for the peak-picker"""
    """Vectorized wrapper for the peak-picker"""
2025-06-13 07:34:48,544 - print_capture - INFO -     """Vectorized wrapper for the peak-picker"""
    """Vectorized wrapper for the peak-picker"""
    """Vectorized wrapper for the peak-picker"""
2025-06-13 07:34:48,544 - print_capture - INFO -     """Vectorized wrapper for the peak-picker"""


2025-06-13 07:34:48,544 - print_capture - INFO - 


2025-06-13 07:34:48,544 - print_capture - INFO - 
    # --- LINE 1204 --- 
    # --- LINE 1204 --- 
2025-06-13 07:34:48,544 - print_capture - INFO -     # --- LINE 1204 --- 
    # --- LINE 1204 --- 
    # --- LINE 1204 --- 
2025-06-13 07:34:48,545 - print_capture - INFO -     # --- LINE 1204 --- 


2025-06-13 07:34:48,545 - print_capture - INFO - 


2025-06-13 07:34:48,545 - print_capture - INFO - 
    # Special case the first frame
    # Special case the first frame
2025-06-13 07:34:48,545 - print_capture - INFO -     # Special case the first frame
    # Special case the first frame
    # Special case the first frame
2025-06-13 07:34:48,545 - print_capture - INFO -     # Special case the first frame


2025-06-13 07:34:48,545 - print_capture - INFO - 


2025-06-13 07:34:48,545 - print_capture - INFO - 
    # --- LINE 1205 --- 
    # --- LINE 1205 --- 
2025-06-13 07:34:48,545 - print_capture - INFO -     # --- LINE 1205 --- 
    # --- LINE 1205 --- 
    # --- LINE 1205 --- 
2025-06-13 07:34:48,545 - print_capture - INFO -     # --- LINE 1205 --- 
    #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
    #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
    #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
    #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
    #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: float64
    #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: float64
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: float64
    #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: float64
    #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: float64
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: float64
    #   del $const4.1.1
    #   del $const4.1.1
2025-06-13 07:34:48,545 - print_capture - INFO -     #   del $const4.1.1
    #   del $const4.1.1
    #   del $const4.1.1
2025-06-13 07:34:48,545 - print_capture - INFO -     #   del $const4.1.1
    #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
    #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
    #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
    #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
    #   del $8load_global.3
    #   del $8load_global.3
2025-06-13 07:34:48,545 - print_capture - INFO -     #   del $8load_global.3
    #   del $8load_global.3
    #   del $8load_global.3
2025-06-13 07:34:48,545 - print_capture - INFO -     #   del $8load_global.3
    #   $const14.6.2 = const(NoneType, None)  :: none
    #   $const14.6.2 = const(NoneType, None)  :: none
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $const14.6.2 = const(NoneType, None)  :: none
    #   $const14.6.2 = const(NoneType, None)  :: none
    #   $const14.6.2 = const(NoneType, None)  :: none
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $const14.6.2 = const(NoneType, None)  :: none
    #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
    #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
    #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
    #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
    #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
    #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
    #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
    #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
    #   del $const24.11.1
    #   del $const24.11.1
2025-06-13 07:34:48,545 - print_capture - INFO -     #   del $const24.11.1
    #   del $const24.11.1
    #   del $const24.11.1
2025-06-13 07:34:48,545 - print_capture - INFO -     #   del $const24.11.1
    #   del $22load_attr.10
    #   del $22load_attr.10
2025-06-13 07:34:48,545 - print_capture - INFO -     #   del $22load_attr.10
    #   del $22load_attr.10
    #   del $22load_attr.10
2025-06-13 07:34:48,545 - print_capture - INFO -     #   del $22load_attr.10
    #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   del $26binary_subscr.12
    #   del $26binary_subscr.12
2025-06-13 07:34:48,545 - print_capture - INFO -     #   del $26binary_subscr.12
    #   del $26binary_subscr.12
    #   del $26binary_subscr.12
2025-06-13 07:34:48,545 - print_capture - INFO -     #   del $26binary_subscr.12
    #   del $16load_global.7
    #   del $16load_global.7
2025-06-13 07:34:48,545 - print_capture - INFO -     #   del $16load_global.7
    #   del $16load_global.7
    #   del $16load_global.7
2025-06-13 07:34:48,545 - print_capture - INFO -     #   del $16load_global.7
    #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
2025-06-13 07:34:48,545 - print_capture - INFO -     #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   del $const14.6.2
    #   del $const14.6.2
2025-06-13 07:34:48,545 - print_capture - INFO -     #   del $const14.6.2
    #   del $const14.6.2
    #   del $const14.6.2
2025-06-13 07:34:48,545 - print_capture - INFO -     #   del $const14.6.2
    #   del $30build_slice.14
    #   del $30build_slice.14
2025-06-13 07:34:48,545 - print_capture - INFO -     #   del $30build_slice.14
    #   del $30build_slice.14
    #   del $30build_slice.14
2025-06-13 07:34:48,546 - print_capture - INFO -     #   del $30build_slice.14
    #   del $28call_function.13
    #   del $28call_function.13
2025-06-13 07:34:48,546 - print_capture - INFO -     #   del $28call_function.13
    #   del $28call_function.13
    #   del $28call_function.13
2025-06-13 07:34:48,546 - print_capture - INFO -     #   del $28call_function.13
    #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(float64, 1d, A)
    #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(float64, 1d, A)
2025-06-13 07:34:48,546 - print_capture - INFO -     #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(float64, 1d, A)
    #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(float64, 1d, A)
    #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(float64, 1d, A)
2025-06-13 07:34:48,546 - print_capture - INFO -     #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(float64, 1d, A)
    #   del $30build_slice.15
    #   del $30build_slice.15
2025-06-13 07:34:48,546 - print_capture - INFO -     #   del $30build_slice.15
    #   del $30build_slice.15
    #   del $30build_slice.15
2025-06-13 07:34:48,546 - print_capture - INFO -     #   del $30build_slice.15
    #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
    #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:48,546 - print_capture - INFO -     #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
    #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
    #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:48,546 - print_capture - INFO -     #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
    #   del $32binary_subscr.16
    #   del $32binary_subscr.16
2025-06-13 07:34:48,546 - print_capture - INFO -     #   del $32binary_subscr.16
    #   del $32binary_subscr.16
    #   del $32binary_subscr.16
2025-06-13 07:34:48,546 - print_capture - INFO -     #   del $32binary_subscr.16
    #   del $10load_method.4
    #   del $10load_method.4
2025-06-13 07:34:48,546 - print_capture - INFO -     #   del $10load_method.4
    #   del $10load_method.4
    #   del $10load_method.4
2025-06-13 07:34:48,546 - print_capture - INFO -     #   del $10load_method.4
    #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
    #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
2025-06-13 07:34:48,546 - print_capture - INFO -     #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
    #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
    #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
2025-06-13 07:34:48,546 - print_capture - INFO -     #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
    #   del $6binary_subscr.2
    #   del $6binary_subscr.2
2025-06-13 07:34:48,546 - print_capture - INFO -     #   del $6binary_subscr.2
    #   del $6binary_subscr.2
    #   del $6binary_subscr.2
2025-06-13 07:34:48,546 - print_capture - INFO -     #   del $6binary_subscr.2
    #   del $34call_method.17
    #   del $34call_method.17
2025-06-13 07:34:48,546 - print_capture - INFO -     #   del $34call_method.17
    #   del $34call_method.17
    #   del $34call_method.17
2025-06-13 07:34:48,546 - print_capture - INFO -     #   del $34call_method.17
    #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
    #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,546 - print_capture - INFO -     #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
    #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
    #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,546 - print_capture - INFO -     #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
    #   peaks[0] = $36compare_op.18
    #   peaks[0] = $36compare_op.18
2025-06-13 07:34:48,546 - print_capture - INFO -     #   peaks[0] = $36compare_op.18
    #   peaks[0] = $36compare_op.18
    #   peaks[0] = $36compare_op.18
2025-06-13 07:34:48,546 - print_capture - INFO -     #   peaks[0] = $36compare_op.18
    #   del $const40.20.1
    #   del $const40.20.1
2025-06-13 07:34:48,546 - print_capture - INFO -     #   del $const40.20.1
    #   del $const40.20.1
    #   del $const40.20.1
2025-06-13 07:34:48,546 - print_capture - INFO -     #   del $const40.20.1
    #   del $36compare_op.18
    #   del $36compare_op.18
2025-06-13 07:34:48,546 - print_capture - INFO -     #   del $36compare_op.18
    #   del $36compare_op.18
    #   del $36compare_op.18
2025-06-13 07:34:48,546 - print_capture - INFO -     #   del $36compare_op.18


2025-06-13 07:34:48,546 - print_capture - INFO - 


2025-06-13 07:34:48,546 - print_capture - INFO - 
    peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
    peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
2025-06-13 07:34:48,546 - print_capture - INFO -     peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
    peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
    peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
2025-06-13 07:34:48,546 - print_capture - INFO -     peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))


2025-06-13 07:34:48,546 - print_capture - INFO - 


2025-06-13 07:34:48,546 - print_capture - INFO - 
    # --- LINE 1206 --- 
    # --- LINE 1206 --- 
2025-06-13 07:34:48,546 - print_capture - INFO -     # --- LINE 1206 --- 
    # --- LINE 1206 --- 
    # --- LINE 1206 --- 
2025-06-13 07:34:48,546 - print_capture - INFO -     # --- LINE 1206 --- 
    #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
    #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,546 - print_capture - INFO -     #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
    #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
    #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,546 - print_capture - INFO -     #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
    #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
    #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,546 - print_capture - INFO -     #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
    #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
    #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,546 - print_capture - INFO -     #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
    #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
    #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,546 - print_capture - INFO -     #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
    #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
    #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,546 - print_capture - INFO -     #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
    #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: float64
    #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: float64
2025-06-13 07:34:48,546 - print_capture - INFO -     #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: float64
    #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: float64
    #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: float64
2025-06-13 07:34:48,546 - print_capture - INFO -     #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: float64
    #   del $const54.27.1
    #   del $const54.27.1
2025-06-13 07:34:48,546 - print_capture - INFO -     #   del $const54.27.1
    #   del $const54.27.1
    #   del $const54.27.1
2025-06-13 07:34:48,546 - print_capture - INFO -     #   del $const54.27.1
    #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:48,546 - print_capture - INFO -     #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:48,546 - print_capture - INFO -     #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
    #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
    #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
    #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
    #   del $58load_global.29
    #   del $58load_global.29
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $58load_global.29
    #   del $58load_global.29
    #   del $58load_global.29
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $58load_global.29
    #   $const64.32.2 = const(NoneType, None)  :: none
    #   $const64.32.2 = const(NoneType, None)  :: none
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $const64.32.2 = const(NoneType, None)  :: none
    #   $const64.32.2 = const(NoneType, None)  :: none
    #   $const64.32.2 = const(NoneType, None)  :: none
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $const64.32.2 = const(NoneType, None)  :: none
    #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
    #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
    #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
    #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
    #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
    #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
    #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
    #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
    #   del $const74.37.1
    #   del $const74.37.1
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $const74.37.1
    #   del $const74.37.1
    #   del $const74.37.1
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $const74.37.1
    #   del $72load_attr.36
    #   del $72load_attr.36
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $72load_attr.36
    #   del $72load_attr.36
    #   del $72load_attr.36
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $72load_attr.36
    #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   del $76binary_subscr.38
    #   del $76binary_subscr.38
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $76binary_subscr.38
    #   del $76binary_subscr.38
    #   del $76binary_subscr.38
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $76binary_subscr.38
    #   del $66load_global.33
    #   del $66load_global.33
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $66load_global.33
    #   del $66load_global.33
    #   del $66load_global.33
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $66load_global.33
    #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   del $const64.32.2
    #   del $const64.32.2
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $const64.32.2
    #   del $const64.32.2
    #   del $const64.32.2
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $const64.32.2
    #   del $80build_slice.40
    #   del $80build_slice.40
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $80build_slice.40
    #   del $80build_slice.40
    #   del $80build_slice.40
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $80build_slice.40
    #   del $78call_function.39
    #   del $78call_function.39
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $78call_function.39
    #   del $78call_function.39
    #   del $78call_function.39
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $78call_function.39
    #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(float64, 1d, A)
    #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(float64, 1d, A)
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(float64, 1d, A)
    #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(float64, 1d, A)
    #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(float64, 1d, A)
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(float64, 1d, A)
    #   del $80build_slice.41
    #   del $80build_slice.41
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $80build_slice.41
    #   del $80build_slice.41
    #   del $80build_slice.41
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $80build_slice.41
    #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
    #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
    #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
    #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
    #   del $82binary_subscr.42
    #   del $82binary_subscr.42
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $82binary_subscr.42
    #   del $82binary_subscr.42
    #   del $82binary_subscr.42
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $82binary_subscr.42
    #   del $60load_method.30
    #   del $60load_method.30
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $60load_method.30
    #   del $60load_method.30
    #   del $60load_method.30
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $60load_method.30
    #   $88binary_add.45 = $84call_method.43 + delta  :: float64
    #   $88binary_add.45 = $84call_method.43 + delta  :: float64
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $88binary_add.45 = $84call_method.43 + delta  :: float64
    #   $88binary_add.45 = $84call_method.43 + delta  :: float64
    #   $88binary_add.45 = $84call_method.43 + delta  :: float64
2025-06-13 07:34:48,547 - print_capture - INFO -     #   $88binary_add.45 = $84call_method.43 + delta  :: float64
    #   del $84call_method.43
    #   del $84call_method.43
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $84call_method.43
    #   del $84call_method.43
    #   del $84call_method.43
2025-06-13 07:34:48,547 - print_capture - INFO -     #   del $84call_method.43
    #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
    #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
2025-06-13 07:34:48,548 - print_capture - INFO -     #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
    #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
    #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
2025-06-13 07:34:48,548 - print_capture - INFO -     #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
    #   del $88binary_add.45
    #   del $88binary_add.45
2025-06-13 07:34:48,548 - print_capture - INFO -     #   del $88binary_add.45
    #   del $88binary_add.45
    #   del $88binary_add.45
2025-06-13 07:34:48,548 - print_capture - INFO -     #   del $88binary_add.45
    #   del $56binary_subscr.28
    #   del $56binary_subscr.28
2025-06-13 07:34:48,548 - print_capture - INFO -     #   del $56binary_subscr.28
    #   del $56binary_subscr.28
    #   del $56binary_subscr.28
2025-06-13 07:34:48,548 - print_capture - INFO -     #   del $56binary_subscr.28
    #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
    #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
2025-06-13 07:34:48,548 - print_capture - INFO -     #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
    #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
    #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
2025-06-13 07:34:48,548 - print_capture - INFO -     #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
    #   del $90compare_op.46
    #   del $90compare_op.46
2025-06-13 07:34:48,548 - print_capture - INFO -     #   del $90compare_op.46
    #   del $90compare_op.46
    #   del $90compare_op.46
2025-06-13 07:34:48,548 - print_capture - INFO -     #   del $90compare_op.46
    #   del $50binary_subscr.25
    #   del $50binary_subscr.25
2025-06-13 07:34:48,548 - print_capture - INFO -     #   del $50binary_subscr.25
    #   del $50binary_subscr.25
    #   del $50binary_subscr.25
2025-06-13 07:34:48,548 - print_capture - INFO -     #   del $50binary_subscr.25
    #   peaks[0] = $92inplace_and.47
    #   peaks[0] = $92inplace_and.47
2025-06-13 07:34:48,548 - print_capture - INFO -     #   peaks[0] = $92inplace_and.47
    #   peaks[0] = $92inplace_and.47
    #   peaks[0] = $92inplace_and.47
2025-06-13 07:34:48,548 - print_capture - INFO -     #   peaks[0] = $92inplace_and.47
    #   del $const46.22.1
    #   del $const46.22.1
2025-06-13 07:34:48,548 - print_capture - INFO -     #   del $const46.22.1
    #   del $const46.22.1
    #   del $const46.22.1
2025-06-13 07:34:48,548 - print_capture - INFO -     #   del $const46.22.1
    #   del $92inplace_and.47
    #   del $92inplace_and.47
2025-06-13 07:34:48,548 - print_capture - INFO -     #   del $92inplace_and.47
    #   del $92inplace_and.47
    #   del $92inplace_and.47
2025-06-13 07:34:48,548 - print_capture - INFO -     #   del $92inplace_and.47


2025-06-13 07:34:48,548 - print_capture - INFO - 


2025-06-13 07:34:48,548 - print_capture - INFO - 
    peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
    peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
2025-06-13 07:34:48,548 - print_capture - INFO -     peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
    peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
    peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
2025-06-13 07:34:48,548 - print_capture - INFO -     peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)


2025-06-13 07:34:48,548 - print_capture - INFO - 


2025-06-13 07:34:48,548 - print_capture - INFO - 
# --- LINE 1207 --- 
# --- LINE 1207 --- 
2025-06-13 07:34:48,548 - print_capture - INFO - # --- LINE 1207 --- 
# --- LINE 1207 --- 
# --- LINE 1207 --- 
2025-06-13 07:34:48,548 - print_capture - INFO - # --- LINE 1207 --- 


2025-06-13 07:34:48,548 - print_capture - INFO - 


2025-06-13 07:34:48,548 - print_capture - INFO - 


2025-06-13 07:34:48,548 - print_capture - INFO - 


2025-06-13 07:34:48,548 - print_capture - INFO - 


2025-06-13 07:34:48,548 - print_capture - INFO - 


2025-06-13 07:34:48,548 - print_capture - INFO - 
    # --- LINE 1208 --- 
    # --- LINE 1208 --- 
2025-06-13 07:34:48,548 - print_capture - INFO -     # --- LINE 1208 --- 
    # --- LINE 1208 --- 
    # --- LINE 1208 --- 
2025-06-13 07:34:48,548 - print_capture - INFO -     # --- LINE 1208 --- 
    #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
    #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,548 - print_capture - INFO -     #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
    #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
    #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,548 - print_capture - INFO -     #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
    #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
    #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,548 - print_capture - INFO -     #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
    #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
    #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,548 - print_capture - INFO -     #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
    #   del $const100.49.1
    #   del $const100.49.1
2025-06-13 07:34:48,548 - print_capture - INFO -     #   del $const100.49.1
    #   del $const100.49.1
    #   del $const100.49.1
2025-06-13 07:34:48,548 - print_capture - INFO -     #   del $const100.49.1
    #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,548 - print_capture - INFO -     #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,548 - print_capture - INFO -     #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,548 - print_capture - INFO -     #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,548 - print_capture - INFO -     #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   del bool104
    #   del bool104
2025-06-13 07:34:48,548 - print_capture - INFO -     #   del bool104
    #   del bool104
    #   del bool104
2025-06-13 07:34:48,548 - print_capture - INFO -     #   del bool104
    #   del $102binary_subscr.50
    #   del $102binary_subscr.50
2025-06-13 07:34:48,549 - print_capture - INFO -     #   del $102binary_subscr.50
    #   del $102binary_subscr.50
    #   del $102binary_subscr.50
2025-06-13 07:34:48,549 - print_capture - INFO -     #   del $102binary_subscr.50
    #   branch $104pred, 106, 116
    #   branch $104pred, 106, 116
2025-06-13 07:34:48,549 - print_capture - INFO -     #   branch $104pred, 106, 116
    #   branch $104pred, 106, 116
    #   branch $104pred, 106, 116
2025-06-13 07:34:48,549 - print_capture - INFO -     #   branch $104pred, 106, 116


2025-06-13 07:34:48,549 - print_capture - INFO - 


2025-06-13 07:34:48,549 - print_capture - INFO - 
    if peaks[0]:
    if peaks[0]:
2025-06-13 07:34:48,549 - print_capture - INFO -     if peaks[0]:
    if peaks[0]:
    if peaks[0]:
2025-06-13 07:34:48,549 - print_capture - INFO -     if peaks[0]:


2025-06-13 07:34:48,549 - print_capture - INFO - 


2025-06-13 07:34:48,549 - print_capture - INFO - 
        # --- LINE 1209 --- 
        # --- LINE 1209 --- 
2025-06-13 07:34:48,549 - print_capture - INFO -         # --- LINE 1209 --- 
        # --- LINE 1209 --- 
        # --- LINE 1209 --- 
2025-06-13 07:34:48,549 - print_capture - INFO -         # --- LINE 1209 --- 
        # label 106
        # label 106
2025-06-13 07:34:48,549 - print_capture - INFO -         # label 106
        # label 106
        # label 106
2025-06-13 07:34:48,549 - print_capture - INFO -         # label 106
        #   del $104pred
        #   del $104pred
2025-06-13 07:34:48,549 - print_capture - INFO -         #   del $104pred
        #   del $104pred
        #   del $104pred
2025-06-13 07:34:48,549 - print_capture - INFO -         #   del $104pred
        #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
        #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,549 - print_capture - INFO -         #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
        #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
        #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,549 - print_capture - INFO -         #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
        #   n = wait + $const108.1.3  :: int64
        #   n = wait + $const108.1.3  :: int64
2025-06-13 07:34:48,549 - print_capture - INFO -         #   n = wait + $const108.1.3  :: int64
        #   n = wait + $const108.1.3  :: int64
        #   n = wait + $const108.1.3  :: int64
2025-06-13 07:34:48,549 - print_capture - INFO -         #   n = wait + $const108.1.3  :: int64
        #   del $const108.1.3
        #   del $const108.1.3
2025-06-13 07:34:48,549 - print_capture - INFO -         #   del $const108.1.3
        #   del $const108.1.3
        #   del $const108.1.3
2025-06-13 07:34:48,549 - print_capture - INFO -         #   del $const108.1.3
        #   n.5 = n  :: int64
        #   n.5 = n  :: int64
2025-06-13 07:34:48,549 - print_capture - INFO -         #   n.5 = n  :: int64
        #   n.5 = n  :: int64
        #   n.5 = n  :: int64
2025-06-13 07:34:48,549 - print_capture - INFO -         #   n.5 = n  :: int64
        #   del n
        #   del n
2025-06-13 07:34:48,549 - print_capture - INFO -         #   del n
        #   del n
        #   del n
2025-06-13 07:34:48,549 - print_capture - INFO -         #   del n
        #   jump 120
        #   jump 120
2025-06-13 07:34:48,549 - print_capture - INFO -         #   jump 120
        #   jump 120
        #   jump 120
2025-06-13 07:34:48,549 - print_capture - INFO -         #   jump 120


2025-06-13 07:34:48,549 - print_capture - INFO - 


2025-06-13 07:34:48,549 - print_capture - INFO - 
        n = wait + 1
        n = wait + 1
2025-06-13 07:34:48,549 - print_capture - INFO -         n = wait + 1
        n = wait + 1
        n = wait + 1
2025-06-13 07:34:48,549 - print_capture - INFO -         n = wait + 1


2025-06-13 07:34:48,549 - print_capture - INFO - 


2025-06-13 07:34:48,549 - print_capture - INFO - 
    # --- LINE 1210 --- 
    # --- LINE 1210 --- 
2025-06-13 07:34:48,549 - print_capture - INFO -     # --- LINE 1210 --- 
    # --- LINE 1210 --- 
    # --- LINE 1210 --- 
2025-06-13 07:34:48,549 - print_capture - INFO -     # --- LINE 1210 --- 


2025-06-13 07:34:48,549 - print_capture - INFO - 


2025-06-13 07:34:48,549 - print_capture - INFO - 
    else:
    else:
2025-06-13 07:34:48,549 - print_capture - INFO -     else:
    else:
    else:
2025-06-13 07:34:48,549 - print_capture - INFO -     else:


2025-06-13 07:34:48,549 - print_capture - INFO - 


2025-06-13 07:34:48,549 - print_capture - INFO - 
        # --- LINE 1211 --- 
        # --- LINE 1211 --- 
2025-06-13 07:34:48,549 - print_capture - INFO -         # --- LINE 1211 --- 
        # --- LINE 1211 --- 
        # --- LINE 1211 --- 
2025-06-13 07:34:48,549 - print_capture - INFO -         # --- LINE 1211 --- 
        # label 116
        # label 116
2025-06-13 07:34:48,549 - print_capture - INFO -         # label 116
        # label 116
        # label 116
2025-06-13 07:34:48,549 - print_capture - INFO -         # label 116
        #   del $104pred
        #   del $104pred
2025-06-13 07:34:48,549 - print_capture - INFO -         #   del $104pred
        #   del $104pred
        #   del $104pred
2025-06-13 07:34:48,550 - print_capture - INFO -         #   del $104pred
        #   n.1 = const(int, 1)  :: Literal[int](1)
        #   n.1 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,550 - print_capture - INFO -         #   n.1 = const(int, 1)  :: Literal[int](1)
        #   n.1 = const(int, 1)  :: Literal[int](1)
        #   n.1 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,550 - print_capture - INFO -         #   n.1 = const(int, 1)  :: Literal[int](1)
        #   n.5 = n.1  :: int64
        #   n.5 = n.1  :: int64
2025-06-13 07:34:48,550 - print_capture - INFO -         #   n.5 = n.1  :: int64
        #   n.5 = n.1  :: int64
        #   n.5 = n.1  :: int64
2025-06-13 07:34:48,550 - print_capture - INFO -         #   n.5 = n.1  :: int64
        #   del n.1
        #   del n.1
2025-06-13 07:34:48,550 - print_capture - INFO -         #   del n.1
        #   del n.1
        #   del n.1
2025-06-13 07:34:48,550 - print_capture - INFO -         #   del n.1


2025-06-13 07:34:48,550 - print_capture - INFO - 


2025-06-13 07:34:48,550 - print_capture - INFO - 
        n = 1
        n = 1
2025-06-13 07:34:48,550 - print_capture - INFO -         n = 1
        n = 1
        n = 1
2025-06-13 07:34:48,550 - print_capture - INFO -         n = 1


2025-06-13 07:34:48,550 - print_capture - INFO - 


2025-06-13 07:34:48,550 - print_capture - INFO - 
# --- LINE 1212 --- 
# --- LINE 1212 --- 
2025-06-13 07:34:48,550 - print_capture - INFO - # --- LINE 1212 --- 
# --- LINE 1212 --- 
# --- LINE 1212 --- 
2025-06-13 07:34:48,550 - print_capture - INFO - # --- LINE 1212 --- 


2025-06-13 07:34:48,550 - print_capture - INFO - 


2025-06-13 07:34:48,550 - print_capture - INFO - 


2025-06-13 07:34:48,550 - print_capture - INFO - 


2025-06-13 07:34:48,550 - print_capture - INFO - 


2025-06-13 07:34:48,550 - print_capture - INFO - 


2025-06-13 07:34:48,550 - print_capture - INFO - 
    # --- LINE 1213 --- 
    # --- LINE 1213 --- 
2025-06-13 07:34:48,550 - print_capture - INFO -     # --- LINE 1213 --- 
    # --- LINE 1213 --- 
    # --- LINE 1213 --- 
2025-06-13 07:34:48,550 - print_capture - INFO -     # --- LINE 1213 --- 
    #   jump 120
    #   jump 120
2025-06-13 07:34:48,550 - print_capture - INFO -     #   jump 120
    #   jump 120
    #   jump 120
2025-06-13 07:34:48,550 - print_capture - INFO -     #   jump 120
    # label 120
    # label 120
2025-06-13 07:34:48,550 - print_capture - INFO -     # label 120
    # label 120
    # label 120
2025-06-13 07:34:48,550 - print_capture - INFO -     # label 120
    #   n.7 = n.5  :: int64
    #   n.7 = n.5  :: int64
2025-06-13 07:34:48,550 - print_capture - INFO -     #   n.7 = n.5  :: int64
    #   n.7 = n.5  :: int64
    #   n.7 = n.5  :: int64
2025-06-13 07:34:48,550 - print_capture - INFO -     #   n.7 = n.5  :: int64
    #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,550 - print_capture - INFO -     #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,550 - print_capture - INFO -     #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
    #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,550 - print_capture - INFO -     #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
    #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
    #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,550 - print_capture - INFO -     #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
    #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
    #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,550 - print_capture - INFO -     #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
    #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
    #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,550 - print_capture - INFO -     #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
    #   del $const126.3.1
    #   del $const126.3.1
2025-06-13 07:34:48,550 - print_capture - INFO -     #   del $const126.3.1
    #   del $const126.3.1
    #   del $const126.3.1
2025-06-13 07:34:48,550 - print_capture - INFO -     #   del $const126.3.1
    #   del $124load_attr.2
    #   del $124load_attr.2
2025-06-13 07:34:48,550 - print_capture - INFO -     #   del $124load_attr.2
    #   del $124load_attr.2
    #   del $124load_attr.2
2025-06-13 07:34:48,550 - print_capture - INFO -     #   del $124load_attr.2
    #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
    #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
2025-06-13 07:34:48,550 - print_capture - INFO -     #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
    #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
    #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
2025-06-13 07:34:48,550 - print_capture - INFO -     #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
    #   del n.5
    #   del n.5
2025-06-13 07:34:48,550 - print_capture - INFO -     #   del n.5
    #   del n.5
    #   del n.5
2025-06-13 07:34:48,550 - print_capture - INFO -     #   del n.5
    #   del $128binary_subscr.4
    #   del $128binary_subscr.4
2025-06-13 07:34:48,550 - print_capture - INFO -     #   del $128binary_subscr.4
    #   del $128binary_subscr.4
    #   del $128binary_subscr.4
2025-06-13 07:34:48,550 - print_capture - INFO -     #   del $128binary_subscr.4
    #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,550 - print_capture - INFO -     #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,550 - print_capture - INFO -     #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,551 - print_capture - INFO -     #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,551 - print_capture - INFO -     #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   del bool132
    #   del bool132
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del bool132
    #   del bool132
    #   del bool132
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del bool132
    #   del $130compare_op.5
    #   del $130compare_op.5
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del $130compare_op.5
    #   del $130compare_op.5
    #   del $130compare_op.5
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del $130compare_op.5
    #   branch $132pred, 134, 332
    #   branch $132pred, 134, 332
2025-06-13 07:34:48,551 - print_capture - INFO -     #   branch $132pred, 134, 332
    #   branch $132pred, 134, 332
    #   branch $132pred, 134, 332
2025-06-13 07:34:48,551 - print_capture - INFO -     #   branch $132pred, 134, 332
    #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,551 - print_capture - INFO -     #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,551 - print_capture - INFO -     #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
    #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,551 - print_capture - INFO -     #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
    #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
    #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,551 - print_capture - INFO -     #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
    #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
    #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,551 - print_capture - INFO -     #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
    #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
    #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,551 - print_capture - INFO -     #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
    #   del $const320.8.1
    #   del $const320.8.1
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del $const320.8.1
    #   del $const320.8.1
    #   del $const320.8.1
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del $const320.8.1
    #   del $318load_attr.7
    #   del $318load_attr.7
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del $318load_attr.7
    #   del $318load_attr.7
    #   del $318load_attr.7
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del $318load_attr.7
    #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
    #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
2025-06-13 07:34:48,551 - print_capture - INFO -     #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
    #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
    #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
2025-06-13 07:34:48,551 - print_capture - INFO -     #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
    #   del n.4
    #   del n.4
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del n.4
    #   del n.4
    #   del n.4
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del n.4
    #   del $322binary_subscr.9
    #   del $322binary_subscr.9
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del $322binary_subscr.9
    #   del $322binary_subscr.9
    #   del $322binary_subscr.9
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del $322binary_subscr.9
    #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,551 - print_capture - INFO -     #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,551 - print_capture - INFO -     #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,551 - print_capture - INFO -     #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,551 - print_capture - INFO -     #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   del bool326
    #   del bool326
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del bool326
    #   del bool326
    #   del bool326
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del bool326
    #   del $324compare_op.10
    #   del $324compare_op.10
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del $324compare_op.10
    #   del $324compare_op.10
    #   del $324compare_op.10
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del $324compare_op.10
    #   branch $326pred, 134, 328
    #   branch $326pred, 134, 328
2025-06-13 07:34:48,551 - print_capture - INFO -     #   branch $326pred, 134, 328
    #   branch $326pred, 134, 328
    #   branch $326pred, 134, 328
2025-06-13 07:34:48,551 - print_capture - INFO -     #   branch $326pred, 134, 328
    # label 328
    # label 328
2025-06-13 07:34:48,551 - print_capture - INFO -     # label 328
    # label 328
    # label 328
2025-06-13 07:34:48,551 - print_capture - INFO -     # label 328
    #   del x
    #   del x
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del x
    #   del wait
    #   del wait
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del wait
    #   del wait
    #   del wait
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del wait
    #   del pre_max
    #   del pre_max
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del pre_max
    #   del pre_max
    #   del pre_max
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del pre_max
    #   del pre_avg
    #   del pre_avg
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del pre_avg
    #   del pre_avg
    #   del pre_avg
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del pre_avg
    #   del post_max
    #   del post_max
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del post_max
    #   del post_max
    #   del post_max
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del post_max
    #   del post_avg
    #   del post_avg
2025-06-13 07:34:48,551 - print_capture - INFO -     #   del post_avg
    #   del post_avg
    #   del post_avg
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del post_avg
    #   del peaks
    #   del peaks
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del peaks
    #   del peaks
    #   del peaks
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del peaks
    #   del n.7
    #   del n.7
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del n.7
    #   del n.7
    #   del n.7
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del n.7
    #   del delta
    #   del delta
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del delta
    #   del delta
    #   del delta
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del delta
    #   del $326pred
    #   del $326pred
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del $326pred
    #   del $326pred
    #   del $326pred
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del $326pred
    #   $const328.0.2 = const(NoneType, None)  :: none
    #   $const328.0.2 = const(NoneType, None)  :: none
2025-06-13 07:34:48,552 - print_capture - INFO -     #   $const328.0.2 = const(NoneType, None)  :: none
    #   $const328.0.2 = const(NoneType, None)  :: none
    #   $const328.0.2 = const(NoneType, None)  :: none
2025-06-13 07:34:48,552 - print_capture - INFO -     #   $const328.0.2 = const(NoneType, None)  :: none
    #   $330return_value.1 = cast(value=$const328.0.2)  :: none
    #   $330return_value.1 = cast(value=$const328.0.2)  :: none
2025-06-13 07:34:48,552 - print_capture - INFO -     #   $330return_value.1 = cast(value=$const328.0.2)  :: none
    #   $330return_value.1 = cast(value=$const328.0.2)  :: none
    #   $330return_value.1 = cast(value=$const328.0.2)  :: none
2025-06-13 07:34:48,552 - print_capture - INFO -     #   $330return_value.1 = cast(value=$const328.0.2)  :: none
    #   del $const328.0.2
    #   del $const328.0.2
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del $const328.0.2
    #   del $const328.0.2
    #   del $const328.0.2
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del $const328.0.2
    #   return $330return_value.1
    #   return $330return_value.1
2025-06-13 07:34:48,552 - print_capture - INFO -     #   return $330return_value.1
    #   return $330return_value.1
    #   return $330return_value.1
2025-06-13 07:34:48,552 - print_capture - INFO -     #   return $330return_value.1
    # label 332
    # label 332
2025-06-13 07:34:48,552 - print_capture - INFO -     # label 332
    # label 332
    # label 332
2025-06-13 07:34:48,552 - print_capture - INFO -     # label 332
    #   del x
    #   del x
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del x
    #   del wait
    #   del wait
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del wait
    #   del wait
    #   del wait
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del wait
    #   del pre_max
    #   del pre_max
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del pre_max
    #   del pre_max
    #   del pre_max
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del pre_max
    #   del pre_avg
    #   del pre_avg
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del pre_avg
    #   del pre_avg
    #   del pre_avg
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del pre_avg
    #   del post_max
    #   del post_max
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del post_max
    #   del post_max
    #   del post_max
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del post_max
    #   del post_avg
    #   del post_avg
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del post_avg
    #   del post_avg
    #   del post_avg
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del post_avg
    #   del peaks
    #   del peaks
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del peaks
    #   del peaks
    #   del peaks
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del peaks
    #   del n.7
    #   del n.7
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del n.7
    #   del n.7
    #   del n.7
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del n.7
    #   del delta
    #   del delta
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del delta
    #   del delta
    #   del delta
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del delta
    #   del $132pred
    #   del $132pred
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del $132pred
    #   del $132pred
    #   del $132pred
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del $132pred
    #   $const332.0.2 = const(NoneType, None)  :: none
    #   $const332.0.2 = const(NoneType, None)  :: none
2025-06-13 07:34:48,552 - print_capture - INFO -     #   $const332.0.2 = const(NoneType, None)  :: none
    #   $const332.0.2 = const(NoneType, None)  :: none
    #   $const332.0.2 = const(NoneType, None)  :: none
2025-06-13 07:34:48,552 - print_capture - INFO -     #   $const332.0.2 = const(NoneType, None)  :: none
    #   $334return_value.1 = cast(value=$const332.0.2)  :: none
    #   $334return_value.1 = cast(value=$const332.0.2)  :: none
2025-06-13 07:34:48,552 - print_capture - INFO -     #   $334return_value.1 = cast(value=$const332.0.2)  :: none
    #   $334return_value.1 = cast(value=$const332.0.2)  :: none
    #   $334return_value.1 = cast(value=$const332.0.2)  :: none
2025-06-13 07:34:48,552 - print_capture - INFO -     #   $334return_value.1 = cast(value=$const332.0.2)  :: none
    #   del $const332.0.2
    #   del $const332.0.2
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del $const332.0.2
    #   del $const332.0.2
    #   del $const332.0.2
2025-06-13 07:34:48,552 - print_capture - INFO -     #   del $const332.0.2
    #   return $334return_value.1
    #   return $334return_value.1
2025-06-13 07:34:48,552 - print_capture - INFO -     #   return $334return_value.1
    #   return $334return_value.1
    #   return $334return_value.1
2025-06-13 07:34:48,552 - print_capture - INFO -     #   return $334return_value.1
    # label 333
    # label 333
2025-06-13 07:34:48,552 - print_capture - INFO -     # label 333
    # label 333
    # label 333
2025-06-13 07:34:48,553 - print_capture - INFO -     # label 333
    #   n.5 = n.6  :: int64
    #   n.5 = n.6  :: int64
2025-06-13 07:34:48,553 - print_capture - INFO -     #   n.5 = n.6  :: int64
    #   n.5 = n.6  :: int64
    #   n.5 = n.6  :: int64
2025-06-13 07:34:48,553 - print_capture - INFO -     #   n.5 = n.6  :: int64
    #   del n.6
    #   del n.6
2025-06-13 07:34:48,553 - print_capture - INFO -     #   del n.6
    #   del n.6
    #   del n.6
2025-06-13 07:34:48,553 - print_capture - INFO -     #   del n.6
    #   jump 120
    #   jump 120
2025-06-13 07:34:48,553 - print_capture - INFO -     #   jump 120
    #   jump 120
    #   jump 120
2025-06-13 07:34:48,553 - print_capture - INFO -     #   jump 120


2025-06-13 07:34:48,553 - print_capture - INFO - 


2025-06-13 07:34:48,553 - print_capture - INFO - 
    while n < x.shape[0]:
    while n < x.shape[0]:
2025-06-13 07:34:48,553 - print_capture - INFO -     while n < x.shape[0]:
    while n < x.shape[0]:
    while n < x.shape[0]:
2025-06-13 07:34:48,553 - print_capture - INFO -     while n < x.shape[0]:


2025-06-13 07:34:48,553 - print_capture - INFO - 


2025-06-13 07:34:48,553 - print_capture - INFO - 
        # --- LINE 1214 --- 
        # --- LINE 1214 --- 
2025-06-13 07:34:48,553 - print_capture - INFO -         # --- LINE 1214 --- 
        # --- LINE 1214 --- 
        # --- LINE 1214 --- 
2025-06-13 07:34:48,553 - print_capture - INFO -         # --- LINE 1214 --- 
        # label 134
        # label 134
2025-06-13 07:34:48,553 - print_capture - INFO -         # label 134
        # label 134
        # label 134
2025-06-13 07:34:48,553 - print_capture - INFO -         # label 134
        #   del $326pred
        #   del $326pred
2025-06-13 07:34:48,553 - print_capture - INFO -         #   del $326pred
        #   del $326pred
        #   del $326pred
2025-06-13 07:34:48,553 - print_capture - INFO -         #   del $326pred
        #   del $132pred
        #   del $132pred
2025-06-13 07:34:48,553 - print_capture - INFO -         #   del $132pred
        #   del $132pred
        #   del $132pred
2025-06-13 07:34:48,553 - print_capture - INFO -         #   del $132pred
        #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:48,553 - print_capture - INFO -         #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:48,553 - print_capture - INFO -         #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
        #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
2025-06-13 07:34:48,553 - print_capture - INFO -         #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
        #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
        #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
2025-06-13 07:34:48,553 - print_capture - INFO -         #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
        #   del $134load_global.0
        #   del $134load_global.0
2025-06-13 07:34:48,553 - print_capture - INFO -         #   del $134load_global.0
        #   del $134load_global.0
        #   del $134load_global.0
2025-06-13 07:34:48,553 - print_capture - INFO -         #   del $134load_global.0
        #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
2025-06-13 07:34:48,553 - print_capture - INFO -         #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
2025-06-13 07:34:48,553 - print_capture - INFO -         #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,553 - print_capture - INFO -         #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,553 - print_capture - INFO -         #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
        #   $148binary_subtract.7 = n.7 - pre_max  :: int64
        #   $148binary_subtract.7 = n.7 - pre_max  :: int64
2025-06-13 07:34:48,553 - print_capture - INFO -         #   $148binary_subtract.7 = n.7 - pre_max  :: int64
        #   $148binary_subtract.7 = n.7 - pre_max  :: int64
        #   $148binary_subtract.7 = n.7 - pre_max  :: int64
2025-06-13 07:34:48,553 - print_capture - INFO -         #   $148binary_subtract.7 = n.7 - pre_max  :: int64
        #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:48,553 - print_capture - INFO -         #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:48,553 - print_capture - INFO -         #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   del $const142.4.1
        #   del $const142.4.1
2025-06-13 07:34:48,553 - print_capture - INFO -         #   del $const142.4.1
        #   del $const142.4.1
        #   del $const142.4.1
2025-06-13 07:34:48,553 - print_capture - INFO -         #   del $const142.4.1
        #   del $148binary_subtract.7
        #   del $148binary_subtract.7
2025-06-13 07:34:48,553 - print_capture - INFO -         #   del $148binary_subtract.7
        #   del $148binary_subtract.7
        #   del $148binary_subtract.7
2025-06-13 07:34:48,553 - print_capture - INFO -         #   del $148binary_subtract.7
        #   del $140load_global.3
        #   del $140load_global.3
2025-06-13 07:34:48,553 - print_capture - INFO -         #   del $140load_global.3
        #   del $140load_global.3
        #   del $140load_global.3
2025-06-13 07:34:48,553 - print_capture - INFO -         #   del $140load_global.3
        #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:48,553 - print_capture - INFO -         #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:48,553 - print_capture - INFO -         #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $158binary_add.12 = n.7 + post_max  :: int64
        #   $158binary_add.12 = n.7 + post_max  :: int64
2025-06-13 07:34:48,553 - print_capture - INFO -         #   $158binary_add.12 = n.7 + post_max  :: int64
        #   $158binary_add.12 = n.7 + post_max  :: int64
        #   $158binary_add.12 = n.7 + post_max  :: int64
2025-06-13 07:34:48,553 - print_capture - INFO -         #   $158binary_add.12 = n.7 + post_max  :: int64
        #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,553 - print_capture - INFO -         #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,553 - print_capture - INFO -         #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,554 - print_capture - INFO -         #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,554 - print_capture - INFO -         #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
        #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
        #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,554 - print_capture - INFO -         #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
        #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
        #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,554 - print_capture - INFO -         #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
        #   del $const164.15.1
        #   del $const164.15.1
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $const164.15.1
        #   del $const164.15.1
        #   del $const164.15.1
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $const164.15.1
        #   del $162load_attr.14
        #   del $162load_attr.14
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $162load_attr.14
        #   del $162load_attr.14
        #   del $162load_attr.14
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $162load_attr.14
        #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:48,554 - print_capture - INFO -         #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:48,554 - print_capture - INFO -         #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   del $166binary_subscr.16
        #   del $166binary_subscr.16
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $166binary_subscr.16
        #   del $166binary_subscr.16
        #   del $166binary_subscr.16
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $166binary_subscr.16
        #   del $158binary_add.12
        #   del $158binary_add.12
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $158binary_add.12
        #   del $158binary_add.12
        #   del $158binary_add.12
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $158binary_add.12
        #   del $152load_global.9
        #   del $152load_global.9
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $152load_global.9
        #   del $152load_global.9
        #   del $152load_global.9
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $152load_global.9
        #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:48,554 - print_capture - INFO -         #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:48,554 - print_capture - INFO -         #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
2025-06-13 07:34:48,554 - print_capture - INFO -         #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
2025-06-13 07:34:48,554 - print_capture - INFO -         #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   del $170build_slice.18
        #   del $170build_slice.18
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $170build_slice.18
        #   del $170build_slice.18
        #   del $170build_slice.18
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $170build_slice.18
        #   del $168call_function.17
        #   del $168call_function.17
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $168call_function.17
        #   del $168call_function.17
        #   del $168call_function.17
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $168call_function.17
        #   del $150call_function.8
        #   del $150call_function.8
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $150call_function.8
        #   del $150call_function.8
        #   del $150call_function.8
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $150call_function.8
        #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(float64, 1d, A)
        #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(float64, 1d, A)
2025-06-13 07:34:48,554 - print_capture - INFO -         #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(float64, 1d, A)
        #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(float64, 1d, A)
        #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(float64, 1d, A)
2025-06-13 07:34:48,554 - print_capture - INFO -         #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(float64, 1d, A)
        #   del $170build_slice.19
        #   del $170build_slice.19
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $170build_slice.19
        #   del $170build_slice.19
        #   del $170build_slice.19
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $170build_slice.19
        #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
        #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:48,554 - print_capture - INFO -         #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
        #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
        #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:48,554 - print_capture - INFO -         #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
        #   del $172binary_subscr.20
        #   del $172binary_subscr.20
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $172binary_subscr.20
        #   del $172binary_subscr.20
        #   del $172binary_subscr.20
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $172binary_subscr.20
        #   del $136load_method.1
        #   del $136load_method.1
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $136load_method.1
        #   del $136load_method.1
        #   del $136load_method.1
2025-06-13 07:34:48,554 - print_capture - INFO -         #   del $136load_method.1


2025-06-13 07:34:48,554 - print_capture - INFO - 


2025-06-13 07:34:48,554 - print_capture - INFO - 
        maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
        maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
2025-06-13 07:34:48,554 - print_capture - INFO -         maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
        maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
        maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
2025-06-13 07:34:48,554 - print_capture - INFO -         maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])


2025-06-13 07:34:48,554 - print_capture - INFO - 


2025-06-13 07:34:48,554 - print_capture - INFO - 
# --- LINE 1215 --- 
# --- LINE 1215 --- 
2025-06-13 07:34:48,554 - print_capture - INFO - # --- LINE 1215 --- 
# --- LINE 1215 --- 
# --- LINE 1215 --- 
2025-06-13 07:34:48,554 - print_capture - INFO - # --- LINE 1215 --- 


2025-06-13 07:34:48,554 - print_capture - INFO - 


2025-06-13 07:34:48,554 - print_capture - INFO - 


2025-06-13 07:34:48,555 - print_capture - INFO - 


2025-06-13 07:34:48,555 - print_capture - INFO - 


2025-06-13 07:34:48,555 - print_capture - INFO - 


2025-06-13 07:34:48,555 - print_capture - INFO - 
        # --- LINE 1216 --- 
        # --- LINE 1216 --- 
2025-06-13 07:34:48,555 - print_capture - INFO -         # --- LINE 1216 --- 
        # --- LINE 1216 --- 
        # --- LINE 1216 --- 
2025-06-13 07:34:48,555 - print_capture - INFO -         # --- LINE 1216 --- 


2025-06-13 07:34:48,555 - print_capture - INFO - 


2025-06-13 07:34:48,555 - print_capture - INFO - 
        # Are we the local max and sufficiently above average?
        # Are we the local max and sufficiently above average?
2025-06-13 07:34:48,555 - print_capture - INFO -         # Are we the local max and sufficiently above average?
        # Are we the local max and sufficiently above average?
        # Are we the local max and sufficiently above average?
2025-06-13 07:34:48,555 - print_capture - INFO -         # Are we the local max and sufficiently above average?


2025-06-13 07:34:48,555 - print_capture - INFO - 


2025-06-13 07:34:48,555 - print_capture - INFO - 
        # --- LINE 1217 --- 
        # --- LINE 1217 --- 
2025-06-13 07:34:48,555 - print_capture - INFO -         # --- LINE 1217 --- 
        # --- LINE 1217 --- 
        # --- LINE 1217 --- 
2025-06-13 07:34:48,555 - print_capture - INFO -         # --- LINE 1217 --- 
        #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float64
        #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float64
2025-06-13 07:34:48,555 - print_capture - INFO -         #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float64
        #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float64
        #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float64
2025-06-13 07:34:48,555 - print_capture - INFO -         #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float64
        #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
        #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
2025-06-13 07:34:48,555 - print_capture - INFO -         #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
        #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
        #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
2025-06-13 07:34:48,555 - print_capture - INFO -         #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
        #   del maxn
        #   del maxn
2025-06-13 07:34:48,555 - print_capture - INFO -         #   del maxn
        #   del maxn
        #   del maxn
2025-06-13 07:34:48,555 - print_capture - INFO -         #   del maxn
        #   del $182binary_subscr.24
        #   del $182binary_subscr.24
2025-06-13 07:34:48,555 - print_capture - INFO -         #   del $182binary_subscr.24
        #   del $182binary_subscr.24
        #   del $182binary_subscr.24
2025-06-13 07:34:48,555 - print_capture - INFO -         #   del $182binary_subscr.24
        #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
2025-06-13 07:34:48,555 - print_capture - INFO -         #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
2025-06-13 07:34:48,555 - print_capture - INFO -         #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   del $186compare_op.26
        #   del $186compare_op.26
2025-06-13 07:34:48,555 - print_capture - INFO -         #   del $186compare_op.26
        #   del $186compare_op.26
        #   del $186compare_op.26
2025-06-13 07:34:48,555 - print_capture - INFO -         #   del $186compare_op.26


2025-06-13 07:34:48,555 - print_capture - INFO - 


2025-06-13 07:34:48,555 - print_capture - INFO - 
        peaks[n] = (x[n] == maxn)
        peaks[n] = (x[n] == maxn)
2025-06-13 07:34:48,555 - print_capture - INFO -         peaks[n] = (x[n] == maxn)
        peaks[n] = (x[n] == maxn)
        peaks[n] = (x[n] == maxn)
2025-06-13 07:34:48,555 - print_capture - INFO -         peaks[n] = (x[n] == maxn)


2025-06-13 07:34:48,555 - print_capture - INFO - 


2025-06-13 07:34:48,555 - print_capture - INFO - 
# --- LINE 1218 --- 
# --- LINE 1218 --- 
2025-06-13 07:34:48,555 - print_capture - INFO - # --- LINE 1218 --- 
# --- LINE 1218 --- 
# --- LINE 1218 --- 
2025-06-13 07:34:48,555 - print_capture - INFO - # --- LINE 1218 --- 


2025-06-13 07:34:48,555 - print_capture - INFO - 


2025-06-13 07:34:48,555 - print_capture - INFO - 


2025-06-13 07:34:48,555 - print_capture - INFO - 


2025-06-13 07:34:48,555 - print_capture - INFO - 


2025-06-13 07:34:48,555 - print_capture - INFO - 


2025-06-13 07:34:48,555 - print_capture - INFO - 
        # --- LINE 1219 --- 
        # --- LINE 1219 --- 
2025-06-13 07:34:48,555 - print_capture - INFO -         # --- LINE 1219 --- 
        # --- LINE 1219 --- 
        # --- LINE 1219 --- 
2025-06-13 07:34:48,555 - print_capture - INFO -         # --- LINE 1219 --- 
        #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,555 - print_capture - INFO -         #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,555 - print_capture - INFO -         #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,555 - print_capture - INFO -         #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,555 - print_capture - INFO -         #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,555 - print_capture - INFO -         #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,556 - print_capture - INFO -         #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   del bool200
        #   del bool200
2025-06-13 07:34:48,556 - print_capture - INFO -         #   del bool200
        #   del bool200
        #   del bool200
2025-06-13 07:34:48,556 - print_capture - INFO -         #   del bool200
        #   del $198binary_subscr.31
        #   del $198binary_subscr.31
2025-06-13 07:34:48,556 - print_capture - INFO -         #   del $198binary_subscr.31
        #   del $198binary_subscr.31
        #   del $198binary_subscr.31
2025-06-13 07:34:48,556 - print_capture - INFO -         #   del $198binary_subscr.31
        #   branch $200pred, 212, 202
        #   branch $200pred, 212, 202
2025-06-13 07:34:48,556 - print_capture - INFO -         #   branch $200pred, 212, 202
        #   branch $200pred, 212, 202
        #   branch $200pred, 212, 202
2025-06-13 07:34:48,556 - print_capture - INFO -         #   branch $200pred, 212, 202


2025-06-13 07:34:48,556 - print_capture - INFO - 


2025-06-13 07:34:48,556 - print_capture - INFO - 
        if not peaks[n]:
        if not peaks[n]:
2025-06-13 07:34:48,556 - print_capture - INFO -         if not peaks[n]:
        if not peaks[n]:
        if not peaks[n]:
2025-06-13 07:34:48,556 - print_capture - INFO -         if not peaks[n]:


2025-06-13 07:34:48,556 - print_capture - INFO - 


2025-06-13 07:34:48,556 - print_capture - INFO - 
            # --- LINE 1220 --- 
            # --- LINE 1220 --- 
2025-06-13 07:34:48,556 - print_capture - INFO -             # --- LINE 1220 --- 
            # --- LINE 1220 --- 
            # --- LINE 1220 --- 
2025-06-13 07:34:48,556 - print_capture - INFO -             # --- LINE 1220 --- 
            # label 202
            # label 202
2025-06-13 07:34:48,556 - print_capture - INFO -             # label 202
            # label 202
            # label 202
2025-06-13 07:34:48,556 - print_capture - INFO -             # label 202
            #   del $200pred
            #   del $200pred
2025-06-13 07:34:48,556 - print_capture - INFO -             #   del $200pred
            #   del $200pred
            #   del $200pred
2025-06-13 07:34:48,556 - print_capture - INFO -             #   del $200pred
            #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,556 - print_capture - INFO -             #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,556 - print_capture - INFO -             #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
            #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:48,556 - print_capture - INFO -             #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:48,556 - print_capture - INFO -             #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   del n.7
            #   del n.7
2025-06-13 07:34:48,556 - print_capture - INFO -             #   del n.7
            #   del n.7
            #   del n.7
2025-06-13 07:34:48,556 - print_capture - INFO -             #   del n.7
            #   del $const204.1.3
            #   del $const204.1.3
2025-06-13 07:34:48,556 - print_capture - INFO -             #   del $const204.1.3
            #   del $const204.1.3
            #   del $const204.1.3
2025-06-13 07:34:48,556 - print_capture - INFO -             #   del $const204.1.3
            #   n.2 = $206inplace_add.2  :: int64
            #   n.2 = $206inplace_add.2  :: int64
2025-06-13 07:34:48,556 - print_capture - INFO -             #   n.2 = $206inplace_add.2  :: int64
            #   n.2 = $206inplace_add.2  :: int64
            #   n.2 = $206inplace_add.2  :: int64
2025-06-13 07:34:48,556 - print_capture - INFO -             #   n.2 = $206inplace_add.2  :: int64
            #   del $206inplace_add.2
            #   del $206inplace_add.2
2025-06-13 07:34:48,556 - print_capture - INFO -             #   del $206inplace_add.2
            #   del $206inplace_add.2
            #   del $206inplace_add.2
2025-06-13 07:34:48,556 - print_capture - INFO -             #   del $206inplace_add.2
            #   n.6 = n.2  :: int64
            #   n.6 = n.2  :: int64
2025-06-13 07:34:48,556 - print_capture - INFO -             #   n.6 = n.2  :: int64
            #   n.6 = n.2  :: int64
            #   n.6 = n.2  :: int64
2025-06-13 07:34:48,556 - print_capture - INFO -             #   n.6 = n.2  :: int64
            #   del n.2
            #   del n.2
2025-06-13 07:34:48,556 - print_capture - INFO -             #   del n.2
            #   del n.2
            #   del n.2
2025-06-13 07:34:48,556 - print_capture - INFO -             #   del n.2


2025-06-13 07:34:48,556 - print_capture - INFO - 


2025-06-13 07:34:48,556 - print_capture - INFO - 
            n += 1
            n += 1
2025-06-13 07:34:48,556 - print_capture - INFO -             n += 1
            n += 1
            n += 1
2025-06-13 07:34:48,556 - print_capture - INFO -             n += 1


2025-06-13 07:34:48,556 - print_capture - INFO - 


2025-06-13 07:34:48,556 - print_capture - INFO - 
            # --- LINE 1221 --- 
            # --- LINE 1221 --- 
2025-06-13 07:34:48,556 - print_capture - INFO -             # --- LINE 1221 --- 
            # --- LINE 1221 --- 
            # --- LINE 1221 --- 
2025-06-13 07:34:48,556 - print_capture - INFO -             # --- LINE 1221 --- 
            #   jump 333
            #   jump 333
2025-06-13 07:34:48,556 - print_capture - INFO -             #   jump 333
            #   jump 333
            #   jump 333
2025-06-13 07:34:48,556 - print_capture - INFO -             #   jump 333


2025-06-13 07:34:48,556 - print_capture - INFO - 


2025-06-13 07:34:48,556 - print_capture - INFO - 
            continue
            continue
2025-06-13 07:34:48,557 - print_capture - INFO -             continue
            continue
            continue
2025-06-13 07:34:48,557 - print_capture - INFO -             continue


2025-06-13 07:34:48,557 - print_capture - INFO - 


2025-06-13 07:34:48,557 - print_capture - INFO - 
# --- LINE 1222 --- 
# --- LINE 1222 --- 
2025-06-13 07:34:48,557 - print_capture - INFO - # --- LINE 1222 --- 
# --- LINE 1222 --- 
# --- LINE 1222 --- 
2025-06-13 07:34:48,557 - print_capture - INFO - # --- LINE 1222 --- 


2025-06-13 07:34:48,557 - print_capture - INFO - 


2025-06-13 07:34:48,557 - print_capture - INFO - 


2025-06-13 07:34:48,557 - print_capture - INFO - 


2025-06-13 07:34:48,557 - print_capture - INFO - 


2025-06-13 07:34:48,557 - print_capture - INFO - 


2025-06-13 07:34:48,557 - print_capture - INFO - 
        # --- LINE 1223 --- 
        # --- LINE 1223 --- 
2025-06-13 07:34:48,557 - print_capture - INFO -         # --- LINE 1223 --- 
        # --- LINE 1223 --- 
        # --- LINE 1223 --- 
2025-06-13 07:34:48,557 - print_capture - INFO -         # --- LINE 1223 --- 
        # label 212
        # label 212
2025-06-13 07:34:48,557 - print_capture - INFO -         # label 212
        # label 212
        # label 212
2025-06-13 07:34:48,557 - print_capture - INFO -         # label 212
        #   del $200pred
        #   del $200pred
2025-06-13 07:34:48,557 - print_capture - INFO -         #   del $200pred
        #   del $200pred
        #   del $200pred
2025-06-13 07:34:48,557 - print_capture - INFO -         #   del $200pred
        #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
        #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
        #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
        #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
        #   del $212load_global.0
        #   del $212load_global.0
2025-06-13 07:34:48,557 - print_capture - INFO -         #   del $212load_global.0
        #   del $212load_global.0
        #   del $212load_global.0
2025-06-13 07:34:48,557 - print_capture - INFO -         #   del $212load_global.0
        #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
        #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
        #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
        #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
        #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
        #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   del $const220.4.1
        #   del $const220.4.1
2025-06-13 07:34:48,557 - print_capture - INFO -         #   del $const220.4.1
        #   del $const220.4.1
        #   del $const220.4.1
2025-06-13 07:34:48,557 - print_capture - INFO -         #   del $const220.4.1
        #   del $226binary_subtract.7
        #   del $226binary_subtract.7
2025-06-13 07:34:48,557 - print_capture - INFO -         #   del $226binary_subtract.7
        #   del $226binary_subtract.7
        #   del $226binary_subtract.7
2025-06-13 07:34:48,557 - print_capture - INFO -         #   del $226binary_subtract.7
        #   del $218load_global.3
        #   del $218load_global.3
2025-06-13 07:34:48,557 - print_capture - INFO -         #   del $218load_global.3
        #   del $218load_global.3
        #   del $218load_global.3
2025-06-13 07:34:48,557 - print_capture - INFO -         #   del $218load_global.3
        #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $236binary_add.12 = n.7 + post_avg  :: int64
        #   $236binary_add.12 = n.7 + post_avg  :: int64
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $236binary_add.12 = n.7 + post_avg  :: int64
        #   $236binary_add.12 = n.7 + post_avg  :: int64
        #   $236binary_add.12 = n.7 + post_avg  :: int64
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $236binary_add.12 = n.7 + post_avg  :: int64
        #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
        #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
        #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,557 - print_capture - INFO -         #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
        #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
        #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:48,558 - print_capture - INFO -         #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
        #   del $const242.15.1
        #   del $const242.15.1
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $const242.15.1
        #   del $const242.15.1
        #   del $const242.15.1
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $const242.15.1
        #   del $240load_attr.14
        #   del $240load_attr.14
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $240load_attr.14
        #   del $240load_attr.14
        #   del $240load_attr.14
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $240load_attr.14
        #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:48,558 - print_capture - INFO -         #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:48,558 - print_capture - INFO -         #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   del $244binary_subscr.16
        #   del $244binary_subscr.16
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $244binary_subscr.16
        #   del $244binary_subscr.16
        #   del $244binary_subscr.16
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $244binary_subscr.16
        #   del $236binary_add.12
        #   del $236binary_add.12
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $236binary_add.12
        #   del $236binary_add.12
        #   del $236binary_add.12
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $236binary_add.12
        #   del $230load_global.9
        #   del $230load_global.9
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $230load_global.9
        #   del $230load_global.9
        #   del $230load_global.9
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $230load_global.9
        #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:48,558 - print_capture - INFO -         #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:48,558 - print_capture - INFO -         #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
2025-06-13 07:34:48,558 - print_capture - INFO -         #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
2025-06-13 07:34:48,558 - print_capture - INFO -         #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   del $248build_slice.18
        #   del $248build_slice.18
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $248build_slice.18
        #   del $248build_slice.18
        #   del $248build_slice.18
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $248build_slice.18
        #   del $246call_function.17
        #   del $246call_function.17
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $246call_function.17
        #   del $246call_function.17
        #   del $246call_function.17
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $246call_function.17
        #   del $228call_function.8
        #   del $228call_function.8
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $228call_function.8
        #   del $228call_function.8
        #   del $228call_function.8
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $228call_function.8
        #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(float64, 1d, A)
        #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(float64, 1d, A)
2025-06-13 07:34:48,558 - print_capture - INFO -         #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(float64, 1d, A)
        #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(float64, 1d, A)
        #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(float64, 1d, A)
2025-06-13 07:34:48,558 - print_capture - INFO -         #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(float64, 1d, A)
        #   del $248build_slice.19
        #   del $248build_slice.19
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $248build_slice.19
        #   del $248build_slice.19
        #   del $248build_slice.19
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $248build_slice.19
        #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
        #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:48,558 - print_capture - INFO -         #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
        #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
        #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:48,558 - print_capture - INFO -         #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(float64, 1, 'A', False, aligned=True),) -> float64
        #   del $250binary_subscr.20
        #   del $250binary_subscr.20
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $250binary_subscr.20
        #   del $250binary_subscr.20
        #   del $250binary_subscr.20
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $250binary_subscr.20
        #   del $214load_method.1
        #   del $214load_method.1
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $214load_method.1
        #   del $214load_method.1
        #   del $214load_method.1
2025-06-13 07:34:48,558 - print_capture - INFO -         #   del $214load_method.1


2025-06-13 07:34:48,558 - print_capture - INFO - 


2025-06-13 07:34:48,558 - print_capture - INFO - 
        avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
        avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
2025-06-13 07:34:48,558 - print_capture - INFO -         avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
        avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
        avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
2025-06-13 07:34:48,558 - print_capture - INFO -         avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])


2025-06-13 07:34:48,558 - print_capture - INFO - 


2025-06-13 07:34:48,558 - print_capture - INFO - 
        # --- LINE 1224 --- 
        # --- LINE 1224 --- 
2025-06-13 07:34:48,558 - print_capture - INFO -         # --- LINE 1224 --- 
        # --- LINE 1224 --- 
        # --- LINE 1224 --- 
2025-06-13 07:34:48,558 - print_capture - INFO -         # --- LINE 1224 --- 
        #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,558 - print_capture - INFO -         #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,558 - print_capture - INFO -         #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float64
        #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float64
2025-06-13 07:34:48,558 - print_capture - INFO -         #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float64
        #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float64
        #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float64
2025-06-13 07:34:48,558 - print_capture - INFO -         #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: float64
        #   $274binary_add.32 = avgn + delta  :: float64
        #   $274binary_add.32 = avgn + delta  :: float64
2025-06-13 07:34:48,558 - print_capture - INFO -         #   $274binary_add.32 = avgn + delta  :: float64
        #   $274binary_add.32 = avgn + delta  :: float64
        #   $274binary_add.32 = avgn + delta  :: float64
2025-06-13 07:34:48,559 - print_capture - INFO -         #   $274binary_add.32 = avgn + delta  :: float64
        #   del avgn
        #   del avgn
2025-06-13 07:34:48,559 - print_capture - INFO -         #   del avgn
        #   del avgn
        #   del avgn
2025-06-13 07:34:48,559 - print_capture - INFO -         #   del avgn
        #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
        #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
2025-06-13 07:34:48,559 - print_capture - INFO -         #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
        #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
        #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
2025-06-13 07:34:48,559 - print_capture - INFO -         #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
        #   del $274binary_add.32
        #   del $274binary_add.32
2025-06-13 07:34:48,559 - print_capture - INFO -         #   del $274binary_add.32
        #   del $274binary_add.32
        #   del $274binary_add.32
2025-06-13 07:34:48,559 - print_capture - INFO -         #   del $274binary_add.32
        #   del $268binary_subscr.29
        #   del $268binary_subscr.29
2025-06-13 07:34:48,559 - print_capture - INFO -         #   del $268binary_subscr.29
        #   del $268binary_subscr.29
        #   del $268binary_subscr.29
2025-06-13 07:34:48,559 - print_capture - INFO -         #   del $268binary_subscr.29
        #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
        #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
2025-06-13 07:34:48,559 - print_capture - INFO -         #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
        #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
        #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
2025-06-13 07:34:48,559 - print_capture - INFO -         #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
        #   del $276compare_op.33
        #   del $276compare_op.33
2025-06-13 07:34:48,559 - print_capture - INFO -         #   del $276compare_op.33
        #   del $276compare_op.33
        #   del $276compare_op.33
2025-06-13 07:34:48,559 - print_capture - INFO -         #   del $276compare_op.33
        #   del $262binary_subscr.26
        #   del $262binary_subscr.26
2025-06-13 07:34:48,559 - print_capture - INFO -         #   del $262binary_subscr.26
        #   del $262binary_subscr.26
        #   del $262binary_subscr.26
2025-06-13 07:34:48,559 - print_capture - INFO -         #   del $262binary_subscr.26
        #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
2025-06-13 07:34:48,559 - print_capture - INFO -         #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
2025-06-13 07:34:48,559 - print_capture - INFO -         #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   del $278inplace_and.34
        #   del $278inplace_and.34
2025-06-13 07:34:48,559 - print_capture - INFO -         #   del $278inplace_and.34
        #   del $278inplace_and.34
        #   del $278inplace_and.34
2025-06-13 07:34:48,559 - print_capture - INFO -         #   del $278inplace_and.34


2025-06-13 07:34:48,559 - print_capture - INFO - 


2025-06-13 07:34:48,559 - print_capture - INFO - 
        peaks[n] &= (x[n] >= avgn + delta)
        peaks[n] &= (x[n] >= avgn + delta)
2025-06-13 07:34:48,559 - print_capture - INFO -         peaks[n] &= (x[n] >= avgn + delta)
        peaks[n] &= (x[n] >= avgn + delta)
        peaks[n] &= (x[n] >= avgn + delta)
2025-06-13 07:34:48,559 - print_capture - INFO -         peaks[n] &= (x[n] >= avgn + delta)


2025-06-13 07:34:48,559 - print_capture - INFO - 


2025-06-13 07:34:48,559 - print_capture - INFO - 
# --- LINE 1225 --- 
# --- LINE 1225 --- 
2025-06-13 07:34:48,559 - print_capture - INFO - # --- LINE 1225 --- 
# --- LINE 1225 --- 
# --- LINE 1225 --- 
2025-06-13 07:34:48,559 - print_capture - INFO - # --- LINE 1225 --- 


2025-06-13 07:34:48,559 - print_capture - INFO - 


2025-06-13 07:34:48,559 - print_capture - INFO - 


2025-06-13 07:34:48,559 - print_capture - INFO - 


2025-06-13 07:34:48,559 - print_capture - INFO - 


2025-06-13 07:34:48,559 - print_capture - INFO - 


2025-06-13 07:34:48,559 - print_capture - INFO - 
        # --- LINE 1226 --- 
        # --- LINE 1226 --- 
2025-06-13 07:34:48,559 - print_capture - INFO -         # --- LINE 1226 --- 
        # --- LINE 1226 --- 
        # --- LINE 1226 --- 
2025-06-13 07:34:48,559 - print_capture - INFO -         # --- LINE 1226 --- 
        #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,559 - print_capture - INFO -         #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:48,559 - print_capture - INFO -         #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,559 - print_capture - INFO -         #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:48,559 - print_capture - INFO -         #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,559 - print_capture - INFO -         #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:48,559 - print_capture - INFO -         #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   del bool290
        #   del bool290
2025-06-13 07:34:48,559 - print_capture - INFO -         #   del bool290
        #   del bool290
        #   del bool290
2025-06-13 07:34:48,559 - print_capture - INFO -         #   del bool290
        #   del $288binary_subscr.37
        #   del $288binary_subscr.37
2025-06-13 07:34:48,559 - print_capture - INFO -         #   del $288binary_subscr.37
        #   del $288binary_subscr.37
        #   del $288binary_subscr.37
2025-06-13 07:34:48,559 - print_capture - INFO -         #   del $288binary_subscr.37
        #   branch $290pred, 302, 292
        #   branch $290pred, 302, 292
2025-06-13 07:34:48,559 - print_capture - INFO -         #   branch $290pred, 302, 292
        #   branch $290pred, 302, 292
        #   branch $290pred, 302, 292
2025-06-13 07:34:48,559 - print_capture - INFO -         #   branch $290pred, 302, 292


2025-06-13 07:34:48,560 - print_capture - INFO - 


2025-06-13 07:34:48,560 - print_capture - INFO - 
        if not peaks[n]:
        if not peaks[n]:
2025-06-13 07:34:48,560 - print_capture - INFO -         if not peaks[n]:
        if not peaks[n]:
        if not peaks[n]:
2025-06-13 07:34:48,560 - print_capture - INFO -         if not peaks[n]:


2025-06-13 07:34:48,560 - print_capture - INFO - 


2025-06-13 07:34:48,560 - print_capture - INFO - 
            # --- LINE 1227 --- 
            # --- LINE 1227 --- 
2025-06-13 07:34:48,560 - print_capture - INFO -             # --- LINE 1227 --- 
            # --- LINE 1227 --- 
            # --- LINE 1227 --- 
2025-06-13 07:34:48,560 - print_capture - INFO -             # --- LINE 1227 --- 
            # label 292
            # label 292
2025-06-13 07:34:48,560 - print_capture - INFO -             # label 292
            # label 292
            # label 292
2025-06-13 07:34:48,560 - print_capture - INFO -             # label 292
            #   del $290pred
            #   del $290pred
2025-06-13 07:34:48,560 - print_capture - INFO -             #   del $290pred
            #   del $290pred
            #   del $290pred
2025-06-13 07:34:48,560 - print_capture - INFO -             #   del $290pred
            #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,560 - print_capture - INFO -             #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,560 - print_capture - INFO -             #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
            #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:48,560 - print_capture - INFO -             #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:48,560 - print_capture - INFO -             #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   del n.7
            #   del n.7
2025-06-13 07:34:48,560 - print_capture - INFO -             #   del n.7
            #   del n.7
            #   del n.7
2025-06-13 07:34:48,560 - print_capture - INFO -             #   del n.7
            #   del $const294.1.3
            #   del $const294.1.3
2025-06-13 07:34:48,560 - print_capture - INFO -             #   del $const294.1.3
            #   del $const294.1.3
            #   del $const294.1.3
2025-06-13 07:34:48,560 - print_capture - INFO -             #   del $const294.1.3
            #   n.3 = $296inplace_add.2  :: int64
            #   n.3 = $296inplace_add.2  :: int64
2025-06-13 07:34:48,560 - print_capture - INFO -             #   n.3 = $296inplace_add.2  :: int64
            #   n.3 = $296inplace_add.2  :: int64
            #   n.3 = $296inplace_add.2  :: int64
2025-06-13 07:34:48,560 - print_capture - INFO -             #   n.3 = $296inplace_add.2  :: int64
            #   del $296inplace_add.2
            #   del $296inplace_add.2
2025-06-13 07:34:48,560 - print_capture - INFO -             #   del $296inplace_add.2
            #   del $296inplace_add.2
            #   del $296inplace_add.2
2025-06-13 07:34:48,560 - print_capture - INFO -             #   del $296inplace_add.2
            #   n.6 = n.3  :: int64
            #   n.6 = n.3  :: int64
2025-06-13 07:34:48,560 - print_capture - INFO -             #   n.6 = n.3  :: int64
            #   n.6 = n.3  :: int64
            #   n.6 = n.3  :: int64
2025-06-13 07:34:48,560 - print_capture - INFO -             #   n.6 = n.3  :: int64
            #   del n.3
            #   del n.3
2025-06-13 07:34:48,560 - print_capture - INFO -             #   del n.3
            #   del n.3
            #   del n.3
2025-06-13 07:34:48,560 - print_capture - INFO -             #   del n.3


2025-06-13 07:34:48,560 - print_capture - INFO - 


2025-06-13 07:34:48,560 - print_capture - INFO - 
            n += 1
            n += 1
2025-06-13 07:34:48,560 - print_capture - INFO -             n += 1
            n += 1
            n += 1
2025-06-13 07:34:48,560 - print_capture - INFO -             n += 1


2025-06-13 07:34:48,560 - print_capture - INFO - 


2025-06-13 07:34:48,560 - print_capture - INFO - 
            # --- LINE 1228 --- 
            # --- LINE 1228 --- 
2025-06-13 07:34:48,560 - print_capture - INFO -             # --- LINE 1228 --- 
            # --- LINE 1228 --- 
            # --- LINE 1228 --- 
2025-06-13 07:34:48,560 - print_capture - INFO -             # --- LINE 1228 --- 
            #   jump 333
            #   jump 333
2025-06-13 07:34:48,560 - print_capture - INFO -             #   jump 333
            #   jump 333
            #   jump 333
2025-06-13 07:34:48,560 - print_capture - INFO -             #   jump 333


2025-06-13 07:34:48,560 - print_capture - INFO - 


2025-06-13 07:34:48,560 - print_capture - INFO - 
            continue
            continue
2025-06-13 07:34:48,560 - print_capture - INFO -             continue
            continue
            continue
2025-06-13 07:34:48,560 - print_capture - INFO -             continue


2025-06-13 07:34:48,560 - print_capture - INFO - 


2025-06-13 07:34:48,560 - print_capture - INFO - 
# --- LINE 1229 --- 
# --- LINE 1229 --- 
2025-06-13 07:34:48,560 - print_capture - INFO - # --- LINE 1229 --- 
# --- LINE 1229 --- 
# --- LINE 1229 --- 
2025-06-13 07:34:48,560 - print_capture - INFO - # --- LINE 1229 --- 


2025-06-13 07:34:48,561 - print_capture - INFO - 


2025-06-13 07:34:48,561 - print_capture - INFO - 


2025-06-13 07:34:48,561 - print_capture - INFO - 


2025-06-13 07:34:48,561 - print_capture - INFO - 


2025-06-13 07:34:48,561 - print_capture - INFO - 


2025-06-13 07:34:48,561 - print_capture - INFO - 
        # --- LINE 1230 --- 
        # --- LINE 1230 --- 
2025-06-13 07:34:48,561 - print_capture - INFO -         # --- LINE 1230 --- 
        # --- LINE 1230 --- 
        # --- LINE 1230 --- 
2025-06-13 07:34:48,561 - print_capture - INFO -         # --- LINE 1230 --- 


2025-06-13 07:34:48,561 - print_capture - INFO - 


2025-06-13 07:34:48,561 - print_capture - INFO - 
        # Skip the next `wait` frames
        # Skip the next `wait` frames
2025-06-13 07:34:48,561 - print_capture - INFO -         # Skip the next `wait` frames
        # Skip the next `wait` frames
        # Skip the next `wait` frames
2025-06-13 07:34:48,561 - print_capture - INFO -         # Skip the next `wait` frames


2025-06-13 07:34:48,561 - print_capture - INFO - 


2025-06-13 07:34:48,561 - print_capture - INFO - 
        # --- LINE 1231 --- 
        # --- LINE 1231 --- 
2025-06-13 07:34:48,561 - print_capture - INFO -         # --- LINE 1231 --- 
        # --- LINE 1231 --- 
        # --- LINE 1231 --- 
2025-06-13 07:34:48,561 - print_capture - INFO -         # --- LINE 1231 --- 
        # label 302
        # label 302
2025-06-13 07:34:48,561 - print_capture - INFO -         # label 302
        # label 302
        # label 302
2025-06-13 07:34:48,561 - print_capture - INFO -         # label 302
        #   del $290pred
        #   del $290pred
2025-06-13 07:34:48,561 - print_capture - INFO -         #   del $290pred
        #   del $290pred
        #   del $290pred
2025-06-13 07:34:48,561 - print_capture - INFO -         #   del $290pred
        #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
        #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,561 - print_capture - INFO -         #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
        #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
        #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:48,561 - print_capture - INFO -         #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
        #   $308binary_add.3 = wait + $const306.2.3  :: int64
        #   $308binary_add.3 = wait + $const306.2.3  :: int64
2025-06-13 07:34:48,561 - print_capture - INFO -         #   $308binary_add.3 = wait + $const306.2.3  :: int64
        #   $308binary_add.3 = wait + $const306.2.3  :: int64
        #   $308binary_add.3 = wait + $const306.2.3  :: int64
2025-06-13 07:34:48,561 - print_capture - INFO -         #   $308binary_add.3 = wait + $const306.2.3  :: int64
        #   del $const306.2.3
        #   del $const306.2.3
2025-06-13 07:34:48,561 - print_capture - INFO -         #   del $const306.2.3
        #   del $const306.2.3
        #   del $const306.2.3
2025-06-13 07:34:48,561 - print_capture - INFO -         #   del $const306.2.3
        #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
        #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:48,561 - print_capture - INFO -         #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
        #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
        #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:48,561 - print_capture - INFO -         #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
        #   del $308binary_add.3
        #   del $308binary_add.3
2025-06-13 07:34:48,561 - print_capture - INFO -         #   del $308binary_add.3
        #   del $308binary_add.3
        #   del $308binary_add.3
2025-06-13 07:34:48,561 - print_capture - INFO -         #   del $308binary_add.3
        #   n.4 = $310inplace_add.4  :: int64
        #   n.4 = $310inplace_add.4  :: int64
2025-06-13 07:34:48,561 - print_capture - INFO -         #   n.4 = $310inplace_add.4  :: int64
        #   n.4 = $310inplace_add.4  :: int64
        #   n.4 = $310inplace_add.4  :: int64
2025-06-13 07:34:48,561 - print_capture - INFO -         #   n.4 = $310inplace_add.4  :: int64
        #   del $310inplace_add.4
        #   del $310inplace_add.4
2025-06-13 07:34:48,561 - print_capture - INFO -         #   del $310inplace_add.4
        #   del $310inplace_add.4
        #   del $310inplace_add.4
2025-06-13 07:34:48,561 - print_capture - INFO -         #   del $310inplace_add.4
        #   n.7 = n.4  :: int64
        #   n.7 = n.4  :: int64
2025-06-13 07:34:48,561 - print_capture - INFO -         #   n.7 = n.4  :: int64
        #   n.7 = n.4  :: int64
        #   n.7 = n.4  :: int64
2025-06-13 07:34:48,561 - print_capture - INFO -         #   n.7 = n.4  :: int64


2025-06-13 07:34:48,561 - print_capture - INFO - 


2025-06-13 07:34:48,561 - print_capture - INFO - 
        n += wait + 1
        n += wait + 1
2025-06-13 07:34:48,561 - print_capture - INFO -         n += wait + 1
        n += wait + 1
        n += wait + 1
2025-06-13 07:34:48,561 - print_capture - INFO -         n += wait + 1


2025-06-13 07:34:48,561 - print_capture - INFO - 


2025-06-13 07:34:48,561 - print_capture - INFO - 
label 0:
label 0:
2025-06-13 07:34:48,566 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:48,566 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:48,566 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:48,566 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    pre_max = arg(1, name=pre_max)           ['pre_max']
2025-06-13 07:34:48,566 - print_capture - INFO -     pre_max = arg(1, name=pre_max)           ['pre_max']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    pre_max = arg(1, name=pre_max)           ['pre_max']
2025-06-13 07:34:48,566 - print_capture - INFO -     pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    post_max = arg(2, name=post_max)         ['post_max']
2025-06-13 07:34:48,566 - print_capture - INFO -     post_max = arg(2, name=post_max)         ['post_max']
    post_max = arg(2, name=post_max)         ['post_max']
    post_max = arg(2, name=post_max)         ['post_max']
2025-06-13 07:34:48,566 - print_capture - INFO -     post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
2025-06-13 07:34:48,566 - print_capture - INFO -     pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
2025-06-13 07:34:48,566 - print_capture - INFO -     pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
2025-06-13 07:34:48,566 - print_capture - INFO -     post_avg = arg(4, name=post_avg)         ['post_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
2025-06-13 07:34:48,566 - print_capture - INFO -     post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    delta = arg(5, name=delta)               ['delta']
2025-06-13 07:34:48,566 - print_capture - INFO -     delta = arg(5, name=delta)               ['delta']
    delta = arg(5, name=delta)               ['delta']
    delta = arg(5, name=delta)               ['delta']
2025-06-13 07:34:48,566 - print_capture - INFO -     delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    wait = arg(6, name=wait)                 ['wait']
2025-06-13 07:34:48,566 - print_capture - INFO -     wait = arg(6, name=wait)                 ['wait']
    wait = arg(6, name=wait)                 ['wait']
    wait = arg(6, name=wait)                 ['wait']
2025-06-13 07:34:48,566 - print_capture - INFO -     wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    peaks = arg(7, name=peaks)               ['peaks']
2025-06-13 07:34:48,566 - print_capture - INFO -     peaks = arg(7, name=peaks)               ['peaks']
    peaks = arg(7, name=peaks)               ['peaks']
    peaks = arg(7, name=peaks)               ['peaks']
2025-06-13 07:34:48,566 - print_capture - INFO -     peaks = arg(7, name=peaks)               ['peaks']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:34:48,566 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:34:48,566 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:34:48,566 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:34:48,566 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
2025-06-13 07:34:48,566 - print_capture - INFO -     $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
2025-06-13 07:34:48,566 - print_capture - INFO -     $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
2025-06-13 07:34:48,566 - print_capture - INFO -     $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
2025-06-13 07:34:48,566 - print_capture - INFO -     $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
    $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
2025-06-13 07:34:48,566 - print_capture - INFO -     $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
    $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
    $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
2025-06-13 07:34:48,566 - print_capture - INFO -     $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
2025-06-13 07:34:48,566 - print_capture - INFO -     $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
2025-06-13 07:34:48,567 - print_capture - INFO -     $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
2025-06-13 07:34:48,567 - print_capture - INFO -     $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
2025-06-13 07:34:48,567 - print_capture - INFO -     $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $const24.11.1 = const(int, 0)            ['$const24.11.1']
    $const24.11.1 = const(int, 0)            ['$const24.11.1']
2025-06-13 07:34:48,567 - print_capture - INFO -     $const24.11.1 = const(int, 0)            ['$const24.11.1']
    $const24.11.1 = const(int, 0)            ['$const24.11.1']
    $const24.11.1 = const(int, 0)            ['$const24.11.1']
2025-06-13 07:34:48,567 - print_capture - INFO -     $const24.11.1 = const(int, 0)            ['$const24.11.1']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
2025-06-13 07:34:48,567 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
2025-06-13 07:34:48,567 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
2025-06-13 07:34:48,567 - print_capture - INFO -     $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
2025-06-13 07:34:48,567 - print_capture - INFO -     $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
2025-06-13 07:34:48,567 - print_capture - INFO -     $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
2025-06-13 07:34:48,567 - print_capture - INFO -     $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
    $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
2025-06-13 07:34:48,567 - print_capture - INFO -     $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
    $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
    $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
2025-06-13 07:34:48,567 - print_capture - INFO -     $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
2025-06-13 07:34:48,567 - print_capture - INFO -     $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
2025-06-13 07:34:48,567 - print_capture - INFO -     $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
2025-06-13 07:34:48,567 - print_capture - INFO -     $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
2025-06-13 07:34:48,567 - print_capture - INFO -     $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
2025-06-13 07:34:48,567 - print_capture - INFO -     $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
2025-06-13 07:34:48,567 - print_capture - INFO -     $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $const40.20.1 = const(int, 0)            ['$const40.20.1']
    $const40.20.1 = const(int, 0)            ['$const40.20.1']
2025-06-13 07:34:48,567 - print_capture - INFO -     $const40.20.1 = const(int, 0)            ['$const40.20.1']
    $const40.20.1 = const(int, 0)            ['$const40.20.1']
    $const40.20.1 = const(int, 0)            ['$const40.20.1']
2025-06-13 07:34:48,567 - print_capture - INFO -     $const40.20.1 = const(int, 0)            ['$const40.20.1']
    peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
    peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
2025-06-13 07:34:48,567 - print_capture - INFO -     peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
    peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
    peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
2025-06-13 07:34:48,567 - print_capture - INFO -     peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
    $const46.22.1 = const(int, 0)            ['$const46.22.1']
    $const46.22.1 = const(int, 0)            ['$const46.22.1']
2025-06-13 07:34:48,567 - print_capture - INFO -     $const46.22.1 = const(int, 0)            ['$const46.22.1']
    $const46.22.1 = const(int, 0)            ['$const46.22.1']
    $const46.22.1 = const(int, 0)            ['$const46.22.1']
2025-06-13 07:34:48,567 - print_capture - INFO -     $const46.22.1 = const(int, 0)            ['$const46.22.1']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
2025-06-13 07:34:48,567 - print_capture - INFO -     $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
2025-06-13 07:34:48,567 - print_capture - INFO -     $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
    $const54.27.1 = const(int, 0)            ['$const54.27.1']
    $const54.27.1 = const(int, 0)            ['$const54.27.1']
2025-06-13 07:34:48,567 - print_capture - INFO -     $const54.27.1 = const(int, 0)            ['$const54.27.1']
    $const54.27.1 = const(int, 0)            ['$const54.27.1']
    $const54.27.1 = const(int, 0)            ['$const54.27.1']
2025-06-13 07:34:48,567 - print_capture - INFO -     $const54.27.1 = const(int, 0)            ['$const54.27.1']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
2025-06-13 07:34:48,567 - print_capture - INFO -     $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
2025-06-13 07:34:48,567 - print_capture - INFO -     $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
    $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
2025-06-13 07:34:48,567 - print_capture - INFO -     $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
2025-06-13 07:34:48,740 - print_capture - INFO -     $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
2025-06-13 07:34:48,740 - print_capture - INFO -     $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
2025-06-13 07:34:48,740 - print_capture - INFO -     $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
    $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
2025-06-13 07:34:48,740 - print_capture - INFO -     $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
    $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
    $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
2025-06-13 07:34:48,741 - print_capture - INFO -     $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
2025-06-13 07:34:48,741 - print_capture - INFO -     $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
2025-06-13 07:34:48,741 - print_capture - INFO -     $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
2025-06-13 07:34:48,741 - print_capture - INFO -     $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
2025-06-13 07:34:48,741 - print_capture - INFO -     $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $const74.37.1 = const(int, 0)            ['$const74.37.1']
    $const74.37.1 = const(int, 0)            ['$const74.37.1']
2025-06-13 07:34:48,741 - print_capture - INFO -     $const74.37.1 = const(int, 0)            ['$const74.37.1']
    $const74.37.1 = const(int, 0)            ['$const74.37.1']
    $const74.37.1 = const(int, 0)            ['$const74.37.1']
2025-06-13 07:34:48,741 - print_capture - INFO -     $const74.37.1 = const(int, 0)            ['$const74.37.1']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
2025-06-13 07:34:48,742 - print_capture - INFO -     $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
2025-06-13 07:34:48,742 - print_capture - INFO -     $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
2025-06-13 07:34:48,742 - print_capture - INFO -     $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
2025-06-13 07:34:48,742 - print_capture - INFO -     $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
2025-06-13 07:34:48,742 - print_capture - INFO -     $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
2025-06-13 07:34:48,742 - print_capture - INFO -     $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
    $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
2025-06-13 07:34:48,743 - print_capture - INFO -     $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
    $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
    $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
2025-06-13 07:34:48,743 - print_capture - INFO -     $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
2025-06-13 07:34:48,743 - print_capture - INFO -     $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
2025-06-13 07:34:48,743 - print_capture - INFO -     $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
2025-06-13 07:34:48,743 - print_capture - INFO -     $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
2025-06-13 07:34:48,743 - print_capture - INFO -     $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
2025-06-13 07:34:48,744 - print_capture - INFO -     $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
2025-06-13 07:34:48,744 - print_capture - INFO -     $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
2025-06-13 07:34:48,744 - print_capture - INFO -     $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
2025-06-13 07:34:48,744 - print_capture - INFO -     $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
2025-06-13 07:34:48,744 - print_capture - INFO -     $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
2025-06-13 07:34:48,744 - print_capture - INFO -     $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
    peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
2025-06-13 07:34:48,744 - print_capture - INFO -     peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
    peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
    peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
2025-06-13 07:34:48,745 - print_capture - INFO -     peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
    $const100.49.1 = const(int, 0)           ['$const100.49.1']
    $const100.49.1 = const(int, 0)           ['$const100.49.1']
2025-06-13 07:34:48,745 - print_capture - INFO -     $const100.49.1 = const(int, 0)           ['$const100.49.1']
    $const100.49.1 = const(int, 0)           ['$const100.49.1']
    $const100.49.1 = const(int, 0)           ['$const100.49.1']
2025-06-13 07:34:48,745 - print_capture - INFO -     $const100.49.1 = const(int, 0)           ['$const100.49.1']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
2025-06-13 07:34:48,745 - print_capture - INFO -     $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
2025-06-13 07:34:48,745 - print_capture - INFO -     $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
2025-06-13 07:34:48,745 - print_capture - INFO -     bool104 = global(bool: <class 'bool'>)   ['bool104']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
2025-06-13 07:34:48,745 - print_capture - INFO -     bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
2025-06-13 07:34:48,746 - print_capture - INFO -     $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
2025-06-13 07:34:48,746 - print_capture - INFO -     $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    branch $104pred, 106, 116                ['$104pred']
    branch $104pred, 106, 116                ['$104pred']
2025-06-13 07:34:48,746 - print_capture - INFO -     branch $104pred, 106, 116                ['$104pred']
    branch $104pred, 106, 116                ['$104pred']
    branch $104pred, 106, 116                ['$104pred']
2025-06-13 07:34:48,746 - print_capture - INFO -     branch $104pred, 106, 116                ['$104pred']
label 106:
label 106:
2025-06-13 07:34:48,746 - print_capture - INFO - label 106:
label 106:
label 106:
2025-06-13 07:34:48,746 - print_capture - INFO - label 106:
    $const108.1.3 = const(int, 1)            ['$const108.1.3']
    $const108.1.3 = const(int, 1)            ['$const108.1.3']
2025-06-13 07:34:48,746 - print_capture - INFO -     $const108.1.3 = const(int, 1)            ['$const108.1.3']
    $const108.1.3 = const(int, 1)            ['$const108.1.3']
    $const108.1.3 = const(int, 1)            ['$const108.1.3']
2025-06-13 07:34:48,747 - print_capture - INFO -     $const108.1.3 = const(int, 1)            ['$const108.1.3']
    n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
    n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
2025-06-13 07:34:48,747 - print_capture - INFO -     n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
    n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
    n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
2025-06-13 07:34:48,747 - print_capture - INFO -     n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:48,747 - print_capture - INFO -     jump 120                                 []
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:48,747 - print_capture - INFO -     jump 120                                 []
label 116:
label 116:
2025-06-13 07:34:48,747 - print_capture - INFO - label 116:
label 116:
label 116:
2025-06-13 07:34:48,747 - print_capture - INFO - label 116:
    n = const(int, 1)                        ['n']
    n = const(int, 1)                        ['n']
2025-06-13 07:34:48,748 - print_capture - INFO -     n = const(int, 1)                        ['n']
    n = const(int, 1)                        ['n']
    n = const(int, 1)                        ['n']
2025-06-13 07:34:48,748 - print_capture - INFO -     n = const(int, 1)                        ['n']
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:48,748 - print_capture - INFO -     jump 120                                 []
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:48,748 - print_capture - INFO -     jump 120                                 []
label 120:
label 120:
2025-06-13 07:34:48,748 - print_capture - INFO - label 120:
label 120:
label 120:
2025-06-13 07:34:48,748 - print_capture - INFO - label 120:
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
2025-06-13 07:34:48,748 - print_capture - INFO -     $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
2025-06-13 07:34:48,748 - print_capture - INFO -     $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $const126.3.1 = const(int, 0)            ['$const126.3.1']
    $const126.3.1 = const(int, 0)            ['$const126.3.1']
2025-06-13 07:34:48,749 - print_capture - INFO -     $const126.3.1 = const(int, 0)            ['$const126.3.1']
    $const126.3.1 = const(int, 0)            ['$const126.3.1']
    $const126.3.1 = const(int, 0)            ['$const126.3.1']
2025-06-13 07:34:48,749 - print_capture - INFO -     $const126.3.1 = const(int, 0)            ['$const126.3.1']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
2025-06-13 07:34:48,749 - print_capture - INFO -     $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
2025-06-13 07:34:48,749 - print_capture - INFO -     $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
2025-06-13 07:34:48,749 - print_capture - INFO -     $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
2025-06-13 07:34:48,749 - print_capture - INFO -     $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
2025-06-13 07:34:48,749 - print_capture - INFO -     bool132 = global(bool: <class 'bool'>)   ['bool132']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
2025-06-13 07:34:48,750 - print_capture - INFO -     bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
2025-06-13 07:34:48,750 - print_capture - INFO -     $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
2025-06-13 07:34:48,750 - print_capture - INFO -     $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    branch $132pred, 134, 332                ['$132pred']
    branch $132pred, 134, 332                ['$132pred']
2025-06-13 07:34:48,750 - print_capture - INFO -     branch $132pred, 134, 332                ['$132pred']
    branch $132pred, 134, 332                ['$132pred']
    branch $132pred, 134, 332                ['$132pred']
2025-06-13 07:34:48,750 - print_capture - INFO -     branch $132pred, 134, 332                ['$132pred']
label 134:
label 134:
2025-06-13 07:34:48,750 - print_capture - INFO - label 134:
label 134:
label 134:
2025-06-13 07:34:48,750 - print_capture - INFO - label 134:
    $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
2025-06-13 07:34:48,751 - print_capture - INFO -     $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
2025-06-13 07:34:48,751 - print_capture - INFO -     $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
2025-06-13 07:34:48,751 - print_capture - INFO -     $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
2025-06-13 07:34:48,751 - print_capture - INFO -     $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
2025-06-13 07:34:48,751 - print_capture - INFO -     $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
2025-06-13 07:34:48,751 - print_capture - INFO -     $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $const142.4.1 = const(int, 0)            ['$const142.4.1']
    $const142.4.1 = const(int, 0)            ['$const142.4.1']
2025-06-13 07:34:48,751 - print_capture - INFO -     $const142.4.1 = const(int, 0)            ['$const142.4.1']
    $const142.4.1 = const(int, 0)            ['$const142.4.1']
    $const142.4.1 = const(int, 0)            ['$const142.4.1']
2025-06-13 07:34:48,752 - print_capture - INFO -     $const142.4.1 = const(int, 0)            ['$const142.4.1']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
2025-06-13 07:34:48,752 - print_capture - INFO -     $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
2025-06-13 07:34:48,752 - print_capture - INFO -     $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
    $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
2025-06-13 07:34:48,752 - print_capture - INFO -     $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
    $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
    $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
2025-06-13 07:34:48,752 - print_capture - INFO -     $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
2025-06-13 07:34:48,752 - print_capture - INFO -     $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
2025-06-13 07:34:48,752 - print_capture - INFO -     $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
2025-06-13 07:34:48,753 - print_capture - INFO -     $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
2025-06-13 07:34:48,753 - print_capture - INFO -     $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
2025-06-13 07:34:48,753 - print_capture - INFO -     $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
2025-06-13 07:34:48,753 - print_capture - INFO -     $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $const164.15.1 = const(int, 0)           ['$const164.15.1']
    $const164.15.1 = const(int, 0)           ['$const164.15.1']
2025-06-13 07:34:48,753 - print_capture - INFO -     $const164.15.1 = const(int, 0)           ['$const164.15.1']
    $const164.15.1 = const(int, 0)           ['$const164.15.1']
    $const164.15.1 = const(int, 0)           ['$const164.15.1']
2025-06-13 07:34:48,753 - print_capture - INFO -     $const164.15.1 = const(int, 0)           ['$const164.15.1']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
2025-06-13 07:34:48,753 - print_capture - INFO -     $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
2025-06-13 07:34:48,753 - print_capture - INFO -     $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
2025-06-13 07:34:48,754 - print_capture - INFO -     $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
2025-06-13 07:34:48,754 - print_capture - INFO -     $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
2025-06-13 07:34:48,754 - print_capture - INFO -     $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
2025-06-13 07:34:48,754 - print_capture - INFO -     $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
2025-06-13 07:34:48,754 - print_capture - INFO -     $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
2025-06-13 07:34:48,754 - print_capture - INFO -     $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
2025-06-13 07:34:48,754 - print_capture - INFO -     $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
2025-06-13 07:34:48,754 - print_capture - INFO -     $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
2025-06-13 07:34:48,754 - print_capture - INFO -     maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
2025-06-13 07:34:48,755 - print_capture - INFO -     maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
2025-06-13 07:34:48,755 - print_capture - INFO -     $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
2025-06-13 07:34:48,755 - print_capture - INFO -     $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
2025-06-13 07:34:48,755 - print_capture - INFO -     $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
2025-06-13 07:34:48,755 - print_capture - INFO -     $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
2025-06-13 07:34:48,755 - print_capture - INFO -     peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
2025-06-13 07:34:48,755 - print_capture - INFO -     peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
2025-06-13 07:34:48,755 - print_capture - INFO -     $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
2025-06-13 07:34:48,755 - print_capture - INFO -     $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
2025-06-13 07:34:48,755 - print_capture - INFO -     bool200 = global(bool: <class 'bool'>)   ['bool200']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
2025-06-13 07:34:48,756 - print_capture - INFO -     bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
2025-06-13 07:34:48,756 - print_capture - INFO -     $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
2025-06-13 07:34:48,756 - print_capture - INFO -     $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    branch $200pred, 212, 202                ['$200pred']
    branch $200pred, 212, 202                ['$200pred']
2025-06-13 07:34:48,756 - print_capture - INFO -     branch $200pred, 212, 202                ['$200pred']
    branch $200pred, 212, 202                ['$200pred']
    branch $200pred, 212, 202                ['$200pred']
2025-06-13 07:34:48,756 - print_capture - INFO -     branch $200pred, 212, 202                ['$200pred']
label 202:
label 202:
2025-06-13 07:34:48,756 - print_capture - INFO - label 202:
label 202:
label 202:
2025-06-13 07:34:48,756 - print_capture - INFO - label 202:
    $const204.1.3 = const(int, 1)            ['$const204.1.3']
    $const204.1.3 = const(int, 1)            ['$const204.1.3']
2025-06-13 07:34:48,756 - print_capture - INFO -     $const204.1.3 = const(int, 1)            ['$const204.1.3']
    $const204.1.3 = const(int, 1)            ['$const204.1.3']
    $const204.1.3 = const(int, 1)            ['$const204.1.3']
2025-06-13 07:34:48,756 - print_capture - INFO -     $const204.1.3 = const(int, 1)            ['$const204.1.3']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
2025-06-13 07:34:48,756 - print_capture - INFO -     $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
2025-06-13 07:34:48,756 - print_capture - INFO -     $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
2025-06-13 07:34:48,756 - print_capture - INFO -     n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
2025-06-13 07:34:48,757 - print_capture - INFO -     n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:48,757 - print_capture - INFO -     jump 120                                 []
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:48,757 - print_capture - INFO -     jump 120                                 []
label 212:
label 212:
2025-06-13 07:34:48,757 - print_capture - INFO - label 212:
label 212:
label 212:
2025-06-13 07:34:48,757 - print_capture - INFO - label 212:
    $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
2025-06-13 07:34:48,757 - print_capture - INFO -     $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
2025-06-13 07:34:48,757 - print_capture - INFO -     $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
2025-06-13 07:34:48,757 - print_capture - INFO -     $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
2025-06-13 07:34:48,757 - print_capture - INFO -     $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
2025-06-13 07:34:48,757 - print_capture - INFO -     $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
2025-06-13 07:34:48,757 - print_capture - INFO -     $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $const220.4.1 = const(int, 0)            ['$const220.4.1']
    $const220.4.1 = const(int, 0)            ['$const220.4.1']
2025-06-13 07:34:48,757 - print_capture - INFO -     $const220.4.1 = const(int, 0)            ['$const220.4.1']
    $const220.4.1 = const(int, 0)            ['$const220.4.1']
    $const220.4.1 = const(int, 0)            ['$const220.4.1']
2025-06-13 07:34:48,757 - print_capture - INFO -     $const220.4.1 = const(int, 0)            ['$const220.4.1']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
2025-06-13 07:34:48,757 - print_capture - INFO -     $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
2025-06-13 07:34:48,757 - print_capture - INFO -     $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
    $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
2025-06-13 07:34:48,758 - print_capture - INFO -     $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
    $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
    $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
2025-06-13 07:34:48,758 - print_capture - INFO -     $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
2025-06-13 07:34:48,758 - print_capture - INFO -     $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
2025-06-13 07:34:48,758 - print_capture - INFO -     $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
2025-06-13 07:34:48,758 - print_capture - INFO -     $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
2025-06-13 07:34:48,758 - print_capture - INFO -     $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
2025-06-13 07:34:48,758 - print_capture - INFO -     $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
2025-06-13 07:34:48,758 - print_capture - INFO -     $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $const242.15.1 = const(int, 0)           ['$const242.15.1']
    $const242.15.1 = const(int, 0)           ['$const242.15.1']
2025-06-13 07:34:48,758 - print_capture - INFO -     $const242.15.1 = const(int, 0)           ['$const242.15.1']
    $const242.15.1 = const(int, 0)           ['$const242.15.1']
    $const242.15.1 = const(int, 0)           ['$const242.15.1']
2025-06-13 07:34:48,758 - print_capture - INFO -     $const242.15.1 = const(int, 0)           ['$const242.15.1']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
2025-06-13 07:34:48,758 - print_capture - INFO -     $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
2025-06-13 07:34:48,758 - print_capture - INFO -     $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
2025-06-13 07:34:48,758 - print_capture - INFO -     $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
2025-06-13 07:34:48,758 - print_capture - INFO -     $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
2025-06-13 07:34:48,758 - print_capture - INFO -     $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
2025-06-13 07:34:48,759 - print_capture - INFO -     $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
2025-06-13 07:34:48,759 - print_capture - INFO -     $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
2025-06-13 07:34:48,759 - print_capture - INFO -     $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
2025-06-13 07:34:48,759 - print_capture - INFO -     $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
2025-06-13 07:34:48,759 - print_capture - INFO -     $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
2025-06-13 07:34:48,759 - print_capture - INFO -     avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
2025-06-13 07:34:48,759 - print_capture - INFO -     avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
2025-06-13 07:34:48,759 - print_capture - INFO -     $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
2025-06-13 07:34:48,759 - print_capture - INFO -     $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
2025-06-13 07:34:48,759 - print_capture - INFO -     $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
2025-06-13 07:34:48,759 - print_capture - INFO -     $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
2025-06-13 07:34:48,759 - print_capture - INFO -     $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
2025-06-13 07:34:48,759 - print_capture - INFO -     $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
2025-06-13 07:34:48,759 - print_capture - INFO -     $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
2025-06-13 07:34:48,759 - print_capture - INFO -     $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
2025-06-13 07:34:48,759 - print_capture - INFO -     $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
2025-06-13 07:34:48,759 - print_capture - INFO -     $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
2025-06-13 07:34:48,760 - print_capture - INFO -     peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
2025-06-13 07:34:48,760 - print_capture - INFO -     peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
2025-06-13 07:34:48,760 - print_capture - INFO -     $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
2025-06-13 07:34:48,760 - print_capture - INFO -     $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
2025-06-13 07:34:48,760 - print_capture - INFO -     bool290 = global(bool: <class 'bool'>)   ['bool290']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
2025-06-13 07:34:48,760 - print_capture - INFO -     bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
2025-06-13 07:34:48,760 - print_capture - INFO -     $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
2025-06-13 07:34:48,760 - print_capture - INFO -     $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    branch $290pred, 302, 292                ['$290pred']
    branch $290pred, 302, 292                ['$290pred']
2025-06-13 07:34:48,760 - print_capture - INFO -     branch $290pred, 302, 292                ['$290pred']
    branch $290pred, 302, 292                ['$290pred']
    branch $290pred, 302, 292                ['$290pred']
2025-06-13 07:34:48,760 - print_capture - INFO -     branch $290pred, 302, 292                ['$290pred']
label 292:
label 292:
2025-06-13 07:34:48,760 - print_capture - INFO - label 292:
label 292:
label 292:
2025-06-13 07:34:48,760 - print_capture - INFO - label 292:
    $const294.1.3 = const(int, 1)            ['$const294.1.3']
    $const294.1.3 = const(int, 1)            ['$const294.1.3']
2025-06-13 07:34:48,760 - print_capture - INFO -     $const294.1.3 = const(int, 1)            ['$const294.1.3']
    $const294.1.3 = const(int, 1)            ['$const294.1.3']
    $const294.1.3 = const(int, 1)            ['$const294.1.3']
2025-06-13 07:34:48,760 - print_capture - INFO -     $const294.1.3 = const(int, 1)            ['$const294.1.3']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
2025-06-13 07:34:48,760 - print_capture - INFO -     $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
2025-06-13 07:34:48,760 - print_capture - INFO -     $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
2025-06-13 07:34:48,760 - print_capture - INFO -     n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
2025-06-13 07:34:48,760 - print_capture - INFO -     n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:48,760 - print_capture - INFO -     jump 120                                 []
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:48,760 - print_capture - INFO -     jump 120                                 []
label 302:
label 302:
2025-06-13 07:34:48,760 - print_capture - INFO - label 302:
label 302:
label 302:
2025-06-13 07:34:48,760 - print_capture - INFO - label 302:
    $const306.2.3 = const(int, 1)            ['$const306.2.3']
    $const306.2.3 = const(int, 1)            ['$const306.2.3']
2025-06-13 07:34:48,760 - print_capture - INFO -     $const306.2.3 = const(int, 1)            ['$const306.2.3']
    $const306.2.3 = const(int, 1)            ['$const306.2.3']
    $const306.2.3 = const(int, 1)            ['$const306.2.3']
2025-06-13 07:34:48,761 - print_capture - INFO -     $const306.2.3 = const(int, 1)            ['$const306.2.3']
    $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
    $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
2025-06-13 07:34:48,761 - print_capture - INFO -     $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
    $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
    $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
2025-06-13 07:34:48,761 - print_capture - INFO -     $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
2025-06-13 07:34:48,761 - print_capture - INFO -     $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
2025-06-13 07:34:48,761 - print_capture - INFO -     $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
2025-06-13 07:34:48,761 - print_capture - INFO -     n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
2025-06-13 07:34:48,761 - print_capture - INFO -     n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
2025-06-13 07:34:48,761 - print_capture - INFO -     $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
2025-06-13 07:34:48,761 - print_capture - INFO -     $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $const320.8.1 = const(int, 0)            ['$const320.8.1']
    $const320.8.1 = const(int, 0)            ['$const320.8.1']
2025-06-13 07:34:48,761 - print_capture - INFO -     $const320.8.1 = const(int, 0)            ['$const320.8.1']
    $const320.8.1 = const(int, 0)            ['$const320.8.1']
    $const320.8.1 = const(int, 0)            ['$const320.8.1']
2025-06-13 07:34:48,761 - print_capture - INFO -     $const320.8.1 = const(int, 0)            ['$const320.8.1']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
2025-06-13 07:34:48,761 - print_capture - INFO -     $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
2025-06-13 07:34:48,761 - print_capture - INFO -     $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
2025-06-13 07:34:48,761 - print_capture - INFO -     $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
2025-06-13 07:34:48,761 - print_capture - INFO -     $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
2025-06-13 07:34:48,761 - print_capture - INFO -     bool326 = global(bool: <class 'bool'>)   ['bool326']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
2025-06-13 07:34:48,761 - print_capture - INFO -     bool326 = global(bool: <class 'bool'>)   ['bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
2025-06-13 07:34:48,761 - print_capture - INFO -     $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
2025-06-13 07:34:48,761 - print_capture - INFO -     $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    branch $326pred, 134, 328                ['$326pred']
    branch $326pred, 134, 328                ['$326pred']
2025-06-13 07:34:48,761 - print_capture - INFO -     branch $326pred, 134, 328                ['$326pred']
    branch $326pred, 134, 328                ['$326pred']
    branch $326pred, 134, 328                ['$326pred']
2025-06-13 07:34:48,761 - print_capture - INFO -     branch $326pred, 134, 328                ['$326pred']
label 328:
label 328:
2025-06-13 07:34:48,761 - print_capture - INFO - label 328:
label 328:
label 328:
2025-06-13 07:34:48,761 - print_capture - INFO - label 328:
    $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
    $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
2025-06-13 07:34:48,761 - print_capture - INFO -     $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
    $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
    $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
2025-06-13 07:34:48,761 - print_capture - INFO -     $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
    $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
    $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
2025-06-13 07:34:48,762 - print_capture - INFO -     $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
    $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
    $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
2025-06-13 07:34:48,762 - print_capture - INFO -     $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
    return $330return_value.1                ['$330return_value.1']
    return $330return_value.1                ['$330return_value.1']
2025-06-13 07:34:48,762 - print_capture - INFO -     return $330return_value.1                ['$330return_value.1']
    return $330return_value.1                ['$330return_value.1']
    return $330return_value.1                ['$330return_value.1']
2025-06-13 07:34:48,762 - print_capture - INFO -     return $330return_value.1                ['$330return_value.1']
label 332:
label 332:
2025-06-13 07:34:48,762 - print_capture - INFO - label 332:
label 332:
label 332:
2025-06-13 07:34:48,762 - print_capture - INFO - label 332:
    $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
    $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
2025-06-13 07:34:48,762 - print_capture - INFO -     $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
    $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
    $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
2025-06-13 07:34:48,762 - print_capture - INFO -     $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
    $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
    $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
2025-06-13 07:34:48,762 - print_capture - INFO -     $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
    $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
    $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
2025-06-13 07:34:48,762 - print_capture - INFO -     $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
    return $334return_value.1                ['$334return_value.1']
    return $334return_value.1                ['$334return_value.1']
2025-06-13 07:34:48,762 - print_capture - INFO -     return $334return_value.1                ['$334return_value.1']
    return $334return_value.1                ['$334return_value.1']
    return $334return_value.1                ['$334return_value.1']
2025-06-13 07:34:48,762 - print_capture - INFO -     return $334return_value.1                ['$334return_value.1']
label 0:
label 0:
2025-06-13 07:34:48,775 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:48,775 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,775 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,775 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
2025-06-13 07:34:48,775 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
2025-06-13 07:34:48,775 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $const6.2.1 = const(int, 0)              ['$const6.2.1']
    $const6.2.1 = const(int, 0)              ['$const6.2.1']
2025-06-13 07:34:48,775 - print_capture - INFO -     $const6.2.1 = const(int, 0)              ['$const6.2.1']
    $const6.2.1 = const(int, 0)              ['$const6.2.1']
    $const6.2.1 = const(int, 0)              ['$const6.2.1']
2025-06-13 07:34:48,775 - print_capture - INFO -     $const6.2.1 = const(int, 0)              ['$const6.2.1']
    $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
    $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
2025-06-13 07:34:48,775 - print_capture - INFO -     $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
    $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
    $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
2025-06-13 07:34:48,775 - print_capture - INFO -     $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
2025-06-13 07:34:48,775 - print_capture - INFO -     bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
2025-06-13 07:34:48,775 - print_capture - INFO -     bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
2025-06-13 07:34:48,775 - print_capture - INFO -     $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
2025-06-13 07:34:48,775 - print_capture - INFO -     $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 20                   ['$10pred']
    branch $10pred, 12, 20                   ['$10pred']
2025-06-13 07:34:48,775 - print_capture - INFO -     branch $10pred, 12, 20                   ['$10pred']
    branch $10pred, 12, 20                   ['$10pred']
    branch $10pred, 12, 20                   ['$10pred']
2025-06-13 07:34:48,775 - print_capture - INFO -     branch $10pred, 12, 20                   ['$10pred']
label 12:
label 12:
2025-06-13 07:34:48,775 - print_capture - INFO - label 12:
label 12:
label 12:
2025-06-13 07:34:48,775 - print_capture - INFO - label 12:
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
2025-06-13 07:34:48,775 - print_capture - INFO -     $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
2025-06-13 07:34:48,775 - print_capture - INFO -     $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
    $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
2025-06-13 07:34:48,775 - print_capture - INFO -     $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
    $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
    $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
2025-06-13 07:34:48,775 - print_capture - INFO -     $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
    $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
    $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
2025-06-13 07:34:48,775 - print_capture - INFO -     $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
    $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
    $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
2025-06-13 07:34:48,775 - print_capture - INFO -     $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
    raise $16call_function.2                 ['$16call_function.2']
    raise $16call_function.2                 ['$16call_function.2']
2025-06-13 07:34:48,775 - print_capture - INFO -     raise $16call_function.2                 ['$16call_function.2']
    raise $16call_function.2                 ['$16call_function.2']
    raise $16call_function.2                 ['$16call_function.2']
2025-06-13 07:34:48,775 - print_capture - INFO -     raise $16call_function.2                 ['$16call_function.2']
label 20:
label 20:
2025-06-13 07:34:48,775 - print_capture - INFO - label 20:
label 20:
label 20:
2025-06-13 07:34:48,775 - print_capture - INFO - label 20:
    $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
2025-06-13 07:34:48,775 - print_capture - INFO -     $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
2025-06-13 07:34:48,775 - print_capture - INFO -     $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
2025-06-13 07:34:48,775 - print_capture - INFO -     $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
2025-06-13 07:34:48,776 - print_capture - INFO -     $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
2025-06-13 07:34:48,776 - print_capture - INFO -     it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
2025-06-13 07:34:48,776 - print_capture - INFO -     it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
2025-06-13 07:34:48,776 - print_capture - INFO -     $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
2025-06-13 07:34:48,776 - print_capture - INFO -     $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
2025-06-13 07:34:48,776 - print_capture - INFO -     $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
2025-06-13 07:34:48,776 - print_capture - INFO -     $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
2025-06-13 07:34:48,776 - print_capture - INFO -     $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
2025-06-13 07:34:48,776 - print_capture - INFO -     $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $const38.8.1 = const(int, 0)             ['$const38.8.1']
    $const38.8.1 = const(int, 0)             ['$const38.8.1']
2025-06-13 07:34:48,776 - print_capture - INFO -     $const38.8.1 = const(int, 0)             ['$const38.8.1']
    $const38.8.1 = const(int, 0)             ['$const38.8.1']
    $const38.8.1 = const(int, 0)             ['$const38.8.1']
2025-06-13 07:34:48,776 - print_capture - INFO -     $const38.8.1 = const(int, 0)             ['$const38.8.1']
    max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
    max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
2025-06-13 07:34:48,776 - print_capture - INFO -     max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
    max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
    max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
2025-06-13 07:34:48,776 - print_capture - INFO -     max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
    $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$44load_deref.10']
    $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$44load_deref.10']
2025-06-13 07:34:48,776 - print_capture - INFO -     $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$44load_deref.10']
    $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$44load_deref.10']
    $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$44load_deref.10']
2025-06-13 07:34:48,776 - print_capture - INFO -     $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$44load_deref.10']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
2025-06-13 07:34:48,776 - print_capture - INFO -     $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
2025-06-13 07:34:48,776 - print_capture - INFO -     $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
2025-06-13 07:34:48,776 - print_capture - INFO -     bool50 = global(bool: <class 'bool'>)    ['bool50']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
2025-06-13 07:34:48,776 - print_capture - INFO -     bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
2025-06-13 07:34:48,776 - print_capture - INFO -     $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
2025-06-13 07:34:48,776 - print_capture - INFO -     $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    branch $50pred, 52, 56                   ['$50pred']
    branch $50pred, 52, 56                   ['$50pred']
2025-06-13 07:34:48,776 - print_capture - INFO -     branch $50pred, 52, 56                   ['$50pred']
    branch $50pred, 52, 56                   ['$50pred']
    branch $50pred, 52, 56                   ['$50pred']
2025-06-13 07:34:48,776 - print_capture - INFO -     branch $50pred, 52, 56                   ['$50pred']
label 52:
label 52:
2025-06-13 07:34:48,776 - print_capture - INFO - label 52:
label 52:
label 52:
2025-06-13 07:34:48,776 - print_capture - INFO - label 52:
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
2025-06-13 07:34:48,776 - print_capture - INFO -     $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
2025-06-13 07:34:48,776 - print_capture - INFO -     $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    return $54return_value.1                 ['$54return_value.1']
    return $54return_value.1                 ['$54return_value.1']
2025-06-13 07:34:48,776 - print_capture - INFO -     return $54return_value.1                 ['$54return_value.1']
    return $54return_value.1                 ['$54return_value.1']
    return $54return_value.1                 ['$54return_value.1']
2025-06-13 07:34:48,776 - print_capture - INFO -     return $54return_value.1                 ['$54return_value.1']
label 56:
label 56:
2025-06-13 07:34:48,776 - print_capture - INFO - label 56:
label 56:
label 56:
2025-06-13 07:34:48,776 - print_capture - INFO - label 56:
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
2025-06-13 07:34:48,776 - print_capture - INFO -     $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
2025-06-13 07:34:48,776 - print_capture - INFO -     $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
2025-06-13 07:34:48,776 - print_capture - INFO -     $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
2025-06-13 07:34:48,776 - print_capture - INFO -     $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    jump 60                                  []
    jump 60                                  []
2025-06-13 07:34:48,776 - print_capture - INFO -     jump 60                                  []
    jump 60                                  []
    jump 60                                  []
2025-06-13 07:34:48,776 - print_capture - INFO -     jump 60                                  []
label 60:
label 60:
2025-06-13 07:34:48,776 - print_capture - INFO - label 60:
label 60:
label 60:
2025-06-13 07:34:48,776 - print_capture - INFO - label 60:
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
2025-06-13 07:34:48,777 - print_capture - INFO -     $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
2025-06-13 07:34:48,777 - print_capture - INFO -     $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
2025-06-13 07:34:48,777 - print_capture - INFO -     $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
2025-06-13 07:34:48,777 - print_capture - INFO -     $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
2025-06-13 07:34:48,777 - print_capture - INFO -     $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
2025-06-13 07:34:48,777 - print_capture - INFO -     $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
2025-06-13 07:34:48,777 - print_capture - INFO -     $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
2025-06-13 07:34:48,777 - print_capture - INFO -     $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
2025-06-13 07:34:48,777 - print_capture - INFO -     branch $60for_iter.3, 62, 104            ['$60for_iter.3']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
2025-06-13 07:34:48,777 - print_capture - INFO -     branch $60for_iter.3, 62, 104            ['$60for_iter.3']
label 62:
label 62:
2025-06-13 07:34:48,777 - print_capture - INFO - label 62:
label 62:
label 62:
2025-06-13 07:34:48,777 - print_capture - INFO - label 62:
    view = $phi62.1                          ['$phi62.1', 'view']
    view = $phi62.1                          ['$phi62.1', 'view']
2025-06-13 07:34:48,777 - print_capture - INFO -     view = $phi62.1                          ['$phi62.1', 'view']
    view = $phi62.1                          ['$phi62.1', 'view']
    view = $phi62.1                          ['$phi62.1', 'view']
2025-06-13 07:34:48,777 - print_capture - INFO -     view = $phi62.1                          ['$phi62.1', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
2025-06-13 07:34:48,777 - print_capture - INFO -     $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
2025-06-13 07:34:48,777 - print_capture - INFO -     $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
2025-06-13 07:34:48,777 - print_capture - INFO -     v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
2025-06-13 07:34:48,777 - print_capture - INFO -     v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$72load_deref.5']
    $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$72load_deref.5']
2025-06-13 07:34:48,777 - print_capture - INFO -     $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$72load_deref.5']
    $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$72load_deref.5']
    $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$72load_deref.5']
2025-06-13 07:34:48,777 - print_capture - INFO -     $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$72load_deref.5']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
2025-06-13 07:34:48,777 - print_capture - INFO -     $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
2025-06-13 07:34:48,777 - print_capture - INFO -     $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
2025-06-13 07:34:48,777 - print_capture - INFO -     bool78 = global(bool: <class 'bool'>)    ['bool78']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
2025-06-13 07:34:48,777 - print_capture - INFO -     bool78 = global(bool: <class 'bool'>)    ['bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
2025-06-13 07:34:48,777 - print_capture - INFO -     $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
2025-06-13 07:34:48,777 - print_capture - INFO -     $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    branch $78pred, 80, 88                   ['$78pred']
    branch $78pred, 80, 88                   ['$78pred']
2025-06-13 07:34:48,777 - print_capture - INFO -     branch $78pred, 80, 88                   ['$78pred']
    branch $78pred, 80, 88                   ['$78pred']
    branch $78pred, 80, 88                   ['$78pred']
2025-06-13 07:34:48,777 - print_capture - INFO -     branch $78pred, 80, 88                   ['$78pred']
label 80:
label 80:
2025-06-13 07:34:48,777 - print_capture - INFO - label 80:
label 80:
label 80:
2025-06-13 07:34:48,777 - print_capture - INFO - label 80:
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
2025-06-13 07:34:48,777 - print_capture - INFO -     $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
2025-06-13 07:34:48,777 - print_capture - INFO -     $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    return $86return_value.2                 ['$86return_value.2']
    return $86return_value.2                 ['$86return_value.2']
2025-06-13 07:34:48,777 - print_capture - INFO -     return $86return_value.2                 ['$86return_value.2']
    return $86return_value.2                 ['$86return_value.2']
    return $86return_value.2                 ['$86return_value.2']
2025-06-13 07:34:48,777 - print_capture - INFO -     return $86return_value.2                 ['$86return_value.2']
label 88:
label 88:
2025-06-13 07:34:48,777 - print_capture - INFO - label 88:
label 88:
label 88:
2025-06-13 07:34:48,777 - print_capture - INFO - label 88:
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
2025-06-13 07:34:48,777 - print_capture - INFO -     $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
2025-06-13 07:34:48,777 - print_capture - INFO -     $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
2025-06-13 07:34:48,777 - print_capture - INFO -     $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
2025-06-13 07:34:48,777 - print_capture - INFO -     $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
2025-06-13 07:34:48,778 - print_capture - INFO -     bool96 = global(bool: <class 'bool'>)    ['bool96']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
2025-06-13 07:34:48,778 - print_capture - INFO -     bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
2025-06-13 07:34:48,778 - print_capture - INFO -     $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
2025-06-13 07:34:48,778 - print_capture - INFO -     $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    branch $96pred, 98, 102                  ['$96pred']
    branch $96pred, 98, 102                  ['$96pred']
2025-06-13 07:34:48,778 - print_capture - INFO -     branch $96pred, 98, 102                  ['$96pred']
    branch $96pred, 98, 102                  ['$96pred']
    branch $96pred, 98, 102                  ['$96pred']
2025-06-13 07:34:48,778 - print_capture - INFO -     branch $96pred, 98, 102                  ['$96pred']
label 98:
label 98:
2025-06-13 07:34:48,778 - print_capture - INFO - label 98:
label 98:
label 98:
2025-06-13 07:34:48,778 - print_capture - INFO - label 98:
    max_value = v                            ['max_value', 'v']
    max_value = v                            ['max_value', 'v']
2025-06-13 07:34:48,778 - print_capture - INFO -     max_value = v                            ['max_value', 'v']
    max_value = v                            ['max_value', 'v']
    max_value = v                            ['max_value', 'v']
2025-06-13 07:34:48,778 - print_capture - INFO -     max_value = v                            ['max_value', 'v']
    jump 102                                 []
    jump 102                                 []
2025-06-13 07:34:48,778 - print_capture - INFO -     jump 102                                 []
    jump 102                                 []
    jump 102                                 []
2025-06-13 07:34:48,778 - print_capture - INFO -     jump 102                                 []
label 102:
label 102:
2025-06-13 07:34:48,778 - print_capture - INFO - label 102:
label 102:
label 102:
2025-06-13 07:34:48,778 - print_capture - INFO - label 102:
    jump 60                                  []
    jump 60                                  []
2025-06-13 07:34:48,778 - print_capture - INFO -     jump 60                                  []
    jump 60                                  []
    jump 60                                  []
2025-06-13 07:34:48,778 - print_capture - INFO -     jump 60                                  []
label 104:
label 104:
2025-06-13 07:34:48,778 - print_capture - INFO - label 104:
label 104:
label 104:
2025-06-13 07:34:48,778 - print_capture - INFO - label 104:
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
2025-06-13 07:34:48,778 - print_capture - INFO -     $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
2025-06-13 07:34:48,778 - print_capture - INFO -     $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    return $106return_value.1                ['$106return_value.1']
    return $106return_value.1                ['$106return_value.1']
2025-06-13 07:34:48,778 - print_capture - INFO -     return $106return_value.1                ['$106return_value.1']
    return $106return_value.1                ['$106return_value.1']
    return $106return_value.1                ['$106return_value.1']
2025-06-13 07:34:48,778 - print_capture - INFO -     return $106return_value.1                ['$106return_value.1']
label 0:
label 0:
2025-06-13 07:34:48,786 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:48,786 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,786 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,786 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
2025-06-13 07:34:48,786 - print_capture - INFO -     indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
2025-06-13 07:34:48,786 - print_capture - INFO -     indices = arg(1, name=indices)           ['indices']
    axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
2025-06-13 07:34:48,786 - print_capture - INFO -     axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
2025-06-13 07:34:48,786 - print_capture - INFO -     axis = arg(2, name=axis)                 ['axis']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
2025-06-13 07:34:48,786 - print_capture - INFO -     $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
2025-06-13 07:34:48,786 - print_capture - INFO -     $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
2025-06-13 07:34:48,786 - print_capture - INFO -     $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
2025-06-13 07:34:48,786 - print_capture - INFO -     $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
2025-06-13 07:34:48,786 - print_capture - INFO -     $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
2025-06-13 07:34:48,786 - print_capture - INFO -     $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
2025-06-13 07:34:48,786 - print_capture - INFO -     $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
2025-06-13 07:34:48,787 - print_capture - INFO -     $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
2025-06-13 07:34:48,787 - print_capture - INFO -     bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
2025-06-13 07:34:48,787 - print_capture - INFO -     bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
2025-06-13 07:34:48,787 - print_capture - INFO -     $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
2025-06-13 07:34:48,787 - print_capture - INFO -     $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
2025-06-13 07:34:48,787 - print_capture - INFO -     branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
2025-06-13 07:34:48,787 - print_capture - INFO -     branch $14pred, 28, 16                   ['$14pred']
label 16:
label 16:
2025-06-13 07:34:48,787 - print_capture - INFO - label 16:
label 16:
label 16:
2025-06-13 07:34:48,787 - print_capture - INFO - label 16:
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
2025-06-13 07:34:48,787 - print_capture - INFO -     $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
2025-06-13 07:34:48,787 - print_capture - INFO -     $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
2025-06-13 07:34:48,787 - print_capture - INFO -     $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
2025-06-13 07:34:48,787 - print_capture - INFO -     $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
2025-06-13 07:34:48,787 - print_capture - INFO -     $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
2025-06-13 07:34:48,787 - print_capture - INFO -     $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
2025-06-13 07:34:48,787 - print_capture - INFO -     bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
2025-06-13 07:34:48,787 - print_capture - INFO -     bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
2025-06-13 07:34:48,787 - print_capture - INFO -     $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
2025-06-13 07:34:48,788 - print_capture - INFO -     $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
2025-06-13 07:34:48,788 - print_capture - INFO -     branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
2025-06-13 07:34:48,788 - print_capture - INFO -     branch $26pred, 28, 36                   ['$26pred']
label 28:
label 28:
2025-06-13 07:34:48,788 - print_capture - INFO - label 28:
label 28:
label 28:
2025-06-13 07:34:48,788 - print_capture - INFO - label 28:
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
2025-06-13 07:34:48,788 - print_capture - INFO -     $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
2025-06-13 07:34:48,788 - print_capture - INFO -     $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
2025-06-13 07:34:48,788 - print_capture - INFO -     $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
2025-06-13 07:34:48,788 - print_capture - INFO -     $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
2025-06-13 07:34:48,788 - print_capture - INFO -     $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
2025-06-13 07:34:48,788 - print_capture - INFO -     $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
2025-06-13 07:34:48,788 - print_capture - INFO -     raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
2025-06-13 07:34:48,788 - print_capture - INFO -     raise $32call_function.2                 ['$32call_function.2']
label 36:
label 36:
2025-06-13 07:34:48,788 - print_capture - INFO - label 36:
label 36:
label 36:
2025-06-13 07:34:48,788 - print_capture - INFO - label 36:
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
2025-06-13 07:34:48,788 - print_capture - INFO -     $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
2025-06-13 07:34:48,788 - print_capture - INFO -     $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
2025-06-13 07:34:48,789 - print_capture - INFO -     $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
2025-06-13 07:34:48,789 - print_capture - INFO -     $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
2025-06-13 07:34:48,789 - print_capture - INFO -     $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
2025-06-13 07:34:48,789 - print_capture - INFO -     $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
2025-06-13 07:34:48,789 - print_capture - INFO -     $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
2025-06-13 07:34:48,789 - print_capture - INFO -     $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
2025-06-13 07:34:48,789 - print_capture - INFO -     return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
2025-06-13 07:34:48,789 - print_capture - INFO -     return $46return_value.5                 ['$46return_value.5']
label 0:
label 0:
2025-06-13 07:34:48,800 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:48,800 - print_capture - INFO - label 0:
    ary = arg(0, name=ary)                   ['ary']
    ary = arg(0, name=ary)                   ['ary']
2025-06-13 07:34:48,800 - print_capture - INFO -     ary = arg(0, name=ary)                   ['ary']
    ary = arg(0, name=ary)                   ['ary']
    ary = arg(0, name=ary)                   ['ary']
2025-06-13 07:34:48,800 - print_capture - INFO -     ary = arg(0, name=ary)                   ['ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
2025-06-13 07:34:48,800 - print_capture - INFO -     $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
2025-06-13 07:34:48,800 - print_capture - INFO -     $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
2025-06-13 07:34:48,800 - print_capture - INFO -     $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
2025-06-13 07:34:48,800 - print_capture - INFO -     $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
2025-06-13 07:34:48,800 - print_capture - INFO -     $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
2025-06-13 07:34:48,800 - print_capture - INFO -     $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
2025-06-13 07:34:48,800 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
2025-06-13 07:34:48,800 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:48,800 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:48,800 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
label 0:
label 0:
2025-06-13 07:34:48,897 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:48,897 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,897 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,897 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    $const2.0.1 = const(bool, False)         ['$const2.0.1']
    $const2.0.1 = const(bool, False)         ['$const2.0.1']
2025-06-13 07:34:48,897 - print_capture - INFO -     $const2.0.1 = const(bool, False)         ['$const2.0.1']
    $const2.0.1 = const(bool, False)         ['$const2.0.1']
    $const2.0.1 = const(bool, False)         ['$const2.0.1']
2025-06-13 07:34:48,897 - print_capture - INFO -     $const2.0.1 = const(bool, False)         ['$const2.0.1']
    $4return_value.1 = cast(value=$const2.0.1) ['$4return_value.1', '$const2.0.1']
    $4return_value.1 = cast(value=$const2.0.1) ['$4return_value.1', '$const2.0.1']
2025-06-13 07:34:48,897 - print_capture - INFO -     $4return_value.1 = cast(value=$const2.0.1) ['$4return_value.1', '$const2.0.1']
    $4return_value.1 = cast(value=$const2.0.1) ['$4return_value.1', '$const2.0.1']
    $4return_value.1 = cast(value=$const2.0.1) ['$4return_value.1', '$const2.0.1']
2025-06-13 07:34:48,897 - print_capture - INFO -     $4return_value.1 = cast(value=$const2.0.1) ['$4return_value.1', '$const2.0.1']
    return $4return_value.1                  ['$4return_value.1']
    return $4return_value.1                  ['$4return_value.1']
2025-06-13 07:34:48,897 - print_capture - INFO -     return $4return_value.1                  ['$4return_value.1']
    return $4return_value.1                  ['$4return_value.1']
    return $4return_value.1                  ['$4return_value.1']
2025-06-13 07:34:48,897 - print_capture - INFO -     return $4return_value.1                  ['$4return_value.1']
label 0:
label 0:
2025-06-13 07:34:48,908 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:48,908 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,908 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,908 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    min_val = arg(1, name=min_val)           ['min_val']
2025-06-13 07:34:48,908 - print_capture - INFO -     min_val = arg(1, name=min_val)           ['min_val']
    min_val = arg(1, name=min_val)           ['min_val']
    min_val = arg(1, name=min_val)           ['min_val']
2025-06-13 07:34:48,908 - print_capture - INFO -     min_val = arg(1, name=min_val)           ['min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
2025-06-13 07:34:48,908 - print_capture - INFO -     $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
2025-06-13 07:34:48,908 - print_capture - INFO -     $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
2025-06-13 07:34:48,908 - print_capture - INFO -     $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
2025-06-13 07:34:48,908 - print_capture - INFO -     $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
2025-06-13 07:34:48,908 - print_capture - INFO -     return $8return_value.3                  ['$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
2025-06-13 07:34:48,908 - print_capture - INFO -     return $8return_value.3                  ['$8return_value.3']
label 0:
label 0:
2025-06-13 07:34:48,929 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:48,929 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,929 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,930 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
2025-06-13 07:34:48,930 - print_capture - INFO -     indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
2025-06-13 07:34:48,930 - print_capture - INFO -     indices = arg(1, name=indices)           ['indices']
    axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
2025-06-13 07:34:48,930 - print_capture - INFO -     axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
2025-06-13 07:34:48,930 - print_capture - INFO -     axis = arg(2, name=axis)                 ['axis']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
2025-06-13 07:34:48,930 - print_capture - INFO -     $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
2025-06-13 07:34:48,930 - print_capture - INFO -     $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
2025-06-13 07:34:48,930 - print_capture - INFO -     $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
2025-06-13 07:34:48,930 - print_capture - INFO -     $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
2025-06-13 07:34:48,930 - print_capture - INFO -     $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
2025-06-13 07:34:48,930 - print_capture - INFO -     $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
2025-06-13 07:34:48,930 - print_capture - INFO -     $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
2025-06-13 07:34:48,930 - print_capture - INFO -     $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
2025-06-13 07:34:48,930 - print_capture - INFO -     bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
2025-06-13 07:34:48,930 - print_capture - INFO -     bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
2025-06-13 07:34:48,930 - print_capture - INFO -     $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
2025-06-13 07:34:48,930 - print_capture - INFO -     $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
2025-06-13 07:34:48,930 - print_capture - INFO -     branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
2025-06-13 07:34:48,930 - print_capture - INFO -     branch $14pred, 28, 16                   ['$14pred']
label 16:
label 16:
2025-06-13 07:34:48,930 - print_capture - INFO - label 16:
label 16:
label 16:
2025-06-13 07:34:48,930 - print_capture - INFO - label 16:
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
2025-06-13 07:34:48,930 - print_capture - INFO -     $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
2025-06-13 07:34:48,930 - print_capture - INFO -     $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
2025-06-13 07:34:48,930 - print_capture - INFO -     $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
2025-06-13 07:34:48,930 - print_capture - INFO -     $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
2025-06-13 07:34:48,930 - print_capture - INFO -     $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
2025-06-13 07:34:48,930 - print_capture - INFO -     $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
2025-06-13 07:34:48,930 - print_capture - INFO -     bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
2025-06-13 07:34:48,930 - print_capture - INFO -     bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
2025-06-13 07:34:48,930 - print_capture - INFO -     $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
2025-06-13 07:34:48,930 - print_capture - INFO -     $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
2025-06-13 07:34:48,930 - print_capture - INFO -     branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
2025-06-13 07:34:48,930 - print_capture - INFO -     branch $26pred, 28, 36                   ['$26pred']
label 28:
label 28:
2025-06-13 07:34:48,930 - print_capture - INFO - label 28:
label 28:
label 28:
2025-06-13 07:34:48,930 - print_capture - INFO - label 28:
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
2025-06-13 07:34:48,930 - print_capture - INFO -     $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
2025-06-13 07:34:48,930 - print_capture - INFO -     $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
2025-06-13 07:34:48,930 - print_capture - INFO -     $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
2025-06-13 07:34:48,930 - print_capture - INFO -     $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
2025-06-13 07:34:48,930 - print_capture - INFO -     $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
2025-06-13 07:34:48,931 - print_capture - INFO -     $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
2025-06-13 07:34:48,931 - print_capture - INFO -     raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
2025-06-13 07:34:48,931 - print_capture - INFO -     raise $32call_function.2                 ['$32call_function.2']
label 36:
label 36:
2025-06-13 07:34:48,931 - print_capture - INFO - label 36:
label 36:
label 36:
2025-06-13 07:34:48,931 - print_capture - INFO - label 36:
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
2025-06-13 07:34:48,931 - print_capture - INFO -     $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
2025-06-13 07:34:48,931 - print_capture - INFO -     $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
2025-06-13 07:34:48,931 - print_capture - INFO -     $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
2025-06-13 07:34:48,931 - print_capture - INFO -     $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
2025-06-13 07:34:48,931 - print_capture - INFO -     $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
2025-06-13 07:34:48,931 - print_capture - INFO -     $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
2025-06-13 07:34:48,931 - print_capture - INFO -     $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
2025-06-13 07:34:48,931 - print_capture - INFO -     $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
2025-06-13 07:34:48,931 - print_capture - INFO -     return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
2025-06-13 07:34:48,931 - print_capture - INFO -     return $46return_value.5                 ['$46return_value.5']
label 0:
label 0:
2025-06-13 07:34:48,989 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:48,989 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,989 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:48,989 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    c = freevar(acc_init: 0.0)               ['c']
2025-06-13 07:34:48,989 - print_capture - INFO -     c = freevar(acc_init: 0.0)               ['c']
    c = freevar(acc_init: 0.0)               ['c']
    c = freevar(acc_init: 0.0)               ['c']
2025-06-13 07:34:48,989 - print_capture - INFO -     c = freevar(acc_init: 0.0)               ['c']
    $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
2025-06-13 07:34:48,989 - print_capture - INFO -     $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
2025-06-13 07:34:48,989 - print_capture - INFO -     $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
2025-06-13 07:34:48,990 - print_capture - INFO -     $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
2025-06-13 07:34:48,990 - print_capture - INFO -     $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
2025-06-13 07:34:48,990 - print_capture - INFO -     $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
2025-06-13 07:34:48,990 - print_capture - INFO -     $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
2025-06-13 07:34:48,990 - print_capture - INFO -     $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
2025-06-13 07:34:48,990 - print_capture - INFO -     $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
2025-06-13 07:34:48,990 - print_capture - INFO -     $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
2025-06-13 07:34:48,990 - print_capture - INFO -     $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    jump 16                                  []
    jump 16                                  []
2025-06-13 07:34:48,990 - print_capture - INFO -     jump 16                                  []
    jump 16                                  []
    jump 16                                  []
2025-06-13 07:34:48,990 - print_capture - INFO -     jump 16                                  []
label 16:
label 16:
2025-06-13 07:34:48,990 - print_capture - INFO - label 16:
label 16:
label 16:
2025-06-13 07:34:48,990 - print_capture - INFO - label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
2025-06-13 07:34:48,990 - print_capture - INFO -     $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
2025-06-13 07:34:48,990 - print_capture - INFO -     $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
2025-06-13 07:34:48,990 - print_capture - INFO -     $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
2025-06-13 07:34:48,990 - print_capture - INFO -     $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
2025-06-13 07:34:48,990 - print_capture - INFO -     $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
2025-06-13 07:34:48,990 - print_capture - INFO -     $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
2025-06-13 07:34:48,990 - print_capture - INFO -     $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
2025-06-13 07:34:48,990 - print_capture - INFO -     $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
2025-06-13 07:34:48,990 - print_capture - INFO -     branch $16for_iter.3, 18, 34             ['$16for_iter.3']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
2025-06-13 07:34:48,990 - print_capture - INFO -     branch $16for_iter.3, 18, 34             ['$16for_iter.3']
label 18:
label 18:
2025-06-13 07:34:48,990 - print_capture - INFO - label 18:
label 18:
label 18:
2025-06-13 07:34:48,990 - print_capture - INFO - label 18:
    v = $phi18.1                             ['$phi18.1', 'v']
    v = $phi18.1                             ['$phi18.1', 'v']
2025-06-13 07:34:48,990 - print_capture - INFO -     v = $phi18.1                             ['$phi18.1', 'v']
    v = $phi18.1                             ['$phi18.1', 'v']
    v = $phi18.1                             ['$phi18.1', 'v']
2025-06-13 07:34:48,990 - print_capture - INFO -     v = $phi18.1                             ['$phi18.1', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
2025-06-13 07:34:48,990 - print_capture - INFO -     $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
2025-06-13 07:34:48,990 - print_capture - INFO -     $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
2025-06-13 07:34:48,990 - print_capture - INFO -     $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
2025-06-13 07:34:48,990 - print_capture - INFO -     $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
2025-06-13 07:34:48,990 - print_capture - INFO -     $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
2025-06-13 07:34:48,990 - print_capture - INFO -     $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
2025-06-13 07:34:48,990 - print_capture - INFO -     c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
2025-06-13 07:34:48,990 - print_capture - INFO -     c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    jump 16                                  []
    jump 16                                  []
2025-06-13 07:34:48,990 - print_capture - INFO -     jump 16                                  []
    jump 16                                  []
    jump 16                                  []
2025-06-13 07:34:48,990 - print_capture - INFO -     jump 16                                  []
label 34:
label 34:
2025-06-13 07:34:48,990 - print_capture - INFO - label 34:
label 34:
label 34:
2025-06-13 07:34:48,990 - print_capture - INFO - label 34:
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
2025-06-13 07:34:48,990 - print_capture - INFO -     $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
2025-06-13 07:34:48,990 - print_capture - INFO -     $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
2025-06-13 07:34:48,990 - print_capture - INFO -     $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
2025-06-13 07:34:48,991 - print_capture - INFO -     $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
2025-06-13 07:34:48,991 - print_capture - INFO -     $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
2025-06-13 07:34:48,991 - print_capture - INFO -     $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']
2025-06-13 07:34:48,991 - print_capture - INFO -     return $42return_value.4                 ['$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']
2025-06-13 07:34:48,991 - print_capture - INFO -     return $42return_value.4                 ['$42return_value.4']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:49,115 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:49,115 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# --- LINE 1193 --- 
# --- LINE 1193 --- 
2025-06-13 07:34:49,115 - print_capture - INFO - # --- LINE 1193 --- 
# --- LINE 1193 --- 
# --- LINE 1193 --- 
2025-06-13 07:34:49,116 - print_capture - INFO - # --- LINE 1193 --- 
# label 0
# label 0
2025-06-13 07:34:49,116 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:49,116 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: array(int32, 1d, A)
#   x = arg(0, name=x)  :: array(int32, 1d, A)
2025-06-13 07:34:49,116 - print_capture - INFO - #   x = arg(0, name=x)  :: array(int32, 1d, A)
#   x = arg(0, name=x)  :: array(int32, 1d, A)
#   x = arg(0, name=x)  :: array(int32, 1d, A)
2025-06-13 07:34:49,116 - print_capture - INFO - #   x = arg(0, name=x)  :: array(int32, 1d, A)
#   pre_max = arg(1, name=pre_max)  :: uint32
#   pre_max = arg(1, name=pre_max)  :: uint32
2025-06-13 07:34:49,116 - print_capture - INFO - #   pre_max = arg(1, name=pre_max)  :: uint32
#   pre_max = arg(1, name=pre_max)  :: uint32
#   pre_max = arg(1, name=pre_max)  :: uint32
2025-06-13 07:34:49,116 - print_capture - INFO - #   pre_max = arg(1, name=pre_max)  :: uint32
#   post_max = arg(2, name=post_max)  :: uint32
#   post_max = arg(2, name=post_max)  :: uint32
2025-06-13 07:34:49,116 - print_capture - INFO - #   post_max = arg(2, name=post_max)  :: uint32
#   post_max = arg(2, name=post_max)  :: uint32
#   post_max = arg(2, name=post_max)  :: uint32
2025-06-13 07:34:49,116 - print_capture - INFO - #   post_max = arg(2, name=post_max)  :: uint32
#   pre_avg = arg(3, name=pre_avg)  :: uint32
#   pre_avg = arg(3, name=pre_avg)  :: uint32
2025-06-13 07:34:49,116 - print_capture - INFO - #   pre_avg = arg(3, name=pre_avg)  :: uint32
#   pre_avg = arg(3, name=pre_avg)  :: uint32
#   pre_avg = arg(3, name=pre_avg)  :: uint32
2025-06-13 07:34:49,116 - print_capture - INFO - #   pre_avg = arg(3, name=pre_avg)  :: uint32
#   post_avg = arg(4, name=post_avg)  :: uint32
#   post_avg = arg(4, name=post_avg)  :: uint32
2025-06-13 07:34:49,116 - print_capture - INFO - #   post_avg = arg(4, name=post_avg)  :: uint32
#   post_avg = arg(4, name=post_avg)  :: uint32
#   post_avg = arg(4, name=post_avg)  :: uint32
2025-06-13 07:34:49,116 - print_capture - INFO - #   post_avg = arg(4, name=post_avg)  :: uint32
#   delta = arg(5, name=delta)  :: float32
#   delta = arg(5, name=delta)  :: float32
2025-06-13 07:34:49,116 - print_capture - INFO - #   delta = arg(5, name=delta)  :: float32
#   delta = arg(5, name=delta)  :: float32
#   delta = arg(5, name=delta)  :: float32
2025-06-13 07:34:49,116 - print_capture - INFO - #   delta = arg(5, name=delta)  :: float32
#   wait = arg(6, name=wait)  :: uint32
#   wait = arg(6, name=wait)  :: uint32
2025-06-13 07:34:49,116 - print_capture - INFO - #   wait = arg(6, name=wait)  :: uint32
#   wait = arg(6, name=wait)  :: uint32
#   wait = arg(6, name=wait)  :: uint32
2025-06-13 07:34:49,116 - print_capture - INFO - #   wait = arg(6, name=wait)  :: uint32
#   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
#   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
2025-06-13 07:34:49,116 - print_capture - INFO - #   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
#   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
#   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
2025-06-13 07:34:49,116 - print_capture - INFO - #   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)


2025-06-13 07:34:49,116 - print_capture - INFO - 


2025-06-13 07:34:49,116 - print_capture - INFO - 
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:49,116 - print_capture - INFO - @numba.guvectorize(
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:49,116 - print_capture - INFO - @numba.guvectorize(


2025-06-13 07:34:49,116 - print_capture - INFO - 


2025-06-13 07:34:49,116 - print_capture - INFO - 
    # --- LINE 1194 --- 
    # --- LINE 1194 --- 
2025-06-13 07:34:49,116 - print_capture - INFO -     # --- LINE 1194 --- 
    # --- LINE 1194 --- 
    # --- LINE 1194 --- 
2025-06-13 07:34:49,116 - print_capture - INFO -     # --- LINE 1194 --- 


2025-06-13 07:34:49,116 - print_capture - INFO - 


2025-06-13 07:34:49,116 - print_capture - INFO - 
    [
    [
2025-06-13 07:34:49,116 - print_capture - INFO -     [
    [
    [
2025-06-13 07:34:49,116 - print_capture - INFO -     [


2025-06-13 07:34:49,116 - print_capture - INFO - 


2025-06-13 07:34:49,116 - print_capture - INFO - 
        # --- LINE 1195 --- 
        # --- LINE 1195 --- 
2025-06-13 07:34:49,116 - print_capture - INFO -         # --- LINE 1195 --- 
        # --- LINE 1195 --- 
        # --- LINE 1195 --- 
2025-06-13 07:34:49,116 - print_capture - INFO -         # --- LINE 1195 --- 


2025-06-13 07:34:49,116 - print_capture - INFO - 


2025-06-13 07:34:49,116 - print_capture - INFO - 
        "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:49,116 - print_capture - INFO -         "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:49,116 - print_capture - INFO -         "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",


2025-06-13 07:34:49,116 - print_capture - INFO - 


2025-06-13 07:34:49,116 - print_capture - INFO - 
        # --- LINE 1196 --- 
        # --- LINE 1196 --- 
2025-06-13 07:34:49,116 - print_capture - INFO -         # --- LINE 1196 --- 
        # --- LINE 1196 --- 
        # --- LINE 1196 --- 
2025-06-13 07:34:49,116 - print_capture - INFO -         # --- LINE 1196 --- 


2025-06-13 07:34:49,116 - print_capture - INFO - 


2025-06-13 07:34:49,116 - print_capture - INFO - 
        "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:49,116 - print_capture - INFO -         "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:49,116 - print_capture - INFO -         "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",


2025-06-13 07:34:49,116 - print_capture - INFO - 


2025-06-13 07:34:49,116 - print_capture - INFO - 
        # --- LINE 1197 --- 
        # --- LINE 1197 --- 
2025-06-13 07:34:49,116 - print_capture - INFO -         # --- LINE 1197 --- 
        # --- LINE 1197 --- 
        # --- LINE 1197 --- 
2025-06-13 07:34:49,117 - print_capture - INFO -         # --- LINE 1197 --- 


2025-06-13 07:34:49,117 - print_capture - INFO - 


2025-06-13 07:34:49,117 - print_capture - INFO - 
        "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:49,117 - print_capture - INFO -         "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:49,117 - print_capture - INFO -         "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",


2025-06-13 07:34:49,117 - print_capture - INFO - 


2025-06-13 07:34:49,117 - print_capture - INFO - 
        # --- LINE 1198 --- 
        # --- LINE 1198 --- 
2025-06-13 07:34:49,117 - print_capture - INFO -         # --- LINE 1198 --- 
        # --- LINE 1198 --- 
        # --- LINE 1198 --- 
2025-06-13 07:34:49,117 - print_capture - INFO -         # --- LINE 1198 --- 


2025-06-13 07:34:49,117 - print_capture - INFO - 


2025-06-13 07:34:49,117 - print_capture - INFO - 
        "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:49,117 - print_capture - INFO -         "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:49,117 - print_capture - INFO -         "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",


2025-06-13 07:34:49,117 - print_capture - INFO - 


2025-06-13 07:34:49,117 - print_capture - INFO - 
    # --- LINE 1199 --- 
    # --- LINE 1199 --- 
2025-06-13 07:34:49,117 - print_capture - INFO -     # --- LINE 1199 --- 
    # --- LINE 1199 --- 
    # --- LINE 1199 --- 
2025-06-13 07:34:49,117 - print_capture - INFO -     # --- LINE 1199 --- 


2025-06-13 07:34:49,117 - print_capture - INFO - 


2025-06-13 07:34:49,117 - print_capture - INFO - 
    ],
    ],
2025-06-13 07:34:49,117 - print_capture - INFO -     ],
    ],
    ],
2025-06-13 07:34:49,117 - print_capture - INFO -     ],


2025-06-13 07:34:49,117 - print_capture - INFO - 


2025-06-13 07:34:49,117 - print_capture - INFO - 
    # --- LINE 1200 --- 
    # --- LINE 1200 --- 
2025-06-13 07:34:49,117 - print_capture - INFO -     # --- LINE 1200 --- 
    # --- LINE 1200 --- 
    # --- LINE 1200 --- 
2025-06-13 07:34:49,117 - print_capture - INFO -     # --- LINE 1200 --- 


2025-06-13 07:34:49,117 - print_capture - INFO - 


2025-06-13 07:34:49,117 - print_capture - INFO - 
    "(n),(),(),(),(),(),()->(n)",
    "(n),(),(),(),(),(),()->(n)",
2025-06-13 07:34:49,117 - print_capture - INFO -     "(n),(),(),(),(),(),()->(n)",
    "(n),(),(),(),(),(),()->(n)",
    "(n),(),(),(),(),(),()->(n)",
2025-06-13 07:34:49,117 - print_capture - INFO -     "(n),(),(),(),(),(),()->(n)",


2025-06-13 07:34:49,117 - print_capture - INFO - 


2025-06-13 07:34:49,117 - print_capture - INFO - 
    # --- LINE 1201 --- 
    # --- LINE 1201 --- 
2025-06-13 07:34:49,117 - print_capture - INFO -     # --- LINE 1201 --- 
    # --- LINE 1201 --- 
    # --- LINE 1201 --- 
2025-06-13 07:34:49,117 - print_capture - INFO -     # --- LINE 1201 --- 


2025-06-13 07:34:49,117 - print_capture - INFO - 


2025-06-13 07:34:49,117 - print_capture - INFO - 
    nopython=True, cache=True)
    nopython=True, cache=True)
2025-06-13 07:34:49,117 - print_capture - INFO -     nopython=True, cache=True)
    nopython=True, cache=True)
    nopython=True, cache=True)
2025-06-13 07:34:49,117 - print_capture - INFO -     nopython=True, cache=True)


2025-06-13 07:34:49,117 - print_capture - INFO - 


2025-06-13 07:34:49,117 - print_capture - INFO - 
# --- LINE 1202 --- 
# --- LINE 1202 --- 
2025-06-13 07:34:49,117 - print_capture - INFO - # --- LINE 1202 --- 
# --- LINE 1202 --- 
# --- LINE 1202 --- 
2025-06-13 07:34:49,117 - print_capture - INFO - # --- LINE 1202 --- 


2025-06-13 07:34:49,117 - print_capture - INFO - 


2025-06-13 07:34:49,117 - print_capture - INFO - 
def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
2025-06-13 07:34:49,117 - print_capture - INFO - def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
2025-06-13 07:34:49,117 - print_capture - INFO - def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):


2025-06-13 07:34:49,117 - print_capture - INFO - 


2025-06-13 07:34:49,117 - print_capture - INFO - 
    # --- LINE 1203 --- 
    # --- LINE 1203 --- 
2025-06-13 07:34:49,117 - print_capture - INFO -     # --- LINE 1203 --- 
    # --- LINE 1203 --- 
    # --- LINE 1203 --- 
2025-06-13 07:34:49,117 - print_capture - INFO -     # --- LINE 1203 --- 


2025-06-13 07:34:49,118 - print_capture - INFO - 


2025-06-13 07:34:49,118 - print_capture - INFO - 
    """Vectorized wrapper for the peak-picker"""
    """Vectorized wrapper for the peak-picker"""
2025-06-13 07:34:49,118 - print_capture - INFO -     """Vectorized wrapper for the peak-picker"""
    """Vectorized wrapper for the peak-picker"""
    """Vectorized wrapper for the peak-picker"""
2025-06-13 07:34:49,118 - print_capture - INFO -     """Vectorized wrapper for the peak-picker"""


2025-06-13 07:34:49,118 - print_capture - INFO - 


2025-06-13 07:34:49,118 - print_capture - INFO - 
    # --- LINE 1204 --- 
    # --- LINE 1204 --- 
2025-06-13 07:34:49,118 - print_capture - INFO -     # --- LINE 1204 --- 
    # --- LINE 1204 --- 
    # --- LINE 1204 --- 
2025-06-13 07:34:49,118 - print_capture - INFO -     # --- LINE 1204 --- 


2025-06-13 07:34:49,118 - print_capture - INFO - 


2025-06-13 07:34:49,118 - print_capture - INFO - 
    # Special case the first frame
    # Special case the first frame
2025-06-13 07:34:49,118 - print_capture - INFO -     # Special case the first frame
    # Special case the first frame
    # Special case the first frame
2025-06-13 07:34:49,118 - print_capture - INFO -     # Special case the first frame


2025-06-13 07:34:49,118 - print_capture - INFO - 


2025-06-13 07:34:49,118 - print_capture - INFO - 
    # --- LINE 1205 --- 
    # --- LINE 1205 --- 
2025-06-13 07:34:49,118 - print_capture - INFO -     # --- LINE 1205 --- 
    # --- LINE 1205 --- 
    # --- LINE 1205 --- 
2025-06-13 07:34:49,118 - print_capture - INFO -     # --- LINE 1205 --- 
    #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
    #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
    #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
    #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
    #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: int32
    #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: int32
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: int32
    #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: int32
    #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: int32
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: int32
    #   del $const4.1.1
    #   del $const4.1.1
2025-06-13 07:34:49,118 - print_capture - INFO -     #   del $const4.1.1
    #   del $const4.1.1
    #   del $const4.1.1
2025-06-13 07:34:49,118 - print_capture - INFO -     #   del $const4.1.1
    #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
    #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
    #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
    #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
    #   del $8load_global.3
    #   del $8load_global.3
2025-06-13 07:34:49,118 - print_capture - INFO -     #   del $8load_global.3
    #   del $8load_global.3
    #   del $8load_global.3
2025-06-13 07:34:49,118 - print_capture - INFO -     #   del $8load_global.3
    #   $const14.6.2 = const(NoneType, None)  :: none
    #   $const14.6.2 = const(NoneType, None)  :: none
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $const14.6.2 = const(NoneType, None)  :: none
    #   $const14.6.2 = const(NoneType, None)  :: none
    #   $const14.6.2 = const(NoneType, None)  :: none
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $const14.6.2 = const(NoneType, None)  :: none
    #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
    #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
    #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
    #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
    #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
    #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
    #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
    #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
    #   del $const24.11.1
    #   del $const24.11.1
2025-06-13 07:34:49,118 - print_capture - INFO -     #   del $const24.11.1
    #   del $const24.11.1
    #   del $const24.11.1
2025-06-13 07:34:49,118 - print_capture - INFO -     #   del $const24.11.1
    #   del $22load_attr.10
    #   del $22load_attr.10
2025-06-13 07:34:49,118 - print_capture - INFO -     #   del $22load_attr.10
    #   del $22load_attr.10
    #   del $22load_attr.10
2025-06-13 07:34:49,118 - print_capture - INFO -     #   del $22load_attr.10
    #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   del $26binary_subscr.12
    #   del $26binary_subscr.12
2025-06-13 07:34:49,118 - print_capture - INFO -     #   del $26binary_subscr.12
    #   del $26binary_subscr.12
    #   del $26binary_subscr.12
2025-06-13 07:34:49,118 - print_capture - INFO -     #   del $26binary_subscr.12
    #   del $16load_global.7
    #   del $16load_global.7
2025-06-13 07:34:49,118 - print_capture - INFO -     #   del $16load_global.7
    #   del $16load_global.7
    #   del $16load_global.7
2025-06-13 07:34:49,118 - print_capture - INFO -     #   del $16load_global.7
    #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:49,118 - print_capture - INFO -     #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:49,119 - print_capture - INFO -     #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
2025-06-13 07:34:49,119 - print_capture - INFO -     #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
2025-06-13 07:34:49,119 - print_capture - INFO -     #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   del $const14.6.2
    #   del $const14.6.2
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $const14.6.2
    #   del $const14.6.2
    #   del $const14.6.2
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $const14.6.2
    #   del $30build_slice.14
    #   del $30build_slice.14
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $30build_slice.14
    #   del $30build_slice.14
    #   del $30build_slice.14
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $30build_slice.14
    #   del $28call_function.13
    #   del $28call_function.13
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $28call_function.13
    #   del $28call_function.13
    #   del $28call_function.13
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $28call_function.13
    #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(int32, 1d, A)
    #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(int32, 1d, A)
2025-06-13 07:34:49,119 - print_capture - INFO -     #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(int32, 1d, A)
    #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(int32, 1d, A)
    #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(int32, 1d, A)
2025-06-13 07:34:49,119 - print_capture - INFO -     #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(int32, 1d, A)
    #   del $30build_slice.15
    #   del $30build_slice.15
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $30build_slice.15
    #   del $30build_slice.15
    #   del $30build_slice.15
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $30build_slice.15
    #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> int32
    #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> int32
2025-06-13 07:34:49,119 - print_capture - INFO -     #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> int32
    #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> int32
    #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> int32
2025-06-13 07:34:49,119 - print_capture - INFO -     #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> int32
    #   del $32binary_subscr.16
    #   del $32binary_subscr.16
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $32binary_subscr.16
    #   del $32binary_subscr.16
    #   del $32binary_subscr.16
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $32binary_subscr.16
    #   del $10load_method.4
    #   del $10load_method.4
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $10load_method.4
    #   del $10load_method.4
    #   del $10load_method.4
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $10load_method.4
    #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
    #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
2025-06-13 07:34:49,119 - print_capture - INFO -     #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
    #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
    #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
2025-06-13 07:34:49,119 - print_capture - INFO -     #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
    #   del $6binary_subscr.2
    #   del $6binary_subscr.2
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $6binary_subscr.2
    #   del $6binary_subscr.2
    #   del $6binary_subscr.2
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $6binary_subscr.2
    #   del $34call_method.17
    #   del $34call_method.17
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $34call_method.17
    #   del $34call_method.17
    #   del $34call_method.17
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $34call_method.17
    #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
    #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,119 - print_capture - INFO -     #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
    #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
    #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,119 - print_capture - INFO -     #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
    #   peaks[0] = $36compare_op.18
    #   peaks[0] = $36compare_op.18
2025-06-13 07:34:49,119 - print_capture - INFO -     #   peaks[0] = $36compare_op.18
    #   peaks[0] = $36compare_op.18
    #   peaks[0] = $36compare_op.18
2025-06-13 07:34:49,119 - print_capture - INFO -     #   peaks[0] = $36compare_op.18
    #   del $const40.20.1
    #   del $const40.20.1
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $const40.20.1
    #   del $const40.20.1
    #   del $const40.20.1
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $const40.20.1
    #   del $36compare_op.18
    #   del $36compare_op.18
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $36compare_op.18
    #   del $36compare_op.18
    #   del $36compare_op.18
2025-06-13 07:34:49,119 - print_capture - INFO -     #   del $36compare_op.18


2025-06-13 07:34:49,119 - print_capture - INFO - 


2025-06-13 07:34:49,119 - print_capture - INFO - 
    peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
    peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
2025-06-13 07:34:49,119 - print_capture - INFO -     peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
    peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
    peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
2025-06-13 07:34:49,119 - print_capture - INFO -     peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))


2025-06-13 07:34:49,119 - print_capture - INFO - 


2025-06-13 07:34:49,119 - print_capture - INFO - 
    # --- LINE 1206 --- 
    # --- LINE 1206 --- 
2025-06-13 07:34:49,119 - print_capture - INFO -     # --- LINE 1206 --- 
    # --- LINE 1206 --- 
    # --- LINE 1206 --- 
2025-06-13 07:34:49,119 - print_capture - INFO -     # --- LINE 1206 --- 
    #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
    #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,119 - print_capture - INFO -     #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
    #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
    #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,119 - print_capture - INFO -     #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
    #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
    #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,119 - print_capture - INFO -     #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
    #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
    #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,119 - print_capture - INFO -     #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
    #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
    #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,119 - print_capture - INFO -     #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
    #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
    #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,119 - print_capture - INFO -     #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
    #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: int32
    #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: int32
2025-06-13 07:34:49,119 - print_capture - INFO -     #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: int32
    #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: int32
    #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: int32
2025-06-13 07:34:49,119 - print_capture - INFO -     #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: int32
    #   del $const54.27.1
    #   del $const54.27.1
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $const54.27.1
    #   del $const54.27.1
    #   del $const54.27.1
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $const54.27.1
    #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
    #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
    #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
    #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
    #   del $58load_global.29
    #   del $58load_global.29
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $58load_global.29
    #   del $58load_global.29
    #   del $58load_global.29
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $58load_global.29
    #   $const64.32.2 = const(NoneType, None)  :: none
    #   $const64.32.2 = const(NoneType, None)  :: none
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $const64.32.2 = const(NoneType, None)  :: none
    #   $const64.32.2 = const(NoneType, None)  :: none
    #   $const64.32.2 = const(NoneType, None)  :: none
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $const64.32.2 = const(NoneType, None)  :: none
    #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
    #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
    #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
    #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
    #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
    #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
    #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
    #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
    #   del $const74.37.1
    #   del $const74.37.1
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $const74.37.1
    #   del $const74.37.1
    #   del $const74.37.1
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $const74.37.1
    #   del $72load_attr.36
    #   del $72load_attr.36
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $72load_attr.36
    #   del $72load_attr.36
    #   del $72load_attr.36
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $72load_attr.36
    #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   del $76binary_subscr.38
    #   del $76binary_subscr.38
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $76binary_subscr.38
    #   del $76binary_subscr.38
    #   del $76binary_subscr.38
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $76binary_subscr.38
    #   del $66load_global.33
    #   del $66load_global.33
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $66load_global.33
    #   del $66load_global.33
    #   del $66load_global.33
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $66load_global.33
    #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   del $const64.32.2
    #   del $const64.32.2
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $const64.32.2
    #   del $const64.32.2
    #   del $const64.32.2
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $const64.32.2
    #   del $80build_slice.40
    #   del $80build_slice.40
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $80build_slice.40
    #   del $80build_slice.40
    #   del $80build_slice.40
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $80build_slice.40
    #   del $78call_function.39
    #   del $78call_function.39
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $78call_function.39
    #   del $78call_function.39
    #   del $78call_function.39
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $78call_function.39
    #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(int32, 1d, A)
    #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(int32, 1d, A)
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(int32, 1d, A)
    #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(int32, 1d, A)
    #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(int32, 1d, A)
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(int32, 1d, A)
    #   del $80build_slice.41
    #   del $80build_slice.41
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $80build_slice.41
    #   del $80build_slice.41
    #   del $80build_slice.41
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $80build_slice.41
    #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> float64
    #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> float64
    #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> float64
    #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> float64
    #   del $82binary_subscr.42
    #   del $82binary_subscr.42
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $82binary_subscr.42
    #   del $82binary_subscr.42
    #   del $82binary_subscr.42
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $82binary_subscr.42
    #   del $60load_method.30
    #   del $60load_method.30
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $60load_method.30
    #   del $60load_method.30
    #   del $60load_method.30
2025-06-13 07:34:49,120 - print_capture - INFO -     #   del $60load_method.30
    #   $88binary_add.45 = $84call_method.43 + delta  :: float64
    #   $88binary_add.45 = $84call_method.43 + delta  :: float64
2025-06-13 07:34:49,120 - print_capture - INFO -     #   $88binary_add.45 = $84call_method.43 + delta  :: float64
    #   $88binary_add.45 = $84call_method.43 + delta  :: float64
    #   $88binary_add.45 = $84call_method.43 + delta  :: float64
2025-06-13 07:34:49,121 - print_capture - INFO -     #   $88binary_add.45 = $84call_method.43 + delta  :: float64
    #   del $84call_method.43
    #   del $84call_method.43
2025-06-13 07:34:49,121 - print_capture - INFO -     #   del $84call_method.43
    #   del $84call_method.43
    #   del $84call_method.43
2025-06-13 07:34:49,121 - print_capture - INFO -     #   del $84call_method.43
    #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
    #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
2025-06-13 07:34:49,121 - print_capture - INFO -     #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
    #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
    #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
2025-06-13 07:34:49,121 - print_capture - INFO -     #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
    #   del $88binary_add.45
    #   del $88binary_add.45
2025-06-13 07:34:49,121 - print_capture - INFO -     #   del $88binary_add.45
    #   del $88binary_add.45
    #   del $88binary_add.45
2025-06-13 07:34:49,121 - print_capture - INFO -     #   del $88binary_add.45
    #   del $56binary_subscr.28
    #   del $56binary_subscr.28
2025-06-13 07:34:49,121 - print_capture - INFO -     #   del $56binary_subscr.28
    #   del $56binary_subscr.28
    #   del $56binary_subscr.28
2025-06-13 07:34:49,121 - print_capture - INFO -     #   del $56binary_subscr.28
    #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
    #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
2025-06-13 07:34:49,121 - print_capture - INFO -     #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
    #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
    #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
2025-06-13 07:34:49,121 - print_capture - INFO -     #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
    #   del $90compare_op.46
    #   del $90compare_op.46
2025-06-13 07:34:49,121 - print_capture - INFO -     #   del $90compare_op.46
    #   del $90compare_op.46
    #   del $90compare_op.46
2025-06-13 07:34:49,121 - print_capture - INFO -     #   del $90compare_op.46
    #   del $50binary_subscr.25
    #   del $50binary_subscr.25
2025-06-13 07:34:49,121 - print_capture - INFO -     #   del $50binary_subscr.25
    #   del $50binary_subscr.25
    #   del $50binary_subscr.25
2025-06-13 07:34:49,121 - print_capture - INFO -     #   del $50binary_subscr.25
    #   peaks[0] = $92inplace_and.47
    #   peaks[0] = $92inplace_and.47
2025-06-13 07:34:49,121 - print_capture - INFO -     #   peaks[0] = $92inplace_and.47
    #   peaks[0] = $92inplace_and.47
    #   peaks[0] = $92inplace_and.47
2025-06-13 07:34:49,121 - print_capture - INFO -     #   peaks[0] = $92inplace_and.47
    #   del $const46.22.1
    #   del $const46.22.1
2025-06-13 07:34:49,121 - print_capture - INFO -     #   del $const46.22.1
    #   del $const46.22.1
    #   del $const46.22.1
2025-06-13 07:34:49,121 - print_capture - INFO -     #   del $const46.22.1
    #   del $92inplace_and.47
    #   del $92inplace_and.47
2025-06-13 07:34:49,121 - print_capture - INFO -     #   del $92inplace_and.47
    #   del $92inplace_and.47
    #   del $92inplace_and.47
2025-06-13 07:34:49,121 - print_capture - INFO -     #   del $92inplace_and.47


2025-06-13 07:34:49,121 - print_capture - INFO - 


2025-06-13 07:34:49,121 - print_capture - INFO - 
    peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
    peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
2025-06-13 07:34:49,121 - print_capture - INFO -     peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
    peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
    peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
2025-06-13 07:34:49,121 - print_capture - INFO -     peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)


2025-06-13 07:34:49,121 - print_capture - INFO - 


2025-06-13 07:34:49,121 - print_capture - INFO - 
# --- LINE 1207 --- 
# --- LINE 1207 --- 
2025-06-13 07:34:49,121 - print_capture - INFO - # --- LINE 1207 --- 
# --- LINE 1207 --- 
# --- LINE 1207 --- 
2025-06-13 07:34:49,121 - print_capture - INFO - # --- LINE 1207 --- 


2025-06-13 07:34:49,121 - print_capture - INFO - 


2025-06-13 07:34:49,121 - print_capture - INFO - 


2025-06-13 07:34:49,121 - print_capture - INFO - 


2025-06-13 07:34:49,121 - print_capture - INFO - 


2025-06-13 07:34:49,121 - print_capture - INFO - 


2025-06-13 07:34:49,121 - print_capture - INFO - 
    # --- LINE 1208 --- 
    # --- LINE 1208 --- 
2025-06-13 07:34:49,121 - print_capture - INFO -     # --- LINE 1208 --- 
    # --- LINE 1208 --- 
    # --- LINE 1208 --- 
2025-06-13 07:34:49,121 - print_capture - INFO -     # --- LINE 1208 --- 
    #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
    #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,121 - print_capture - INFO -     #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
    #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
    #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,121 - print_capture - INFO -     #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
    #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
    #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,121 - print_capture - INFO -     #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
    #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
    #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,121 - print_capture - INFO -     #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
    #   del $const100.49.1
    #   del $const100.49.1
2025-06-13 07:34:49,121 - print_capture - INFO -     #   del $const100.49.1
    #   del $const100.49.1
    #   del $const100.49.1
2025-06-13 07:34:49,121 - print_capture - INFO -     #   del $const100.49.1
    #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,121 - print_capture - INFO -     #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,121 - print_capture - INFO -     #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,121 - print_capture - INFO -     #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,121 - print_capture - INFO -     #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   del bool104
    #   del bool104
2025-06-13 07:34:49,121 - print_capture - INFO -     #   del bool104
    #   del bool104
    #   del bool104
2025-06-13 07:34:49,121 - print_capture - INFO -     #   del bool104
    #   del $102binary_subscr.50
    #   del $102binary_subscr.50
2025-06-13 07:34:49,121 - print_capture - INFO -     #   del $102binary_subscr.50
    #   del $102binary_subscr.50
    #   del $102binary_subscr.50
2025-06-13 07:34:49,122 - print_capture - INFO -     #   del $102binary_subscr.50
    #   branch $104pred, 106, 116
    #   branch $104pred, 106, 116
2025-06-13 07:34:49,122 - print_capture - INFO -     #   branch $104pred, 106, 116
    #   branch $104pred, 106, 116
    #   branch $104pred, 106, 116
2025-06-13 07:34:49,122 - print_capture - INFO -     #   branch $104pred, 106, 116


2025-06-13 07:34:49,122 - print_capture - INFO - 


2025-06-13 07:34:49,122 - print_capture - INFO - 
    if peaks[0]:
    if peaks[0]:
2025-06-13 07:34:49,122 - print_capture - INFO -     if peaks[0]:
    if peaks[0]:
    if peaks[0]:
2025-06-13 07:34:49,122 - print_capture - INFO -     if peaks[0]:


2025-06-13 07:34:49,122 - print_capture - INFO - 


2025-06-13 07:34:49,122 - print_capture - INFO - 
        # --- LINE 1209 --- 
        # --- LINE 1209 --- 
2025-06-13 07:34:49,122 - print_capture - INFO -         # --- LINE 1209 --- 
        # --- LINE 1209 --- 
        # --- LINE 1209 --- 
2025-06-13 07:34:49,122 - print_capture - INFO -         # --- LINE 1209 --- 
        # label 106
        # label 106
2025-06-13 07:34:49,122 - print_capture - INFO -         # label 106
        # label 106
        # label 106
2025-06-13 07:34:49,122 - print_capture - INFO -         # label 106
        #   del $104pred
        #   del $104pred
2025-06-13 07:34:49,122 - print_capture - INFO -         #   del $104pred
        #   del $104pred
        #   del $104pred
2025-06-13 07:34:49,122 - print_capture - INFO -         #   del $104pred
        #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
        #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,122 - print_capture - INFO -         #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
        #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
        #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,122 - print_capture - INFO -         #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
        #   n = wait + $const108.1.3  :: int64
        #   n = wait + $const108.1.3  :: int64
2025-06-13 07:34:49,122 - print_capture - INFO -         #   n = wait + $const108.1.3  :: int64
        #   n = wait + $const108.1.3  :: int64
        #   n = wait + $const108.1.3  :: int64
2025-06-13 07:34:49,122 - print_capture - INFO -         #   n = wait + $const108.1.3  :: int64
        #   del $const108.1.3
        #   del $const108.1.3
2025-06-13 07:34:49,122 - print_capture - INFO -         #   del $const108.1.3
        #   del $const108.1.3
        #   del $const108.1.3
2025-06-13 07:34:49,122 - print_capture - INFO -         #   del $const108.1.3
        #   n.5 = n  :: int64
        #   n.5 = n  :: int64
2025-06-13 07:34:49,122 - print_capture - INFO -         #   n.5 = n  :: int64
        #   n.5 = n  :: int64
        #   n.5 = n  :: int64
2025-06-13 07:34:49,122 - print_capture - INFO -         #   n.5 = n  :: int64
        #   del n
        #   del n
2025-06-13 07:34:49,122 - print_capture - INFO -         #   del n
        #   del n
        #   del n
2025-06-13 07:34:49,122 - print_capture - INFO -         #   del n
        #   jump 120
        #   jump 120
2025-06-13 07:34:49,122 - print_capture - INFO -         #   jump 120
        #   jump 120
        #   jump 120
2025-06-13 07:34:49,122 - print_capture - INFO -         #   jump 120


2025-06-13 07:34:49,122 - print_capture - INFO - 


2025-06-13 07:34:49,122 - print_capture - INFO - 
        n = wait + 1
        n = wait + 1
2025-06-13 07:34:49,122 - print_capture - INFO -         n = wait + 1
        n = wait + 1
        n = wait + 1
2025-06-13 07:34:49,122 - print_capture - INFO -         n = wait + 1


2025-06-13 07:34:49,122 - print_capture - INFO - 


2025-06-13 07:34:49,122 - print_capture - INFO - 
    # --- LINE 1210 --- 
    # --- LINE 1210 --- 
2025-06-13 07:34:49,122 - print_capture - INFO -     # --- LINE 1210 --- 
    # --- LINE 1210 --- 
    # --- LINE 1210 --- 
2025-06-13 07:34:49,122 - print_capture - INFO -     # --- LINE 1210 --- 


2025-06-13 07:34:49,122 - print_capture - INFO - 


2025-06-13 07:34:49,122 - print_capture - INFO - 
    else:
    else:
2025-06-13 07:34:49,122 - print_capture - INFO -     else:
    else:
    else:
2025-06-13 07:34:49,122 - print_capture - INFO -     else:


2025-06-13 07:34:49,122 - print_capture - INFO - 


2025-06-13 07:34:49,122 - print_capture - INFO - 
        # --- LINE 1211 --- 
        # --- LINE 1211 --- 
2025-06-13 07:34:49,122 - print_capture - INFO -         # --- LINE 1211 --- 
        # --- LINE 1211 --- 
        # --- LINE 1211 --- 
2025-06-13 07:34:49,122 - print_capture - INFO -         # --- LINE 1211 --- 
        # label 116
        # label 116
2025-06-13 07:34:49,122 - print_capture - INFO -         # label 116
        # label 116
        # label 116
2025-06-13 07:34:49,122 - print_capture - INFO -         # label 116
        #   del $104pred
        #   del $104pred
2025-06-13 07:34:49,122 - print_capture - INFO -         #   del $104pred
        #   del $104pred
        #   del $104pred
2025-06-13 07:34:49,122 - print_capture - INFO -         #   del $104pred
        #   n.1 = const(int, 1)  :: Literal[int](1)
        #   n.1 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,122 - print_capture - INFO -         #   n.1 = const(int, 1)  :: Literal[int](1)
        #   n.1 = const(int, 1)  :: Literal[int](1)
        #   n.1 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,122 - print_capture - INFO -         #   n.1 = const(int, 1)  :: Literal[int](1)
        #   n.5 = n.1  :: int64
        #   n.5 = n.1  :: int64
2025-06-13 07:34:49,123 - print_capture - INFO -         #   n.5 = n.1  :: int64
        #   n.5 = n.1  :: int64
        #   n.5 = n.1  :: int64
2025-06-13 07:34:49,123 - print_capture - INFO -         #   n.5 = n.1  :: int64
        #   del n.1
        #   del n.1
2025-06-13 07:34:49,123 - print_capture - INFO -         #   del n.1
        #   del n.1
        #   del n.1
2025-06-13 07:34:49,123 - print_capture - INFO -         #   del n.1


2025-06-13 07:34:49,123 - print_capture - INFO - 


2025-06-13 07:34:49,123 - print_capture - INFO - 
        n = 1
        n = 1
2025-06-13 07:34:49,123 - print_capture - INFO -         n = 1
        n = 1
        n = 1
2025-06-13 07:34:49,123 - print_capture - INFO -         n = 1


2025-06-13 07:34:49,123 - print_capture - INFO - 


2025-06-13 07:34:49,123 - print_capture - INFO - 
# --- LINE 1212 --- 
# --- LINE 1212 --- 
2025-06-13 07:34:49,123 - print_capture - INFO - # --- LINE 1212 --- 
# --- LINE 1212 --- 
# --- LINE 1212 --- 
2025-06-13 07:34:49,123 - print_capture - INFO - # --- LINE 1212 --- 


2025-06-13 07:34:49,123 - print_capture - INFO - 


2025-06-13 07:34:49,123 - print_capture - INFO - 


2025-06-13 07:34:49,123 - print_capture - INFO - 


2025-06-13 07:34:49,123 - print_capture - INFO - 


2025-06-13 07:34:49,123 - print_capture - INFO - 


2025-06-13 07:34:49,123 - print_capture - INFO - 
    # --- LINE 1213 --- 
    # --- LINE 1213 --- 
2025-06-13 07:34:49,123 - print_capture - INFO -     # --- LINE 1213 --- 
    # --- LINE 1213 --- 
    # --- LINE 1213 --- 
2025-06-13 07:34:49,123 - print_capture - INFO -     # --- LINE 1213 --- 
    #   jump 120
    #   jump 120
2025-06-13 07:34:49,123 - print_capture - INFO -     #   jump 120
    #   jump 120
    #   jump 120
2025-06-13 07:34:49,123 - print_capture - INFO -     #   jump 120
    # label 120
    # label 120
2025-06-13 07:34:49,123 - print_capture - INFO -     # label 120
    # label 120
    # label 120
2025-06-13 07:34:49,123 - print_capture - INFO -     # label 120
    #   n.7 = n.5  :: int64
    #   n.7 = n.5  :: int64
2025-06-13 07:34:49,123 - print_capture - INFO -     #   n.7 = n.5  :: int64
    #   n.7 = n.5  :: int64
    #   n.7 = n.5  :: int64
2025-06-13 07:34:49,123 - print_capture - INFO -     #   n.7 = n.5  :: int64
    #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,123 - print_capture - INFO -     #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,123 - print_capture - INFO -     #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
    #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,123 - print_capture - INFO -     #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
    #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
    #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,123 - print_capture - INFO -     #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
    #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
    #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,123 - print_capture - INFO -     #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
    #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
    #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,123 - print_capture - INFO -     #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
    #   del $const126.3.1
    #   del $const126.3.1
2025-06-13 07:34:49,123 - print_capture - INFO -     #   del $const126.3.1
    #   del $const126.3.1
    #   del $const126.3.1
2025-06-13 07:34:49,123 - print_capture - INFO -     #   del $const126.3.1
    #   del $124load_attr.2
    #   del $124load_attr.2
2025-06-13 07:34:49,123 - print_capture - INFO -     #   del $124load_attr.2
    #   del $124load_attr.2
    #   del $124load_attr.2
2025-06-13 07:34:49,123 - print_capture - INFO -     #   del $124load_attr.2
    #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
    #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
2025-06-13 07:34:49,123 - print_capture - INFO -     #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
    #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
    #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
2025-06-13 07:34:49,123 - print_capture - INFO -     #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
    #   del n.5
    #   del n.5
2025-06-13 07:34:49,123 - print_capture - INFO -     #   del n.5
    #   del n.5
    #   del n.5
2025-06-13 07:34:49,123 - print_capture - INFO -     #   del n.5
    #   del $128binary_subscr.4
    #   del $128binary_subscr.4
2025-06-13 07:34:49,123 - print_capture - INFO -     #   del $128binary_subscr.4
    #   del $128binary_subscr.4
    #   del $128binary_subscr.4
2025-06-13 07:34:49,123 - print_capture - INFO -     #   del $128binary_subscr.4
    #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,123 - print_capture - INFO -     #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,123 - print_capture - INFO -     #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,123 - print_capture - INFO -     #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,123 - print_capture - INFO -     #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   del bool132
    #   del bool132
2025-06-13 07:34:49,123 - print_capture - INFO -     #   del bool132
    #   del bool132
    #   del bool132
2025-06-13 07:34:49,123 - print_capture - INFO -     #   del bool132
    #   del $130compare_op.5
    #   del $130compare_op.5
2025-06-13 07:34:49,123 - print_capture - INFO -     #   del $130compare_op.5
    #   del $130compare_op.5
    #   del $130compare_op.5
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del $130compare_op.5
    #   branch $132pred, 134, 332
    #   branch $132pred, 134, 332
2025-06-13 07:34:49,124 - print_capture - INFO -     #   branch $132pred, 134, 332
    #   branch $132pred, 134, 332
    #   branch $132pred, 134, 332
2025-06-13 07:34:49,124 - print_capture - INFO -     #   branch $132pred, 134, 332
    #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,124 - print_capture - INFO -     #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,124 - print_capture - INFO -     #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
    #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,124 - print_capture - INFO -     #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
    #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
    #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,124 - print_capture - INFO -     #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
    #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
    #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,124 - print_capture - INFO -     #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
    #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
    #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,124 - print_capture - INFO -     #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
    #   del $const320.8.1
    #   del $const320.8.1
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del $const320.8.1
    #   del $const320.8.1
    #   del $const320.8.1
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del $const320.8.1
    #   del $318load_attr.7
    #   del $318load_attr.7
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del $318load_attr.7
    #   del $318load_attr.7
    #   del $318load_attr.7
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del $318load_attr.7
    #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
    #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
2025-06-13 07:34:49,124 - print_capture - INFO -     #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
    #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
    #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
2025-06-13 07:34:49,124 - print_capture - INFO -     #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
    #   del n.4
    #   del n.4
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del n.4
    #   del n.4
    #   del n.4
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del n.4
    #   del $322binary_subscr.9
    #   del $322binary_subscr.9
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del $322binary_subscr.9
    #   del $322binary_subscr.9
    #   del $322binary_subscr.9
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del $322binary_subscr.9
    #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,124 - print_capture - INFO -     #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,124 - print_capture - INFO -     #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,124 - print_capture - INFO -     #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,124 - print_capture - INFO -     #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   del bool326
    #   del bool326
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del bool326
    #   del bool326
    #   del bool326
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del bool326
    #   del $324compare_op.10
    #   del $324compare_op.10
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del $324compare_op.10
    #   del $324compare_op.10
    #   del $324compare_op.10
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del $324compare_op.10
    #   branch $326pred, 134, 328
    #   branch $326pred, 134, 328
2025-06-13 07:34:49,124 - print_capture - INFO -     #   branch $326pred, 134, 328
    #   branch $326pred, 134, 328
    #   branch $326pred, 134, 328
2025-06-13 07:34:49,124 - print_capture - INFO -     #   branch $326pred, 134, 328
    # label 328
    # label 328
2025-06-13 07:34:49,124 - print_capture - INFO -     # label 328
    # label 328
    # label 328
2025-06-13 07:34:49,124 - print_capture - INFO -     # label 328
    #   del x
    #   del x
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del x
    #   del wait
    #   del wait
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del wait
    #   del wait
    #   del wait
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del wait
    #   del pre_max
    #   del pre_max
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del pre_max
    #   del pre_max
    #   del pre_max
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del pre_max
    #   del pre_avg
    #   del pre_avg
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del pre_avg
    #   del pre_avg
    #   del pre_avg
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del pre_avg
    #   del post_max
    #   del post_max
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del post_max
    #   del post_max
    #   del post_max
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del post_max
    #   del post_avg
    #   del post_avg
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del post_avg
    #   del post_avg
    #   del post_avg
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del post_avg
    #   del peaks
    #   del peaks
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del peaks
    #   del peaks
    #   del peaks
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del peaks
    #   del n.7
    #   del n.7
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del n.7
    #   del n.7
    #   del n.7
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del n.7
    #   del delta
    #   del delta
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del delta
    #   del delta
    #   del delta
2025-06-13 07:34:49,124 - print_capture - INFO -     #   del delta
    #   del $326pred
    #   del $326pred
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del $326pred
    #   del $326pred
    #   del $326pred
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del $326pred
    #   $const328.0.2 = const(NoneType, None)  :: none
    #   $const328.0.2 = const(NoneType, None)  :: none
2025-06-13 07:34:49,125 - print_capture - INFO -     #   $const328.0.2 = const(NoneType, None)  :: none
    #   $const328.0.2 = const(NoneType, None)  :: none
    #   $const328.0.2 = const(NoneType, None)  :: none
2025-06-13 07:34:49,125 - print_capture - INFO -     #   $const328.0.2 = const(NoneType, None)  :: none
    #   $330return_value.1 = cast(value=$const328.0.2)  :: none
    #   $330return_value.1 = cast(value=$const328.0.2)  :: none
2025-06-13 07:34:49,125 - print_capture - INFO -     #   $330return_value.1 = cast(value=$const328.0.2)  :: none
    #   $330return_value.1 = cast(value=$const328.0.2)  :: none
    #   $330return_value.1 = cast(value=$const328.0.2)  :: none
2025-06-13 07:34:49,125 - print_capture - INFO -     #   $330return_value.1 = cast(value=$const328.0.2)  :: none
    #   del $const328.0.2
    #   del $const328.0.2
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del $const328.0.2
    #   del $const328.0.2
    #   del $const328.0.2
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del $const328.0.2
    #   return $330return_value.1
    #   return $330return_value.1
2025-06-13 07:34:49,125 - print_capture - INFO -     #   return $330return_value.1
    #   return $330return_value.1
    #   return $330return_value.1
2025-06-13 07:34:49,125 - print_capture - INFO -     #   return $330return_value.1
    # label 332
    # label 332
2025-06-13 07:34:49,125 - print_capture - INFO -     # label 332
    # label 332
    # label 332
2025-06-13 07:34:49,125 - print_capture - INFO -     # label 332
    #   del x
    #   del x
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del x
    #   del wait
    #   del wait
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del wait
    #   del wait
    #   del wait
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del wait
    #   del pre_max
    #   del pre_max
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del pre_max
    #   del pre_max
    #   del pre_max
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del pre_max
    #   del pre_avg
    #   del pre_avg
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del pre_avg
    #   del pre_avg
    #   del pre_avg
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del pre_avg
    #   del post_max
    #   del post_max
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del post_max
    #   del post_max
    #   del post_max
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del post_max
    #   del post_avg
    #   del post_avg
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del post_avg
    #   del post_avg
    #   del post_avg
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del post_avg
    #   del peaks
    #   del peaks
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del peaks
    #   del peaks
    #   del peaks
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del peaks
    #   del n.7
    #   del n.7
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del n.7
    #   del n.7
    #   del n.7
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del n.7
    #   del delta
    #   del delta
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del delta
    #   del delta
    #   del delta
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del delta
    #   del $132pred
    #   del $132pred
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del $132pred
    #   del $132pred
    #   del $132pred
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del $132pred
    #   $const332.0.2 = const(NoneType, None)  :: none
    #   $const332.0.2 = const(NoneType, None)  :: none
2025-06-13 07:34:49,125 - print_capture - INFO -     #   $const332.0.2 = const(NoneType, None)  :: none
    #   $const332.0.2 = const(NoneType, None)  :: none
    #   $const332.0.2 = const(NoneType, None)  :: none
2025-06-13 07:34:49,125 - print_capture - INFO -     #   $const332.0.2 = const(NoneType, None)  :: none
    #   $334return_value.1 = cast(value=$const332.0.2)  :: none
    #   $334return_value.1 = cast(value=$const332.0.2)  :: none
2025-06-13 07:34:49,125 - print_capture - INFO -     #   $334return_value.1 = cast(value=$const332.0.2)  :: none
    #   $334return_value.1 = cast(value=$const332.0.2)  :: none
    #   $334return_value.1 = cast(value=$const332.0.2)  :: none
2025-06-13 07:34:49,125 - print_capture - INFO -     #   $334return_value.1 = cast(value=$const332.0.2)  :: none
    #   del $const332.0.2
    #   del $const332.0.2
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del $const332.0.2
    #   del $const332.0.2
    #   del $const332.0.2
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del $const332.0.2
    #   return $334return_value.1
    #   return $334return_value.1
2025-06-13 07:34:49,125 - print_capture - INFO -     #   return $334return_value.1
    #   return $334return_value.1
    #   return $334return_value.1
2025-06-13 07:34:49,125 - print_capture - INFO -     #   return $334return_value.1
    # label 333
    # label 333
2025-06-13 07:34:49,125 - print_capture - INFO -     # label 333
    # label 333
    # label 333
2025-06-13 07:34:49,125 - print_capture - INFO -     # label 333
    #   n.5 = n.6  :: int64
    #   n.5 = n.6  :: int64
2025-06-13 07:34:49,125 - print_capture - INFO -     #   n.5 = n.6  :: int64
    #   n.5 = n.6  :: int64
    #   n.5 = n.6  :: int64
2025-06-13 07:34:49,125 - print_capture - INFO -     #   n.5 = n.6  :: int64
    #   del n.6
    #   del n.6
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del n.6
    #   del n.6
    #   del n.6
2025-06-13 07:34:49,125 - print_capture - INFO -     #   del n.6
    #   jump 120
    #   jump 120
2025-06-13 07:34:49,125 - print_capture - INFO -     #   jump 120
    #   jump 120
    #   jump 120
2025-06-13 07:34:49,125 - print_capture - INFO -     #   jump 120


2025-06-13 07:34:49,125 - print_capture - INFO - 


2025-06-13 07:34:49,125 - print_capture - INFO - 
    while n < x.shape[0]:
    while n < x.shape[0]:
2025-06-13 07:34:49,126 - print_capture - INFO -     while n < x.shape[0]:
    while n < x.shape[0]:
    while n < x.shape[0]:
2025-06-13 07:34:49,126 - print_capture - INFO -     while n < x.shape[0]:


2025-06-13 07:34:49,126 - print_capture - INFO - 


2025-06-13 07:34:49,126 - print_capture - INFO - 
        # --- LINE 1214 --- 
        # --- LINE 1214 --- 
2025-06-13 07:34:49,126 - print_capture - INFO -         # --- LINE 1214 --- 
        # --- LINE 1214 --- 
        # --- LINE 1214 --- 
2025-06-13 07:34:49,126 - print_capture - INFO -         # --- LINE 1214 --- 
        # label 134
        # label 134
2025-06-13 07:34:49,126 - print_capture - INFO -         # label 134
        # label 134
        # label 134
2025-06-13 07:34:49,126 - print_capture - INFO -         # label 134
        #   del $326pred
        #   del $326pred
2025-06-13 07:34:49,126 - print_capture - INFO -         #   del $326pred
        #   del $326pred
        #   del $326pred
2025-06-13 07:34:49,126 - print_capture - INFO -         #   del $326pred
        #   del $132pred
        #   del $132pred
2025-06-13 07:34:49,126 - print_capture - INFO -         #   del $132pred
        #   del $132pred
        #   del $132pred
2025-06-13 07:34:49,126 - print_capture - INFO -         #   del $132pred
        #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
        #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
        #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
        #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
        #   del $134load_global.0
        #   del $134load_global.0
2025-06-13 07:34:49,126 - print_capture - INFO -         #   del $134load_global.0
        #   del $134load_global.0
        #   del $134load_global.0
2025-06-13 07:34:49,126 - print_capture - INFO -         #   del $134load_global.0
        #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
        #   $148binary_subtract.7 = n.7 - pre_max  :: int64
        #   $148binary_subtract.7 = n.7 - pre_max  :: int64
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $148binary_subtract.7 = n.7 - pre_max  :: int64
        #   $148binary_subtract.7 = n.7 - pre_max  :: int64
        #   $148binary_subtract.7 = n.7 - pre_max  :: int64
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $148binary_subtract.7 = n.7 - pre_max  :: int64
        #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   del $const142.4.1
        #   del $const142.4.1
2025-06-13 07:34:49,126 - print_capture - INFO -         #   del $const142.4.1
        #   del $const142.4.1
        #   del $const142.4.1
2025-06-13 07:34:49,126 - print_capture - INFO -         #   del $const142.4.1
        #   del $148binary_subtract.7
        #   del $148binary_subtract.7
2025-06-13 07:34:49,126 - print_capture - INFO -         #   del $148binary_subtract.7
        #   del $148binary_subtract.7
        #   del $148binary_subtract.7
2025-06-13 07:34:49,126 - print_capture - INFO -         #   del $148binary_subtract.7
        #   del $140load_global.3
        #   del $140load_global.3
2025-06-13 07:34:49,126 - print_capture - INFO -         #   del $140load_global.3
        #   del $140load_global.3
        #   del $140load_global.3
2025-06-13 07:34:49,126 - print_capture - INFO -         #   del $140load_global.3
        #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $158binary_add.12 = n.7 + post_max  :: int64
        #   $158binary_add.12 = n.7 + post_max  :: int64
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $158binary_add.12 = n.7 + post_max  :: int64
        #   $158binary_add.12 = n.7 + post_max  :: int64
        #   $158binary_add.12 = n.7 + post_max  :: int64
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $158binary_add.12 = n.7 + post_max  :: int64
        #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
        #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
        #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
        #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
        #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
        #   del $const164.15.1
        #   del $const164.15.1
2025-06-13 07:34:49,126 - print_capture - INFO -         #   del $const164.15.1
        #   del $const164.15.1
        #   del $const164.15.1
2025-06-13 07:34:49,126 - print_capture - INFO -         #   del $const164.15.1
        #   del $162load_attr.14
        #   del $162load_attr.14
2025-06-13 07:34:49,126 - print_capture - INFO -         #   del $162load_attr.14
        #   del $162load_attr.14
        #   del $162load_attr.14
2025-06-13 07:34:49,126 - print_capture - INFO -         #   del $162load_attr.14
        #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:49,126 - print_capture - INFO -         #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   del $166binary_subscr.16
        #   del $166binary_subscr.16
2025-06-13 07:34:49,126 - print_capture - INFO -         #   del $166binary_subscr.16
        #   del $166binary_subscr.16
        #   del $166binary_subscr.16
2025-06-13 07:34:49,126 - print_capture - INFO -         #   del $166binary_subscr.16
        #   del $158binary_add.12
        #   del $158binary_add.12
2025-06-13 07:34:49,127 - print_capture - INFO -         #   del $158binary_add.12
        #   del $158binary_add.12
        #   del $158binary_add.12
2025-06-13 07:34:49,127 - print_capture - INFO -         #   del $158binary_add.12
        #   del $152load_global.9
        #   del $152load_global.9
2025-06-13 07:34:49,127 - print_capture - INFO -         #   del $152load_global.9
        #   del $152load_global.9
        #   del $152load_global.9
2025-06-13 07:34:49,127 - print_capture - INFO -         #   del $152load_global.9
        #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:49,127 - print_capture - INFO -         #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:49,127 - print_capture - INFO -         #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
2025-06-13 07:34:49,127 - print_capture - INFO -         #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
2025-06-13 07:34:49,127 - print_capture - INFO -         #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   del $170build_slice.18
        #   del $170build_slice.18
2025-06-13 07:34:49,127 - print_capture - INFO -         #   del $170build_slice.18
        #   del $170build_slice.18
        #   del $170build_slice.18
2025-06-13 07:34:49,127 - print_capture - INFO -         #   del $170build_slice.18
        #   del $168call_function.17
        #   del $168call_function.17
2025-06-13 07:34:49,127 - print_capture - INFO -         #   del $168call_function.17
        #   del $168call_function.17
        #   del $168call_function.17
2025-06-13 07:34:49,127 - print_capture - INFO -         #   del $168call_function.17
        #   del $150call_function.8
        #   del $150call_function.8
2025-06-13 07:34:49,127 - print_capture - INFO -         #   del $150call_function.8
        #   del $150call_function.8
        #   del $150call_function.8
2025-06-13 07:34:49,127 - print_capture - INFO -         #   del $150call_function.8
        #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(int32, 1d, A)
        #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(int32, 1d, A)
2025-06-13 07:34:49,127 - print_capture - INFO -         #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(int32, 1d, A)
        #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(int32, 1d, A)
        #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(int32, 1d, A)
2025-06-13 07:34:49,127 - print_capture - INFO -         #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(int32, 1d, A)
        #   del $170build_slice.19
        #   del $170build_slice.19
2025-06-13 07:34:49,127 - print_capture - INFO -         #   del $170build_slice.19
        #   del $170build_slice.19
        #   del $170build_slice.19
2025-06-13 07:34:49,127 - print_capture - INFO -         #   del $170build_slice.19
        #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> int32
        #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> int32
2025-06-13 07:34:49,127 - print_capture - INFO -         #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> int32
        #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> int32
        #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> int32
2025-06-13 07:34:49,127 - print_capture - INFO -         #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> int32
        #   del $172binary_subscr.20
        #   del $172binary_subscr.20
2025-06-13 07:34:49,127 - print_capture - INFO -         #   del $172binary_subscr.20
        #   del $172binary_subscr.20
        #   del $172binary_subscr.20
2025-06-13 07:34:49,127 - print_capture - INFO -         #   del $172binary_subscr.20
        #   del $136load_method.1
        #   del $136load_method.1
2025-06-13 07:34:49,127 - print_capture - INFO -         #   del $136load_method.1
        #   del $136load_method.1
        #   del $136load_method.1
2025-06-13 07:34:49,127 - print_capture - INFO -         #   del $136load_method.1


2025-06-13 07:34:49,127 - print_capture - INFO - 


2025-06-13 07:34:49,127 - print_capture - INFO - 
        maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
        maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
2025-06-13 07:34:49,127 - print_capture - INFO -         maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
        maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
        maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
2025-06-13 07:34:49,127 - print_capture - INFO -         maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])


2025-06-13 07:34:49,127 - print_capture - INFO - 


2025-06-13 07:34:49,127 - print_capture - INFO - 
# --- LINE 1215 --- 
# --- LINE 1215 --- 
2025-06-13 07:34:49,127 - print_capture - INFO - # --- LINE 1215 --- 
# --- LINE 1215 --- 
# --- LINE 1215 --- 
2025-06-13 07:34:49,127 - print_capture - INFO - # --- LINE 1215 --- 


2025-06-13 07:34:49,127 - print_capture - INFO - 


2025-06-13 07:34:49,127 - print_capture - INFO - 


2025-06-13 07:34:49,127 - print_capture - INFO - 


2025-06-13 07:34:49,127 - print_capture - INFO - 


2025-06-13 07:34:49,127 - print_capture - INFO - 


2025-06-13 07:34:49,127 - print_capture - INFO - 
        # --- LINE 1216 --- 
        # --- LINE 1216 --- 
2025-06-13 07:34:49,127 - print_capture - INFO -         # --- LINE 1216 --- 
        # --- LINE 1216 --- 
        # --- LINE 1216 --- 
2025-06-13 07:34:49,127 - print_capture - INFO -         # --- LINE 1216 --- 


2025-06-13 07:34:49,127 - print_capture - INFO - 


2025-06-13 07:34:49,127 - print_capture - INFO - 
        # Are we the local max and sufficiently above average?
        # Are we the local max and sufficiently above average?
2025-06-13 07:34:49,127 - print_capture - INFO -         # Are we the local max and sufficiently above average?
        # Are we the local max and sufficiently above average?
        # Are we the local max and sufficiently above average?
2025-06-13 07:34:49,127 - print_capture - INFO -         # Are we the local max and sufficiently above average?


2025-06-13 07:34:49,127 - print_capture - INFO - 


2025-06-13 07:34:49,127 - print_capture - INFO - 
        # --- LINE 1217 --- 
        # --- LINE 1217 --- 
2025-06-13 07:34:49,127 - print_capture - INFO -         # --- LINE 1217 --- 
        # --- LINE 1217 --- 
        # --- LINE 1217 --- 
2025-06-13 07:34:49,127 - print_capture - INFO -         # --- LINE 1217 --- 
        #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int32
        #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int32
2025-06-13 07:34:49,127 - print_capture - INFO -         #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int32
        #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int32
        #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int32
2025-06-13 07:34:49,128 - print_capture - INFO -         #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int32
        #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
        #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
2025-06-13 07:34:49,128 - print_capture - INFO -         #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
        #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
        #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
2025-06-13 07:34:49,128 - print_capture - INFO -         #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
        #   del maxn
        #   del maxn
2025-06-13 07:34:49,128 - print_capture - INFO -         #   del maxn
        #   del maxn
        #   del maxn
2025-06-13 07:34:49,128 - print_capture - INFO -         #   del maxn
        #   del $182binary_subscr.24
        #   del $182binary_subscr.24
2025-06-13 07:34:49,128 - print_capture - INFO -         #   del $182binary_subscr.24
        #   del $182binary_subscr.24
        #   del $182binary_subscr.24
2025-06-13 07:34:49,128 - print_capture - INFO -         #   del $182binary_subscr.24
        #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
2025-06-13 07:34:49,128 - print_capture - INFO -         #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
2025-06-13 07:34:49,128 - print_capture - INFO -         #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   del $186compare_op.26
        #   del $186compare_op.26
2025-06-13 07:34:49,128 - print_capture - INFO -         #   del $186compare_op.26
        #   del $186compare_op.26
        #   del $186compare_op.26
2025-06-13 07:34:49,128 - print_capture - INFO -         #   del $186compare_op.26


2025-06-13 07:34:49,128 - print_capture - INFO - 


2025-06-13 07:34:49,128 - print_capture - INFO - 
        peaks[n] = (x[n] == maxn)
        peaks[n] = (x[n] == maxn)
2025-06-13 07:34:49,128 - print_capture - INFO -         peaks[n] = (x[n] == maxn)
        peaks[n] = (x[n] == maxn)
        peaks[n] = (x[n] == maxn)
2025-06-13 07:34:49,128 - print_capture - INFO -         peaks[n] = (x[n] == maxn)


2025-06-13 07:34:49,128 - print_capture - INFO - 


2025-06-13 07:34:49,128 - print_capture - INFO - 
# --- LINE 1218 --- 
# --- LINE 1218 --- 
2025-06-13 07:34:49,128 - print_capture - INFO - # --- LINE 1218 --- 
# --- LINE 1218 --- 
# --- LINE 1218 --- 
2025-06-13 07:34:49,128 - print_capture - INFO - # --- LINE 1218 --- 


2025-06-13 07:34:49,128 - print_capture - INFO - 


2025-06-13 07:34:49,128 - print_capture - INFO - 


2025-06-13 07:34:49,128 - print_capture - INFO - 


2025-06-13 07:34:49,128 - print_capture - INFO - 


2025-06-13 07:34:49,128 - print_capture - INFO - 


2025-06-13 07:34:49,128 - print_capture - INFO - 
        # --- LINE 1219 --- 
        # --- LINE 1219 --- 
2025-06-13 07:34:49,128 - print_capture - INFO -         # --- LINE 1219 --- 
        # --- LINE 1219 --- 
        # --- LINE 1219 --- 
2025-06-13 07:34:49,128 - print_capture - INFO -         # --- LINE 1219 --- 
        #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,128 - print_capture - INFO -         #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,128 - print_capture - INFO -         #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,128 - print_capture - INFO -         #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,128 - print_capture - INFO -         #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,128 - print_capture - INFO -         #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,128 - print_capture - INFO -         #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   del bool200
        #   del bool200
2025-06-13 07:34:49,128 - print_capture - INFO -         #   del bool200
        #   del bool200
        #   del bool200
2025-06-13 07:34:49,128 - print_capture - INFO -         #   del bool200
        #   del $198binary_subscr.31
        #   del $198binary_subscr.31
2025-06-13 07:34:49,128 - print_capture - INFO -         #   del $198binary_subscr.31
        #   del $198binary_subscr.31
        #   del $198binary_subscr.31
2025-06-13 07:34:49,128 - print_capture - INFO -         #   del $198binary_subscr.31
        #   branch $200pred, 212, 202
        #   branch $200pred, 212, 202
2025-06-13 07:34:49,128 - print_capture - INFO -         #   branch $200pred, 212, 202
        #   branch $200pred, 212, 202
        #   branch $200pred, 212, 202
2025-06-13 07:34:49,128 - print_capture - INFO -         #   branch $200pred, 212, 202


2025-06-13 07:34:49,128 - print_capture - INFO - 


2025-06-13 07:34:49,128 - print_capture - INFO - 
        if not peaks[n]:
        if not peaks[n]:
2025-06-13 07:34:49,128 - print_capture - INFO -         if not peaks[n]:
        if not peaks[n]:
        if not peaks[n]:
2025-06-13 07:34:49,128 - print_capture - INFO -         if not peaks[n]:


2025-06-13 07:34:49,128 - print_capture - INFO - 


2025-06-13 07:34:49,128 - print_capture - INFO - 
            # --- LINE 1220 --- 
            # --- LINE 1220 --- 
2025-06-13 07:34:49,128 - print_capture - INFO -             # --- LINE 1220 --- 
            # --- LINE 1220 --- 
            # --- LINE 1220 --- 
2025-06-13 07:34:49,128 - print_capture - INFO -             # --- LINE 1220 --- 
            # label 202
            # label 202
2025-06-13 07:34:49,129 - print_capture - INFO -             # label 202
            # label 202
            # label 202
2025-06-13 07:34:49,129 - print_capture - INFO -             # label 202
            #   del $200pred
            #   del $200pred
2025-06-13 07:34:49,129 - print_capture - INFO -             #   del $200pred
            #   del $200pred
            #   del $200pred
2025-06-13 07:34:49,129 - print_capture - INFO -             #   del $200pred
            #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,129 - print_capture - INFO -             #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,129 - print_capture - INFO -             #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
            #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:49,129 - print_capture - INFO -             #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:49,129 - print_capture - INFO -             #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   del n.7
            #   del n.7
2025-06-13 07:34:49,129 - print_capture - INFO -             #   del n.7
            #   del n.7
            #   del n.7
2025-06-13 07:34:49,129 - print_capture - INFO -             #   del n.7
            #   del $const204.1.3
            #   del $const204.1.3
2025-06-13 07:34:49,129 - print_capture - INFO -             #   del $const204.1.3
            #   del $const204.1.3
            #   del $const204.1.3
2025-06-13 07:34:49,129 - print_capture - INFO -             #   del $const204.1.3
            #   n.2 = $206inplace_add.2  :: int64
            #   n.2 = $206inplace_add.2  :: int64
2025-06-13 07:34:49,129 - print_capture - INFO -             #   n.2 = $206inplace_add.2  :: int64
            #   n.2 = $206inplace_add.2  :: int64
            #   n.2 = $206inplace_add.2  :: int64
2025-06-13 07:34:49,129 - print_capture - INFO -             #   n.2 = $206inplace_add.2  :: int64
            #   del $206inplace_add.2
            #   del $206inplace_add.2
2025-06-13 07:34:49,129 - print_capture - INFO -             #   del $206inplace_add.2
            #   del $206inplace_add.2
            #   del $206inplace_add.2
2025-06-13 07:34:49,129 - print_capture - INFO -             #   del $206inplace_add.2
            #   n.6 = n.2  :: int64
            #   n.6 = n.2  :: int64
2025-06-13 07:34:49,129 - print_capture - INFO -             #   n.6 = n.2  :: int64
            #   n.6 = n.2  :: int64
            #   n.6 = n.2  :: int64
2025-06-13 07:34:49,129 - print_capture - INFO -             #   n.6 = n.2  :: int64
            #   del n.2
            #   del n.2
2025-06-13 07:34:49,129 - print_capture - INFO -             #   del n.2
            #   del n.2
            #   del n.2
2025-06-13 07:34:49,129 - print_capture - INFO -             #   del n.2


2025-06-13 07:34:49,129 - print_capture - INFO - 


2025-06-13 07:34:49,129 - print_capture - INFO - 
            n += 1
            n += 1
2025-06-13 07:34:49,129 - print_capture - INFO -             n += 1
            n += 1
            n += 1
2025-06-13 07:34:49,129 - print_capture - INFO -             n += 1


2025-06-13 07:34:49,129 - print_capture - INFO - 


2025-06-13 07:34:49,129 - print_capture - INFO - 
            # --- LINE 1221 --- 
            # --- LINE 1221 --- 
2025-06-13 07:34:49,129 - print_capture - INFO -             # --- LINE 1221 --- 
            # --- LINE 1221 --- 
            # --- LINE 1221 --- 
2025-06-13 07:34:49,129 - print_capture - INFO -             # --- LINE 1221 --- 
            #   jump 333
            #   jump 333
2025-06-13 07:34:49,129 - print_capture - INFO -             #   jump 333
            #   jump 333
            #   jump 333
2025-06-13 07:34:49,129 - print_capture - INFO -             #   jump 333


2025-06-13 07:34:49,129 - print_capture - INFO - 


2025-06-13 07:34:49,129 - print_capture - INFO - 
            continue
            continue
2025-06-13 07:34:49,129 - print_capture - INFO -             continue
            continue
            continue
2025-06-13 07:34:49,129 - print_capture - INFO -             continue


2025-06-13 07:34:49,129 - print_capture - INFO - 


2025-06-13 07:34:49,129 - print_capture - INFO - 
# --- LINE 1222 --- 
# --- LINE 1222 --- 
2025-06-13 07:34:49,129 - print_capture - INFO - # --- LINE 1222 --- 
# --- LINE 1222 --- 
# --- LINE 1222 --- 
2025-06-13 07:34:49,129 - print_capture - INFO - # --- LINE 1222 --- 


2025-06-13 07:34:49,129 - print_capture - INFO - 


2025-06-13 07:34:49,129 - print_capture - INFO - 


2025-06-13 07:34:49,129 - print_capture - INFO - 


2025-06-13 07:34:49,129 - print_capture - INFO - 


2025-06-13 07:34:49,129 - print_capture - INFO - 


2025-06-13 07:34:49,129 - print_capture - INFO - 
        # --- LINE 1223 --- 
        # --- LINE 1223 --- 
2025-06-13 07:34:49,129 - print_capture - INFO -         # --- LINE 1223 --- 
        # --- LINE 1223 --- 
        # --- LINE 1223 --- 
2025-06-13 07:34:49,129 - print_capture - INFO -         # --- LINE 1223 --- 
        # label 212
        # label 212
2025-06-13 07:34:49,129 - print_capture - INFO -         # label 212
        # label 212
        # label 212
2025-06-13 07:34:49,130 - print_capture - INFO -         # label 212
        #   del $200pred
        #   del $200pred
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $200pred
        #   del $200pred
        #   del $200pred
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $200pred
        #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
        #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
        #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
        #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
        #   del $212load_global.0
        #   del $212load_global.0
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $212load_global.0
        #   del $212load_global.0
        #   del $212load_global.0
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $212load_global.0
        #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
        #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
        #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
        #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
        #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
        #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   del $const220.4.1
        #   del $const220.4.1
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $const220.4.1
        #   del $const220.4.1
        #   del $const220.4.1
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $const220.4.1
        #   del $226binary_subtract.7
        #   del $226binary_subtract.7
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $226binary_subtract.7
        #   del $226binary_subtract.7
        #   del $226binary_subtract.7
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $226binary_subtract.7
        #   del $218load_global.3
        #   del $218load_global.3
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $218load_global.3
        #   del $218load_global.3
        #   del $218load_global.3
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $218load_global.3
        #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $236binary_add.12 = n.7 + post_avg  :: int64
        #   $236binary_add.12 = n.7 + post_avg  :: int64
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $236binary_add.12 = n.7 + post_avg  :: int64
        #   $236binary_add.12 = n.7 + post_avg  :: int64
        #   $236binary_add.12 = n.7 + post_avg  :: int64
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $236binary_add.12 = n.7 + post_avg  :: int64
        #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
        #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
        #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
        #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
        #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
        #   del $const242.15.1
        #   del $const242.15.1
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $const242.15.1
        #   del $const242.15.1
        #   del $const242.15.1
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $const242.15.1
        #   del $240load_attr.14
        #   del $240load_attr.14
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $240load_attr.14
        #   del $240load_attr.14
        #   del $240load_attr.14
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $240load_attr.14
        #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   del $244binary_subscr.16
        #   del $244binary_subscr.16
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $244binary_subscr.16
        #   del $244binary_subscr.16
        #   del $244binary_subscr.16
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $244binary_subscr.16
        #   del $236binary_add.12
        #   del $236binary_add.12
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $236binary_add.12
        #   del $236binary_add.12
        #   del $236binary_add.12
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $236binary_add.12
        #   del $230load_global.9
        #   del $230load_global.9
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $230load_global.9
        #   del $230load_global.9
        #   del $230load_global.9
2025-06-13 07:34:49,130 - print_capture - INFO -         #   del $230load_global.9
        #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
2025-06-13 07:34:49,130 - print_capture - INFO -         #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
2025-06-13 07:34:49,131 - print_capture - INFO -         #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   del $248build_slice.18
        #   del $248build_slice.18
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $248build_slice.18
        #   del $248build_slice.18
        #   del $248build_slice.18
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $248build_slice.18
        #   del $246call_function.17
        #   del $246call_function.17
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $246call_function.17
        #   del $246call_function.17
        #   del $246call_function.17
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $246call_function.17
        #   del $228call_function.8
        #   del $228call_function.8
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $228call_function.8
        #   del $228call_function.8
        #   del $228call_function.8
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $228call_function.8
        #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(int32, 1d, A)
        #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(int32, 1d, A)
2025-06-13 07:34:49,131 - print_capture - INFO -         #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(int32, 1d, A)
        #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(int32, 1d, A)
        #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(int32, 1d, A)
2025-06-13 07:34:49,131 - print_capture - INFO -         #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(int32, 1d, A)
        #   del $248build_slice.19
        #   del $248build_slice.19
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $248build_slice.19
        #   del $248build_slice.19
        #   del $248build_slice.19
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $248build_slice.19
        #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> float64
        #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:49,131 - print_capture - INFO -         #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> float64
        #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> float64
        #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:49,131 - print_capture - INFO -         #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int32, 1, 'A', False, aligned=True),) -> float64
        #   del $250binary_subscr.20
        #   del $250binary_subscr.20
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $250binary_subscr.20
        #   del $250binary_subscr.20
        #   del $250binary_subscr.20
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $250binary_subscr.20
        #   del $214load_method.1
        #   del $214load_method.1
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $214load_method.1
        #   del $214load_method.1
        #   del $214load_method.1
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $214load_method.1


2025-06-13 07:34:49,131 - print_capture - INFO - 


2025-06-13 07:34:49,131 - print_capture - INFO - 
        avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
        avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
2025-06-13 07:34:49,131 - print_capture - INFO -         avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
        avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
        avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
2025-06-13 07:34:49,131 - print_capture - INFO -         avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])


2025-06-13 07:34:49,131 - print_capture - INFO - 


2025-06-13 07:34:49,131 - print_capture - INFO - 
        # --- LINE 1224 --- 
        # --- LINE 1224 --- 
2025-06-13 07:34:49,131 - print_capture - INFO -         # --- LINE 1224 --- 
        # --- LINE 1224 --- 
        # --- LINE 1224 --- 
2025-06-13 07:34:49,131 - print_capture - INFO -         # --- LINE 1224 --- 
        #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,131 - print_capture - INFO -         #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,131 - print_capture - INFO -         #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int32
        #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int32
2025-06-13 07:34:49,131 - print_capture - INFO -         #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int32
        #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int32
        #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int32
2025-06-13 07:34:49,131 - print_capture - INFO -         #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int32
        #   $274binary_add.32 = avgn + delta  :: float64
        #   $274binary_add.32 = avgn + delta  :: float64
2025-06-13 07:34:49,131 - print_capture - INFO -         #   $274binary_add.32 = avgn + delta  :: float64
        #   $274binary_add.32 = avgn + delta  :: float64
        #   $274binary_add.32 = avgn + delta  :: float64
2025-06-13 07:34:49,131 - print_capture - INFO -         #   $274binary_add.32 = avgn + delta  :: float64
        #   del avgn
        #   del avgn
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del avgn
        #   del avgn
        #   del avgn
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del avgn
        #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
        #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
2025-06-13 07:34:49,131 - print_capture - INFO -         #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
        #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
        #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
2025-06-13 07:34:49,131 - print_capture - INFO -         #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
        #   del $274binary_add.32
        #   del $274binary_add.32
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $274binary_add.32
        #   del $274binary_add.32
        #   del $274binary_add.32
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $274binary_add.32
        #   del $268binary_subscr.29
        #   del $268binary_subscr.29
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $268binary_subscr.29
        #   del $268binary_subscr.29
        #   del $268binary_subscr.29
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $268binary_subscr.29
        #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
        #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
2025-06-13 07:34:49,131 - print_capture - INFO -         #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
        #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
        #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
2025-06-13 07:34:49,131 - print_capture - INFO -         #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
        #   del $276compare_op.33
        #   del $276compare_op.33
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $276compare_op.33
        #   del $276compare_op.33
        #   del $276compare_op.33
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $276compare_op.33
        #   del $262binary_subscr.26
        #   del $262binary_subscr.26
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $262binary_subscr.26
        #   del $262binary_subscr.26
        #   del $262binary_subscr.26
2025-06-13 07:34:49,131 - print_capture - INFO -         #   del $262binary_subscr.26
        #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
2025-06-13 07:34:49,131 - print_capture - INFO -         #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
2025-06-13 07:34:49,131 - print_capture - INFO -         #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   del $278inplace_and.34
        #   del $278inplace_and.34
2025-06-13 07:34:49,132 - print_capture - INFO -         #   del $278inplace_and.34
        #   del $278inplace_and.34
        #   del $278inplace_and.34
2025-06-13 07:34:49,132 - print_capture - INFO -         #   del $278inplace_and.34


2025-06-13 07:34:49,132 - print_capture - INFO - 


2025-06-13 07:34:49,132 - print_capture - INFO - 
        peaks[n] &= (x[n] >= avgn + delta)
        peaks[n] &= (x[n] >= avgn + delta)
2025-06-13 07:34:49,132 - print_capture - INFO -         peaks[n] &= (x[n] >= avgn + delta)
        peaks[n] &= (x[n] >= avgn + delta)
        peaks[n] &= (x[n] >= avgn + delta)
2025-06-13 07:34:49,132 - print_capture - INFO -         peaks[n] &= (x[n] >= avgn + delta)


2025-06-13 07:34:49,132 - print_capture - INFO - 


2025-06-13 07:34:49,132 - print_capture - INFO - 
# --- LINE 1225 --- 
# --- LINE 1225 --- 
2025-06-13 07:34:49,132 - print_capture - INFO - # --- LINE 1225 --- 
# --- LINE 1225 --- 
# --- LINE 1225 --- 
2025-06-13 07:34:49,132 - print_capture - INFO - # --- LINE 1225 --- 


2025-06-13 07:34:49,132 - print_capture - INFO - 


2025-06-13 07:34:49,132 - print_capture - INFO - 


2025-06-13 07:34:49,132 - print_capture - INFO - 


2025-06-13 07:34:49,132 - print_capture - INFO - 


2025-06-13 07:34:49,132 - print_capture - INFO - 


2025-06-13 07:34:49,132 - print_capture - INFO - 
        # --- LINE 1226 --- 
        # --- LINE 1226 --- 
2025-06-13 07:34:49,132 - print_capture - INFO -         # --- LINE 1226 --- 
        # --- LINE 1226 --- 
        # --- LINE 1226 --- 
2025-06-13 07:34:49,132 - print_capture - INFO -         # --- LINE 1226 --- 
        #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,132 - print_capture - INFO -         #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,132 - print_capture - INFO -         #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,132 - print_capture - INFO -         #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,132 - print_capture - INFO -         #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,132 - print_capture - INFO -         #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,132 - print_capture - INFO -         #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   del bool290
        #   del bool290
2025-06-13 07:34:49,132 - print_capture - INFO -         #   del bool290
        #   del bool290
        #   del bool290
2025-06-13 07:34:49,132 - print_capture - INFO -         #   del bool290
        #   del $288binary_subscr.37
        #   del $288binary_subscr.37
2025-06-13 07:34:49,132 - print_capture - INFO -         #   del $288binary_subscr.37
        #   del $288binary_subscr.37
        #   del $288binary_subscr.37
2025-06-13 07:34:49,132 - print_capture - INFO -         #   del $288binary_subscr.37
        #   branch $290pred, 302, 292
        #   branch $290pred, 302, 292
2025-06-13 07:34:49,132 - print_capture - INFO -         #   branch $290pred, 302, 292
        #   branch $290pred, 302, 292
        #   branch $290pred, 302, 292
2025-06-13 07:34:49,132 - print_capture - INFO -         #   branch $290pred, 302, 292


2025-06-13 07:34:49,132 - print_capture - INFO - 


2025-06-13 07:34:49,132 - print_capture - INFO - 
        if not peaks[n]:
        if not peaks[n]:
2025-06-13 07:34:49,132 - print_capture - INFO -         if not peaks[n]:
        if not peaks[n]:
        if not peaks[n]:
2025-06-13 07:34:49,132 - print_capture - INFO -         if not peaks[n]:


2025-06-13 07:34:49,132 - print_capture - INFO - 


2025-06-13 07:34:49,132 - print_capture - INFO - 
            # --- LINE 1227 --- 
            # --- LINE 1227 --- 
2025-06-13 07:34:49,132 - print_capture - INFO -             # --- LINE 1227 --- 
            # --- LINE 1227 --- 
            # --- LINE 1227 --- 
2025-06-13 07:34:49,132 - print_capture - INFO -             # --- LINE 1227 --- 
            # label 292
            # label 292
2025-06-13 07:34:49,132 - print_capture - INFO -             # label 292
            # label 292
            # label 292
2025-06-13 07:34:49,132 - print_capture - INFO -             # label 292
            #   del $290pred
            #   del $290pred
2025-06-13 07:34:49,132 - print_capture - INFO -             #   del $290pred
            #   del $290pred
            #   del $290pred
2025-06-13 07:34:49,132 - print_capture - INFO -             #   del $290pred
            #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,132 - print_capture - INFO -             #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,132 - print_capture - INFO -             #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
            #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:49,132 - print_capture - INFO -             #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:49,132 - print_capture - INFO -             #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   del n.7
            #   del n.7
2025-06-13 07:34:49,132 - print_capture - INFO -             #   del n.7
            #   del n.7
            #   del n.7
2025-06-13 07:34:49,133 - print_capture - INFO -             #   del n.7
            #   del $const294.1.3
            #   del $const294.1.3
2025-06-13 07:34:49,133 - print_capture - INFO -             #   del $const294.1.3
            #   del $const294.1.3
            #   del $const294.1.3
2025-06-13 07:34:49,133 - print_capture - INFO -             #   del $const294.1.3
            #   n.3 = $296inplace_add.2  :: int64
            #   n.3 = $296inplace_add.2  :: int64
2025-06-13 07:34:49,133 - print_capture - INFO -             #   n.3 = $296inplace_add.2  :: int64
            #   n.3 = $296inplace_add.2  :: int64
            #   n.3 = $296inplace_add.2  :: int64
2025-06-13 07:34:49,133 - print_capture - INFO -             #   n.3 = $296inplace_add.2  :: int64
            #   del $296inplace_add.2
            #   del $296inplace_add.2
2025-06-13 07:34:49,133 - print_capture - INFO -             #   del $296inplace_add.2
            #   del $296inplace_add.2
            #   del $296inplace_add.2
2025-06-13 07:34:49,133 - print_capture - INFO -             #   del $296inplace_add.2
            #   n.6 = n.3  :: int64
            #   n.6 = n.3  :: int64
2025-06-13 07:34:49,133 - print_capture - INFO -             #   n.6 = n.3  :: int64
            #   n.6 = n.3  :: int64
            #   n.6 = n.3  :: int64
2025-06-13 07:34:49,133 - print_capture - INFO -             #   n.6 = n.3  :: int64
            #   del n.3
            #   del n.3
2025-06-13 07:34:49,133 - print_capture - INFO -             #   del n.3
            #   del n.3
            #   del n.3
2025-06-13 07:34:49,133 - print_capture - INFO -             #   del n.3


2025-06-13 07:34:49,133 - print_capture - INFO - 


2025-06-13 07:34:49,133 - print_capture - INFO - 
            n += 1
            n += 1
2025-06-13 07:34:49,133 - print_capture - INFO -             n += 1
            n += 1
            n += 1
2025-06-13 07:34:49,133 - print_capture - INFO -             n += 1


2025-06-13 07:34:49,133 - print_capture - INFO - 


2025-06-13 07:34:49,133 - print_capture - INFO - 
            # --- LINE 1228 --- 
            # --- LINE 1228 --- 
2025-06-13 07:34:49,133 - print_capture - INFO -             # --- LINE 1228 --- 
            # --- LINE 1228 --- 
            # --- LINE 1228 --- 
2025-06-13 07:34:49,133 - print_capture - INFO -             # --- LINE 1228 --- 
            #   jump 333
            #   jump 333
2025-06-13 07:34:49,133 - print_capture - INFO -             #   jump 333
            #   jump 333
            #   jump 333
2025-06-13 07:34:49,133 - print_capture - INFO -             #   jump 333


2025-06-13 07:34:49,133 - print_capture - INFO - 


2025-06-13 07:34:49,133 - print_capture - INFO - 
            continue
            continue
2025-06-13 07:34:49,133 - print_capture - INFO -             continue
            continue
            continue
2025-06-13 07:34:49,133 - print_capture - INFO -             continue


2025-06-13 07:34:49,133 - print_capture - INFO - 


2025-06-13 07:34:49,133 - print_capture - INFO - 
# --- LINE 1229 --- 
# --- LINE 1229 --- 
2025-06-13 07:34:49,133 - print_capture - INFO - # --- LINE 1229 --- 
# --- LINE 1229 --- 
# --- LINE 1229 --- 
2025-06-13 07:34:49,133 - print_capture - INFO - # --- LINE 1229 --- 


2025-06-13 07:34:49,133 - print_capture - INFO - 


2025-06-13 07:34:49,133 - print_capture - INFO - 


2025-06-13 07:34:49,133 - print_capture - INFO - 


2025-06-13 07:34:49,133 - print_capture - INFO - 


2025-06-13 07:34:49,133 - print_capture - INFO - 


2025-06-13 07:34:49,133 - print_capture - INFO - 
        # --- LINE 1230 --- 
        # --- LINE 1230 --- 
2025-06-13 07:34:49,133 - print_capture - INFO -         # --- LINE 1230 --- 
        # --- LINE 1230 --- 
        # --- LINE 1230 --- 
2025-06-13 07:34:49,133 - print_capture - INFO -         # --- LINE 1230 --- 


2025-06-13 07:34:49,133 - print_capture - INFO - 


2025-06-13 07:34:49,133 - print_capture - INFO - 
        # Skip the next `wait` frames
        # Skip the next `wait` frames
2025-06-13 07:34:49,133 - print_capture - INFO -         # Skip the next `wait` frames
        # Skip the next `wait` frames
        # Skip the next `wait` frames
2025-06-13 07:34:49,133 - print_capture - INFO -         # Skip the next `wait` frames


2025-06-13 07:34:49,133 - print_capture - INFO - 


2025-06-13 07:34:49,133 - print_capture - INFO - 
        # --- LINE 1231 --- 
        # --- LINE 1231 --- 
2025-06-13 07:34:49,133 - print_capture - INFO -         # --- LINE 1231 --- 
        # --- LINE 1231 --- 
        # --- LINE 1231 --- 
2025-06-13 07:34:49,133 - print_capture - INFO -         # --- LINE 1231 --- 
        # label 302
        # label 302
2025-06-13 07:34:49,133 - print_capture - INFO -         # label 302
        # label 302
        # label 302
2025-06-13 07:34:49,133 - print_capture - INFO -         # label 302
        #   del $290pred
        #   del $290pred
2025-06-13 07:34:49,134 - print_capture - INFO -         #   del $290pred
        #   del $290pred
        #   del $290pred
2025-06-13 07:34:49,134 - print_capture - INFO -         #   del $290pred
        #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
        #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,134 - print_capture - INFO -         #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
        #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
        #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,134 - print_capture - INFO -         #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
        #   $308binary_add.3 = wait + $const306.2.3  :: int64
        #   $308binary_add.3 = wait + $const306.2.3  :: int64
2025-06-13 07:34:49,134 - print_capture - INFO -         #   $308binary_add.3 = wait + $const306.2.3  :: int64
        #   $308binary_add.3 = wait + $const306.2.3  :: int64
        #   $308binary_add.3 = wait + $const306.2.3  :: int64
2025-06-13 07:34:49,134 - print_capture - INFO -         #   $308binary_add.3 = wait + $const306.2.3  :: int64
        #   del $const306.2.3
        #   del $const306.2.3
2025-06-13 07:34:49,134 - print_capture - INFO -         #   del $const306.2.3
        #   del $const306.2.3
        #   del $const306.2.3
2025-06-13 07:34:49,134 - print_capture - INFO -         #   del $const306.2.3
        #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
        #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:49,134 - print_capture - INFO -         #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
        #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
        #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:49,134 - print_capture - INFO -         #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
        #   del $308binary_add.3
        #   del $308binary_add.3
2025-06-13 07:34:49,134 - print_capture - INFO -         #   del $308binary_add.3
        #   del $308binary_add.3
        #   del $308binary_add.3
2025-06-13 07:34:49,134 - print_capture - INFO -         #   del $308binary_add.3
        #   n.4 = $310inplace_add.4  :: int64
        #   n.4 = $310inplace_add.4  :: int64
2025-06-13 07:34:49,134 - print_capture - INFO -         #   n.4 = $310inplace_add.4  :: int64
        #   n.4 = $310inplace_add.4  :: int64
        #   n.4 = $310inplace_add.4  :: int64
2025-06-13 07:34:49,134 - print_capture - INFO -         #   n.4 = $310inplace_add.4  :: int64
        #   del $310inplace_add.4
        #   del $310inplace_add.4
2025-06-13 07:34:49,134 - print_capture - INFO -         #   del $310inplace_add.4
        #   del $310inplace_add.4
        #   del $310inplace_add.4
2025-06-13 07:34:49,134 - print_capture - INFO -         #   del $310inplace_add.4
        #   n.7 = n.4  :: int64
        #   n.7 = n.4  :: int64
2025-06-13 07:34:49,134 - print_capture - INFO -         #   n.7 = n.4  :: int64
        #   n.7 = n.4  :: int64
        #   n.7 = n.4  :: int64
2025-06-13 07:34:49,134 - print_capture - INFO -         #   n.7 = n.4  :: int64


2025-06-13 07:34:49,134 - print_capture - INFO - 


2025-06-13 07:34:49,134 - print_capture - INFO - 
        n += wait + 1
        n += wait + 1
2025-06-13 07:34:49,134 - print_capture - INFO -         n += wait + 1
        n += wait + 1
        n += wait + 1
2025-06-13 07:34:49,134 - print_capture - INFO -         n += wait + 1


2025-06-13 07:34:49,134 - print_capture - INFO - 


2025-06-13 07:34:49,134 - print_capture - INFO - 
label 0:
label 0:
2025-06-13 07:34:49,138 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:49,138 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:49,138 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:49,138 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    pre_max = arg(1, name=pre_max)           ['pre_max']
2025-06-13 07:34:49,138 - print_capture - INFO -     pre_max = arg(1, name=pre_max)           ['pre_max']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    pre_max = arg(1, name=pre_max)           ['pre_max']
2025-06-13 07:34:49,138 - print_capture - INFO -     pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    post_max = arg(2, name=post_max)         ['post_max']
2025-06-13 07:34:49,138 - print_capture - INFO -     post_max = arg(2, name=post_max)         ['post_max']
    post_max = arg(2, name=post_max)         ['post_max']
    post_max = arg(2, name=post_max)         ['post_max']
2025-06-13 07:34:49,138 - print_capture - INFO -     post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
2025-06-13 07:34:49,138 - print_capture - INFO -     pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
2025-06-13 07:34:49,138 - print_capture - INFO -     pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
2025-06-13 07:34:49,138 - print_capture - INFO -     post_avg = arg(4, name=post_avg)         ['post_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
2025-06-13 07:34:49,138 - print_capture - INFO -     post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    delta = arg(5, name=delta)               ['delta']
2025-06-13 07:34:49,138 - print_capture - INFO -     delta = arg(5, name=delta)               ['delta']
    delta = arg(5, name=delta)               ['delta']
    delta = arg(5, name=delta)               ['delta']
2025-06-13 07:34:49,138 - print_capture - INFO -     delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    wait = arg(6, name=wait)                 ['wait']
2025-06-13 07:34:49,138 - print_capture - INFO -     wait = arg(6, name=wait)                 ['wait']
    wait = arg(6, name=wait)                 ['wait']
    wait = arg(6, name=wait)                 ['wait']
2025-06-13 07:34:49,138 - print_capture - INFO -     wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    peaks = arg(7, name=peaks)               ['peaks']
2025-06-13 07:34:49,138 - print_capture - INFO -     peaks = arg(7, name=peaks)               ['peaks']
    peaks = arg(7, name=peaks)               ['peaks']
    peaks = arg(7, name=peaks)               ['peaks']
2025-06-13 07:34:49,138 - print_capture - INFO -     peaks = arg(7, name=peaks)               ['peaks']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:34:49,138 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:34:49,138 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:34:49,138 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:34:49,138 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
2025-06-13 07:34:49,138 - print_capture - INFO -     $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
2025-06-13 07:34:49,138 - print_capture - INFO -     $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
2025-06-13 07:34:49,138 - print_capture - INFO -     $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
2025-06-13 07:34:49,139 - print_capture - INFO -     $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
    $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
2025-06-13 07:34:49,139 - print_capture - INFO -     $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
    $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
    $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
2025-06-13 07:34:49,139 - print_capture - INFO -     $const14.6.2 = const(NoneType, None)     ['$const14.6.2']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
2025-06-13 07:34:49,139 - print_capture - INFO -     $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
2025-06-13 07:34:49,139 - print_capture - INFO -     $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
2025-06-13 07:34:49,139 - print_capture - INFO -     $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
2025-06-13 07:34:49,139 - print_capture - INFO -     $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $const24.11.1 = const(int, 0)            ['$const24.11.1']
    $const24.11.1 = const(int, 0)            ['$const24.11.1']
2025-06-13 07:34:49,139 - print_capture - INFO -     $const24.11.1 = const(int, 0)            ['$const24.11.1']
    $const24.11.1 = const(int, 0)            ['$const24.11.1']
    $const24.11.1 = const(int, 0)            ['$const24.11.1']
2025-06-13 07:34:49,139 - print_capture - INFO -     $const24.11.1 = const(int, 0)            ['$const24.11.1']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
2025-06-13 07:34:49,139 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
2025-06-13 07:34:49,139 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11.1, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11.1']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
2025-06-13 07:34:49,139 - print_capture - INFO -     $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
2025-06-13 07:34:49,139 - print_capture - INFO -     $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
2025-06-13 07:34:49,139 - print_capture - INFO -     $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
2025-06-13 07:34:49,139 - print_capture - INFO -     $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
    $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
2025-06-13 07:34:49,139 - print_capture - INFO -     $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
    $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
    $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
2025-06-13 07:34:49,139 - print_capture - INFO -     $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6.2']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
2025-06-13 07:34:49,139 - print_capture - INFO -     $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
2025-06-13 07:34:49,139 - print_capture - INFO -     $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
2025-06-13 07:34:49,139 - print_capture - INFO -     $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
2025-06-13 07:34:49,139 - print_capture - INFO -     $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
2025-06-13 07:34:49,139 - print_capture - INFO -     $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
2025-06-13 07:34:49,139 - print_capture - INFO -     $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $const40.20.1 = const(int, 0)            ['$const40.20.1']
    $const40.20.1 = const(int, 0)            ['$const40.20.1']
2025-06-13 07:34:49,139 - print_capture - INFO -     $const40.20.1 = const(int, 0)            ['$const40.20.1']
    $const40.20.1 = const(int, 0)            ['$const40.20.1']
    $const40.20.1 = const(int, 0)            ['$const40.20.1']
2025-06-13 07:34:49,139 - print_capture - INFO -     $const40.20.1 = const(int, 0)            ['$const40.20.1']
    peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
    peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
2025-06-13 07:34:49,139 - print_capture - INFO -     peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
    peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
    peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
2025-06-13 07:34:49,139 - print_capture - INFO -     peaks[$const40.20.1] = $36compare_op.18  ['$36compare_op.18', '$const40.20.1', 'peaks']
    $const46.22.1 = const(int, 0)            ['$const46.22.1']
    $const46.22.1 = const(int, 0)            ['$const46.22.1']
2025-06-13 07:34:49,139 - print_capture - INFO -     $const46.22.1 = const(int, 0)            ['$const46.22.1']
    $const46.22.1 = const(int, 0)            ['$const46.22.1']
    $const46.22.1 = const(int, 0)            ['$const46.22.1']
2025-06-13 07:34:49,139 - print_capture - INFO -     $const46.22.1 = const(int, 0)            ['$const46.22.1']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
2025-06-13 07:34:49,139 - print_capture - INFO -     $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
2025-06-13 07:34:49,139 - print_capture - INFO -     $50binary_subscr.25 = getitem(value=peaks, index=$const46.22.1, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22.1', 'peaks']
    $const54.27.1 = const(int, 0)            ['$const54.27.1']
    $const54.27.1 = const(int, 0)            ['$const54.27.1']
2025-06-13 07:34:49,139 - print_capture - INFO -     $const54.27.1 = const(int, 0)            ['$const54.27.1']
    $const54.27.1 = const(int, 0)            ['$const54.27.1']
    $const54.27.1 = const(int, 0)            ['$const54.27.1']
2025-06-13 07:34:49,139 - print_capture - INFO -     $const54.27.1 = const(int, 0)            ['$const54.27.1']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
2025-06-13 07:34:49,139 - print_capture - INFO -     $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
2025-06-13 07:34:49,139 - print_capture - INFO -     $56binary_subscr.28 = getitem(value=x, index=$const54.27.1, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27.1', 'x']
    $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
2025-06-13 07:34:49,139 - print_capture - INFO -     $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
2025-06-13 07:34:49,139 - print_capture - INFO -     $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
2025-06-13 07:34:49,139 - print_capture - INFO -     $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
2025-06-13 07:34:49,140 - print_capture - INFO -     $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
    $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
2025-06-13 07:34:49,140 - print_capture - INFO -     $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
    $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
    $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
2025-06-13 07:34:49,140 - print_capture - INFO -     $const64.32.2 = const(NoneType, None)    ['$const64.32.2']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
2025-06-13 07:34:49,140 - print_capture - INFO -     $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
2025-06-13 07:34:49,140 - print_capture - INFO -     $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
2025-06-13 07:34:49,140 - print_capture - INFO -     $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
2025-06-13 07:34:49,140 - print_capture - INFO -     $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $const74.37.1 = const(int, 0)            ['$const74.37.1']
    $const74.37.1 = const(int, 0)            ['$const74.37.1']
2025-06-13 07:34:49,140 - print_capture - INFO -     $const74.37.1 = const(int, 0)            ['$const74.37.1']
    $const74.37.1 = const(int, 0)            ['$const74.37.1']
    $const74.37.1 = const(int, 0)            ['$const74.37.1']
2025-06-13 07:34:49,140 - print_capture - INFO -     $const74.37.1 = const(int, 0)            ['$const74.37.1']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
2025-06-13 07:34:49,140 - print_capture - INFO -     $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
2025-06-13 07:34:49,140 - print_capture - INFO -     $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37.1, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37.1']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
2025-06-13 07:34:49,140 - print_capture - INFO -     $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
2025-06-13 07:34:49,140 - print_capture - INFO -     $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
2025-06-13 07:34:49,140 - print_capture - INFO -     $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
2025-06-13 07:34:49,140 - print_capture - INFO -     $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
    $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
2025-06-13 07:34:49,140 - print_capture - INFO -     $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
    $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
    $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
2025-06-13 07:34:49,140 - print_capture - INFO -     $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32.2']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
2025-06-13 07:34:49,140 - print_capture - INFO -     $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
2025-06-13 07:34:49,140 - print_capture - INFO -     $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
2025-06-13 07:34:49,140 - print_capture - INFO -     $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
2025-06-13 07:34:49,140 - print_capture - INFO -     $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
2025-06-13 07:34:49,140 - print_capture - INFO -     $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
2025-06-13 07:34:49,140 - print_capture - INFO -     $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
2025-06-13 07:34:49,140 - print_capture - INFO -     $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
2025-06-13 07:34:49,140 - print_capture - INFO -     $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
2025-06-13 07:34:49,140 - print_capture - INFO -     $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
2025-06-13 07:34:49,140 - print_capture - INFO -     $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
    peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
2025-06-13 07:34:49,140 - print_capture - INFO -     peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
    peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
    peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
2025-06-13 07:34:49,140 - print_capture - INFO -     peaks[$const46.22.1] = $92inplace_and.47 ['$92inplace_and.47', '$const46.22.1', 'peaks']
    $const100.49.1 = const(int, 0)           ['$const100.49.1']
    $const100.49.1 = const(int, 0)           ['$const100.49.1']
2025-06-13 07:34:49,140 - print_capture - INFO -     $const100.49.1 = const(int, 0)           ['$const100.49.1']
    $const100.49.1 = const(int, 0)           ['$const100.49.1']
    $const100.49.1 = const(int, 0)           ['$const100.49.1']
2025-06-13 07:34:49,140 - print_capture - INFO -     $const100.49.1 = const(int, 0)           ['$const100.49.1']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
2025-06-13 07:34:49,140 - print_capture - INFO -     $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
2025-06-13 07:34:49,140 - print_capture - INFO -     $102binary_subscr.50 = getitem(value=peaks, index=$const100.49.1, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49.1', 'peaks']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
2025-06-13 07:34:49,140 - print_capture - INFO -     bool104 = global(bool: <class 'bool'>)   ['bool104']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
2025-06-13 07:34:49,140 - print_capture - INFO -     bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
2025-06-13 07:34:49,140 - print_capture - INFO -     $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
2025-06-13 07:34:49,140 - print_capture - INFO -     $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    branch $104pred, 106, 116                ['$104pred']
    branch $104pred, 106, 116                ['$104pred']
2025-06-13 07:34:49,141 - print_capture - INFO -     branch $104pred, 106, 116                ['$104pred']
    branch $104pred, 106, 116                ['$104pred']
    branch $104pred, 106, 116                ['$104pred']
2025-06-13 07:34:49,141 - print_capture - INFO -     branch $104pred, 106, 116                ['$104pred']
label 106:
label 106:
2025-06-13 07:34:49,141 - print_capture - INFO - label 106:
label 106:
label 106:
2025-06-13 07:34:49,141 - print_capture - INFO - label 106:
    $const108.1.3 = const(int, 1)            ['$const108.1.3']
    $const108.1.3 = const(int, 1)            ['$const108.1.3']
2025-06-13 07:34:49,141 - print_capture - INFO -     $const108.1.3 = const(int, 1)            ['$const108.1.3']
    $const108.1.3 = const(int, 1)            ['$const108.1.3']
    $const108.1.3 = const(int, 1)            ['$const108.1.3']
2025-06-13 07:34:49,141 - print_capture - INFO -     $const108.1.3 = const(int, 1)            ['$const108.1.3']
    n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
    n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
2025-06-13 07:34:49,141 - print_capture - INFO -     n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
    n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
    n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
2025-06-13 07:34:49,141 - print_capture - INFO -     n = wait + $const108.1.3                 ['$const108.1.3', 'n', 'wait']
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:49,141 - print_capture - INFO -     jump 120                                 []
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:49,141 - print_capture - INFO -     jump 120                                 []
label 116:
label 116:
2025-06-13 07:34:49,141 - print_capture - INFO - label 116:
label 116:
label 116:
2025-06-13 07:34:49,141 - print_capture - INFO - label 116:
    n = const(int, 1)                        ['n']
    n = const(int, 1)                        ['n']
2025-06-13 07:34:49,141 - print_capture - INFO -     n = const(int, 1)                        ['n']
    n = const(int, 1)                        ['n']
    n = const(int, 1)                        ['n']
2025-06-13 07:34:49,141 - print_capture - INFO -     n = const(int, 1)                        ['n']
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:49,141 - print_capture - INFO -     jump 120                                 []
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:49,141 - print_capture - INFO -     jump 120                                 []
label 120:
label 120:
2025-06-13 07:34:49,141 - print_capture - INFO - label 120:
label 120:
label 120:
2025-06-13 07:34:49,141 - print_capture - INFO - label 120:
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
2025-06-13 07:34:49,141 - print_capture - INFO -     $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
2025-06-13 07:34:49,141 - print_capture - INFO -     $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $const126.3.1 = const(int, 0)            ['$const126.3.1']
    $const126.3.1 = const(int, 0)            ['$const126.3.1']
2025-06-13 07:34:49,141 - print_capture - INFO -     $const126.3.1 = const(int, 0)            ['$const126.3.1']
    $const126.3.1 = const(int, 0)            ['$const126.3.1']
    $const126.3.1 = const(int, 0)            ['$const126.3.1']
2025-06-13 07:34:49,141 - print_capture - INFO -     $const126.3.1 = const(int, 0)            ['$const126.3.1']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
2025-06-13 07:34:49,141 - print_capture - INFO -     $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
2025-06-13 07:34:49,141 - print_capture - INFO -     $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3.1, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3.1']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
2025-06-13 07:34:49,141 - print_capture - INFO -     $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
2025-06-13 07:34:49,141 - print_capture - INFO -     $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
2025-06-13 07:34:49,141 - print_capture - INFO -     bool132 = global(bool: <class 'bool'>)   ['bool132']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
2025-06-13 07:34:49,141 - print_capture - INFO -     bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
2025-06-13 07:34:49,141 - print_capture - INFO -     $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
2025-06-13 07:34:49,141 - print_capture - INFO -     $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    branch $132pred, 134, 332                ['$132pred']
    branch $132pred, 134, 332                ['$132pred']
2025-06-13 07:34:49,141 - print_capture - INFO -     branch $132pred, 134, 332                ['$132pred']
    branch $132pred, 134, 332                ['$132pred']
    branch $132pred, 134, 332                ['$132pred']
2025-06-13 07:34:49,141 - print_capture - INFO -     branch $132pred, 134, 332                ['$132pred']
label 134:
label 134:
2025-06-13 07:34:49,141 - print_capture - INFO - label 134:
label 134:
label 134:
2025-06-13 07:34:49,141 - print_capture - INFO - label 134:
    $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
2025-06-13 07:34:49,141 - print_capture - INFO -     $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
2025-06-13 07:34:49,141 - print_capture - INFO -     $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
2025-06-13 07:34:49,141 - print_capture - INFO -     $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
2025-06-13 07:34:49,141 - print_capture - INFO -     $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
2025-06-13 07:34:49,141 - print_capture - INFO -     $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
2025-06-13 07:34:49,141 - print_capture - INFO -     $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $const142.4.1 = const(int, 0)            ['$const142.4.1']
    $const142.4.1 = const(int, 0)            ['$const142.4.1']
2025-06-13 07:34:49,328 - print_capture - INFO -     $const142.4.1 = const(int, 0)            ['$const142.4.1']
    $const142.4.1 = const(int, 0)            ['$const142.4.1']
    $const142.4.1 = const(int, 0)            ['$const142.4.1']
2025-06-13 07:34:49,329 - print_capture - INFO -     $const142.4.1 = const(int, 0)            ['$const142.4.1']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
2025-06-13 07:34:49,329 - print_capture - INFO -     $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
2025-06-13 07:34:49,329 - print_capture - INFO -     $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
    $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
2025-06-13 07:34:49,329 - print_capture - INFO -     $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
    $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
    $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
2025-06-13 07:34:49,329 - print_capture - INFO -     $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4.1']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
2025-06-13 07:34:49,330 - print_capture - INFO -     $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
2025-06-13 07:34:49,330 - print_capture - INFO -     $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
2025-06-13 07:34:49,330 - print_capture - INFO -     $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
2025-06-13 07:34:49,330 - print_capture - INFO -     $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
2025-06-13 07:34:49,330 - print_capture - INFO -     $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
2025-06-13 07:34:49,330 - print_capture - INFO -     $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $const164.15.1 = const(int, 0)           ['$const164.15.1']
    $const164.15.1 = const(int, 0)           ['$const164.15.1']
2025-06-13 07:34:49,330 - print_capture - INFO -     $const164.15.1 = const(int, 0)           ['$const164.15.1']
    $const164.15.1 = const(int, 0)           ['$const164.15.1']
    $const164.15.1 = const(int, 0)           ['$const164.15.1']
2025-06-13 07:34:49,331 - print_capture - INFO -     $const164.15.1 = const(int, 0)           ['$const164.15.1']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
2025-06-13 07:34:49,331 - print_capture - INFO -     $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
2025-06-13 07:34:49,331 - print_capture - INFO -     $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15.1, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15.1']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
2025-06-13 07:34:49,331 - print_capture - INFO -     $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
2025-06-13 07:34:49,331 - print_capture - INFO -     $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
2025-06-13 07:34:49,331 - print_capture - INFO -     $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
2025-06-13 07:34:49,331 - print_capture - INFO -     $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
2025-06-13 07:34:49,332 - print_capture - INFO -     $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
2025-06-13 07:34:49,332 - print_capture - INFO -     $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
2025-06-13 07:34:49,332 - print_capture - INFO -     $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
2025-06-13 07:34:49,332 - print_capture - INFO -     $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
2025-06-13 07:34:49,332 - print_capture - INFO -     maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
2025-06-13 07:34:49,332 - print_capture - INFO -     maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
2025-06-13 07:34:49,333 - print_capture - INFO -     $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
2025-06-13 07:34:49,333 - print_capture - INFO -     $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
2025-06-13 07:34:49,333 - print_capture - INFO -     $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
2025-06-13 07:34:49,333 - print_capture - INFO -     $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
2025-06-13 07:34:49,333 - print_capture - INFO -     peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
2025-06-13 07:34:49,333 - print_capture - INFO -     peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
2025-06-13 07:34:49,334 - print_capture - INFO -     $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
2025-06-13 07:34:49,334 - print_capture - INFO -     $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
2025-06-13 07:34:49,334 - print_capture - INFO -     bool200 = global(bool: <class 'bool'>)   ['bool200']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
2025-06-13 07:34:49,334 - print_capture - INFO -     bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
2025-06-13 07:34:49,334 - print_capture - INFO -     $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
2025-06-13 07:34:49,334 - print_capture - INFO -     $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    branch $200pred, 212, 202                ['$200pred']
    branch $200pred, 212, 202                ['$200pred']
2025-06-13 07:34:49,334 - print_capture - INFO -     branch $200pred, 212, 202                ['$200pred']
    branch $200pred, 212, 202                ['$200pred']
    branch $200pred, 212, 202                ['$200pred']
2025-06-13 07:34:49,335 - print_capture - INFO -     branch $200pred, 212, 202                ['$200pred']
label 202:
label 202:
2025-06-13 07:34:49,335 - print_capture - INFO - label 202:
label 202:
label 202:
2025-06-13 07:34:49,335 - print_capture - INFO - label 202:
    $const204.1.3 = const(int, 1)            ['$const204.1.3']
    $const204.1.3 = const(int, 1)            ['$const204.1.3']
2025-06-13 07:34:49,335 - print_capture - INFO -     $const204.1.3 = const(int, 1)            ['$const204.1.3']
    $const204.1.3 = const(int, 1)            ['$const204.1.3']
    $const204.1.3 = const(int, 1)            ['$const204.1.3']
2025-06-13 07:34:49,335 - print_capture - INFO -     $const204.1.3 = const(int, 1)            ['$const204.1.3']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
2025-06-13 07:34:49,335 - print_capture - INFO -     $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
2025-06-13 07:34:49,335 - print_capture - INFO -     $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1.3', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
2025-06-13 07:34:49,335 - print_capture - INFO -     n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
2025-06-13 07:34:49,335 - print_capture - INFO -     n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:49,335 - print_capture - INFO -     jump 120                                 []
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:49,335 - print_capture - INFO -     jump 120                                 []
label 212:
label 212:
2025-06-13 07:34:49,335 - print_capture - INFO - label 212:
label 212:
label 212:
2025-06-13 07:34:49,335 - print_capture - INFO - label 212:
    $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
2025-06-13 07:34:49,335 - print_capture - INFO -     $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
2025-06-13 07:34:49,335 - print_capture - INFO -     $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
2025-06-13 07:34:49,335 - print_capture - INFO -     $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
2025-06-13 07:34:49,335 - print_capture - INFO -     $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
2025-06-13 07:34:49,335 - print_capture - INFO -     $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
2025-06-13 07:34:49,335 - print_capture - INFO -     $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $const220.4.1 = const(int, 0)            ['$const220.4.1']
    $const220.4.1 = const(int, 0)            ['$const220.4.1']
2025-06-13 07:34:49,335 - print_capture - INFO -     $const220.4.1 = const(int, 0)            ['$const220.4.1']
    $const220.4.1 = const(int, 0)            ['$const220.4.1']
    $const220.4.1 = const(int, 0)            ['$const220.4.1']
2025-06-13 07:34:49,335 - print_capture - INFO -     $const220.4.1 = const(int, 0)            ['$const220.4.1']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
2025-06-13 07:34:49,335 - print_capture - INFO -     $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
2025-06-13 07:34:49,335 - print_capture - INFO -     $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
    $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
2025-06-13 07:34:49,335 - print_capture - INFO -     $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
    $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
    $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
2025-06-13 07:34:49,335 - print_capture - INFO -     $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4.1']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
2025-06-13 07:34:49,335 - print_capture - INFO -     $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
2025-06-13 07:34:49,335 - print_capture - INFO -     $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
2025-06-13 07:34:49,335 - print_capture - INFO -     $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
2025-06-13 07:34:49,335 - print_capture - INFO -     $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
2025-06-13 07:34:49,335 - print_capture - INFO -     $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
2025-06-13 07:34:49,335 - print_capture - INFO -     $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $const242.15.1 = const(int, 0)           ['$const242.15.1']
    $const242.15.1 = const(int, 0)           ['$const242.15.1']
2025-06-13 07:34:49,335 - print_capture - INFO -     $const242.15.1 = const(int, 0)           ['$const242.15.1']
    $const242.15.1 = const(int, 0)           ['$const242.15.1']
    $const242.15.1 = const(int, 0)           ['$const242.15.1']
2025-06-13 07:34:49,336 - print_capture - INFO -     $const242.15.1 = const(int, 0)           ['$const242.15.1']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
2025-06-13 07:34:49,336 - print_capture - INFO -     $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
2025-06-13 07:34:49,336 - print_capture - INFO -     $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15.1, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15.1']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
2025-06-13 07:34:49,336 - print_capture - INFO -     $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
2025-06-13 07:34:49,336 - print_capture - INFO -     $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
2025-06-13 07:34:49,336 - print_capture - INFO -     $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
2025-06-13 07:34:49,336 - print_capture - INFO -     $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
2025-06-13 07:34:49,336 - print_capture - INFO -     $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
2025-06-13 07:34:49,336 - print_capture - INFO -     $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
2025-06-13 07:34:49,336 - print_capture - INFO -     $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
2025-06-13 07:34:49,336 - print_capture - INFO -     $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
2025-06-13 07:34:49,336 - print_capture - INFO -     avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
2025-06-13 07:34:49,336 - print_capture - INFO -     avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
2025-06-13 07:34:49,336 - print_capture - INFO -     $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
2025-06-13 07:34:49,336 - print_capture - INFO -     $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
2025-06-13 07:34:49,336 - print_capture - INFO -     $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
2025-06-13 07:34:49,336 - print_capture - INFO -     $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
2025-06-13 07:34:49,336 - print_capture - INFO -     $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
2025-06-13 07:34:49,336 - print_capture - INFO -     $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
2025-06-13 07:34:49,336 - print_capture - INFO -     $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
2025-06-13 07:34:49,336 - print_capture - INFO -     $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
2025-06-13 07:34:49,336 - print_capture - INFO -     $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
2025-06-13 07:34:49,336 - print_capture - INFO -     $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
2025-06-13 07:34:49,336 - print_capture - INFO -     peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
2025-06-13 07:34:49,336 - print_capture - INFO -     peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
2025-06-13 07:34:49,336 - print_capture - INFO -     $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
2025-06-13 07:34:49,336 - print_capture - INFO -     $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
2025-06-13 07:34:49,336 - print_capture - INFO -     bool290 = global(bool: <class 'bool'>)   ['bool290']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
2025-06-13 07:34:49,336 - print_capture - INFO -     bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
2025-06-13 07:34:49,336 - print_capture - INFO -     $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
2025-06-13 07:34:49,336 - print_capture - INFO -     $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    branch $290pred, 302, 292                ['$290pred']
    branch $290pred, 302, 292                ['$290pred']
2025-06-13 07:34:49,336 - print_capture - INFO -     branch $290pred, 302, 292                ['$290pred']
    branch $290pred, 302, 292                ['$290pred']
    branch $290pred, 302, 292                ['$290pred']
2025-06-13 07:34:49,336 - print_capture - INFO -     branch $290pred, 302, 292                ['$290pred']
label 292:
label 292:
2025-06-13 07:34:49,336 - print_capture - INFO - label 292:
label 292:
label 292:
2025-06-13 07:34:49,336 - print_capture - INFO - label 292:
    $const294.1.3 = const(int, 1)            ['$const294.1.3']
    $const294.1.3 = const(int, 1)            ['$const294.1.3']
2025-06-13 07:34:49,336 - print_capture - INFO -     $const294.1.3 = const(int, 1)            ['$const294.1.3']
    $const294.1.3 = const(int, 1)            ['$const294.1.3']
    $const294.1.3 = const(int, 1)            ['$const294.1.3']
2025-06-13 07:34:49,336 - print_capture - INFO -     $const294.1.3 = const(int, 1)            ['$const294.1.3']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
2025-06-13 07:34:49,336 - print_capture - INFO -     $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
2025-06-13 07:34:49,336 - print_capture - INFO -     $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1.3', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
2025-06-13 07:34:49,336 - print_capture - INFO -     n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
2025-06-13 07:34:49,337 - print_capture - INFO -     n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:49,337 - print_capture - INFO -     jump 120                                 []
    jump 120                                 []
    jump 120                                 []
2025-06-13 07:34:49,337 - print_capture - INFO -     jump 120                                 []
label 302:
label 302:
2025-06-13 07:34:49,337 - print_capture - INFO - label 302:
label 302:
label 302:
2025-06-13 07:34:49,337 - print_capture - INFO - label 302:
    $const306.2.3 = const(int, 1)            ['$const306.2.3']
    $const306.2.3 = const(int, 1)            ['$const306.2.3']
2025-06-13 07:34:49,337 - print_capture - INFO -     $const306.2.3 = const(int, 1)            ['$const306.2.3']
    $const306.2.3 = const(int, 1)            ['$const306.2.3']
    $const306.2.3 = const(int, 1)            ['$const306.2.3']
2025-06-13 07:34:49,337 - print_capture - INFO -     $const306.2.3 = const(int, 1)            ['$const306.2.3']
    $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
    $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
2025-06-13 07:34:49,337 - print_capture - INFO -     $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
    $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
    $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
2025-06-13 07:34:49,337 - print_capture - INFO -     $308binary_add.3 = wait + $const306.2.3  ['$308binary_add.3', '$const306.2.3', 'wait']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
2025-06-13 07:34:49,337 - print_capture - INFO -     $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
2025-06-13 07:34:49,337 - print_capture - INFO -     $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
2025-06-13 07:34:49,337 - print_capture - INFO -     n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
2025-06-13 07:34:49,337 - print_capture - INFO -     n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
2025-06-13 07:34:49,337 - print_capture - INFO -     $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
2025-06-13 07:34:49,337 - print_capture - INFO -     $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $const320.8.1 = const(int, 0)            ['$const320.8.1']
    $const320.8.1 = const(int, 0)            ['$const320.8.1']
2025-06-13 07:34:49,337 - print_capture - INFO -     $const320.8.1 = const(int, 0)            ['$const320.8.1']
    $const320.8.1 = const(int, 0)            ['$const320.8.1']
    $const320.8.1 = const(int, 0)            ['$const320.8.1']
2025-06-13 07:34:49,337 - print_capture - INFO -     $const320.8.1 = const(int, 0)            ['$const320.8.1']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
2025-06-13 07:34:49,337 - print_capture - INFO -     $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
2025-06-13 07:34:49,337 - print_capture - INFO -     $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8.1, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8.1']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
2025-06-13 07:34:49,337 - print_capture - INFO -     $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
2025-06-13 07:34:49,337 - print_capture - INFO -     $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
2025-06-13 07:34:49,337 - print_capture - INFO -     bool326 = global(bool: <class 'bool'>)   ['bool326']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
2025-06-13 07:34:49,337 - print_capture - INFO -     bool326 = global(bool: <class 'bool'>)   ['bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
2025-06-13 07:34:49,337 - print_capture - INFO -     $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
2025-06-13 07:34:49,337 - print_capture - INFO -     $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    branch $326pred, 134, 328                ['$326pred']
    branch $326pred, 134, 328                ['$326pred']
2025-06-13 07:34:49,337 - print_capture - INFO -     branch $326pred, 134, 328                ['$326pred']
    branch $326pred, 134, 328                ['$326pred']
    branch $326pred, 134, 328                ['$326pred']
2025-06-13 07:34:49,337 - print_capture - INFO -     branch $326pred, 134, 328                ['$326pred']
label 328:
label 328:
2025-06-13 07:34:49,337 - print_capture - INFO - label 328:
label 328:
label 328:
2025-06-13 07:34:49,337 - print_capture - INFO - label 328:
    $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
    $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
2025-06-13 07:34:49,337 - print_capture - INFO -     $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
    $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
    $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
2025-06-13 07:34:49,337 - print_capture - INFO -     $const328.0.2 = const(NoneType, None)    ['$const328.0.2']
    $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
    $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
2025-06-13 07:34:49,337 - print_capture - INFO -     $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
    $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
    $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
2025-06-13 07:34:49,337 - print_capture - INFO -     $330return_value.1 = cast(value=$const328.0.2) ['$330return_value.1', '$const328.0.2']
    return $330return_value.1                ['$330return_value.1']
    return $330return_value.1                ['$330return_value.1']
2025-06-13 07:34:49,337 - print_capture - INFO -     return $330return_value.1                ['$330return_value.1']
    return $330return_value.1                ['$330return_value.1']
    return $330return_value.1                ['$330return_value.1']
2025-06-13 07:34:49,337 - print_capture - INFO -     return $330return_value.1                ['$330return_value.1']
label 332:
label 332:
2025-06-13 07:34:49,337 - print_capture - INFO - label 332:
label 332:
label 332:
2025-06-13 07:34:49,337 - print_capture - INFO - label 332:
    $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
    $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
2025-06-13 07:34:49,337 - print_capture - INFO -     $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
    $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
    $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
2025-06-13 07:34:49,337 - print_capture - INFO -     $const332.0.2 = const(NoneType, None)    ['$const332.0.2']
    $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
    $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
2025-06-13 07:34:49,337 - print_capture - INFO -     $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
    $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
    $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
2025-06-13 07:34:49,337 - print_capture - INFO -     $334return_value.1 = cast(value=$const332.0.2) ['$334return_value.1', '$const332.0.2']
    return $334return_value.1                ['$334return_value.1']
    return $334return_value.1                ['$334return_value.1']
2025-06-13 07:34:49,337 - print_capture - INFO -     return $334return_value.1                ['$334return_value.1']
    return $334return_value.1                ['$334return_value.1']
    return $334return_value.1                ['$334return_value.1']
2025-06-13 07:34:49,337 - print_capture - INFO -     return $334return_value.1                ['$334return_value.1']
label 0:
label 0:
2025-06-13 07:34:49,350 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:49,350 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:49,350 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:49,350 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
2025-06-13 07:34:49,350 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
2025-06-13 07:34:49,350 - print_capture - INFO -     $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $const6.2.1 = const(int, 0)              ['$const6.2.1']
    $const6.2.1 = const(int, 0)              ['$const6.2.1']
2025-06-13 07:34:49,350 - print_capture - INFO -     $const6.2.1 = const(int, 0)              ['$const6.2.1']
    $const6.2.1 = const(int, 0)              ['$const6.2.1']
    $const6.2.1 = const(int, 0)              ['$const6.2.1']
2025-06-13 07:34:49,350 - print_capture - INFO -     $const6.2.1 = const(int, 0)              ['$const6.2.1']
    $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
    $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
2025-06-13 07:34:49,350 - print_capture - INFO -     $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
    $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
    $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
2025-06-13 07:34:49,350 - print_capture - INFO -     $8compare_op.3 = $4load_attr.1 == $const6.2.1 ['$4load_attr.1', '$8compare_op.3', '$const6.2.1']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
2025-06-13 07:34:49,350 - print_capture - INFO -     bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
2025-06-13 07:34:49,350 - print_capture - INFO -     bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
2025-06-13 07:34:49,350 - print_capture - INFO -     $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
2025-06-13 07:34:49,350 - print_capture - INFO -     $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 20                   ['$10pred']
    branch $10pred, 12, 20                   ['$10pred']
2025-06-13 07:34:49,350 - print_capture - INFO -     branch $10pred, 12, 20                   ['$10pred']
    branch $10pred, 12, 20                   ['$10pred']
    branch $10pred, 12, 20                   ['$10pred']
2025-06-13 07:34:49,350 - print_capture - INFO -     branch $10pred, 12, 20                   ['$10pred']
label 12:
label 12:
2025-06-13 07:34:49,350 - print_capture - INFO - label 12:
label 12:
label 12:
2025-06-13 07:34:49,350 - print_capture - INFO - label 12:
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
2025-06-13 07:34:49,350 - print_capture - INFO -     $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
2025-06-13 07:34:49,350 - print_capture - INFO -     $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
    $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
2025-06-13 07:34:49,350 - print_capture - INFO -     $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
    $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
    $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
2025-06-13 07:34:49,350 - print_capture - INFO -     $const14.1.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1.2']
    $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
    $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
2025-06-13 07:34:49,350 - print_capture - INFO -     $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
    $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
    $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
2025-06-13 07:34:49,350 - print_capture - INFO -     $16call_function.2 = call $12load_global.0($const14.1.2, func=$12load_global.0, args=[Var($const14.1.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1.2']
    raise $16call_function.2                 ['$16call_function.2']
    raise $16call_function.2                 ['$16call_function.2']
2025-06-13 07:34:49,350 - print_capture - INFO -     raise $16call_function.2                 ['$16call_function.2']
    raise $16call_function.2                 ['$16call_function.2']
    raise $16call_function.2                 ['$16call_function.2']
2025-06-13 07:34:49,350 - print_capture - INFO -     raise $16call_function.2                 ['$16call_function.2']
label 20:
label 20:
2025-06-13 07:34:49,350 - print_capture - INFO - label 20:
label 20:
label 20:
2025-06-13 07:34:49,350 - print_capture - INFO - label 20:
    $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
2025-06-13 07:34:49,350 - print_capture - INFO -     $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
2025-06-13 07:34:49,350 - print_capture - INFO -     $20load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
2025-06-13 07:34:49,350 - print_capture - INFO -     $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
2025-06-13 07:34:49,350 - print_capture - INFO -     $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
2025-06-13 07:34:49,351 - print_capture - INFO -     it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
2025-06-13 07:34:49,351 - print_capture - INFO -     it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
2025-06-13 07:34:49,351 - print_capture - INFO -     $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
2025-06-13 07:34:49,351 - print_capture - INFO -     $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
2025-06-13 07:34:49,351 - print_capture - INFO -     $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
2025-06-13 07:34:49,351 - print_capture - INFO -     $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
2025-06-13 07:34:49,351 - print_capture - INFO -     $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
2025-06-13 07:34:49,351 - print_capture - INFO -     $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $const38.8.1 = const(int, 0)             ['$const38.8.1']
    $const38.8.1 = const(int, 0)             ['$const38.8.1']
2025-06-13 07:34:49,351 - print_capture - INFO -     $const38.8.1 = const(int, 0)             ['$const38.8.1']
    $const38.8.1 = const(int, 0)             ['$const38.8.1']
    $const38.8.1 = const(int, 0)             ['$const38.8.1']
2025-06-13 07:34:49,351 - print_capture - INFO -     $const38.8.1 = const(int, 0)             ['$const38.8.1']
    max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
    max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
2025-06-13 07:34:49,351 - print_capture - INFO -     max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
    max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
    max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
2025-06-13 07:34:49,351 - print_capture - INFO -     max_value = call $36load_method.7($const38.8.1, func=$36load_method.7, args=[Var($const38.8.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8.1', 'max_value']
    $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$44load_deref.10']
    $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$44load_deref.10']
2025-06-13 07:34:49,351 - print_capture - INFO -     $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$44load_deref.10']
    $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$44load_deref.10']
    $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$44load_deref.10']
2025-06-13 07:34:49,351 - print_capture - INFO -     $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$44load_deref.10']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
2025-06-13 07:34:49,351 - print_capture - INFO -     $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
2025-06-13 07:34:49,351 - print_capture - INFO -     $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
2025-06-13 07:34:49,351 - print_capture - INFO -     bool50 = global(bool: <class 'bool'>)    ['bool50']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
2025-06-13 07:34:49,351 - print_capture - INFO -     bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
2025-06-13 07:34:49,351 - print_capture - INFO -     $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
2025-06-13 07:34:49,351 - print_capture - INFO -     $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    branch $50pred, 52, 56                   ['$50pred']
    branch $50pred, 52, 56                   ['$50pred']
2025-06-13 07:34:49,351 - print_capture - INFO -     branch $50pred, 52, 56                   ['$50pred']
    branch $50pred, 52, 56                   ['$50pred']
    branch $50pred, 52, 56                   ['$50pred']
2025-06-13 07:34:49,351 - print_capture - INFO -     branch $50pred, 52, 56                   ['$50pred']
label 52:
label 52:
2025-06-13 07:34:49,351 - print_capture - INFO - label 52:
label 52:
label 52:
2025-06-13 07:34:49,351 - print_capture - INFO - label 52:
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
2025-06-13 07:34:49,351 - print_capture - INFO -     $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
2025-06-13 07:34:49,351 - print_capture - INFO -     $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    return $54return_value.1                 ['$54return_value.1']
    return $54return_value.1                 ['$54return_value.1']
2025-06-13 07:34:49,351 - print_capture - INFO -     return $54return_value.1                 ['$54return_value.1']
    return $54return_value.1                 ['$54return_value.1']
    return $54return_value.1                 ['$54return_value.1']
2025-06-13 07:34:49,351 - print_capture - INFO -     return $54return_value.1                 ['$54return_value.1']
label 56:
label 56:
2025-06-13 07:34:49,351 - print_capture - INFO - label 56:
label 56:
label 56:
2025-06-13 07:34:49,351 - print_capture - INFO - label 56:
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
2025-06-13 07:34:49,351 - print_capture - INFO -     $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
2025-06-13 07:34:49,351 - print_capture - INFO -     $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
2025-06-13 07:34:49,351 - print_capture - INFO -     $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
2025-06-13 07:34:49,351 - print_capture - INFO -     $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    jump 60                                  []
    jump 60                                  []
2025-06-13 07:34:49,351 - print_capture - INFO -     jump 60                                  []
    jump 60                                  []
    jump 60                                  []
2025-06-13 07:34:49,351 - print_capture - INFO -     jump 60                                  []
label 60:
label 60:
2025-06-13 07:34:49,351 - print_capture - INFO - label 60:
label 60:
label 60:
2025-06-13 07:34:49,351 - print_capture - INFO - label 60:
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
2025-06-13 07:34:49,351 - print_capture - INFO -     $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
2025-06-13 07:34:49,351 - print_capture - INFO -     $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
2025-06-13 07:34:49,351 - print_capture - INFO -     $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
2025-06-13 07:34:49,352 - print_capture - INFO -     $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
2025-06-13 07:34:49,352 - print_capture - INFO -     $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
2025-06-13 07:34:49,352 - print_capture - INFO -     $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
2025-06-13 07:34:49,352 - print_capture - INFO -     $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
2025-06-13 07:34:49,352 - print_capture - INFO -     $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
2025-06-13 07:34:49,352 - print_capture - INFO -     branch $60for_iter.3, 62, 104            ['$60for_iter.3']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
2025-06-13 07:34:49,352 - print_capture - INFO -     branch $60for_iter.3, 62, 104            ['$60for_iter.3']
label 62:
label 62:
2025-06-13 07:34:49,352 - print_capture - INFO - label 62:
label 62:
label 62:
2025-06-13 07:34:49,352 - print_capture - INFO - label 62:
    view = $phi62.1                          ['$phi62.1', 'view']
    view = $phi62.1                          ['$phi62.1', 'view']
2025-06-13 07:34:49,352 - print_capture - INFO -     view = $phi62.1                          ['$phi62.1', 'view']
    view = $phi62.1                          ['$phi62.1', 'view']
    view = $phi62.1                          ['$phi62.1', 'view']
2025-06-13 07:34:49,352 - print_capture - INFO -     view = $phi62.1                          ['$phi62.1', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
2025-06-13 07:34:49,352 - print_capture - INFO -     $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
2025-06-13 07:34:49,352 - print_capture - INFO -     $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
2025-06-13 07:34:49,352 - print_capture - INFO -     v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
2025-06-13 07:34:49,352 - print_capture - INFO -     v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$72load_deref.5']
    $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$72load_deref.5']
2025-06-13 07:34:49,352 - print_capture - INFO -     $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$72load_deref.5']
    $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$72load_deref.5']
    $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$72load_deref.5']
2025-06-13 07:34:49,352 - print_capture - INFO -     $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x7f28ab5dbe20>) ['$72load_deref.5']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
2025-06-13 07:34:49,352 - print_capture - INFO -     $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
2025-06-13 07:34:49,352 - print_capture - INFO -     $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
2025-06-13 07:34:49,352 - print_capture - INFO -     bool78 = global(bool: <class 'bool'>)    ['bool78']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
2025-06-13 07:34:49,352 - print_capture - INFO -     bool78 = global(bool: <class 'bool'>)    ['bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
2025-06-13 07:34:49,352 - print_capture - INFO -     $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
2025-06-13 07:34:49,352 - print_capture - INFO -     $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    branch $78pred, 80, 88                   ['$78pred']
    branch $78pred, 80, 88                   ['$78pred']
2025-06-13 07:34:49,352 - print_capture - INFO -     branch $78pred, 80, 88                   ['$78pred']
    branch $78pred, 80, 88                   ['$78pred']
    branch $78pred, 80, 88                   ['$78pred']
2025-06-13 07:34:49,352 - print_capture - INFO -     branch $78pred, 80, 88                   ['$78pred']
label 80:
label 80:
2025-06-13 07:34:49,352 - print_capture - INFO - label 80:
label 80:
label 80:
2025-06-13 07:34:49,352 - print_capture - INFO - label 80:
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
2025-06-13 07:34:49,352 - print_capture - INFO -     $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
2025-06-13 07:34:49,352 - print_capture - INFO -     $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    return $86return_value.2                 ['$86return_value.2']
    return $86return_value.2                 ['$86return_value.2']
2025-06-13 07:34:49,352 - print_capture - INFO -     return $86return_value.2                 ['$86return_value.2']
    return $86return_value.2                 ['$86return_value.2']
    return $86return_value.2                 ['$86return_value.2']
2025-06-13 07:34:49,352 - print_capture - INFO -     return $86return_value.2                 ['$86return_value.2']
label 88:
label 88:
2025-06-13 07:34:49,352 - print_capture - INFO - label 88:
label 88:
label 88:
2025-06-13 07:34:49,352 - print_capture - INFO - label 88:
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
2025-06-13 07:34:49,352 - print_capture - INFO -     $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
2025-06-13 07:34:49,352 - print_capture - INFO -     $88load_deref.1 = freevar(comparator: <function max_comparator at 0x7f28ab5db910>) ['$88load_deref.1']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
2025-06-13 07:34:49,352 - print_capture - INFO -     $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
2025-06-13 07:34:49,352 - print_capture - INFO -     $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
2025-06-13 07:34:49,352 - print_capture - INFO -     bool96 = global(bool: <class 'bool'>)    ['bool96']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
2025-06-13 07:34:49,352 - print_capture - INFO -     bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
2025-06-13 07:34:49,352 - print_capture - INFO -     $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
2025-06-13 07:34:49,352 - print_capture - INFO -     $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    branch $96pred, 98, 102                  ['$96pred']
    branch $96pred, 98, 102                  ['$96pred']
2025-06-13 07:34:49,353 - print_capture - INFO -     branch $96pred, 98, 102                  ['$96pred']
    branch $96pred, 98, 102                  ['$96pred']
    branch $96pred, 98, 102                  ['$96pred']
2025-06-13 07:34:49,353 - print_capture - INFO -     branch $96pred, 98, 102                  ['$96pred']
label 98:
label 98:
2025-06-13 07:34:49,353 - print_capture - INFO - label 98:
label 98:
label 98:
2025-06-13 07:34:49,353 - print_capture - INFO - label 98:
    max_value = v                            ['max_value', 'v']
    max_value = v                            ['max_value', 'v']
2025-06-13 07:34:49,353 - print_capture - INFO -     max_value = v                            ['max_value', 'v']
    max_value = v                            ['max_value', 'v']
    max_value = v                            ['max_value', 'v']
2025-06-13 07:34:49,353 - print_capture - INFO -     max_value = v                            ['max_value', 'v']
    jump 102                                 []
    jump 102                                 []
2025-06-13 07:34:49,353 - print_capture - INFO -     jump 102                                 []
    jump 102                                 []
    jump 102                                 []
2025-06-13 07:34:49,353 - print_capture - INFO -     jump 102                                 []
label 102:
label 102:
2025-06-13 07:34:49,353 - print_capture - INFO - label 102:
label 102:
label 102:
2025-06-13 07:34:49,353 - print_capture - INFO - label 102:
    jump 60                                  []
    jump 60                                  []
2025-06-13 07:34:49,353 - print_capture - INFO -     jump 60                                  []
    jump 60                                  []
    jump 60                                  []
2025-06-13 07:34:49,353 - print_capture - INFO -     jump 60                                  []
label 104:
label 104:
2025-06-13 07:34:49,353 - print_capture - INFO - label 104:
label 104:
label 104:
2025-06-13 07:34:49,353 - print_capture - INFO - label 104:
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
2025-06-13 07:34:49,353 - print_capture - INFO -     $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
2025-06-13 07:34:49,353 - print_capture - INFO -     $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    return $106return_value.1                ['$106return_value.1']
    return $106return_value.1                ['$106return_value.1']
2025-06-13 07:34:49,353 - print_capture - INFO -     return $106return_value.1                ['$106return_value.1']
    return $106return_value.1                ['$106return_value.1']
    return $106return_value.1                ['$106return_value.1']
2025-06-13 07:34:49,353 - print_capture - INFO -     return $106return_value.1                ['$106return_value.1']
label 0:
label 0:
2025-06-13 07:34:49,360 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:49,360 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:49,360 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:49,360 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
2025-06-13 07:34:49,360 - print_capture - INFO -     indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
2025-06-13 07:34:49,360 - print_capture - INFO -     indices = arg(1, name=indices)           ['indices']
    axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
2025-06-13 07:34:49,360 - print_capture - INFO -     axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
2025-06-13 07:34:49,360 - print_capture - INFO -     axis = arg(2, name=axis)                 ['axis']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
2025-06-13 07:34:49,360 - print_capture - INFO -     $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
2025-06-13 07:34:49,360 - print_capture - INFO -     $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
2025-06-13 07:34:49,360 - print_capture - INFO -     $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
2025-06-13 07:34:49,360 - print_capture - INFO -     $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
2025-06-13 07:34:49,360 - print_capture - INFO -     $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
2025-06-13 07:34:49,360 - print_capture - INFO -     $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
2025-06-13 07:34:49,360 - print_capture - INFO -     $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
2025-06-13 07:34:49,360 - print_capture - INFO -     $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
2025-06-13 07:34:49,360 - print_capture - INFO -     bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
2025-06-13 07:34:49,360 - print_capture - INFO -     bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
2025-06-13 07:34:49,360 - print_capture - INFO -     $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
2025-06-13 07:34:49,361 - print_capture - INFO -     $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
2025-06-13 07:34:49,361 - print_capture - INFO -     branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
2025-06-13 07:34:49,361 - print_capture - INFO -     branch $14pred, 28, 16                   ['$14pred']
label 16:
label 16:
2025-06-13 07:34:49,361 - print_capture - INFO - label 16:
label 16:
label 16:
2025-06-13 07:34:49,361 - print_capture - INFO - label 16:
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
2025-06-13 07:34:49,361 - print_capture - INFO -     $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
2025-06-13 07:34:49,361 - print_capture - INFO -     $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
2025-06-13 07:34:49,361 - print_capture - INFO -     $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
2025-06-13 07:34:49,361 - print_capture - INFO -     $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
2025-06-13 07:34:49,361 - print_capture - INFO -     $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
2025-06-13 07:34:49,361 - print_capture - INFO -     $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
2025-06-13 07:34:49,361 - print_capture - INFO -     bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
2025-06-13 07:34:49,361 - print_capture - INFO -     bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
2025-06-13 07:34:49,361 - print_capture - INFO -     $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
2025-06-13 07:34:49,361 - print_capture - INFO -     $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
2025-06-13 07:34:49,361 - print_capture - INFO -     branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
2025-06-13 07:34:49,361 - print_capture - INFO -     branch $26pred, 28, 36                   ['$26pred']
label 28:
label 28:
2025-06-13 07:34:49,361 - print_capture - INFO - label 28:
label 28:
label 28:
2025-06-13 07:34:49,361 - print_capture - INFO - label 28:
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
2025-06-13 07:34:49,361 - print_capture - INFO -     $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
2025-06-13 07:34:49,361 - print_capture - INFO -     $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
2025-06-13 07:34:49,361 - print_capture - INFO -     $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
2025-06-13 07:34:49,361 - print_capture - INFO -     $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
2025-06-13 07:34:49,361 - print_capture - INFO -     $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
2025-06-13 07:34:49,361 - print_capture - INFO -     $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
2025-06-13 07:34:49,361 - print_capture - INFO -     raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
2025-06-13 07:34:49,361 - print_capture - INFO -     raise $32call_function.2                 ['$32call_function.2']
label 36:
label 36:
2025-06-13 07:34:49,361 - print_capture - INFO - label 36:
label 36:
label 36:
2025-06-13 07:34:49,361 - print_capture - INFO - label 36:
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
2025-06-13 07:34:49,361 - print_capture - INFO -     $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
2025-06-13 07:34:49,361 - print_capture - INFO -     $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
2025-06-13 07:34:49,361 - print_capture - INFO -     $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
2025-06-13 07:34:49,361 - print_capture - INFO -     $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
2025-06-13 07:34:49,361 - print_capture - INFO -     $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
2025-06-13 07:34:49,361 - print_capture - INFO -     $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
2025-06-13 07:34:49,361 - print_capture - INFO -     $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
2025-06-13 07:34:49,361 - print_capture - INFO -     $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
2025-06-13 07:34:49,361 - print_capture - INFO -     return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
2025-06-13 07:34:49,361 - print_capture - INFO -     return $46return_value.5                 ['$46return_value.5']
label 0:
label 0:
2025-06-13 07:34:49,374 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:49,374 - print_capture - INFO - label 0:
    ary = arg(0, name=ary)                   ['ary']
    ary = arg(0, name=ary)                   ['ary']
2025-06-13 07:34:49,374 - print_capture - INFO -     ary = arg(0, name=ary)                   ['ary']
    ary = arg(0, name=ary)                   ['ary']
    ary = arg(0, name=ary)                   ['ary']
2025-06-13 07:34:49,374 - print_capture - INFO -     ary = arg(0, name=ary)                   ['ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
2025-06-13 07:34:49,374 - print_capture - INFO -     $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
2025-06-13 07:34:49,374 - print_capture - INFO -     $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
2025-06-13 07:34:49,374 - print_capture - INFO -     $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
2025-06-13 07:34:49,374 - print_capture - INFO -     $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
2025-06-13 07:34:49,374 - print_capture - INFO -     $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
2025-06-13 07:34:49,374 - print_capture - INFO -     $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2270)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
2025-06-13 07:34:49,374 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
2025-06-13 07:34:49,374 - print_capture - INFO -     $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:49,374 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']
2025-06-13 07:34:49,374 - print_capture - INFO -     return $12return_value.5                 ['$12return_value.5']
label 0:
label 0:
2025-06-13 07:34:49,403 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:49,403 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:49,403 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:49,403 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    $const2.0.1 = const(bool, False)         ['$const2.0.1']
    $const2.0.1 = const(bool, False)         ['$const2.0.1']
2025-06-13 07:34:49,403 - print_capture - INFO -     $const2.0.1 = const(bool, False)         ['$const2.0.1']
    $const2.0.1 = const(bool, False)         ['$const2.0.1']
    $const2.0.1 = const(bool, False)         ['$const2.0.1']
2025-06-13 07:34:49,403 - print_capture - INFO -     $const2.0.1 = const(bool, False)         ['$const2.0.1']
    $4return_value.1 = cast(value=$const2.0.1) ['$4return_value.1', '$const2.0.1']
    $4return_value.1 = cast(value=$const2.0.1) ['$4return_value.1', '$const2.0.1']
2025-06-13 07:34:49,403 - print_capture - INFO -     $4return_value.1 = cast(value=$const2.0.1) ['$4return_value.1', '$const2.0.1']
    $4return_value.1 = cast(value=$const2.0.1) ['$4return_value.1', '$const2.0.1']
    $4return_value.1 = cast(value=$const2.0.1) ['$4return_value.1', '$const2.0.1']
2025-06-13 07:34:49,403 - print_capture - INFO -     $4return_value.1 = cast(value=$const2.0.1) ['$4return_value.1', '$const2.0.1']
    return $4return_value.1                  ['$4return_value.1']
    return $4return_value.1                  ['$4return_value.1']
2025-06-13 07:34:49,403 - print_capture - INFO -     return $4return_value.1                  ['$4return_value.1']
    return $4return_value.1                  ['$4return_value.1']
    return $4return_value.1                  ['$4return_value.1']
2025-06-13 07:34:49,403 - print_capture - INFO -     return $4return_value.1                  ['$4return_value.1']
label 0:
label 0:
2025-06-13 07:34:49,414 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:49,414 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:49,414 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:49,414 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    min_val = arg(1, name=min_val)           ['min_val']
2025-06-13 07:34:49,414 - print_capture - INFO -     min_val = arg(1, name=min_val)           ['min_val']
    min_val = arg(1, name=min_val)           ['min_val']
    min_val = arg(1, name=min_val)           ['min_val']
2025-06-13 07:34:49,414 - print_capture - INFO -     min_val = arg(1, name=min_val)           ['min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
2025-06-13 07:34:49,414 - print_capture - INFO -     $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
2025-06-13 07:34:49,414 - print_capture - INFO -     $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
2025-06-13 07:34:49,414 - print_capture - INFO -     $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
2025-06-13 07:34:49,414 - print_capture - INFO -     $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
2025-06-13 07:34:49,414 - print_capture - INFO -     return $8return_value.3                  ['$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']
2025-06-13 07:34:49,414 - print_capture - INFO -     return $8return_value.3                  ['$8return_value.3']
label 0:
label 0:
2025-06-13 07:34:49,437 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:49,437 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:49,437 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:49,437 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
2025-06-13 07:34:49,437 - print_capture - INFO -     indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
    indices = arg(1, name=indices)           ['indices']
2025-06-13 07:34:49,437 - print_capture - INFO -     indices = arg(1, name=indices)           ['indices']
    axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
2025-06-13 07:34:49,437 - print_capture - INFO -     axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
    axis = arg(2, name=axis)                 ['axis']
2025-06-13 07:34:49,437 - print_capture - INFO -     axis = arg(2, name=axis)                 ['axis']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
2025-06-13 07:34:49,437 - print_capture - INFO -     $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
2025-06-13 07:34:49,437 - print_capture - INFO -     $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
2025-06-13 07:34:49,437 - print_capture - INFO -     $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $const8.3.1 = const(int, 1)              ['$const8.3.1']
2025-06-13 07:34:49,437 - print_capture - INFO -     $const8.3.1 = const(int, 1)              ['$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
2025-06-13 07:34:49,437 - print_capture - INFO -     $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
2025-06-13 07:34:49,437 - print_capture - INFO -     $10binary_subtract.4 = $6load_attr.2 - $const8.3.1 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3.1']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
2025-06-13 07:34:49,437 - print_capture - INFO -     $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
2025-06-13 07:34:49,437 - print_capture - INFO -     $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
2025-06-13 07:34:49,437 - print_capture - INFO -     bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
2025-06-13 07:34:49,437 - print_capture - INFO -     bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
2025-06-13 07:34:49,437 - print_capture - INFO -     $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
2025-06-13 07:34:49,437 - print_capture - INFO -     $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
2025-06-13 07:34:49,437 - print_capture - INFO -     branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
    branch $14pred, 28, 16                   ['$14pred']
2025-06-13 07:34:49,437 - print_capture - INFO -     branch $14pred, 28, 16                   ['$14pred']
label 16:
label 16:
2025-06-13 07:34:49,437 - print_capture - INFO - label 16:
label 16:
label 16:
2025-06-13 07:34:49,437 - print_capture - INFO - label 16:
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
2025-06-13 07:34:49,437 - print_capture - INFO -     $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
2025-06-13 07:34:49,437 - print_capture - INFO -     $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
2025-06-13 07:34:49,437 - print_capture - INFO -     $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
2025-06-13 07:34:49,437 - print_capture - INFO -     $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
2025-06-13 07:34:49,437 - print_capture - INFO -     $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
2025-06-13 07:34:49,438 - print_capture - INFO -     $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
2025-06-13 07:34:49,438 - print_capture - INFO -     bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
2025-06-13 07:34:49,438 - print_capture - INFO -     bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
2025-06-13 07:34:49,438 - print_capture - INFO -     $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
2025-06-13 07:34:49,438 - print_capture - INFO -     $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4760),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
2025-06-13 07:34:49,438 - print_capture - INFO -     branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
    branch $26pred, 28, 36                   ['$26pred']
2025-06-13 07:34:49,438 - print_capture - INFO -     branch $26pred, 28, 36                   ['$26pred']
label 28:
label 28:
2025-06-13 07:34:49,438 - print_capture - INFO - label 28:
label 28:
label 28:
2025-06-13 07:34:49,438 - print_capture - INFO - label 28:
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
2025-06-13 07:34:49,438 - print_capture - INFO -     $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
2025-06-13 07:34:49,438 - print_capture - INFO -     $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
2025-06-13 07:34:49,438 - print_capture - INFO -     $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
2025-06-13 07:34:49,438 - print_capture - INFO -     $const30.1.2 = const(str, Index out of bounds) ['$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
2025-06-13 07:34:49,438 - print_capture - INFO -     $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
2025-06-13 07:34:49,438 - print_capture - INFO -     $32call_function.2 = call $28load_global.0($const30.1.2, func=$28load_global.0, args=[Var($const30.1.2, arrayobj.py:4761)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1.2']
    raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
2025-06-13 07:34:49,438 - print_capture - INFO -     raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
    raise $32call_function.2                 ['$32call_function.2']
2025-06-13 07:34:49,438 - print_capture - INFO -     raise $32call_function.2                 ['$32call_function.2']
label 36:
label 36:
2025-06-13 07:34:49,438 - print_capture - INFO - label 36:
label 36:
label 36:
2025-06-13 07:34:49,438 - print_capture - INFO - label 36:
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
2025-06-13 07:34:49,438 - print_capture - INFO -     $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
2025-06-13 07:34:49,438 - print_capture - INFO -     $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
2025-06-13 07:34:49,438 - print_capture - INFO -     $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
2025-06-13 07:34:49,438 - print_capture - INFO -     $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
2025-06-13 07:34:49,438 - print_capture - INFO -     $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
2025-06-13 07:34:49,438 - print_capture - INFO -     $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
2025-06-13 07:34:49,438 - print_capture - INFO -     $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
2025-06-13 07:34:49,438 - print_capture - INFO -     $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
2025-06-13 07:34:49,438 - print_capture - INFO -     return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']
2025-06-13 07:34:49,438 - print_capture - INFO -     return $46return_value.5                 ['$46return_value.5']
label 0:
label 0:
2025-06-13 07:34:49,495 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:49,495 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:49,495 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:49,495 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    c = freevar(acc_init: 0.0)               ['c']
2025-06-13 07:34:49,496 - print_capture - INFO -     c = freevar(acc_init: 0.0)               ['c']
    c = freevar(acc_init: 0.0)               ['c']
    c = freevar(acc_init: 0.0)               ['c']
2025-06-13 07:34:49,496 - print_capture - INFO -     c = freevar(acc_init: 0.0)               ['c']
    $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
2025-06-13 07:34:49,496 - print_capture - INFO -     $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
2025-06-13 07:34:49,496 - print_capture - INFO -     $6load_global.1 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
2025-06-13 07:34:49,496 - print_capture - INFO -     $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
2025-06-13 07:34:49,496 - print_capture - INFO -     $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
2025-06-13 07:34:49,496 - print_capture - INFO -     $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
2025-06-13 07:34:49,496 - print_capture - INFO -     $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
2025-06-13 07:34:49,496 - print_capture - INFO -     $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
2025-06-13 07:34:49,496 - print_capture - INFO -     $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
2025-06-13 07:34:49,496 - print_capture - INFO -     $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
2025-06-13 07:34:49,496 - print_capture - INFO -     $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    jump 16                                  []
    jump 16                                  []
2025-06-13 07:34:49,496 - print_capture - INFO -     jump 16                                  []
    jump 16                                  []
    jump 16                                  []
2025-06-13 07:34:49,496 - print_capture - INFO -     jump 16                                  []
label 16:
label 16:
2025-06-13 07:34:49,496 - print_capture - INFO - label 16:
label 16:
label 16:
2025-06-13 07:34:49,496 - print_capture - INFO - label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
2025-06-13 07:34:49,496 - print_capture - INFO -     $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
2025-06-13 07:34:49,496 - print_capture - INFO -     $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
2025-06-13 07:34:49,496 - print_capture - INFO -     $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
2025-06-13 07:34:49,496 - print_capture - INFO -     $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
2025-06-13 07:34:49,496 - print_capture - INFO -     $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
2025-06-13 07:34:49,496 - print_capture - INFO -     $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
2025-06-13 07:34:49,496 - print_capture - INFO -     $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
2025-06-13 07:34:49,496 - print_capture - INFO -     $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
2025-06-13 07:34:49,496 - print_capture - INFO -     branch $16for_iter.3, 18, 34             ['$16for_iter.3']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
2025-06-13 07:34:49,496 - print_capture - INFO -     branch $16for_iter.3, 18, 34             ['$16for_iter.3']
label 18:
label 18:
2025-06-13 07:34:49,496 - print_capture - INFO - label 18:
label 18:
label 18:
2025-06-13 07:34:49,496 - print_capture - INFO - label 18:
    v = $phi18.1                             ['$phi18.1', 'v']
    v = $phi18.1                             ['$phi18.1', 'v']
2025-06-13 07:34:49,496 - print_capture - INFO -     v = $phi18.1                             ['$phi18.1', 'v']
    v = $phi18.1                             ['$phi18.1', 'v']
    v = $phi18.1                             ['$phi18.1', 'v']
2025-06-13 07:34:49,496 - print_capture - INFO -     v = $phi18.1                             ['$phi18.1', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
2025-06-13 07:34:49,496 - print_capture - INFO -     $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
2025-06-13 07:34:49,496 - print_capture - INFO -     $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
2025-06-13 07:34:49,496 - print_capture - INFO -     $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
2025-06-13 07:34:49,496 - print_capture - INFO -     $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
2025-06-13 07:34:49,496 - print_capture - INFO -     $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
2025-06-13 07:34:49,496 - print_capture - INFO -     $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
2025-06-13 07:34:49,496 - print_capture - INFO -     c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
2025-06-13 07:34:49,496 - print_capture - INFO -     c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    jump 16                                  []
    jump 16                                  []
2025-06-13 07:34:49,496 - print_capture - INFO -     jump 16                                  []
    jump 16                                  []
    jump 16                                  []
2025-06-13 07:34:49,496 - print_capture - INFO -     jump 16                                  []
label 34:
label 34:
2025-06-13 07:34:49,496 - print_capture - INFO - label 34:
label 34:
label 34:
2025-06-13 07:34:49,496 - print_capture - INFO - label 34:
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
2025-06-13 07:34:49,497 - print_capture - INFO -     $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
2025-06-13 07:34:49,497 - print_capture - INFO -     $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
2025-06-13 07:34:49,497 - print_capture - INFO -     $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
2025-06-13 07:34:49,497 - print_capture - INFO -     $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
2025-06-13 07:34:49,497 - print_capture - INFO -     $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
2025-06-13 07:34:49,497 - print_capture - INFO -     $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']
2025-06-13 07:34:49,497 - print_capture - INFO -     return $42return_value.4                 ['$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']
2025-06-13 07:34:49,497 - print_capture - INFO -     return $42return_value.4                 ['$42return_value.4']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:49,620 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:49,620 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# --- LINE 1193 --- 
# --- LINE 1193 --- 
2025-06-13 07:34:49,620 - print_capture - INFO - # --- LINE 1193 --- 
# --- LINE 1193 --- 
# --- LINE 1193 --- 
2025-06-13 07:34:49,620 - print_capture - INFO - # --- LINE 1193 --- 
# label 0
# label 0
2025-06-13 07:34:49,620 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:49,620 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: array(int64, 1d, A)
#   x = arg(0, name=x)  :: array(int64, 1d, A)
2025-06-13 07:34:49,620 - print_capture - INFO - #   x = arg(0, name=x)  :: array(int64, 1d, A)
#   x = arg(0, name=x)  :: array(int64, 1d, A)
#   x = arg(0, name=x)  :: array(int64, 1d, A)
2025-06-13 07:34:49,620 - print_capture - INFO - #   x = arg(0, name=x)  :: array(int64, 1d, A)
#   pre_max = arg(1, name=pre_max)  :: uint32
#   pre_max = arg(1, name=pre_max)  :: uint32
2025-06-13 07:34:49,620 - print_capture - INFO - #   pre_max = arg(1, name=pre_max)  :: uint32
#   pre_max = arg(1, name=pre_max)  :: uint32
#   pre_max = arg(1, name=pre_max)  :: uint32
2025-06-13 07:34:49,620 - print_capture - INFO - #   pre_max = arg(1, name=pre_max)  :: uint32
#   post_max = arg(2, name=post_max)  :: uint32
#   post_max = arg(2, name=post_max)  :: uint32
2025-06-13 07:34:49,620 - print_capture - INFO - #   post_max = arg(2, name=post_max)  :: uint32
#   post_max = arg(2, name=post_max)  :: uint32
#   post_max = arg(2, name=post_max)  :: uint32
2025-06-13 07:34:49,620 - print_capture - INFO - #   post_max = arg(2, name=post_max)  :: uint32
#   pre_avg = arg(3, name=pre_avg)  :: uint32
#   pre_avg = arg(3, name=pre_avg)  :: uint32
2025-06-13 07:34:49,620 - print_capture - INFO - #   pre_avg = arg(3, name=pre_avg)  :: uint32
#   pre_avg = arg(3, name=pre_avg)  :: uint32
#   pre_avg = arg(3, name=pre_avg)  :: uint32
2025-06-13 07:34:49,620 - print_capture - INFO - #   pre_avg = arg(3, name=pre_avg)  :: uint32
#   post_avg = arg(4, name=post_avg)  :: uint32
#   post_avg = arg(4, name=post_avg)  :: uint32
2025-06-13 07:34:49,621 - print_capture - INFO - #   post_avg = arg(4, name=post_avg)  :: uint32
#   post_avg = arg(4, name=post_avg)  :: uint32
#   post_avg = arg(4, name=post_avg)  :: uint32
2025-06-13 07:34:49,621 - print_capture - INFO - #   post_avg = arg(4, name=post_avg)  :: uint32
#   delta = arg(5, name=delta)  :: float32
#   delta = arg(5, name=delta)  :: float32
2025-06-13 07:34:49,621 - print_capture - INFO - #   delta = arg(5, name=delta)  :: float32
#   delta = arg(5, name=delta)  :: float32
#   delta = arg(5, name=delta)  :: float32
2025-06-13 07:34:49,621 - print_capture - INFO - #   delta = arg(5, name=delta)  :: float32
#   wait = arg(6, name=wait)  :: uint32
#   wait = arg(6, name=wait)  :: uint32
2025-06-13 07:34:49,621 - print_capture - INFO - #   wait = arg(6, name=wait)  :: uint32
#   wait = arg(6, name=wait)  :: uint32
#   wait = arg(6, name=wait)  :: uint32
2025-06-13 07:34:49,621 - print_capture - INFO - #   wait = arg(6, name=wait)  :: uint32
#   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
#   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
2025-06-13 07:34:49,621 - print_capture - INFO - #   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
#   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
#   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)
2025-06-13 07:34:49,621 - print_capture - INFO - #   peaks = arg(7, name=peaks)  :: array(bool, 1d, A)


2025-06-13 07:34:49,621 - print_capture - INFO - 


2025-06-13 07:34:49,621 - print_capture - INFO - 
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:49,621 - print_capture - INFO - @numba.guvectorize(
@numba.guvectorize(
@numba.guvectorize(
2025-06-13 07:34:49,621 - print_capture - INFO - @numba.guvectorize(


2025-06-13 07:34:49,621 - print_capture - INFO - 


2025-06-13 07:34:49,621 - print_capture - INFO - 
    # --- LINE 1194 --- 
    # --- LINE 1194 --- 
2025-06-13 07:34:49,621 - print_capture - INFO -     # --- LINE 1194 --- 
    # --- LINE 1194 --- 
    # --- LINE 1194 --- 
2025-06-13 07:34:49,621 - print_capture - INFO -     # --- LINE 1194 --- 


2025-06-13 07:34:49,621 - print_capture - INFO - 


2025-06-13 07:34:49,621 - print_capture - INFO - 
    [
    [
2025-06-13 07:34:49,621 - print_capture - INFO -     [
    [
    [
2025-06-13 07:34:49,621 - print_capture - INFO -     [


2025-06-13 07:34:49,621 - print_capture - INFO - 


2025-06-13 07:34:49,621 - print_capture - INFO - 
        # --- LINE 1195 --- 
        # --- LINE 1195 --- 
2025-06-13 07:34:49,621 - print_capture - INFO -         # --- LINE 1195 --- 
        # --- LINE 1195 --- 
        # --- LINE 1195 --- 
2025-06-13 07:34:49,621 - print_capture - INFO -         # --- LINE 1195 --- 


2025-06-13 07:34:49,621 - print_capture - INFO - 


2025-06-13 07:34:49,621 - print_capture - INFO - 
        "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:49,621 - print_capture - INFO -         "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:49,621 - print_capture - INFO -         "void(float32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",


2025-06-13 07:34:49,621 - print_capture - INFO - 


2025-06-13 07:34:49,621 - print_capture - INFO - 
        # --- LINE 1196 --- 
        # --- LINE 1196 --- 
2025-06-13 07:34:49,621 - print_capture - INFO -         # --- LINE 1196 --- 
        # --- LINE 1196 --- 
        # --- LINE 1196 --- 
2025-06-13 07:34:49,621 - print_capture - INFO -         # --- LINE 1196 --- 


2025-06-13 07:34:49,621 - print_capture - INFO - 


2025-06-13 07:34:49,621 - print_capture - INFO - 
        "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:49,621 - print_capture - INFO -         "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:49,621 - print_capture - INFO -         "void(float64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",


2025-06-13 07:34:49,621 - print_capture - INFO - 


2025-06-13 07:34:49,621 - print_capture - INFO - 
        # --- LINE 1197 --- 
        # --- LINE 1197 --- 
2025-06-13 07:34:49,621 - print_capture - INFO -         # --- LINE 1197 --- 
        # --- LINE 1197 --- 
        # --- LINE 1197 --- 
2025-06-13 07:34:49,621 - print_capture - INFO -         # --- LINE 1197 --- 


2025-06-13 07:34:49,621 - print_capture - INFO - 


2025-06-13 07:34:49,621 - print_capture - INFO - 
        "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:49,621 - print_capture - INFO -         "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:49,621 - print_capture - INFO -         "void(int32[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",


2025-06-13 07:34:49,621 - print_capture - INFO - 


2025-06-13 07:34:49,621 - print_capture - INFO - 
        # --- LINE 1198 --- 
        # --- LINE 1198 --- 
2025-06-13 07:34:49,621 - print_capture - INFO -         # --- LINE 1198 --- 
        # --- LINE 1198 --- 
        # --- LINE 1198 --- 
2025-06-13 07:34:49,622 - print_capture - INFO -         # --- LINE 1198 --- 


2025-06-13 07:34:49,622 - print_capture - INFO - 


2025-06-13 07:34:49,622 - print_capture - INFO - 
        "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:49,622 - print_capture - INFO -         "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
        "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",
2025-06-13 07:34:49,622 - print_capture - INFO -         "void(int64[:], uint32, uint32, uint32, uint32, float32, uint32, bool_[:])",


2025-06-13 07:34:49,622 - print_capture - INFO - 


2025-06-13 07:34:49,622 - print_capture - INFO - 
    # --- LINE 1199 --- 
    # --- LINE 1199 --- 
2025-06-13 07:34:49,622 - print_capture - INFO -     # --- LINE 1199 --- 
    # --- LINE 1199 --- 
    # --- LINE 1199 --- 
2025-06-13 07:34:49,622 - print_capture - INFO -     # --- LINE 1199 --- 


2025-06-13 07:34:49,622 - print_capture - INFO - 


2025-06-13 07:34:49,622 - print_capture - INFO - 
    ],
    ],
2025-06-13 07:34:49,622 - print_capture - INFO -     ],
    ],
    ],
2025-06-13 07:34:49,622 - print_capture - INFO -     ],


2025-06-13 07:34:49,622 - print_capture - INFO - 


2025-06-13 07:34:49,622 - print_capture - INFO - 
    # --- LINE 1200 --- 
    # --- LINE 1200 --- 
2025-06-13 07:34:49,622 - print_capture - INFO -     # --- LINE 1200 --- 
    # --- LINE 1200 --- 
    # --- LINE 1200 --- 
2025-06-13 07:34:49,622 - print_capture - INFO -     # --- LINE 1200 --- 


2025-06-13 07:34:49,622 - print_capture - INFO - 


2025-06-13 07:34:49,622 - print_capture - INFO - 
    "(n),(),(),(),(),(),()->(n)",
    "(n),(),(),(),(),(),()->(n)",
2025-06-13 07:34:49,622 - print_capture - INFO -     "(n),(),(),(),(),(),()->(n)",
    "(n),(),(),(),(),(),()->(n)",
    "(n),(),(),(),(),(),()->(n)",
2025-06-13 07:34:49,622 - print_capture - INFO -     "(n),(),(),(),(),(),()->(n)",


2025-06-13 07:34:49,622 - print_capture - INFO - 


2025-06-13 07:34:49,622 - print_capture - INFO - 
    # --- LINE 1201 --- 
    # --- LINE 1201 --- 
2025-06-13 07:34:49,622 - print_capture - INFO -     # --- LINE 1201 --- 
    # --- LINE 1201 --- 
    # --- LINE 1201 --- 
2025-06-13 07:34:49,622 - print_capture - INFO -     # --- LINE 1201 --- 


2025-06-13 07:34:49,622 - print_capture - INFO - 


2025-06-13 07:34:49,622 - print_capture - INFO - 
    nopython=True, cache=True)
    nopython=True, cache=True)
2025-06-13 07:34:49,622 - print_capture - INFO -     nopython=True, cache=True)
    nopython=True, cache=True)
    nopython=True, cache=True)
2025-06-13 07:34:49,622 - print_capture - INFO -     nopython=True, cache=True)


2025-06-13 07:34:49,622 - print_capture - INFO - 


2025-06-13 07:34:49,622 - print_capture - INFO - 
# --- LINE 1202 --- 
# --- LINE 1202 --- 
2025-06-13 07:34:49,622 - print_capture - INFO - # --- LINE 1202 --- 
# --- LINE 1202 --- 
# --- LINE 1202 --- 
2025-06-13 07:34:49,622 - print_capture - INFO - # --- LINE 1202 --- 


2025-06-13 07:34:49,622 - print_capture - INFO - 


2025-06-13 07:34:49,622 - print_capture - INFO - 
def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
2025-06-13 07:34:49,622 - print_capture - INFO - def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):
2025-06-13 07:34:49,622 - print_capture - INFO - def __peak_pick(x, pre_max, post_max, pre_avg, post_avg, delta, wait, peaks):


2025-06-13 07:34:49,622 - print_capture - INFO - 


2025-06-13 07:34:49,622 - print_capture - INFO - 
    # --- LINE 1203 --- 
    # --- LINE 1203 --- 
2025-06-13 07:34:49,622 - print_capture - INFO -     # --- LINE 1203 --- 
    # --- LINE 1203 --- 
    # --- LINE 1203 --- 
2025-06-13 07:34:49,622 - print_capture - INFO -     # --- LINE 1203 --- 


2025-06-13 07:34:49,622 - print_capture - INFO - 


2025-06-13 07:34:49,622 - print_capture - INFO - 
    """Vectorized wrapper for the peak-picker"""
    """Vectorized wrapper for the peak-picker"""
2025-06-13 07:34:49,622 - print_capture - INFO -     """Vectorized wrapper for the peak-picker"""
    """Vectorized wrapper for the peak-picker"""
    """Vectorized wrapper for the peak-picker"""
2025-06-13 07:34:49,622 - print_capture - INFO -     """Vectorized wrapper for the peak-picker"""


2025-06-13 07:34:49,622 - print_capture - INFO - 


2025-06-13 07:34:49,622 - print_capture - INFO - 
    # --- LINE 1204 --- 
    # --- LINE 1204 --- 
2025-06-13 07:34:49,622 - print_capture - INFO -     # --- LINE 1204 --- 
    # --- LINE 1204 --- 
    # --- LINE 1204 --- 
2025-06-13 07:34:49,622 - print_capture - INFO -     # --- LINE 1204 --- 


2025-06-13 07:34:49,623 - print_capture - INFO - 


2025-06-13 07:34:49,623 - print_capture - INFO - 
    # Special case the first frame
    # Special case the first frame
2025-06-13 07:34:49,623 - print_capture - INFO -     # Special case the first frame
    # Special case the first frame
    # Special case the first frame
2025-06-13 07:34:49,623 - print_capture - INFO -     # Special case the first frame


2025-06-13 07:34:49,623 - print_capture - INFO - 


2025-06-13 07:34:49,623 - print_capture - INFO - 
    # --- LINE 1205 --- 
    # --- LINE 1205 --- 
2025-06-13 07:34:49,623 - print_capture - INFO -     # --- LINE 1205 --- 
    # --- LINE 1205 --- 
    # --- LINE 1205 --- 
2025-06-13 07:34:49,623 - print_capture - INFO -     # --- LINE 1205 --- 
    #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
    #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
    #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
    #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $const4.1.1 = const(int, 0)  :: Literal[int](0)
    #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: int64
    #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: int64
    #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: int64
    #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)  :: int64
    #   del $const4.1.1
    #   del $const4.1.1
2025-06-13 07:34:49,623 - print_capture - INFO -     #   del $const4.1.1
    #   del $const4.1.1
    #   del $const4.1.1
2025-06-13 07:34:49,623 - print_capture - INFO -     #   del $const4.1.1
    #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $8load_global.3 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
    #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
    #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
    #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $10load_method.4 = getattr(value=$8load_global.3, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
    #   del $8load_global.3
    #   del $8load_global.3
2025-06-13 07:34:49,623 - print_capture - INFO -     #   del $8load_global.3
    #   del $8load_global.3
    #   del $8load_global.3
2025-06-13 07:34:49,623 - print_capture - INFO -     #   del $8load_global.3
    #   $const14.6.2 = const(NoneType, None)  :: none
    #   $const14.6.2 = const(NoneType, None)  :: none
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $const14.6.2 = const(NoneType, None)  :: none
    #   $const14.6.2 = const(NoneType, None)  :: none
    #   $const14.6.2 = const(NoneType, None)  :: none
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $const14.6.2 = const(NoneType, None)  :: none
    #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $16load_global.7 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $22load_attr.10 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
    #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
    #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
    #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $const24.11.1 = const(int, 0)  :: Literal[int](0)
    #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
    #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
    #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
    #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11.1, fn=<built-in function getitem>)  :: int64
    #   del $const24.11.1
    #   del $const24.11.1
2025-06-13 07:34:49,623 - print_capture - INFO -     #   del $const24.11.1
    #   del $const24.11.1
    #   del $const24.11.1
2025-06-13 07:34:49,623 - print_capture - INFO -     #   del $const24.11.1
    #   del $22load_attr.10
    #   del $22load_attr.10
2025-06-13 07:34:49,623 - print_capture - INFO -     #   del $22load_attr.10
    #   del $22load_attr.10
    #   del $22load_attr.10
2025-06-13 07:34:49,623 - print_capture - INFO -     #   del $22load_attr.10
    #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1193), Var($26binary_subscr.12, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   del $26binary_subscr.12
    #   del $26binary_subscr.12
2025-06-13 07:34:49,623 - print_capture - INFO -     #   del $26binary_subscr.12
    #   del $26binary_subscr.12
    #   del $26binary_subscr.12
2025-06-13 07:34:49,623 - print_capture - INFO -     #   del $26binary_subscr.12
    #   del $16load_global.7
    #   del $16load_global.7
2025-06-13 07:34:49,623 - print_capture - INFO -     #   del $16load_global.7
    #   del $16load_global.7
    #   del $16load_global.7
2025-06-13 07:34:49,623 - print_capture - INFO -     #   del $16load_global.7
    #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $30build_slice.14 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
2025-06-13 07:34:49,623 - print_capture - INFO -     #   $30build_slice.15 = call $30build_slice.14($const14.6.2, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6.2, utils.py:1205), Var($28call_function.13, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   del $const14.6.2
    #   del $const14.6.2
2025-06-13 07:34:49,623 - print_capture - INFO -     #   del $const14.6.2
    #   del $const14.6.2
    #   del $const14.6.2
2025-06-13 07:34:49,623 - print_capture - INFO -     #   del $const14.6.2
    #   del $30build_slice.14
    #   del $30build_slice.14
2025-06-13 07:34:49,623 - print_capture - INFO -     #   del $30build_slice.14
    #   del $30build_slice.14
    #   del $30build_slice.14
2025-06-13 07:34:49,623 - print_capture - INFO -     #   del $30build_slice.14
    #   del $28call_function.13
    #   del $28call_function.13
2025-06-13 07:34:49,623 - print_capture - INFO -     #   del $28call_function.13
    #   del $28call_function.13
    #   del $28call_function.13
2025-06-13 07:34:49,624 - print_capture - INFO -     #   del $28call_function.13
    #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(int64, 1d, A)
    #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(int64, 1d, A)
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(int64, 1d, A)
    #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(int64, 1d, A)
    #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(int64, 1d, A)
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)  :: array(int64, 1d, A)
    #   del $30build_slice.15
    #   del $30build_slice.15
2025-06-13 07:34:49,624 - print_capture - INFO -     #   del $30build_slice.15
    #   del $30build_slice.15
    #   del $30build_slice.15
2025-06-13 07:34:49,624 - print_capture - INFO -     #   del $30build_slice.15
    #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> int64
    #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> int64
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> int64
    #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> int64
    #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> int64
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> int64
    #   del $32binary_subscr.16
    #   del $32binary_subscr.16
2025-06-13 07:34:49,624 - print_capture - INFO -     #   del $32binary_subscr.16
    #   del $32binary_subscr.16
    #   del $32binary_subscr.16
2025-06-13 07:34:49,624 - print_capture - INFO -     #   del $32binary_subscr.16
    #   del $10load_method.4
    #   del $10load_method.4
2025-06-13 07:34:49,624 - print_capture - INFO -     #   del $10load_method.4
    #   del $10load_method.4
    #   del $10load_method.4
2025-06-13 07:34:49,624 - print_capture - INFO -     #   del $10load_method.4
    #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
    #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
    #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
    #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17  :: bool
    #   del $6binary_subscr.2
    #   del $6binary_subscr.2
2025-06-13 07:34:49,624 - print_capture - INFO -     #   del $6binary_subscr.2
    #   del $6binary_subscr.2
    #   del $6binary_subscr.2
2025-06-13 07:34:49,624 - print_capture - INFO -     #   del $6binary_subscr.2
    #   del $34call_method.17
    #   del $34call_method.17
2025-06-13 07:34:49,624 - print_capture - INFO -     #   del $34call_method.17
    #   del $34call_method.17
    #   del $34call_method.17
2025-06-13 07:34:49,624 - print_capture - INFO -     #   del $34call_method.17
    #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
    #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
    #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
    #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $const40.20.1 = const(int, 0)  :: Literal[int](0)
    #   peaks[0] = $36compare_op.18
    #   peaks[0] = $36compare_op.18
2025-06-13 07:34:49,624 - print_capture - INFO -     #   peaks[0] = $36compare_op.18
    #   peaks[0] = $36compare_op.18
    #   peaks[0] = $36compare_op.18
2025-06-13 07:34:49,624 - print_capture - INFO -     #   peaks[0] = $36compare_op.18
    #   del $const40.20.1
    #   del $const40.20.1
2025-06-13 07:34:49,624 - print_capture - INFO -     #   del $const40.20.1
    #   del $const40.20.1
    #   del $const40.20.1
2025-06-13 07:34:49,624 - print_capture - INFO -     #   del $const40.20.1
    #   del $36compare_op.18
    #   del $36compare_op.18
2025-06-13 07:34:49,624 - print_capture - INFO -     #   del $36compare_op.18
    #   del $36compare_op.18
    #   del $36compare_op.18
2025-06-13 07:34:49,624 - print_capture - INFO -     #   del $36compare_op.18


2025-06-13 07:34:49,624 - print_capture - INFO - 


2025-06-13 07:34:49,624 - print_capture - INFO - 
    peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
    peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
2025-06-13 07:34:49,624 - print_capture - INFO -     peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
    peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
    peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))
2025-06-13 07:34:49,624 - print_capture - INFO -     peaks[0] = (x[0] >= np.max(x[:min(post_max, x.shape[0])]))


2025-06-13 07:34:49,624 - print_capture - INFO - 


2025-06-13 07:34:49,624 - print_capture - INFO - 
    # --- LINE 1206 --- 
    # --- LINE 1206 --- 
2025-06-13 07:34:49,624 - print_capture - INFO -     # --- LINE 1206 --- 
    # --- LINE 1206 --- 
    # --- LINE 1206 --- 
2025-06-13 07:34:49,624 - print_capture - INFO -     # --- LINE 1206 --- 
    #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
    #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
    #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
    #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $const46.22.1 = const(int, 0)  :: Literal[int](0)
    #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
    #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
    #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
    #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22.1, fn=<built-in function getitem>)  :: bool
    #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
    #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
    #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
    #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $const54.27.1 = const(int, 0)  :: Literal[int](0)
    #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: int64
    #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: int64
    #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: int64
    #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27.1, fn=<built-in function getitem>)  :: int64
    #   del $const54.27.1
    #   del $const54.27.1
2025-06-13 07:34:49,624 - print_capture - INFO -     #   del $const54.27.1
    #   del $const54.27.1
    #   del $const54.27.1
2025-06-13 07:34:49,624 - print_capture - INFO -     #   del $const54.27.1
    #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $58load_global.29 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
    #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
    #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
    #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
2025-06-13 07:34:49,624 - print_capture - INFO -     #   $60load_method.30 = getattr(value=$58load_global.29, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
    #   del $58load_global.29
    #   del $58load_global.29
2025-06-13 07:34:49,624 - print_capture - INFO -     #   del $58load_global.29
    #   del $58load_global.29
    #   del $58load_global.29
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $58load_global.29
    #   $const64.32.2 = const(NoneType, None)  :: none
    #   $const64.32.2 = const(NoneType, None)  :: none
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $const64.32.2 = const(NoneType, None)  :: none
    #   $const64.32.2 = const(NoneType, None)  :: none
    #   $const64.32.2 = const(NoneType, None)  :: none
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $const64.32.2 = const(NoneType, None)  :: none
    #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $66load_global.33 = global(min: <built-in function min>)  :: Function(<built-in function min>)
    #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $72load_attr.36 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
    #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
    #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
    #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $const74.37.1 = const(int, 0)  :: Literal[int](0)
    #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
    #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
    #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
    #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37.1, fn=<built-in function getitem>)  :: int64
    #   del $const74.37.1
    #   del $const74.37.1
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $const74.37.1
    #   del $const74.37.1
    #   del $const74.37.1
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $const74.37.1
    #   del $72load_attr.36
    #   del $72load_attr.36
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $72load_attr.36
    #   del $72load_attr.36
    #   del $72load_attr.36
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $72load_attr.36
    #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1193), Var($76binary_subscr.38, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (uint32, int64) -> int64
    #   del $76binary_subscr.38
    #   del $76binary_subscr.38
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $76binary_subscr.38
    #   del $76binary_subscr.38
    #   del $76binary_subscr.38
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $76binary_subscr.38
    #   del $66load_global.33
    #   del $66load_global.33
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $66load_global.33
    #   del $66load_global.33
    #   del $66load_global.33
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $66load_global.33
    #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $80build_slice.40 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
    #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $80build_slice.41 = call $80build_slice.40($const64.32.2, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32.2, utils.py:1206), Var($78call_function.39, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)  :: (none, int64) -> slice<a:b>
    #   del $const64.32.2
    #   del $const64.32.2
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $const64.32.2
    #   del $const64.32.2
    #   del $const64.32.2
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $const64.32.2
    #   del $80build_slice.40
    #   del $80build_slice.40
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $80build_slice.40
    #   del $80build_slice.40
    #   del $80build_slice.40
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $80build_slice.40
    #   del $78call_function.39
    #   del $78call_function.39
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $78call_function.39
    #   del $78call_function.39
    #   del $78call_function.39
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $78call_function.39
    #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(int64, 1d, A)
    #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(int64, 1d, A)
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(int64, 1d, A)
    #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(int64, 1d, A)
    #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(int64, 1d, A)
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)  :: array(int64, 1d, A)
    #   del $80build_slice.41
    #   del $80build_slice.41
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $80build_slice.41
    #   del $80build_slice.41
    #   del $80build_slice.41
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $80build_slice.41
    #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> float64
    #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> float64
    #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> float64
    #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> float64
    #   del $82binary_subscr.42
    #   del $82binary_subscr.42
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $82binary_subscr.42
    #   del $82binary_subscr.42
    #   del $82binary_subscr.42
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $82binary_subscr.42
    #   del $60load_method.30
    #   del $60load_method.30
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $60load_method.30
    #   del $60load_method.30
    #   del $60load_method.30
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $60load_method.30
    #   $88binary_add.45 = $84call_method.43 + delta  :: float64
    #   $88binary_add.45 = $84call_method.43 + delta  :: float64
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $88binary_add.45 = $84call_method.43 + delta  :: float64
    #   $88binary_add.45 = $84call_method.43 + delta  :: float64
    #   $88binary_add.45 = $84call_method.43 + delta  :: float64
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $88binary_add.45 = $84call_method.43 + delta  :: float64
    #   del $84call_method.43
    #   del $84call_method.43
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $84call_method.43
    #   del $84call_method.43
    #   del $84call_method.43
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $84call_method.43
    #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
    #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
    #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
    #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
2025-06-13 07:34:49,625 - print_capture - INFO -     #   $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45  :: bool
    #   del $88binary_add.45
    #   del $88binary_add.45
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $88binary_add.45
    #   del $88binary_add.45
    #   del $88binary_add.45
2025-06-13 07:34:49,625 - print_capture - INFO -     #   del $88binary_add.45
    #   del $56binary_subscr.28
    #   del $56binary_subscr.28
2025-06-13 07:34:49,626 - print_capture - INFO -     #   del $56binary_subscr.28
    #   del $56binary_subscr.28
    #   del $56binary_subscr.28
2025-06-13 07:34:49,626 - print_capture - INFO -     #   del $56binary_subscr.28
    #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
    #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
2025-06-13 07:34:49,626 - print_capture - INFO -     #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
    #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
    #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
2025-06-13 07:34:49,626 - print_capture - INFO -     #   $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)  :: bool
    #   del $90compare_op.46
    #   del $90compare_op.46
2025-06-13 07:34:49,626 - print_capture - INFO -     #   del $90compare_op.46
    #   del $90compare_op.46
    #   del $90compare_op.46
2025-06-13 07:34:49,626 - print_capture - INFO -     #   del $90compare_op.46
    #   del $50binary_subscr.25
    #   del $50binary_subscr.25
2025-06-13 07:34:49,626 - print_capture - INFO -     #   del $50binary_subscr.25
    #   del $50binary_subscr.25
    #   del $50binary_subscr.25
2025-06-13 07:34:49,626 - print_capture - INFO -     #   del $50binary_subscr.25
    #   peaks[0] = $92inplace_and.47
    #   peaks[0] = $92inplace_and.47
2025-06-13 07:34:49,626 - print_capture - INFO -     #   peaks[0] = $92inplace_and.47
    #   peaks[0] = $92inplace_and.47
    #   peaks[0] = $92inplace_and.47
2025-06-13 07:34:49,626 - print_capture - INFO -     #   peaks[0] = $92inplace_and.47
    #   del $const46.22.1
    #   del $const46.22.1
2025-06-13 07:34:49,626 - print_capture - INFO -     #   del $const46.22.1
    #   del $const46.22.1
    #   del $const46.22.1
2025-06-13 07:34:49,626 - print_capture - INFO -     #   del $const46.22.1
    #   del $92inplace_and.47
    #   del $92inplace_and.47
2025-06-13 07:34:49,626 - print_capture - INFO -     #   del $92inplace_and.47
    #   del $92inplace_and.47
    #   del $92inplace_and.47
2025-06-13 07:34:49,626 - print_capture - INFO -     #   del $92inplace_and.47


2025-06-13 07:34:49,626 - print_capture - INFO - 


2025-06-13 07:34:49,626 - print_capture - INFO - 
    peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
    peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
2025-06-13 07:34:49,626 - print_capture - INFO -     peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
    peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
    peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)
2025-06-13 07:34:49,626 - print_capture - INFO -     peaks[0] &= (x[0] >= np.mean(x[:min(post_avg, x.shape[0])]) + delta)


2025-06-13 07:34:49,626 - print_capture - INFO - 


2025-06-13 07:34:49,626 - print_capture - INFO - 
# --- LINE 1207 --- 
# --- LINE 1207 --- 
2025-06-13 07:34:49,626 - print_capture - INFO - # --- LINE 1207 --- 
# --- LINE 1207 --- 
# --- LINE 1207 --- 
2025-06-13 07:34:49,626 - print_capture - INFO - # --- LINE 1207 --- 


2025-06-13 07:34:49,626 - print_capture - INFO - 


2025-06-13 07:34:49,626 - print_capture - INFO - 


2025-06-13 07:34:49,626 - print_capture - INFO - 


2025-06-13 07:34:49,626 - print_capture - INFO - 


2025-06-13 07:34:49,626 - print_capture - INFO - 


2025-06-13 07:34:49,626 - print_capture - INFO - 
    # --- LINE 1208 --- 
    # --- LINE 1208 --- 
2025-06-13 07:34:49,626 - print_capture - INFO -     # --- LINE 1208 --- 
    # --- LINE 1208 --- 
    # --- LINE 1208 --- 
2025-06-13 07:34:49,626 - print_capture - INFO -     # --- LINE 1208 --- 
    #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
    #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,626 - print_capture - INFO -     #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
    #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
    #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,626 - print_capture - INFO -     #   $const100.49.1 = const(int, 0)  :: Literal[int](0)
    #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
    #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,626 - print_capture - INFO -     #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
    #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
    #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,626 - print_capture - INFO -     #   $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49.1, fn=<built-in function getitem>)  :: bool
    #   del $const100.49.1
    #   del $const100.49.1
2025-06-13 07:34:49,626 - print_capture - INFO -     #   del $const100.49.1
    #   del $const100.49.1
    #   del $const100.49.1
2025-06-13 07:34:49,626 - print_capture - INFO -     #   del $const100.49.1
    #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,626 - print_capture - INFO -     #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,626 - print_capture - INFO -     #   bool104 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,626 - print_capture - INFO -     #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,626 - print_capture - INFO -     #   $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   del bool104
    #   del bool104
2025-06-13 07:34:49,626 - print_capture - INFO -     #   del bool104
    #   del bool104
    #   del bool104
2025-06-13 07:34:49,626 - print_capture - INFO -     #   del bool104
    #   del $102binary_subscr.50
    #   del $102binary_subscr.50
2025-06-13 07:34:49,626 - print_capture - INFO -     #   del $102binary_subscr.50
    #   del $102binary_subscr.50
    #   del $102binary_subscr.50
2025-06-13 07:34:49,626 - print_capture - INFO -     #   del $102binary_subscr.50
    #   branch $104pred, 106, 116
    #   branch $104pred, 106, 116
2025-06-13 07:34:49,626 - print_capture - INFO -     #   branch $104pred, 106, 116
    #   branch $104pred, 106, 116
    #   branch $104pred, 106, 116
2025-06-13 07:34:49,626 - print_capture - INFO -     #   branch $104pred, 106, 116


2025-06-13 07:34:49,626 - print_capture - INFO - 


2025-06-13 07:34:49,626 - print_capture - INFO - 
    if peaks[0]:
    if peaks[0]:
2025-06-13 07:34:49,627 - print_capture - INFO -     if peaks[0]:
    if peaks[0]:
    if peaks[0]:
2025-06-13 07:34:49,627 - print_capture - INFO -     if peaks[0]:


2025-06-13 07:34:49,627 - print_capture - INFO - 


2025-06-13 07:34:49,627 - print_capture - INFO - 
        # --- LINE 1209 --- 
        # --- LINE 1209 --- 
2025-06-13 07:34:49,627 - print_capture - INFO -         # --- LINE 1209 --- 
        # --- LINE 1209 --- 
        # --- LINE 1209 --- 
2025-06-13 07:34:49,627 - print_capture - INFO -         # --- LINE 1209 --- 
        # label 106
        # label 106
2025-06-13 07:34:49,627 - print_capture - INFO -         # label 106
        # label 106
        # label 106
2025-06-13 07:34:49,627 - print_capture - INFO -         # label 106
        #   del $104pred
        #   del $104pred
2025-06-13 07:34:49,627 - print_capture - INFO -         #   del $104pred
        #   del $104pred
        #   del $104pred
2025-06-13 07:34:49,627 - print_capture - INFO -         #   del $104pred
        #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
        #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,627 - print_capture - INFO -         #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
        #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
        #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,627 - print_capture - INFO -         #   $const108.1.3 = const(int, 1)  :: Literal[int](1)
        #   n = wait + $const108.1.3  :: int64
        #   n = wait + $const108.1.3  :: int64
2025-06-13 07:34:49,627 - print_capture - INFO -         #   n = wait + $const108.1.3  :: int64
        #   n = wait + $const108.1.3  :: int64
        #   n = wait + $const108.1.3  :: int64
2025-06-13 07:34:49,627 - print_capture - INFO -         #   n = wait + $const108.1.3  :: int64
        #   del $const108.1.3
        #   del $const108.1.3
2025-06-13 07:34:49,627 - print_capture - INFO -         #   del $const108.1.3
        #   del $const108.1.3
        #   del $const108.1.3
2025-06-13 07:34:49,627 - print_capture - INFO -         #   del $const108.1.3
        #   n.5 = n  :: int64
        #   n.5 = n  :: int64
2025-06-13 07:34:49,627 - print_capture - INFO -         #   n.5 = n  :: int64
        #   n.5 = n  :: int64
        #   n.5 = n  :: int64
2025-06-13 07:34:49,627 - print_capture - INFO -         #   n.5 = n  :: int64
        #   del n
        #   del n
2025-06-13 07:34:49,627 - print_capture - INFO -         #   del n
        #   del n
        #   del n
2025-06-13 07:34:49,627 - print_capture - INFO -         #   del n
        #   jump 120
        #   jump 120
2025-06-13 07:34:49,627 - print_capture - INFO -         #   jump 120
        #   jump 120
        #   jump 120
2025-06-13 07:34:49,627 - print_capture - INFO -         #   jump 120


2025-06-13 07:34:49,627 - print_capture - INFO - 


2025-06-13 07:34:49,627 - print_capture - INFO - 
        n = wait + 1
        n = wait + 1
2025-06-13 07:34:49,627 - print_capture - INFO -         n = wait + 1
        n = wait + 1
        n = wait + 1
2025-06-13 07:34:49,627 - print_capture - INFO -         n = wait + 1


2025-06-13 07:34:49,627 - print_capture - INFO - 


2025-06-13 07:34:49,627 - print_capture - INFO - 
    # --- LINE 1210 --- 
    # --- LINE 1210 --- 
2025-06-13 07:34:49,627 - print_capture - INFO -     # --- LINE 1210 --- 
    # --- LINE 1210 --- 
    # --- LINE 1210 --- 
2025-06-13 07:34:49,627 - print_capture - INFO -     # --- LINE 1210 --- 


2025-06-13 07:34:49,627 - print_capture - INFO - 


2025-06-13 07:34:49,627 - print_capture - INFO - 
    else:
    else:
2025-06-13 07:34:49,627 - print_capture - INFO -     else:
    else:
    else:
2025-06-13 07:34:49,627 - print_capture - INFO -     else:


2025-06-13 07:34:49,627 - print_capture - INFO - 


2025-06-13 07:34:49,627 - print_capture - INFO - 
        # --- LINE 1211 --- 
        # --- LINE 1211 --- 
2025-06-13 07:34:49,627 - print_capture - INFO -         # --- LINE 1211 --- 
        # --- LINE 1211 --- 
        # --- LINE 1211 --- 
2025-06-13 07:34:49,627 - print_capture - INFO -         # --- LINE 1211 --- 
        # label 116
        # label 116
2025-06-13 07:34:49,627 - print_capture - INFO -         # label 116
        # label 116
        # label 116
2025-06-13 07:34:49,627 - print_capture - INFO -         # label 116
        #   del $104pred
        #   del $104pred
2025-06-13 07:34:49,627 - print_capture - INFO -         #   del $104pred
        #   del $104pred
        #   del $104pred
2025-06-13 07:34:49,627 - print_capture - INFO -         #   del $104pred
        #   n.1 = const(int, 1)  :: Literal[int](1)
        #   n.1 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,627 - print_capture - INFO -         #   n.1 = const(int, 1)  :: Literal[int](1)
        #   n.1 = const(int, 1)  :: Literal[int](1)
        #   n.1 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,627 - print_capture - INFO -         #   n.1 = const(int, 1)  :: Literal[int](1)
        #   n.5 = n.1  :: int64
        #   n.5 = n.1  :: int64
2025-06-13 07:34:49,627 - print_capture - INFO -         #   n.5 = n.1  :: int64
        #   n.5 = n.1  :: int64
        #   n.5 = n.1  :: int64
2025-06-13 07:34:49,627 - print_capture - INFO -         #   n.5 = n.1  :: int64
        #   del n.1
        #   del n.1
2025-06-13 07:34:49,627 - print_capture - INFO -         #   del n.1
        #   del n.1
        #   del n.1
2025-06-13 07:34:49,627 - print_capture - INFO -         #   del n.1


2025-06-13 07:34:49,628 - print_capture - INFO - 


2025-06-13 07:34:49,628 - print_capture - INFO - 
        n = 1
        n = 1
2025-06-13 07:34:49,628 - print_capture - INFO -         n = 1
        n = 1
        n = 1
2025-06-13 07:34:49,628 - print_capture - INFO -         n = 1


2025-06-13 07:34:49,628 - print_capture - INFO - 


2025-06-13 07:34:49,628 - print_capture - INFO - 
# --- LINE 1212 --- 
# --- LINE 1212 --- 
2025-06-13 07:34:49,628 - print_capture - INFO - # --- LINE 1212 --- 
# --- LINE 1212 --- 
# --- LINE 1212 --- 
2025-06-13 07:34:49,628 - print_capture - INFO - # --- LINE 1212 --- 


2025-06-13 07:34:49,628 - print_capture - INFO - 


2025-06-13 07:34:49,628 - print_capture - INFO - 


2025-06-13 07:34:49,628 - print_capture - INFO - 


2025-06-13 07:34:49,628 - print_capture - INFO - 


2025-06-13 07:34:49,628 - print_capture - INFO - 


2025-06-13 07:34:49,628 - print_capture - INFO - 
    # --- LINE 1213 --- 
    # --- LINE 1213 --- 
2025-06-13 07:34:49,628 - print_capture - INFO -     # --- LINE 1213 --- 
    # --- LINE 1213 --- 
    # --- LINE 1213 --- 
2025-06-13 07:34:49,628 - print_capture - INFO -     # --- LINE 1213 --- 
    #   jump 120
    #   jump 120
2025-06-13 07:34:49,628 - print_capture - INFO -     #   jump 120
    #   jump 120
    #   jump 120
2025-06-13 07:34:49,628 - print_capture - INFO -     #   jump 120
    # label 120
    # label 120
2025-06-13 07:34:49,628 - print_capture - INFO -     # label 120
    # label 120
    # label 120
2025-06-13 07:34:49,628 - print_capture - INFO -     # label 120
    #   n.7 = n.5  :: int64
    #   n.7 = n.5  :: int64
2025-06-13 07:34:49,628 - print_capture - INFO -     #   n.7 = n.5  :: int64
    #   n.7 = n.5  :: int64
    #   n.7 = n.5  :: int64
2025-06-13 07:34:49,628 - print_capture - INFO -     #   n.7 = n.5  :: int64
    #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,628 - print_capture - INFO -     #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,628 - print_capture - INFO -     #   $124load_attr.2 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
    #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,628 - print_capture - INFO -     #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
    #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
    #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,628 - print_capture - INFO -     #   $const126.3.1 = const(int, 0)  :: Literal[int](0)
    #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
    #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,628 - print_capture - INFO -     #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
    #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
    #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,628 - print_capture - INFO -     #   $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3.1, fn=<built-in function getitem>)  :: int64
    #   del $const126.3.1
    #   del $const126.3.1
2025-06-13 07:34:49,628 - print_capture - INFO -     #   del $const126.3.1
    #   del $const126.3.1
    #   del $const126.3.1
2025-06-13 07:34:49,628 - print_capture - INFO -     #   del $const126.3.1
    #   del $124load_attr.2
    #   del $124load_attr.2
2025-06-13 07:34:49,628 - print_capture - INFO -     #   del $124load_attr.2
    #   del $124load_attr.2
    #   del $124load_attr.2
2025-06-13 07:34:49,628 - print_capture - INFO -     #   del $124load_attr.2
    #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
    #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
2025-06-13 07:34:49,628 - print_capture - INFO -     #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
    #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
    #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
2025-06-13 07:34:49,628 - print_capture - INFO -     #   $130compare_op.5 = n.5 < $128binary_subscr.4  :: bool
    #   del n.5
    #   del n.5
2025-06-13 07:34:49,628 - print_capture - INFO -     #   del n.5
    #   del n.5
    #   del n.5
2025-06-13 07:34:49,628 - print_capture - INFO -     #   del n.5
    #   del $128binary_subscr.4
    #   del $128binary_subscr.4
2025-06-13 07:34:49,628 - print_capture - INFO -     #   del $128binary_subscr.4
    #   del $128binary_subscr.4
    #   del $128binary_subscr.4
2025-06-13 07:34:49,628 - print_capture - INFO -     #   del $128binary_subscr.4
    #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,628 - print_capture - INFO -     #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,628 - print_capture - INFO -     #   bool132 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,628 - print_capture - INFO -     #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,628 - print_capture - INFO -     #   $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   del bool132
    #   del bool132
2025-06-13 07:34:49,628 - print_capture - INFO -     #   del bool132
    #   del bool132
    #   del bool132
2025-06-13 07:34:49,628 - print_capture - INFO -     #   del bool132
    #   del $130compare_op.5
    #   del $130compare_op.5
2025-06-13 07:34:49,628 - print_capture - INFO -     #   del $130compare_op.5
    #   del $130compare_op.5
    #   del $130compare_op.5
2025-06-13 07:34:49,628 - print_capture - INFO -     #   del $130compare_op.5
    #   branch $132pred, 134, 332
    #   branch $132pred, 134, 332
2025-06-13 07:34:49,628 - print_capture - INFO -     #   branch $132pred, 134, 332
    #   branch $132pred, 134, 332
    #   branch $132pred, 134, 332
2025-06-13 07:34:49,629 - print_capture - INFO -     #   branch $132pred, 134, 332
    #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,629 - print_capture - INFO -     #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,629 - print_capture - INFO -     #   $318load_attr.7 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
    #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
    #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,629 - print_capture - INFO -     #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
    #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
    #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,629 - print_capture - INFO -     #   $const320.8.1 = const(int, 0)  :: Literal[int](0)
    #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
    #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,629 - print_capture - INFO -     #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
    #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
    #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,629 - print_capture - INFO -     #   $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8.1, fn=<built-in function getitem>)  :: int64
    #   del $const320.8.1
    #   del $const320.8.1
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del $const320.8.1
    #   del $const320.8.1
    #   del $const320.8.1
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del $const320.8.1
    #   del $318load_attr.7
    #   del $318load_attr.7
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del $318load_attr.7
    #   del $318load_attr.7
    #   del $318load_attr.7
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del $318load_attr.7
    #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
    #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
2025-06-13 07:34:49,629 - print_capture - INFO -     #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
    #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
    #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
2025-06-13 07:34:49,629 - print_capture - INFO -     #   $324compare_op.10 = n.4 < $322binary_subscr.9  :: bool
    #   del n.4
    #   del n.4
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del n.4
    #   del n.4
    #   del n.4
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del n.4
    #   del $322binary_subscr.9
    #   del $322binary_subscr.9
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del $322binary_subscr.9
    #   del $322binary_subscr.9
    #   del $322binary_subscr.9
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del $322binary_subscr.9
    #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,629 - print_capture - INFO -     #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,629 - print_capture - INFO -     #   bool326 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
    #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,629 - print_capture - INFO -     #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,629 - print_capture - INFO -     #   $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
    #   del bool326
    #   del bool326
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del bool326
    #   del bool326
    #   del bool326
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del bool326
    #   del $324compare_op.10
    #   del $324compare_op.10
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del $324compare_op.10
    #   del $324compare_op.10
    #   del $324compare_op.10
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del $324compare_op.10
    #   branch $326pred, 134, 328
    #   branch $326pred, 134, 328
2025-06-13 07:34:49,629 - print_capture - INFO -     #   branch $326pred, 134, 328
    #   branch $326pred, 134, 328
    #   branch $326pred, 134, 328
2025-06-13 07:34:49,629 - print_capture - INFO -     #   branch $326pred, 134, 328
    # label 328
    # label 328
2025-06-13 07:34:49,629 - print_capture - INFO -     # label 328
    # label 328
    # label 328
2025-06-13 07:34:49,629 - print_capture - INFO -     # label 328
    #   del x
    #   del x
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del x
    #   del wait
    #   del wait
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del wait
    #   del wait
    #   del wait
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del wait
    #   del pre_max
    #   del pre_max
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del pre_max
    #   del pre_max
    #   del pre_max
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del pre_max
    #   del pre_avg
    #   del pre_avg
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del pre_avg
    #   del pre_avg
    #   del pre_avg
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del pre_avg
    #   del post_max
    #   del post_max
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del post_max
    #   del post_max
    #   del post_max
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del post_max
    #   del post_avg
    #   del post_avg
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del post_avg
    #   del post_avg
    #   del post_avg
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del post_avg
    #   del peaks
    #   del peaks
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del peaks
    #   del peaks
    #   del peaks
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del peaks
    #   del n.7
    #   del n.7
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del n.7
    #   del n.7
    #   del n.7
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del n.7
    #   del delta
    #   del delta
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del delta
    #   del delta
    #   del delta
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del delta
    #   del $326pred
    #   del $326pred
2025-06-13 07:34:49,629 - print_capture - INFO -     #   del $326pred
    #   del $326pred
    #   del $326pred
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del $326pred
    #   $const328.0.2 = const(NoneType, None)  :: none
    #   $const328.0.2 = const(NoneType, None)  :: none
2025-06-13 07:34:49,630 - print_capture - INFO -     #   $const328.0.2 = const(NoneType, None)  :: none
    #   $const328.0.2 = const(NoneType, None)  :: none
    #   $const328.0.2 = const(NoneType, None)  :: none
2025-06-13 07:34:49,630 - print_capture - INFO -     #   $const328.0.2 = const(NoneType, None)  :: none
    #   $330return_value.1 = cast(value=$const328.0.2)  :: none
    #   $330return_value.1 = cast(value=$const328.0.2)  :: none
2025-06-13 07:34:49,630 - print_capture - INFO -     #   $330return_value.1 = cast(value=$const328.0.2)  :: none
    #   $330return_value.1 = cast(value=$const328.0.2)  :: none
    #   $330return_value.1 = cast(value=$const328.0.2)  :: none
2025-06-13 07:34:49,630 - print_capture - INFO -     #   $330return_value.1 = cast(value=$const328.0.2)  :: none
    #   del $const328.0.2
    #   del $const328.0.2
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del $const328.0.2
    #   del $const328.0.2
    #   del $const328.0.2
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del $const328.0.2
    #   return $330return_value.1
    #   return $330return_value.1
2025-06-13 07:34:49,630 - print_capture - INFO -     #   return $330return_value.1
    #   return $330return_value.1
    #   return $330return_value.1
2025-06-13 07:34:49,630 - print_capture - INFO -     #   return $330return_value.1
    # label 332
    # label 332
2025-06-13 07:34:49,630 - print_capture - INFO -     # label 332
    # label 332
    # label 332
2025-06-13 07:34:49,630 - print_capture - INFO -     # label 332
    #   del x
    #   del x
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del x
    #   del wait
    #   del wait
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del wait
    #   del wait
    #   del wait
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del wait
    #   del pre_max
    #   del pre_max
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del pre_max
    #   del pre_max
    #   del pre_max
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del pre_max
    #   del pre_avg
    #   del pre_avg
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del pre_avg
    #   del pre_avg
    #   del pre_avg
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del pre_avg
    #   del post_max
    #   del post_max
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del post_max
    #   del post_max
    #   del post_max
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del post_max
    #   del post_avg
    #   del post_avg
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del post_avg
    #   del post_avg
    #   del post_avg
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del post_avg
    #   del peaks
    #   del peaks
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del peaks
    #   del peaks
    #   del peaks
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del peaks
    #   del n.7
    #   del n.7
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del n.7
    #   del n.7
    #   del n.7
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del n.7
    #   del delta
    #   del delta
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del delta
    #   del delta
    #   del delta
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del delta
    #   del $132pred
    #   del $132pred
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del $132pred
    #   del $132pred
    #   del $132pred
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del $132pred
    #   $const332.0.2 = const(NoneType, None)  :: none
    #   $const332.0.2 = const(NoneType, None)  :: none
2025-06-13 07:34:49,630 - print_capture - INFO -     #   $const332.0.2 = const(NoneType, None)  :: none
    #   $const332.0.2 = const(NoneType, None)  :: none
    #   $const332.0.2 = const(NoneType, None)  :: none
2025-06-13 07:34:49,630 - print_capture - INFO -     #   $const332.0.2 = const(NoneType, None)  :: none
    #   $334return_value.1 = cast(value=$const332.0.2)  :: none
    #   $334return_value.1 = cast(value=$const332.0.2)  :: none
2025-06-13 07:34:49,630 - print_capture - INFO -     #   $334return_value.1 = cast(value=$const332.0.2)  :: none
    #   $334return_value.1 = cast(value=$const332.0.2)  :: none
    #   $334return_value.1 = cast(value=$const332.0.2)  :: none
2025-06-13 07:34:49,630 - print_capture - INFO -     #   $334return_value.1 = cast(value=$const332.0.2)  :: none
    #   del $const332.0.2
    #   del $const332.0.2
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del $const332.0.2
    #   del $const332.0.2
    #   del $const332.0.2
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del $const332.0.2
    #   return $334return_value.1
    #   return $334return_value.1
2025-06-13 07:34:49,630 - print_capture - INFO -     #   return $334return_value.1
    #   return $334return_value.1
    #   return $334return_value.1
2025-06-13 07:34:49,630 - print_capture - INFO -     #   return $334return_value.1
    # label 333
    # label 333
2025-06-13 07:34:49,630 - print_capture - INFO -     # label 333
    # label 333
    # label 333
2025-06-13 07:34:49,630 - print_capture - INFO -     # label 333
    #   n.5 = n.6  :: int64
    #   n.5 = n.6  :: int64
2025-06-13 07:34:49,630 - print_capture - INFO -     #   n.5 = n.6  :: int64
    #   n.5 = n.6  :: int64
    #   n.5 = n.6  :: int64
2025-06-13 07:34:49,630 - print_capture - INFO -     #   n.5 = n.6  :: int64
    #   del n.6
    #   del n.6
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del n.6
    #   del n.6
    #   del n.6
2025-06-13 07:34:49,630 - print_capture - INFO -     #   del n.6
    #   jump 120
    #   jump 120
2025-06-13 07:34:49,630 - print_capture - INFO -     #   jump 120
    #   jump 120
    #   jump 120
2025-06-13 07:34:49,630 - print_capture - INFO -     #   jump 120


2025-06-13 07:34:49,630 - print_capture - INFO - 


2025-06-13 07:34:49,630 - print_capture - INFO - 
    while n < x.shape[0]:
    while n < x.shape[0]:
2025-06-13 07:34:49,631 - print_capture - INFO -     while n < x.shape[0]:
    while n < x.shape[0]:
    while n < x.shape[0]:
2025-06-13 07:34:49,631 - print_capture - INFO -     while n < x.shape[0]:


2025-06-13 07:34:49,631 - print_capture - INFO - 


2025-06-13 07:34:49,631 - print_capture - INFO - 
        # --- LINE 1214 --- 
        # --- LINE 1214 --- 
2025-06-13 07:34:49,631 - print_capture - INFO -         # --- LINE 1214 --- 
        # --- LINE 1214 --- 
        # --- LINE 1214 --- 
2025-06-13 07:34:49,631 - print_capture - INFO -         # --- LINE 1214 --- 
        # label 134
        # label 134
2025-06-13 07:34:49,631 - print_capture - INFO -         # label 134
        # label 134
        # label 134
2025-06-13 07:34:49,631 - print_capture - INFO -         # label 134
        #   del $326pred
        #   del $326pred
2025-06-13 07:34:49,631 - print_capture - INFO -         #   del $326pred
        #   del $326pred
        #   del $326pred
2025-06-13 07:34:49,631 - print_capture - INFO -         #   del $326pred
        #   del $132pred
        #   del $132pred
2025-06-13 07:34:49,631 - print_capture - INFO -         #   del $132pred
        #   del $132pred
        #   del $132pred
2025-06-13 07:34:49,631 - print_capture - INFO -         #   del $132pred
        #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $134load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
        #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
        #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
        #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $136load_method.1 = getattr(value=$134load_global.0, attr=max)  :: Function(<function max at 0x7f2a2e9ffbe0>)
        #   del $134load_global.0
        #   del $134load_global.0
2025-06-13 07:34:49,631 - print_capture - INFO -         #   del $134load_global.0
        #   del $134load_global.0
        #   del $134load_global.0
2025-06-13 07:34:49,631 - print_capture - INFO -         #   del $134load_global.0
        #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $140load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $const142.4.1 = const(int, 0)  :: Literal[int](0)
        #   $148binary_subtract.7 = n.7 - pre_max  :: int64
        #   $148binary_subtract.7 = n.7 - pre_max  :: int64
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $148binary_subtract.7 = n.7 - pre_max  :: int64
        #   $148binary_subtract.7 = n.7 - pre_max  :: int64
        #   $148binary_subtract.7 = n.7 - pre_max  :: int64
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $148binary_subtract.7 = n.7 - pre_max  :: int64
        #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $150call_function.8 = call $140load_global.3($const142.4.1, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4.1, utils.py:1214), Var($148binary_subtract.7, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   del $const142.4.1
        #   del $const142.4.1
2025-06-13 07:34:49,631 - print_capture - INFO -         #   del $const142.4.1
        #   del $const142.4.1
        #   del $const142.4.1
2025-06-13 07:34:49,631 - print_capture - INFO -         #   del $const142.4.1
        #   del $148binary_subtract.7
        #   del $148binary_subtract.7
2025-06-13 07:34:49,631 - print_capture - INFO -         #   del $148binary_subtract.7
        #   del $148binary_subtract.7
        #   del $148binary_subtract.7
2025-06-13 07:34:49,631 - print_capture - INFO -         #   del $148binary_subtract.7
        #   del $140load_global.3
        #   del $140load_global.3
2025-06-13 07:34:49,631 - print_capture - INFO -         #   del $140load_global.3
        #   del $140load_global.3
        #   del $140load_global.3
2025-06-13 07:34:49,631 - print_capture - INFO -         #   del $140load_global.3
        #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $152load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $158binary_add.12 = n.7 + post_max  :: int64
        #   $158binary_add.12 = n.7 + post_max  :: int64
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $158binary_add.12 = n.7 + post_max  :: int64
        #   $158binary_add.12 = n.7 + post_max  :: int64
        #   $158binary_add.12 = n.7 + post_max  :: int64
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $158binary_add.12 = n.7 + post_max  :: int64
        #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $162load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $const164.15.1 = const(int, 0)  :: Literal[int](0)
        #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
        #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
        #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
        #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15.1, fn=<built-in function getitem>)  :: int64
        #   del $const164.15.1
        #   del $const164.15.1
2025-06-13 07:34:49,631 - print_capture - INFO -         #   del $const164.15.1
        #   del $const164.15.1
        #   del $const164.15.1
2025-06-13 07:34:49,631 - print_capture - INFO -         #   del $const164.15.1
        #   del $162load_attr.14
        #   del $162load_attr.14
2025-06-13 07:34:49,631 - print_capture - INFO -         #   del $162load_attr.14
        #   del $162load_attr.14
        #   del $162load_attr.14
2025-06-13 07:34:49,631 - print_capture - INFO -         #   del $162load_attr.14
        #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:49,631 - print_capture - INFO -         #   $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1214), Var($166binary_subscr.16, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   del $166binary_subscr.16
        #   del $166binary_subscr.16
2025-06-13 07:34:49,632 - print_capture - INFO -         #   del $166binary_subscr.16
        #   del $166binary_subscr.16
        #   del $166binary_subscr.16
2025-06-13 07:34:49,632 - print_capture - INFO -         #   del $166binary_subscr.16
        #   del $158binary_add.12
        #   del $158binary_add.12
2025-06-13 07:34:49,632 - print_capture - INFO -         #   del $158binary_add.12
        #   del $158binary_add.12
        #   del $158binary_add.12
2025-06-13 07:34:49,632 - print_capture - INFO -         #   del $158binary_add.12
        #   del $152load_global.9
        #   del $152load_global.9
2025-06-13 07:34:49,632 - print_capture - INFO -         #   del $152load_global.9
        #   del $152load_global.9
        #   del $152load_global.9
2025-06-13 07:34:49,632 - print_capture - INFO -         #   del $152load_global.9
        #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:49,632 - print_capture - INFO -         #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:49,632 - print_capture - INFO -         #   $170build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
2025-06-13 07:34:49,632 - print_capture - INFO -         #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
2025-06-13 07:34:49,632 - print_capture - INFO -         #   $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1214), Var($168call_function.17, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   del $170build_slice.18
        #   del $170build_slice.18
2025-06-13 07:34:49,632 - print_capture - INFO -         #   del $170build_slice.18
        #   del $170build_slice.18
        #   del $170build_slice.18
2025-06-13 07:34:49,632 - print_capture - INFO -         #   del $170build_slice.18
        #   del $168call_function.17
        #   del $168call_function.17
2025-06-13 07:34:49,632 - print_capture - INFO -         #   del $168call_function.17
        #   del $168call_function.17
        #   del $168call_function.17
2025-06-13 07:34:49,632 - print_capture - INFO -         #   del $168call_function.17
        #   del $150call_function.8
        #   del $150call_function.8
2025-06-13 07:34:49,632 - print_capture - INFO -         #   del $150call_function.8
        #   del $150call_function.8
        #   del $150call_function.8
2025-06-13 07:34:49,632 - print_capture - INFO -         #   del $150call_function.8
        #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(int64, 1d, A)
        #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(int64, 1d, A)
2025-06-13 07:34:49,632 - print_capture - INFO -         #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(int64, 1d, A)
        #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(int64, 1d, A)
        #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(int64, 1d, A)
2025-06-13 07:34:49,632 - print_capture - INFO -         #   $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)  :: array(int64, 1d, A)
        #   del $170build_slice.19
        #   del $170build_slice.19
2025-06-13 07:34:49,632 - print_capture - INFO -         #   del $170build_slice.19
        #   del $170build_slice.19
        #   del $170build_slice.19
2025-06-13 07:34:49,632 - print_capture - INFO -         #   del $170build_slice.19
        #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> int64
        #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> int64
2025-06-13 07:34:49,632 - print_capture - INFO -         #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> int64
        #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> int64
        #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> int64
2025-06-13 07:34:49,632 - print_capture - INFO -         #   maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> int64
        #   del $172binary_subscr.20
        #   del $172binary_subscr.20
2025-06-13 07:34:49,632 - print_capture - INFO -         #   del $172binary_subscr.20
        #   del $172binary_subscr.20
        #   del $172binary_subscr.20
2025-06-13 07:34:49,632 - print_capture - INFO -         #   del $172binary_subscr.20
        #   del $136load_method.1
        #   del $136load_method.1
2025-06-13 07:34:49,632 - print_capture - INFO -         #   del $136load_method.1
        #   del $136load_method.1
        #   del $136load_method.1
2025-06-13 07:34:49,632 - print_capture - INFO -         #   del $136load_method.1


2025-06-13 07:34:49,632 - print_capture - INFO - 


2025-06-13 07:34:49,632 - print_capture - INFO - 
        maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
        maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
2025-06-13 07:34:49,632 - print_capture - INFO -         maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
        maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
        maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])
2025-06-13 07:34:49,632 - print_capture - INFO -         maxn = np.max( x[max(0, n-pre_max):min(n+post_max, x.shape[0])])


2025-06-13 07:34:49,632 - print_capture - INFO - 


2025-06-13 07:34:49,632 - print_capture - INFO - 
# --- LINE 1215 --- 
# --- LINE 1215 --- 
2025-06-13 07:34:49,632 - print_capture - INFO - # --- LINE 1215 --- 
# --- LINE 1215 --- 
# --- LINE 1215 --- 
2025-06-13 07:34:49,632 - print_capture - INFO - # --- LINE 1215 --- 


2025-06-13 07:34:49,632 - print_capture - INFO - 


2025-06-13 07:34:49,632 - print_capture - INFO - 


2025-06-13 07:34:49,632 - print_capture - INFO - 


2025-06-13 07:34:49,632 - print_capture - INFO - 


2025-06-13 07:34:49,632 - print_capture - INFO - 


2025-06-13 07:34:49,632 - print_capture - INFO - 
        # --- LINE 1216 --- 
        # --- LINE 1216 --- 
2025-06-13 07:34:49,632 - print_capture - INFO -         # --- LINE 1216 --- 
        # --- LINE 1216 --- 
        # --- LINE 1216 --- 
2025-06-13 07:34:49,632 - print_capture - INFO -         # --- LINE 1216 --- 


2025-06-13 07:34:49,632 - print_capture - INFO - 


2025-06-13 07:34:49,632 - print_capture - INFO - 
        # Are we the local max and sufficiently above average?
        # Are we the local max and sufficiently above average?
2025-06-13 07:34:49,632 - print_capture - INFO -         # Are we the local max and sufficiently above average?
        # Are we the local max and sufficiently above average?
        # Are we the local max and sufficiently above average?
2025-06-13 07:34:49,632 - print_capture - INFO -         # Are we the local max and sufficiently above average?


2025-06-13 07:34:49,632 - print_capture - INFO - 


2025-06-13 07:34:49,632 - print_capture - INFO - 
        # --- LINE 1217 --- 
        # --- LINE 1217 --- 
2025-06-13 07:34:49,632 - print_capture - INFO -         # --- LINE 1217 --- 
        # --- LINE 1217 --- 
        # --- LINE 1217 --- 
2025-06-13 07:34:49,633 - print_capture - INFO -         # --- LINE 1217 --- 
        #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int64
        #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,633 - print_capture - INFO -         #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int64
        #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int64
        #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,633 - print_capture - INFO -         #   $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int64
        #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
        #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
2025-06-13 07:34:49,633 - print_capture - INFO -         #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
        #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
        #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
2025-06-13 07:34:49,633 - print_capture - INFO -         #   $186compare_op.26 = $182binary_subscr.24 == maxn  :: bool
        #   del maxn
        #   del maxn
2025-06-13 07:34:49,633 - print_capture - INFO -         #   del maxn
        #   del maxn
        #   del maxn
2025-06-13 07:34:49,633 - print_capture - INFO -         #   del maxn
        #   del $182binary_subscr.24
        #   del $182binary_subscr.24
2025-06-13 07:34:49,633 - print_capture - INFO -         #   del $182binary_subscr.24
        #   del $182binary_subscr.24
        #   del $182binary_subscr.24
2025-06-13 07:34:49,633 - print_capture - INFO -         #   del $182binary_subscr.24
        #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
2025-06-13 07:34:49,633 - print_capture - INFO -         #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
2025-06-13 07:34:49,633 - print_capture - INFO -         #   peaks[n.7] = $186compare_op.26  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   del $186compare_op.26
        #   del $186compare_op.26
2025-06-13 07:34:49,633 - print_capture - INFO -         #   del $186compare_op.26
        #   del $186compare_op.26
        #   del $186compare_op.26
2025-06-13 07:34:49,633 - print_capture - INFO -         #   del $186compare_op.26


2025-06-13 07:34:49,633 - print_capture - INFO - 


2025-06-13 07:34:49,633 - print_capture - INFO - 
        peaks[n] = (x[n] == maxn)
        peaks[n] = (x[n] == maxn)
2025-06-13 07:34:49,633 - print_capture - INFO -         peaks[n] = (x[n] == maxn)
        peaks[n] = (x[n] == maxn)
        peaks[n] = (x[n] == maxn)
2025-06-13 07:34:49,633 - print_capture - INFO -         peaks[n] = (x[n] == maxn)


2025-06-13 07:34:49,633 - print_capture - INFO - 


2025-06-13 07:34:49,633 - print_capture - INFO - 
# --- LINE 1218 --- 
# --- LINE 1218 --- 
2025-06-13 07:34:49,633 - print_capture - INFO - # --- LINE 1218 --- 
# --- LINE 1218 --- 
# --- LINE 1218 --- 
2025-06-13 07:34:49,633 - print_capture - INFO - # --- LINE 1218 --- 


2025-06-13 07:34:49,633 - print_capture - INFO - 


2025-06-13 07:34:49,633 - print_capture - INFO - 


2025-06-13 07:34:49,633 - print_capture - INFO - 


2025-06-13 07:34:49,633 - print_capture - INFO - 


2025-06-13 07:34:49,633 - print_capture - INFO - 


2025-06-13 07:34:49,633 - print_capture - INFO - 
        # --- LINE 1219 --- 
        # --- LINE 1219 --- 
2025-06-13 07:34:49,633 - print_capture - INFO -         # --- LINE 1219 --- 
        # --- LINE 1219 --- 
        # --- LINE 1219 --- 
2025-06-13 07:34:49,633 - print_capture - INFO -         # --- LINE 1219 --- 
        #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,633 - print_capture - INFO -         #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,633 - print_capture - INFO -         #   $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,633 - print_capture - INFO -         #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,633 - print_capture - INFO -         #   bool200 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,633 - print_capture - INFO -         #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,633 - print_capture - INFO -         #   $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   del bool200
        #   del bool200
2025-06-13 07:34:49,633 - print_capture - INFO -         #   del bool200
        #   del bool200
        #   del bool200
2025-06-13 07:34:49,633 - print_capture - INFO -         #   del bool200
        #   del $198binary_subscr.31
        #   del $198binary_subscr.31
2025-06-13 07:34:49,633 - print_capture - INFO -         #   del $198binary_subscr.31
        #   del $198binary_subscr.31
        #   del $198binary_subscr.31
2025-06-13 07:34:49,633 - print_capture - INFO -         #   del $198binary_subscr.31
        #   branch $200pred, 212, 202
        #   branch $200pred, 212, 202
2025-06-13 07:34:49,633 - print_capture - INFO -         #   branch $200pred, 212, 202
        #   branch $200pred, 212, 202
        #   branch $200pred, 212, 202
2025-06-13 07:34:49,633 - print_capture - INFO -         #   branch $200pred, 212, 202


2025-06-13 07:34:49,633 - print_capture - INFO - 


2025-06-13 07:34:49,633 - print_capture - INFO - 
        if not peaks[n]:
        if not peaks[n]:
2025-06-13 07:34:49,633 - print_capture - INFO -         if not peaks[n]:
        if not peaks[n]:
        if not peaks[n]:
2025-06-13 07:34:49,633 - print_capture - INFO -         if not peaks[n]:


2025-06-13 07:34:49,633 - print_capture - INFO - 


2025-06-13 07:34:49,633 - print_capture - INFO - 
            # --- LINE 1220 --- 
            # --- LINE 1220 --- 
2025-06-13 07:34:49,633 - print_capture - INFO -             # --- LINE 1220 --- 
            # --- LINE 1220 --- 
            # --- LINE 1220 --- 
2025-06-13 07:34:49,634 - print_capture - INFO -             # --- LINE 1220 --- 
            # label 202
            # label 202
2025-06-13 07:34:49,634 - print_capture - INFO -             # label 202
            # label 202
            # label 202
2025-06-13 07:34:49,634 - print_capture - INFO -             # label 202
            #   del $200pred
            #   del $200pred
2025-06-13 07:34:49,634 - print_capture - INFO -             #   del $200pred
            #   del $200pred
            #   del $200pred
2025-06-13 07:34:49,634 - print_capture - INFO -             #   del $200pred
            #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,634 - print_capture - INFO -             #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,634 - print_capture - INFO -             #   $const204.1.3 = const(int, 1)  :: Literal[int](1)
            #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:49,634 - print_capture - INFO -             #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:49,634 - print_capture - INFO -             #   $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   del n.7
            #   del n.7
2025-06-13 07:34:49,634 - print_capture - INFO -             #   del n.7
            #   del n.7
            #   del n.7
2025-06-13 07:34:49,634 - print_capture - INFO -             #   del n.7
            #   del $const204.1.3
            #   del $const204.1.3
2025-06-13 07:34:49,634 - print_capture - INFO -             #   del $const204.1.3
            #   del $const204.1.3
            #   del $const204.1.3
2025-06-13 07:34:49,634 - print_capture - INFO -             #   del $const204.1.3
            #   n.2 = $206inplace_add.2  :: int64
            #   n.2 = $206inplace_add.2  :: int64
2025-06-13 07:34:49,634 - print_capture - INFO -             #   n.2 = $206inplace_add.2  :: int64
            #   n.2 = $206inplace_add.2  :: int64
            #   n.2 = $206inplace_add.2  :: int64
2025-06-13 07:34:49,634 - print_capture - INFO -             #   n.2 = $206inplace_add.2  :: int64
            #   del $206inplace_add.2
            #   del $206inplace_add.2
2025-06-13 07:34:49,634 - print_capture - INFO -             #   del $206inplace_add.2
            #   del $206inplace_add.2
            #   del $206inplace_add.2
2025-06-13 07:34:49,634 - print_capture - INFO -             #   del $206inplace_add.2
            #   n.6 = n.2  :: int64
            #   n.6 = n.2  :: int64
2025-06-13 07:34:49,634 - print_capture - INFO -             #   n.6 = n.2  :: int64
            #   n.6 = n.2  :: int64
            #   n.6 = n.2  :: int64
2025-06-13 07:34:49,634 - print_capture - INFO -             #   n.6 = n.2  :: int64
            #   del n.2
            #   del n.2
2025-06-13 07:34:49,634 - print_capture - INFO -             #   del n.2
            #   del n.2
            #   del n.2
2025-06-13 07:34:49,634 - print_capture - INFO -             #   del n.2


2025-06-13 07:34:49,634 - print_capture - INFO - 


2025-06-13 07:34:49,634 - print_capture - INFO - 
            n += 1
            n += 1
2025-06-13 07:34:49,634 - print_capture - INFO -             n += 1
            n += 1
            n += 1
2025-06-13 07:34:49,634 - print_capture - INFO -             n += 1


2025-06-13 07:34:49,634 - print_capture - INFO - 


2025-06-13 07:34:49,634 - print_capture - INFO - 
            # --- LINE 1221 --- 
            # --- LINE 1221 --- 
2025-06-13 07:34:49,634 - print_capture - INFO -             # --- LINE 1221 --- 
            # --- LINE 1221 --- 
            # --- LINE 1221 --- 
2025-06-13 07:34:49,634 - print_capture - INFO -             # --- LINE 1221 --- 
            #   jump 333
            #   jump 333
2025-06-13 07:34:49,634 - print_capture - INFO -             #   jump 333
            #   jump 333
            #   jump 333
2025-06-13 07:34:49,634 - print_capture - INFO -             #   jump 333


2025-06-13 07:34:49,634 - print_capture - INFO - 


2025-06-13 07:34:49,634 - print_capture - INFO - 
            continue
            continue
2025-06-13 07:34:49,634 - print_capture - INFO -             continue
            continue
            continue
2025-06-13 07:34:49,634 - print_capture - INFO -             continue


2025-06-13 07:34:49,634 - print_capture - INFO - 


2025-06-13 07:34:49,634 - print_capture - INFO - 
# --- LINE 1222 --- 
# --- LINE 1222 --- 
2025-06-13 07:34:49,634 - print_capture - INFO - # --- LINE 1222 --- 
# --- LINE 1222 --- 
# --- LINE 1222 --- 
2025-06-13 07:34:49,634 - print_capture - INFO - # --- LINE 1222 --- 


2025-06-13 07:34:49,634 - print_capture - INFO - 


2025-06-13 07:34:49,634 - print_capture - INFO - 


2025-06-13 07:34:49,634 - print_capture - INFO - 


2025-06-13 07:34:49,634 - print_capture - INFO - 


2025-06-13 07:34:49,634 - print_capture - INFO - 


2025-06-13 07:34:49,634 - print_capture - INFO - 
        # --- LINE 1223 --- 
        # --- LINE 1223 --- 
2025-06-13 07:34:49,634 - print_capture - INFO -         # --- LINE 1223 --- 
        # --- LINE 1223 --- 
        # --- LINE 1223 --- 
2025-06-13 07:34:49,634 - print_capture - INFO -         # --- LINE 1223 --- 
        # label 212
        # label 212
2025-06-13 07:34:49,634 - print_capture - INFO -         # label 212
        # label 212
        # label 212
2025-06-13 07:34:49,634 - print_capture - INFO -         # label 212
        #   del $200pred
        #   del $200pred
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $200pred
        #   del $200pred
        #   del $200pred
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $200pred
        #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $212load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
        #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
        #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
        #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
        #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $214load_method.1 = getattr(value=$212load_global.0, attr=mean)  :: Function(<function mean at 0x7f2a1151c550>)
        #   del $212load_global.0
        #   del $212load_global.0
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $212load_global.0
        #   del $212load_global.0
        #   del $212load_global.0
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $212load_global.0
        #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $218load_global.3 = global(max: <built-in function max>)  :: Function(<built-in function max>)
        #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
        #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $const220.4.1 = const(int, 0)  :: Literal[int](0)
        #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
        #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
        #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
        #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $226binary_subtract.7 = n.7 - pre_avg  :: int64
        #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $228call_function.8 = call $218load_global.3($const220.4.1, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4.1, utils.py:1223), Var($226binary_subtract.7, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   del $const220.4.1
        #   del $const220.4.1
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $const220.4.1
        #   del $const220.4.1
        #   del $const220.4.1
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $const220.4.1
        #   del $226binary_subtract.7
        #   del $226binary_subtract.7
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $226binary_subtract.7
        #   del $226binary_subtract.7
        #   del $226binary_subtract.7
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $226binary_subtract.7
        #   del $218load_global.3
        #   del $218load_global.3
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $218load_global.3
        #   del $218load_global.3
        #   del $218load_global.3
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $218load_global.3
        #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $230load_global.9 = global(min: <built-in function min>)  :: Function(<built-in function min>)
        #   $236binary_add.12 = n.7 + post_avg  :: int64
        #   $236binary_add.12 = n.7 + post_avg  :: int64
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $236binary_add.12 = n.7 + post_avg  :: int64
        #   $236binary_add.12 = n.7 + post_avg  :: int64
        #   $236binary_add.12 = n.7 + post_avg  :: int64
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $236binary_add.12 = n.7 + post_avg  :: int64
        #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $240load_attr.14 = getattr(value=x, attr=shape)  :: UniTuple(int64 x 1)
        #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
        #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $const242.15.1 = const(int, 0)  :: Literal[int](0)
        #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
        #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
        #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
        #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15.1, fn=<built-in function getitem>)  :: int64
        #   del $const242.15.1
        #   del $const242.15.1
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $const242.15.1
        #   del $const242.15.1
        #   del $const242.15.1
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $const242.15.1
        #   del $240load_attr.14
        #   del $240load_attr.14
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $240load_attr.14
        #   del $240load_attr.14
        #   del $240load_attr.14
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $240load_attr.14
        #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1223), Var($244binary_subscr.16, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> int64
        #   del $244binary_subscr.16
        #   del $244binary_subscr.16
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $244binary_subscr.16
        #   del $244binary_subscr.16
        #   del $244binary_subscr.16
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $244binary_subscr.16
        #   del $236binary_add.12
        #   del $236binary_add.12
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $236binary_add.12
        #   del $236binary_add.12
        #   del $236binary_add.12
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $236binary_add.12
        #   del $230load_global.9
        #   del $230load_global.9
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $230load_global.9
        #   del $230load_global.9
        #   del $230load_global.9
2025-06-13 07:34:49,635 - print_capture - INFO -         #   del $230load_global.9
        #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $248build_slice.18 = global(slice: <class 'slice'>)  :: Function(<class 'slice'>)
        #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
2025-06-13 07:34:49,635 - print_capture - INFO -         #   $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1223), Var($246call_function.17, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)  :: (int64, int64) -> slice<a:b>
        #   del $248build_slice.18
        #   del $248build_slice.18
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $248build_slice.18
        #   del $248build_slice.18
        #   del $248build_slice.18
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $248build_slice.18
        #   del $246call_function.17
        #   del $246call_function.17
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $246call_function.17
        #   del $246call_function.17
        #   del $246call_function.17
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $246call_function.17
        #   del $228call_function.8
        #   del $228call_function.8
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $228call_function.8
        #   del $228call_function.8
        #   del $228call_function.8
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $228call_function.8
        #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(int64, 1d, A)
        #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(int64, 1d, A)
2025-06-13 07:34:49,636 - print_capture - INFO -         #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(int64, 1d, A)
        #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(int64, 1d, A)
        #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(int64, 1d, A)
2025-06-13 07:34:49,636 - print_capture - INFO -         #   $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)  :: array(int64, 1d, A)
        #   del $248build_slice.19
        #   del $248build_slice.19
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $248build_slice.19
        #   del $248build_slice.19
        #   del $248build_slice.19
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $248build_slice.19
        #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> float64
        #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:49,636 - print_capture - INFO -         #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> float64
        #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> float64
        #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> float64
2025-06-13 07:34:49,636 - print_capture - INFO -         #   avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)  :: (Array(int64, 1, 'A', False, aligned=True),) -> float64
        #   del $250binary_subscr.20
        #   del $250binary_subscr.20
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $250binary_subscr.20
        #   del $250binary_subscr.20
        #   del $250binary_subscr.20
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $250binary_subscr.20
        #   del $214load_method.1
        #   del $214load_method.1
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $214load_method.1
        #   del $214load_method.1
        #   del $214load_method.1
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $214load_method.1


2025-06-13 07:34:49,636 - print_capture - INFO - 


2025-06-13 07:34:49,636 - print_capture - INFO - 
        avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
        avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
2025-06-13 07:34:49,636 - print_capture - INFO -         avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
        avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
        avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])
2025-06-13 07:34:49,636 - print_capture - INFO -         avgn = np.mean(x[max(0, n-pre_avg):min(n+post_avg, x.shape[0])])


2025-06-13 07:34:49,636 - print_capture - INFO - 


2025-06-13 07:34:49,636 - print_capture - INFO - 
        # --- LINE 1224 --- 
        # --- LINE 1224 --- 
2025-06-13 07:34:49,636 - print_capture - INFO -         # --- LINE 1224 --- 
        # --- LINE 1224 --- 
        # --- LINE 1224 --- 
2025-06-13 07:34:49,636 - print_capture - INFO -         # --- LINE 1224 --- 
        #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,636 - print_capture - INFO -         #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,636 - print_capture - INFO -         #   $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int64
        #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,636 - print_capture - INFO -         #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int64
        #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int64
        #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int64
2025-06-13 07:34:49,636 - print_capture - INFO -         #   $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)  :: int64
        #   $274binary_add.32 = avgn + delta  :: float64
        #   $274binary_add.32 = avgn + delta  :: float64
2025-06-13 07:34:49,636 - print_capture - INFO -         #   $274binary_add.32 = avgn + delta  :: float64
        #   $274binary_add.32 = avgn + delta  :: float64
        #   $274binary_add.32 = avgn + delta  :: float64
2025-06-13 07:34:49,636 - print_capture - INFO -         #   $274binary_add.32 = avgn + delta  :: float64
        #   del avgn
        #   del avgn
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del avgn
        #   del avgn
        #   del avgn
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del avgn
        #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
        #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
2025-06-13 07:34:49,636 - print_capture - INFO -         #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
        #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
        #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
2025-06-13 07:34:49,636 - print_capture - INFO -         #   $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32  :: bool
        #   del $274binary_add.32
        #   del $274binary_add.32
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $274binary_add.32
        #   del $274binary_add.32
        #   del $274binary_add.32
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $274binary_add.32
        #   del $268binary_subscr.29
        #   del $268binary_subscr.29
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $268binary_subscr.29
        #   del $268binary_subscr.29
        #   del $268binary_subscr.29
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $268binary_subscr.29
        #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
        #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
2025-06-13 07:34:49,636 - print_capture - INFO -         #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
        #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
        #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
2025-06-13 07:34:49,636 - print_capture - INFO -         #   $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)  :: bool
        #   del $276compare_op.33
        #   del $276compare_op.33
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $276compare_op.33
        #   del $276compare_op.33
        #   del $276compare_op.33
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $276compare_op.33
        #   del $262binary_subscr.26
        #   del $262binary_subscr.26
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $262binary_subscr.26
        #   del $262binary_subscr.26
        #   del $262binary_subscr.26
2025-06-13 07:34:49,636 - print_capture - INFO -         #   del $262binary_subscr.26
        #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
2025-06-13 07:34:49,636 - print_capture - INFO -         #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
2025-06-13 07:34:49,636 - print_capture - INFO -         #   peaks[n.7] = $278inplace_and.34  :: (Array(bool, 1, 'A', False, aligned=True), int64, bool) -> none
        #   del $278inplace_and.34
        #   del $278inplace_and.34
2025-06-13 07:34:49,637 - print_capture - INFO -         #   del $278inplace_and.34
        #   del $278inplace_and.34
        #   del $278inplace_and.34
2025-06-13 07:34:49,637 - print_capture - INFO -         #   del $278inplace_and.34


2025-06-13 07:34:49,637 - print_capture - INFO - 


2025-06-13 07:34:49,637 - print_capture - INFO - 
        peaks[n] &= (x[n] >= avgn + delta)
        peaks[n] &= (x[n] >= avgn + delta)
2025-06-13 07:34:49,637 - print_capture - INFO -         peaks[n] &= (x[n] >= avgn + delta)
        peaks[n] &= (x[n] >= avgn + delta)
        peaks[n] &= (x[n] >= avgn + delta)
2025-06-13 07:34:49,637 - print_capture - INFO -         peaks[n] &= (x[n] >= avgn + delta)


2025-06-13 07:34:49,637 - print_capture - INFO - 


2025-06-13 07:34:49,637 - print_capture - INFO - 
# --- LINE 1225 --- 
# --- LINE 1225 --- 
2025-06-13 07:34:49,637 - print_capture - INFO - # --- LINE 1225 --- 
# --- LINE 1225 --- 
# --- LINE 1225 --- 
2025-06-13 07:34:49,637 - print_capture - INFO - # --- LINE 1225 --- 


2025-06-13 07:34:49,637 - print_capture - INFO - 


2025-06-13 07:34:49,637 - print_capture - INFO - 


2025-06-13 07:34:49,637 - print_capture - INFO - 


2025-06-13 07:34:49,637 - print_capture - INFO - 


2025-06-13 07:34:49,637 - print_capture - INFO - 


2025-06-13 07:34:49,637 - print_capture - INFO - 
        # --- LINE 1226 --- 
        # --- LINE 1226 --- 
2025-06-13 07:34:49,637 - print_capture - INFO -         # --- LINE 1226 --- 
        # --- LINE 1226 --- 
        # --- LINE 1226 --- 
2025-06-13 07:34:49,637 - print_capture - INFO -         # --- LINE 1226 --- 
        #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,637 - print_capture - INFO -         #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
2025-06-13 07:34:49,637 - print_capture - INFO -         #   $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)  :: bool
        #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,637 - print_capture - INFO -         #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
2025-06-13 07:34:49,637 - print_capture - INFO -         #   bool290 = global(bool: <class 'bool'>)  :: Function(<class 'bool'>)
        #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,637 - print_capture - INFO -         #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
2025-06-13 07:34:49,637 - print_capture - INFO -         #   $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)  :: (bool,) -> bool
        #   del bool290
        #   del bool290
2025-06-13 07:34:49,637 - print_capture - INFO -         #   del bool290
        #   del bool290
        #   del bool290
2025-06-13 07:34:49,637 - print_capture - INFO -         #   del bool290
        #   del $288binary_subscr.37
        #   del $288binary_subscr.37
2025-06-13 07:34:49,637 - print_capture - INFO -         #   del $288binary_subscr.37
        #   del $288binary_subscr.37
        #   del $288binary_subscr.37
2025-06-13 07:34:49,637 - print_capture - INFO -         #   del $288binary_subscr.37
        #   branch $290pred, 302, 292
        #   branch $290pred, 302, 292
2025-06-13 07:34:49,637 - print_capture - INFO -         #   branch $290pred, 302, 292
        #   branch $290pred, 302, 292
        #   branch $290pred, 302, 292
2025-06-13 07:34:49,637 - print_capture - INFO -         #   branch $290pred, 302, 292


2025-06-13 07:34:49,637 - print_capture - INFO - 


2025-06-13 07:34:49,637 - print_capture - INFO - 
        if not peaks[n]:
        if not peaks[n]:
2025-06-13 07:34:49,637 - print_capture - INFO -         if not peaks[n]:
        if not peaks[n]:
        if not peaks[n]:
2025-06-13 07:34:49,637 - print_capture - INFO -         if not peaks[n]:


2025-06-13 07:34:49,637 - print_capture - INFO - 


2025-06-13 07:34:49,637 - print_capture - INFO - 
            # --- LINE 1227 --- 
            # --- LINE 1227 --- 
2025-06-13 07:34:49,637 - print_capture - INFO -             # --- LINE 1227 --- 
            # --- LINE 1227 --- 
            # --- LINE 1227 --- 
2025-06-13 07:34:49,637 - print_capture - INFO -             # --- LINE 1227 --- 
            # label 292
            # label 292
2025-06-13 07:34:49,637 - print_capture - INFO -             # label 292
            # label 292
            # label 292
2025-06-13 07:34:49,637 - print_capture - INFO -             # label 292
            #   del $290pred
            #   del $290pred
2025-06-13 07:34:49,637 - print_capture - INFO -             #   del $290pred
            #   del $290pred
            #   del $290pred
2025-06-13 07:34:49,637 - print_capture - INFO -             #   del $290pred
            #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,637 - print_capture - INFO -             #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
            #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,637 - print_capture - INFO -             #   $const294.1.3 = const(int, 1)  :: Literal[int](1)
            #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:49,637 - print_capture - INFO -             #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:49,637 - print_capture - INFO -             #   $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
            #   del n.7
            #   del n.7
2025-06-13 07:34:49,638 - print_capture - INFO -             #   del n.7
            #   del n.7
            #   del n.7
2025-06-13 07:34:49,638 - print_capture - INFO -             #   del n.7
            #   del $const294.1.3
            #   del $const294.1.3
2025-06-13 07:34:49,638 - print_capture - INFO -             #   del $const294.1.3
            #   del $const294.1.3
            #   del $const294.1.3
2025-06-13 07:34:49,638 - print_capture - INFO -             #   del $const294.1.3
            #   n.3 = $296inplace_add.2  :: int64
            #   n.3 = $296inplace_add.2  :: int64
2025-06-13 07:34:49,638 - print_capture - INFO -             #   n.3 = $296inplace_add.2  :: int64
            #   n.3 = $296inplace_add.2  :: int64
            #   n.3 = $296inplace_add.2  :: int64
2025-06-13 07:34:49,638 - print_capture - INFO -             #   n.3 = $296inplace_add.2  :: int64
            #   del $296inplace_add.2
            #   del $296inplace_add.2
2025-06-13 07:34:49,638 - print_capture - INFO -             #   del $296inplace_add.2
            #   del $296inplace_add.2
            #   del $296inplace_add.2
2025-06-13 07:34:49,638 - print_capture - INFO -             #   del $296inplace_add.2
            #   n.6 = n.3  :: int64
            #   n.6 = n.3  :: int64
2025-06-13 07:34:49,638 - print_capture - INFO -             #   n.6 = n.3  :: int64
            #   n.6 = n.3  :: int64
            #   n.6 = n.3  :: int64
2025-06-13 07:34:49,638 - print_capture - INFO -             #   n.6 = n.3  :: int64
            #   del n.3
            #   del n.3
2025-06-13 07:34:49,638 - print_capture - INFO -             #   del n.3
            #   del n.3
            #   del n.3
2025-06-13 07:34:49,638 - print_capture - INFO -             #   del n.3


2025-06-13 07:34:49,638 - print_capture - INFO - 


2025-06-13 07:34:49,638 - print_capture - INFO - 
            n += 1
            n += 1
2025-06-13 07:34:49,638 - print_capture - INFO -             n += 1
            n += 1
            n += 1
2025-06-13 07:34:49,638 - print_capture - INFO -             n += 1


2025-06-13 07:34:49,638 - print_capture - INFO - 


2025-06-13 07:34:49,638 - print_capture - INFO - 
            # --- LINE 1228 --- 
            # --- LINE 1228 --- 
2025-06-13 07:34:49,638 - print_capture - INFO -             # --- LINE 1228 --- 
            # --- LINE 1228 --- 
            # --- LINE 1228 --- 
2025-06-13 07:34:49,638 - print_capture - INFO -             # --- LINE 1228 --- 
            #   jump 333
            #   jump 333
2025-06-13 07:34:49,638 - print_capture - INFO -             #   jump 333
            #   jump 333
            #   jump 333
2025-06-13 07:34:49,638 - print_capture - INFO -             #   jump 333


2025-06-13 07:34:49,638 - print_capture - INFO - 


2025-06-13 07:34:49,638 - print_capture - INFO - 
            continue
            continue
2025-06-13 07:34:49,638 - print_capture - INFO -             continue
            continue
            continue
2025-06-13 07:34:49,638 - print_capture - INFO -             continue


2025-06-13 07:34:49,638 - print_capture - INFO - 


2025-06-13 07:34:49,638 - print_capture - INFO - 
# --- LINE 1229 --- 
# --- LINE 1229 --- 
2025-06-13 07:34:49,638 - print_capture - INFO - # --- LINE 1229 --- 
# --- LINE 1229 --- 
# --- LINE 1229 --- 
2025-06-13 07:34:49,638 - print_capture - INFO - # --- LINE 1229 --- 


2025-06-13 07:34:49,638 - print_capture - INFO - 


2025-06-13 07:34:49,638 - print_capture - INFO - 


2025-06-13 07:34:49,638 - print_capture - INFO - 


2025-06-13 07:34:49,638 - print_capture - INFO - 


2025-06-13 07:34:49,638 - print_capture - INFO - 


2025-06-13 07:34:49,638 - print_capture - INFO - 
        # --- LINE 1230 --- 
        # --- LINE 1230 --- 
2025-06-13 07:34:49,638 - print_capture - INFO -         # --- LINE 1230 --- 
        # --- LINE 1230 --- 
        # --- LINE 1230 --- 
2025-06-13 07:34:49,638 - print_capture - INFO -         # --- LINE 1230 --- 


2025-06-13 07:34:49,638 - print_capture - INFO - 


2025-06-13 07:34:49,638 - print_capture - INFO - 
        # Skip the next `wait` frames
        # Skip the next `wait` frames
2025-06-13 07:34:49,638 - print_capture - INFO -         # Skip the next `wait` frames
        # Skip the next `wait` frames
        # Skip the next `wait` frames
2025-06-13 07:34:49,638 - print_capture - INFO -         # Skip the next `wait` frames


2025-06-13 07:34:49,638 - print_capture - INFO - 


2025-06-13 07:34:49,638 - print_capture - INFO - 
        # --- LINE 1231 --- 
        # --- LINE 1231 --- 
2025-06-13 07:34:49,638 - print_capture - INFO -         # --- LINE 1231 --- 
        # --- LINE 1231 --- 
        # --- LINE 1231 --- 
2025-06-13 07:34:49,638 - print_capture - INFO -         # --- LINE 1231 --- 
        # label 302
        # label 302
2025-06-13 07:34:49,639 - print_capture - INFO -         # label 302
        # label 302
        # label 302
2025-06-13 07:34:49,639 - print_capture - INFO -         # label 302
        #   del $290pred
        #   del $290pred
2025-06-13 07:34:49,639 - print_capture - INFO -         #   del $290pred
        #   del $290pred
        #   del $290pred
2025-06-13 07:34:49,639 - print_capture - INFO -         #   del $290pred
        #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
        #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,639 - print_capture - INFO -         #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
        #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
        #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
2025-06-13 07:34:49,639 - print_capture - INFO -         #   $const306.2.3 = const(int, 1)  :: Literal[int](1)
        #   $308binary_add.3 = wait + $const306.2.3  :: int64
        #   $308binary_add.3 = wait + $const306.2.3  :: int64
2025-06-13 07:34:49,639 - print_capture - INFO -         #   $308binary_add.3 = wait + $const306.2.3  :: int64
        #   $308binary_add.3 = wait + $const306.2.3  :: int64
        #   $308binary_add.3 = wait + $const306.2.3  :: int64
2025-06-13 07:34:49,639 - print_capture - INFO -         #   $308binary_add.3 = wait + $const306.2.3  :: int64
        #   del $const306.2.3
        #   del $const306.2.3
2025-06-13 07:34:49,639 - print_capture - INFO -         #   del $const306.2.3
        #   del $const306.2.3
        #   del $const306.2.3
2025-06-13 07:34:49,639 - print_capture - INFO -         #   del $const306.2.3
        #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
        #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:49,639 - print_capture - INFO -         #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
        #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
        #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
2025-06-13 07:34:49,639 - print_capture - INFO -         #   $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)  :: int64
        #   del $308binary_add.3
        #   del $308binary_add.3
2025-06-13 07:34:49,639 - print_capture - INFO -         #   del $308binary_add.3
        #   del $308binary_add.3
        #   del $308binary_add.3
2025-06-13 07:34:49,639 - print_capture - INFO -         #   del $308binary_add.3
        #   n.4 = $310inplace_add.4  :: int64
        #   n.4 = $310inplace_add.4  :: int64
2025-06-13 07:34:49,639 - print_capture - INFO -         #   n.4 = $310inplace_add.4  :: int64
        #   n.4 = $310inplace_add.4  :: int64
        #   n.4 = $310inplace_add.4  :: int64
2025-06-13 07:34:49,639 - print_capture - INFO -         #   n.4 = $310inplace_add.4  :: int64
        #   del $310inplace_add.4
        #   del $310inplace_add.4
2025-06-13 07:34:49,639 - print_capture - INFO -         #   del $310inplace_add.4
        #   del $310inplace_add.4
        #   del $310inplace_add.4
2025-06-13 07:34:49,639 - print_capture - INFO -         #   del $310inplace_add.4
        #   n.7 = n.4  :: int64
        #   n.7 = n.4  :: int64
2025-06-13 07:34:49,639 - print_capture - INFO -         #   n.7 = n.4  :: int64
        #   n.7 = n.4  :: int64
        #   n.7 = n.4  :: int64
2025-06-13 07:34:49,639 - print_capture - INFO -         #   n.7 = n.4  :: int64


2025-06-13 07:34:49,639 - print_capture - INFO - 


2025-06-13 07:34:49,639 - print_capture - INFO - 
        n += wait + 1
        n += wait + 1
2025-06-13 07:34:49,639 - print_capture - INFO -         n += wait + 1
        n += wait + 1
        n += wait + 1
2025-06-13 07:34:49,639 - print_capture - INFO -         n += wait + 1


2025-06-13 07:34:49,639 - print_capture - INFO - 


2025-06-13 07:34:49,639 - print_capture - INFO - 
label 0:
label 0:
2025-06-13 07:34:49,783 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:49,783 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:49,783 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:49,783 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $4load_attr.1 = getattr(value=x, attr=real) ['$4load_attr.1', 'x']
    $4load_attr.1 = getattr(value=x, attr=real) ['$4load_attr.1', 'x']
2025-06-13 07:34:49,783 - print_capture - INFO -     $4load_attr.1 = getattr(value=x, attr=real) ['$4load_attr.1', 'x']
    $4load_attr.1 = getattr(value=x, attr=real) ['$4load_attr.1', 'x']
    $4load_attr.1 = getattr(value=x, attr=real) ['$4load_attr.1', 'x']
2025-06-13 07:34:49,783 - print_capture - INFO -     $4load_attr.1 = getattr(value=x, attr=real) ['$4load_attr.1', 'x']
    $const6.2.1 = const(int, 2)              ['$const6.2.1']
    $const6.2.1 = const(int, 2)              ['$const6.2.1']
2025-06-13 07:34:49,783 - print_capture - INFO -     $const6.2.1 = const(int, 2)              ['$const6.2.1']
    $const6.2.1 = const(int, 2)              ['$const6.2.1']
    $const6.2.1 = const(int, 2)              ['$const6.2.1']
2025-06-13 07:34:49,783 - print_capture - INFO -     $const6.2.1 = const(int, 2)              ['$const6.2.1']
    $8binary_power.3 = $4load_attr.1 ** $const6.2.1 ['$4load_attr.1', '$8binary_power.3', '$const6.2.1']
    $8binary_power.3 = $4load_attr.1 ** $const6.2.1 ['$4load_attr.1', '$8binary_power.3', '$const6.2.1']
2025-06-13 07:34:49,783 - print_capture - INFO -     $8binary_power.3 = $4load_attr.1 ** $const6.2.1 ['$4load_attr.1', '$8binary_power.3', '$const6.2.1']
    $8binary_power.3 = $4load_attr.1 ** $const6.2.1 ['$4load_attr.1', '$8binary_power.3', '$const6.2.1']
    $8binary_power.3 = $4load_attr.1 ** $const6.2.1 ['$4load_attr.1', '$8binary_power.3', '$const6.2.1']
2025-06-13 07:34:49,783 - print_capture - INFO -     $8binary_power.3 = $4load_attr.1 ** $const6.2.1 ['$4load_attr.1', '$8binary_power.3', '$const6.2.1']
    $12load_attr.5 = getattr(value=x, attr=imag) ['$12load_attr.5', 'x']
    $12load_attr.5 = getattr(value=x, attr=imag) ['$12load_attr.5', 'x']
2025-06-13 07:34:49,783 - print_capture - INFO -     $12load_attr.5 = getattr(value=x, attr=imag) ['$12load_attr.5', 'x']
    $12load_attr.5 = getattr(value=x, attr=imag) ['$12load_attr.5', 'x']
    $12load_attr.5 = getattr(value=x, attr=imag) ['$12load_attr.5', 'x']
2025-06-13 07:34:49,783 - print_capture - INFO -     $12load_attr.5 = getattr(value=x, attr=imag) ['$12load_attr.5', 'x']
    $const14.6.1 = const(int, 2)             ['$const14.6.1']
    $const14.6.1 = const(int, 2)             ['$const14.6.1']
2025-06-13 07:34:49,783 - print_capture - INFO -     $const14.6.1 = const(int, 2)             ['$const14.6.1']
    $const14.6.1 = const(int, 2)             ['$const14.6.1']
    $const14.6.1 = const(int, 2)             ['$const14.6.1']
2025-06-13 07:34:49,783 - print_capture - INFO -     $const14.6.1 = const(int, 2)             ['$const14.6.1']
    $16binary_power.7 = $12load_attr.5 ** $const14.6.1 ['$12load_attr.5', '$16binary_power.7', '$const14.6.1']
    $16binary_power.7 = $12load_attr.5 ** $const14.6.1 ['$12load_attr.5', '$16binary_power.7', '$const14.6.1']
2025-06-13 07:34:49,783 - print_capture - INFO -     $16binary_power.7 = $12load_attr.5 ** $const14.6.1 ['$12load_attr.5', '$16binary_power.7', '$const14.6.1']
    $16binary_power.7 = $12load_attr.5 ** $const14.6.1 ['$12load_attr.5', '$16binary_power.7', '$const14.6.1']
    $16binary_power.7 = $12load_attr.5 ** $const14.6.1 ['$12load_attr.5', '$16binary_power.7', '$const14.6.1']
2025-06-13 07:34:49,783 - print_capture - INFO -     $16binary_power.7 = $12load_attr.5 ** $const14.6.1 ['$12load_attr.5', '$16binary_power.7', '$const14.6.1']
    $18binary_add.8 = $8binary_power.3 + $16binary_power.7 ['$16binary_power.7', '$18binary_add.8', '$8binary_power.3']
    $18binary_add.8 = $8binary_power.3 + $16binary_power.7 ['$16binary_power.7', '$18binary_add.8', '$8binary_power.3']
2025-06-13 07:34:49,783 - print_capture - INFO -     $18binary_add.8 = $8binary_power.3 + $16binary_power.7 ['$16binary_power.7', '$18binary_add.8', '$8binary_power.3']
    $18binary_add.8 = $8binary_power.3 + $16binary_power.7 ['$16binary_power.7', '$18binary_add.8', '$8binary_power.3']
    $18binary_add.8 = $8binary_power.3 + $16binary_power.7 ['$16binary_power.7', '$18binary_add.8', '$8binary_power.3']
2025-06-13 07:34:49,783 - print_capture - INFO -     $18binary_add.8 = $8binary_power.3 + $16binary_power.7 ['$16binary_power.7', '$18binary_add.8', '$8binary_power.3']
    $20return_value.9 = cast(value=$18binary_add.8) ['$18binary_add.8', '$20return_value.9']
    $20return_value.9 = cast(value=$18binary_add.8) ['$18binary_add.8', '$20return_value.9']
2025-06-13 07:34:49,783 - print_capture - INFO -     $20return_value.9 = cast(value=$18binary_add.8) ['$18binary_add.8', '$20return_value.9']
    $20return_value.9 = cast(value=$18binary_add.8) ['$18binary_add.8', '$20return_value.9']
    $20return_value.9 = cast(value=$18binary_add.8) ['$18binary_add.8', '$20return_value.9']
2025-06-13 07:34:49,783 - print_capture - INFO -     $20return_value.9 = cast(value=$18binary_add.8) ['$18binary_add.8', '$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:49,783 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:49,783 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
label 0:
label 0:
2025-06-13 07:34:49,790 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:49,790 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:49,790 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:49,790 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    b = arg(1, name=b)                       ['b']
2025-06-13 07:34:49,790 - print_capture - INFO -     b = arg(1, name=b)                       ['b']
    b = arg(1, name=b)                       ['b']
    b = arg(1, name=b)                       ['b']
2025-06-13 07:34:49,790 - print_capture - INFO -     b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float32)    ['$2load_deref.0']
    $2load_deref.0 = freevar(tp: float32)    ['$2load_deref.0']
2025-06-13 07:34:49,790 - print_capture - INFO -     $2load_deref.0 = freevar(tp: float32)    ['$2load_deref.0']
    $2load_deref.0 = freevar(tp: float32)    ['$2load_deref.0']
    $2load_deref.0 = freevar(tp: float32)    ['$2load_deref.0']
2025-06-13 07:34:49,790 - print_capture - INFO -     $2load_deref.0 = freevar(tp: float32)    ['$2load_deref.0']
    $const4.1.1 = const(int, 1)              ['$const4.1.1']
    $const4.1.1 = const(int, 1)              ['$const4.1.1']
2025-06-13 07:34:49,790 - print_capture - INFO -     $const4.1.1 = const(int, 1)              ['$const4.1.1']
    $const4.1.1 = const(int, 1)              ['$const4.1.1']
    $const4.1.1 = const(int, 1)              ['$const4.1.1']
2025-06-13 07:34:49,790 - print_capture - INFO -     $const4.1.1 = const(int, 1)              ['$const4.1.1']
    r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1.1', 'r']
    r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1.1', 'r']
2025-06-13 07:34:49,790 - print_capture - INFO -     r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1.1', 'r']
    r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1.1', 'r']
    r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1.1', 'r']
2025-06-13 07:34:49,790 - print_capture - INFO -     r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1.1', 'r']
    $10load_deref.3 = freevar(tp: float32)   ['$10load_deref.3']
    $10load_deref.3 = freevar(tp: float32)   ['$10load_deref.3']
2025-06-13 07:34:49,790 - print_capture - INFO -     $10load_deref.3 = freevar(tp: float32)   ['$10load_deref.3']
    $10load_deref.3 = freevar(tp: float32)   ['$10load_deref.3']
    $10load_deref.3 = freevar(tp: float32)   ['$10load_deref.3']
2025-06-13 07:34:49,790 - print_capture - INFO -     $10load_deref.3 = freevar(tp: float32)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
2025-06-13 07:34:49,790 - print_capture - INFO -     a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
2025-06-13 07:34:49,790 - print_capture - INFO -     a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7.2 = const(int, 0)             ['$const20.7.2']
    $const20.7.2 = const(int, 0)             ['$const20.7.2']
2025-06-13 07:34:49,790 - print_capture - INFO -     $const20.7.2 = const(int, 0)             ['$const20.7.2']
    $const20.7.2 = const(int, 0)             ['$const20.7.2']
    $const20.7.2 = const(int, 0)             ['$const20.7.2']
2025-06-13 07:34:49,790 - print_capture - INFO -     $const20.7.2 = const(int, 0)             ['$const20.7.2']
    $22compare_op.8 = b < $const20.7.2       ['$22compare_op.8', '$const20.7.2', 'b']
    $22compare_op.8 = b < $const20.7.2       ['$22compare_op.8', '$const20.7.2', 'b']
2025-06-13 07:34:49,790 - print_capture - INFO -     $22compare_op.8 = b < $const20.7.2       ['$22compare_op.8', '$const20.7.2', 'b']
    $22compare_op.8 = b < $const20.7.2       ['$22compare_op.8', '$const20.7.2', 'b']
    $22compare_op.8 = b < $const20.7.2       ['$22compare_op.8', '$const20.7.2', 'b']
2025-06-13 07:34:49,790 - print_capture - INFO -     $22compare_op.8 = b < $const20.7.2       ['$22compare_op.8', '$const20.7.2', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
2025-06-13 07:34:49,790 - print_capture - INFO -     bool24 = global(bool: <class 'bool'>)    ['bool24']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
2025-06-13 07:34:49,790 - print_capture - INFO -     bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
2025-06-13 07:34:49,790 - print_capture - INFO -     $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
2025-06-13 07:34:49,790 - print_capture - INFO -     $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
    branch $24pred, 26, 98                   ['$24pred']
2025-06-13 07:34:49,790 - print_capture - INFO -     branch $24pred, 26, 98                   ['$24pred']
    branch $24pred, 26, 98                   ['$24pred']
    branch $24pred, 26, 98                   ['$24pred']
2025-06-13 07:34:49,790 - print_capture - INFO -     branch $24pred, 26, 98                   ['$24pred']
label 26:
label 26:
2025-06-13 07:34:49,790 - print_capture - INFO - label 26:
label 26:
label 26:
2025-06-13 07:34:49,790 - print_capture - INFO - label 26:
    invert = const(bool, True)               ['invert']
    invert = const(bool, True)               ['invert']
2025-06-13 07:34:49,790 - print_capture - INFO -     invert = const(bool, True)               ['invert']
    invert = const(bool, True)               ['invert']
    invert = const(bool, True)               ['invert']
2025-06-13 07:34:49,790 - print_capture - INFO -     invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
2025-06-13 07:34:49,790 - print_capture - INFO -     exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
2025-06-13 07:34:49,790 - print_capture - INFO -     exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4.2 = const(int, 0)             ['$const38.4.2']
    $const38.4.2 = const(int, 0)             ['$const38.4.2']
2025-06-13 07:34:49,790 - print_capture - INFO -     $const38.4.2 = const(int, 0)             ['$const38.4.2']
    $const38.4.2 = const(int, 0)             ['$const38.4.2']
    $const38.4.2 = const(int, 0)             ['$const38.4.2']
2025-06-13 07:34:49,790 - print_capture - INFO -     $const38.4.2 = const(int, 0)             ['$const38.4.2']
    $40compare_op.5 = exp < $const38.4.2     ['$40compare_op.5', '$const38.4.2', 'exp']
    $40compare_op.5 = exp < $const38.4.2     ['$40compare_op.5', '$const38.4.2', 'exp']
2025-06-13 07:34:49,790 - print_capture - INFO -     $40compare_op.5 = exp < $const38.4.2     ['$40compare_op.5', '$const38.4.2', 'exp']
    $40compare_op.5 = exp < $const38.4.2     ['$40compare_op.5', '$const38.4.2', 'exp']
    $40compare_op.5 = exp < $const38.4.2     ['$40compare_op.5', '$const38.4.2', 'exp']
2025-06-13 07:34:49,790 - print_capture - INFO -     $40compare_op.5 = exp < $const38.4.2     ['$40compare_op.5', '$const38.4.2', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
2025-06-13 07:34:49,790 - print_capture - INFO -     bool42 = global(bool: <class 'bool'>)    ['bool42']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
2025-06-13 07:34:49,790 - print_capture - INFO -     bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
2025-06-13 07:34:49,790 - print_capture - INFO -     $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
2025-06-13 07:34:49,791 - print_capture - INFO -     $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
    branch $42pred, 44, 48                   ['$42pred']
2025-06-13 07:34:49,791 - print_capture - INFO -     branch $42pred, 44, 48                   ['$42pred']
    branch $42pred, 44, 48                   ['$42pred']
    branch $42pred, 44, 48                   ['$42pred']
2025-06-13 07:34:49,791 - print_capture - INFO -     branch $42pred, 44, 48                   ['$42pred']
label 44:
label 44:
2025-06-13 07:34:49,791 - print_capture - INFO - label 44:
label 44:
label 44:
2025-06-13 07:34:49,791 - print_capture - INFO - label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
2025-06-13 07:34:49,791 - print_capture - INFO -     $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
2025-06-13 07:34:49,791 - print_capture - INFO -     $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
2025-06-13 07:34:49,791 - print_capture - INFO -     raise $44load_global.0                   ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
2025-06-13 07:34:49,791 - print_capture - INFO -     raise $44load_global.0                   ['$44load_global.0']
label 48:
label 48:
2025-06-13 07:34:49,791 - print_capture - INFO - label 48:
label 48:
label 48:
2025-06-13 07:34:49,791 - print_capture - INFO - label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
2025-06-13 07:34:49,791 - print_capture - INFO -     $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
2025-06-13 07:34:49,791 - print_capture - INFO -     $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
2025-06-13 07:34:49,791 - print_capture - INFO -     bool50 = global(bool: <class 'bool'>)    ['bool50']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
2025-06-13 07:34:49,791 - print_capture - INFO -     bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
2025-06-13 07:34:49,791 - print_capture - INFO -     $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
2025-06-13 07:34:49,791 - print_capture - INFO -     $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 96                   ['$50pred']
    branch $50pred, 52, 96                   ['$50pred']
2025-06-13 07:34:49,791 - print_capture - INFO -     branch $50pred, 52, 96                   ['$50pred']
    branch $50pred, 52, 96                   ['$50pred']
    branch $50pred, 52, 96                   ['$50pred']
2025-06-13 07:34:49,791 - print_capture - INFO -     branch $50pred, 52, 96                   ['$50pred']
label 52:
label 52:
2025-06-13 07:34:49,791 - print_capture - INFO - label 52:
label 52:
label 52:
2025-06-13 07:34:49,791 - print_capture - INFO - label 52:
    $const54.1.2 = const(int, 0)             ['$const54.1.2']
    $const54.1.2 = const(int, 0)             ['$const54.1.2']
2025-06-13 07:34:49,791 - print_capture - INFO -     $const54.1.2 = const(int, 0)             ['$const54.1.2']
    $const54.1.2 = const(int, 0)             ['$const54.1.2']
    $const54.1.2 = const(int, 0)             ['$const54.1.2']
2025-06-13 07:34:49,791 - print_capture - INFO -     $const54.1.2 = const(int, 0)             ['$const54.1.2']
    $56compare_op.2 = a.1 == $const54.1.2    ['$56compare_op.2', '$const54.1.2', 'a.1']
    $56compare_op.2 = a.1 == $const54.1.2    ['$56compare_op.2', '$const54.1.2', 'a.1']
2025-06-13 07:34:49,791 - print_capture - INFO -     $56compare_op.2 = a.1 == $const54.1.2    ['$56compare_op.2', '$const54.1.2', 'a.1']
    $56compare_op.2 = a.1 == $const54.1.2    ['$56compare_op.2', '$const54.1.2', 'a.1']
    $56compare_op.2 = a.1 == $const54.1.2    ['$56compare_op.2', '$const54.1.2', 'a.1']
2025-06-13 07:34:49,791 - print_capture - INFO -     $56compare_op.2 = a.1 == $const54.1.2    ['$56compare_op.2', '$const54.1.2', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
2025-06-13 07:34:49,791 - print_capture - INFO -     bool58 = global(bool: <class 'bool'>)    ['bool58']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
2025-06-13 07:34:49,791 - print_capture - INFO -     bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
2025-06-13 07:34:49,791 - print_capture - INFO -     $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
2025-06-13 07:34:49,791 - print_capture - INFO -     $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
    branch $58pred, 60, 76                   ['$58pred']
2025-06-13 07:34:49,791 - print_capture - INFO -     branch $58pred, 60, 76                   ['$58pred']
    branch $58pred, 60, 76                   ['$58pred']
    branch $58pred, 60, 76                   ['$58pred']
2025-06-13 07:34:49,791 - print_capture - INFO -     branch $58pred, 60, 76                   ['$58pred']
label 60:
label 60:
2025-06-13 07:34:49,791 - print_capture - INFO - label 60:
label 60:
label 60:
2025-06-13 07:34:49,791 - print_capture - INFO - label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
2025-06-13 07:34:49,791 - print_capture - INFO -     $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
2025-06-13 07:34:49,791 - print_capture - INFO -     $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
2025-06-13 07:34:49,791 - print_capture - INFO -     bool62 = global(bool: <class 'bool'>)    ['bool62']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
2025-06-13 07:34:49,791 - print_capture - INFO -     bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
2025-06-13 07:34:49,791 - print_capture - INFO -     $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
2025-06-13 07:34:49,791 - print_capture - INFO -     $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
    branch $62pred, 64, 68                   ['$62pred']
2025-06-13 07:34:49,791 - print_capture - INFO -     branch $62pred, 64, 68                   ['$62pred']
    branch $62pred, 64, 68                   ['$62pred']
    branch $62pred, 64, 68                   ['$62pred']
2025-06-13 07:34:49,791 - print_capture - INFO -     branch $62pred, 64, 68                   ['$62pred']
label 64:
label 64:
2025-06-13 07:34:49,791 - print_capture - INFO - label 64:
label 64:
label 64:
2025-06-13 07:34:49,791 - print_capture - INFO - label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
2025-06-13 07:34:49,792 - print_capture - INFO -     $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
2025-06-13 07:34:49,792 - print_capture - INFO -     $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
2025-06-13 07:34:49,792 - print_capture - INFO -     $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
2025-06-13 07:34:49,792 - print_capture - INFO -     $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
2025-06-13 07:34:49,792 - print_capture - INFO -     return $66return_value.1                 ['$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
2025-06-13 07:34:49,792 - print_capture - INFO -     return $66return_value.1                 ['$66return_value.1']
label 68:
label 68:
2025-06-13 07:34:49,792 - print_capture - INFO - label 68:
label 68:
label 68:
2025-06-13 07:34:49,792 - print_capture - INFO - label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
2025-06-13 07:34:49,792 - print_capture - INFO -     $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
2025-06-13 07:34:49,792 - print_capture - INFO -     $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1.4 = const(str, 0 cannot be raised to a negative power) ['$const70.1.4']
    $const70.1.4 = const(str, 0 cannot be raised to a negative power) ['$const70.1.4']
2025-06-13 07:34:49,792 - print_capture - INFO -     $const70.1.4 = const(str, 0 cannot be raised to a negative power) ['$const70.1.4']
    $const70.1.4 = const(str, 0 cannot be raised to a negative power) ['$const70.1.4']
    $const70.1.4 = const(str, 0 cannot be raised to a negative power) ['$const70.1.4']
2025-06-13 07:34:49,792 - print_capture - INFO -     $const70.1.4 = const(str, 0 cannot be raised to a negative power) ['$const70.1.4']
    $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1.4']
    $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1.4']
2025-06-13 07:34:49,792 - print_capture - INFO -     $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1.4']
    $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1.4']
    $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1.4']
2025-06-13 07:34:49,792 - print_capture - INFO -     $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1.4']
    raise $72call_function.2                 ['$72call_function.2']
    raise $72call_function.2                 ['$72call_function.2']
2025-06-13 07:34:49,792 - print_capture - INFO -     raise $72call_function.2                 ['$72call_function.2']
    raise $72call_function.2                 ['$72call_function.2']
    raise $72call_function.2                 ['$72call_function.2']
2025-06-13 07:34:49,792 - print_capture - INFO -     raise $72call_function.2                 ['$72call_function.2']
label 76:
label 76:
2025-06-13 07:34:49,792 - print_capture - INFO - label 76:
label 76:
label 76:
2025-06-13 07:34:49,792 - print_capture - INFO - label 76:
    $const78.1.1 = const(int, 1)             ['$const78.1.1']
    $const78.1.1 = const(int, 1)             ['$const78.1.1']
2025-06-13 07:34:49,792 - print_capture - INFO -     $const78.1.1 = const(int, 1)             ['$const78.1.1']
    $const78.1.1 = const(int, 1)             ['$const78.1.1']
    $const78.1.1 = const(int, 1)             ['$const78.1.1']
2025-06-13 07:34:49,792 - print_capture - INFO -     $const78.1.1 = const(int, 1)             ['$const78.1.1']
    $80compare_op.2 = a.1 != $const78.1.1    ['$80compare_op.2', '$const78.1.1', 'a.1']
    $80compare_op.2 = a.1 != $const78.1.1    ['$80compare_op.2', '$const78.1.1', 'a.1']
2025-06-13 07:34:49,792 - print_capture - INFO -     $80compare_op.2 = a.1 != $const78.1.1    ['$80compare_op.2', '$const78.1.1', 'a.1']
    $80compare_op.2 = a.1 != $const78.1.1    ['$80compare_op.2', '$const78.1.1', 'a.1']
    $80compare_op.2 = a.1 != $const78.1.1    ['$80compare_op.2', '$const78.1.1', 'a.1']
2025-06-13 07:34:49,792 - print_capture - INFO -     $80compare_op.2 = a.1 != $const78.1.1    ['$80compare_op.2', '$const78.1.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
2025-06-13 07:34:49,792 - print_capture - INFO -     bool82 = global(bool: <class 'bool'>)    ['bool82']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
2025-06-13 07:34:49,792 - print_capture - INFO -     bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
2025-06-13 07:34:49,792 - print_capture - INFO -     $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
2025-06-13 07:34:49,792 - print_capture - INFO -     $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 96                   ['$82pred']
    branch $82pred, 84, 96                   ['$82pred']
2025-06-13 07:34:49,792 - print_capture - INFO -     branch $82pred, 84, 96                   ['$82pred']
    branch $82pred, 84, 96                   ['$82pred']
    branch $82pred, 84, 96                   ['$82pred']
2025-06-13 07:34:49,792 - print_capture - INFO -     branch $82pred, 84, 96                   ['$82pred']
label 84:
label 84:
2025-06-13 07:34:49,792 - print_capture - INFO - label 84:
label 84:
label 84:
2025-06-13 07:34:49,792 - print_capture - INFO - label 84:
    $const86.1.5 = const(int, -1)            ['$const86.1.5']
    $const86.1.5 = const(int, -1)            ['$const86.1.5']
2025-06-13 07:34:49,792 - print_capture - INFO -     $const86.1.5 = const(int, -1)            ['$const86.1.5']
    $const86.1.5 = const(int, -1)            ['$const86.1.5']
    $const86.1.5 = const(int, -1)            ['$const86.1.5']
2025-06-13 07:34:49,792 - print_capture - INFO -     $const86.1.5 = const(int, -1)            ['$const86.1.5']
    $88compare_op.2 = a.1 != $const86.1.5    ['$88compare_op.2', '$const86.1.5', 'a.1']
    $88compare_op.2 = a.1 != $const86.1.5    ['$88compare_op.2', '$const86.1.5', 'a.1']
2025-06-13 07:34:49,792 - print_capture - INFO -     $88compare_op.2 = a.1 != $const86.1.5    ['$88compare_op.2', '$const86.1.5', 'a.1']
    $88compare_op.2 = a.1 != $const86.1.5    ['$88compare_op.2', '$const86.1.5', 'a.1']
    $88compare_op.2 = a.1 != $const86.1.5    ['$88compare_op.2', '$const86.1.5', 'a.1']
2025-06-13 07:34:49,792 - print_capture - INFO -     $88compare_op.2 = a.1 != $const86.1.5    ['$88compare_op.2', '$const86.1.5', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
2025-06-13 07:34:49,792 - print_capture - INFO -     bool90 = global(bool: <class 'bool'>)    ['bool90']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
2025-06-13 07:34:49,792 - print_capture - INFO -     bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
2025-06-13 07:34:49,792 - print_capture - INFO -     $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
2025-06-13 07:34:49,792 - print_capture - INFO -     $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 96                   ['$90pred']
    branch $90pred, 92, 96                   ['$90pred']
2025-06-13 07:34:49,792 - print_capture - INFO -     branch $90pred, 92, 96                   ['$90pred']
    branch $90pred, 92, 96                   ['$90pred']
    branch $90pred, 92, 96                   ['$90pred']
2025-06-13 07:34:49,792 - print_capture - INFO -     branch $90pred, 92, 96                   ['$90pred']
label 92:
label 92:
2025-06-13 07:34:49,792 - print_capture - INFO - label 92:
label 92:
label 92:
2025-06-13 07:34:49,792 - print_capture - INFO - label 92:
    $const92.0.2 = const(int, 0)             ['$const92.0.2']
    $const92.0.2 = const(int, 0)             ['$const92.0.2']
2025-06-13 07:34:49,793 - print_capture - INFO -     $const92.0.2 = const(int, 0)             ['$const92.0.2']
    $const92.0.2 = const(int, 0)             ['$const92.0.2']
    $const92.0.2 = const(int, 0)             ['$const92.0.2']
2025-06-13 07:34:49,793 - print_capture - INFO -     $const92.0.2 = const(int, 0)             ['$const92.0.2']
    $94return_value.1 = cast(value=$const92.0.2) ['$94return_value.1', '$const92.0.2']
    $94return_value.1 = cast(value=$const92.0.2) ['$94return_value.1', '$const92.0.2']
2025-06-13 07:34:49,793 - print_capture - INFO -     $94return_value.1 = cast(value=$const92.0.2) ['$94return_value.1', '$const92.0.2']
    $94return_value.1 = cast(value=$const92.0.2) ['$94return_value.1', '$const92.0.2']
    $94return_value.1 = cast(value=$const92.0.2) ['$94return_value.1', '$const92.0.2']
2025-06-13 07:34:49,793 - print_capture - INFO -     $94return_value.1 = cast(value=$const92.0.2) ['$94return_value.1', '$const92.0.2']
    return $94return_value.1                 ['$94return_value.1']
    return $94return_value.1                 ['$94return_value.1']
2025-06-13 07:34:49,793 - print_capture - INFO -     return $94return_value.1                 ['$94return_value.1']
    return $94return_value.1                 ['$94return_value.1']
    return $94return_value.1                 ['$94return_value.1']
2025-06-13 07:34:49,793 - print_capture - INFO -     return $94return_value.1                 ['$94return_value.1']
label 96:
label 96:
2025-06-13 07:34:49,793 - print_capture - INFO - label 96:
label 96:
label 96:
2025-06-13 07:34:49,793 - print_capture - INFO - label 96:
    jump 106                                 []
    jump 106                                 []
2025-06-13 07:34:49,793 - print_capture - INFO -     jump 106                                 []
    jump 106                                 []
    jump 106                                 []
2025-06-13 07:34:49,793 - print_capture - INFO -     jump 106                                 []
label 98:
label 98:
2025-06-13 07:34:49,793 - print_capture - INFO - label 98:
label 98:
label 98:
2025-06-13 07:34:49,793 - print_capture - INFO - label 98:
    invert = const(bool, False)              ['invert']
    invert = const(bool, False)              ['invert']
2025-06-13 07:34:49,793 - print_capture - INFO -     invert = const(bool, False)              ['invert']
    invert = const(bool, False)              ['invert']
    invert = const(bool, False)              ['invert']
2025-06-13 07:34:49,793 - print_capture - INFO -     invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    exp = b                                  ['b', 'exp']
2025-06-13 07:34:49,793 - print_capture - INFO -     exp = b                                  ['b', 'exp']
    exp = b                                  ['b', 'exp']
    exp = b                                  ['b', 'exp']
2025-06-13 07:34:49,793 - print_capture - INFO -     exp = b                                  ['b', 'exp']
    jump 106                                 []
    jump 106                                 []
2025-06-13 07:34:49,793 - print_capture - INFO -     jump 106                                 []
    jump 106                                 []
    jump 106                                 []
2025-06-13 07:34:49,793 - print_capture - INFO -     jump 106                                 []
label 106:
label 106:
2025-06-13 07:34:49,793 - print_capture - INFO - label 106:
label 106:
label 106:
2025-06-13 07:34:49,793 - print_capture - INFO - label 106:
    $const108.1.7 = const(int, 65536)        ['$const108.1.7']
    $const108.1.7 = const(int, 65536)        ['$const108.1.7']
2025-06-13 07:34:49,793 - print_capture - INFO -     $const108.1.7 = const(int, 65536)        ['$const108.1.7']
    $const108.1.7 = const(int, 65536)        ['$const108.1.7']
    $const108.1.7 = const(int, 65536)        ['$const108.1.7']
2025-06-13 07:34:49,793 - print_capture - INFO -     $const108.1.7 = const(int, 65536)        ['$const108.1.7']
    $110compare_op.2 = exp > $const108.1.7   ['$110compare_op.2', '$const108.1.7', 'exp']
    $110compare_op.2 = exp > $const108.1.7   ['$110compare_op.2', '$const108.1.7', 'exp']
2025-06-13 07:34:49,793 - print_capture - INFO -     $110compare_op.2 = exp > $const108.1.7   ['$110compare_op.2', '$const108.1.7', 'exp']
    $110compare_op.2 = exp > $const108.1.7   ['$110compare_op.2', '$const108.1.7', 'exp']
    $110compare_op.2 = exp > $const108.1.7   ['$110compare_op.2', '$const108.1.7', 'exp']
2025-06-13 07:34:49,793 - print_capture - INFO -     $110compare_op.2 = exp > $const108.1.7   ['$110compare_op.2', '$const108.1.7', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
2025-06-13 07:34:49,793 - print_capture - INFO -     bool112 = global(bool: <class 'bool'>)   ['bool112']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
2025-06-13 07:34:49,793 - print_capture - INFO -     bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
2025-06-13 07:34:49,793 - print_capture - INFO -     $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
2025-06-13 07:34:49,793 - print_capture - INFO -     $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
    branch $112pred, 114, 130                ['$112pred']
2025-06-13 07:34:49,793 - print_capture - INFO -     branch $112pred, 114, 130                ['$112pred']
    branch $112pred, 114, 130                ['$112pred']
    branch $112pred, 114, 130                ['$112pred']
2025-06-13 07:34:49,793 - print_capture - INFO -     branch $112pred, 114, 130                ['$112pred']
label 114:
label 114:
2025-06-13 07:34:49,793 - print_capture - INFO - label 114:
label 114:
label 114:
2025-06-13 07:34:49,793 - print_capture - INFO - label 114:
    $114load_global.0 = global(math: <module 'math' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $114load_global.0 = global(math: <module 'math' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>) ['$114load_global.0']
2025-06-13 07:34:49,793 - print_capture - INFO -     $114load_global.0 = global(math: <module 'math' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $114load_global.0 = global(math: <module 'math' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $114load_global.0 = global(math: <module 'math' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>) ['$114load_global.0']
2025-06-13 07:34:49,793 - print_capture - INFO -     $114load_global.0 = global(math: <module 'math' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
2025-06-13 07:34:49,793 - print_capture - INFO -     $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
2025-06-13 07:34:49,793 - print_capture - INFO -     $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
2025-06-13 07:34:49,793 - print_capture - INFO -     $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
2025-06-13 07:34:49,793 - print_capture - INFO -     $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
2025-06-13 07:34:49,793 - print_capture - INFO -     $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
2025-06-13 07:34:49,793 - print_capture - INFO -     $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
2025-06-13 07:34:49,793 - print_capture - INFO -     $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
2025-06-13 07:34:49,793 - print_capture - INFO -     $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
2025-06-13 07:34:49,794 - print_capture - INFO -     $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
2025-06-13 07:34:49,955 - print_capture - INFO -     $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
2025-06-13 07:34:49,956 - print_capture - INFO -     return $128return_value.7                ['$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
2025-06-13 07:34:49,956 - print_capture - INFO -     return $128return_value.7                ['$128return_value.7']
label 130:
label 130:
2025-06-13 07:34:49,956 - print_capture - INFO - label 130:
label 130:
label 130:
2025-06-13 07:34:49,956 - print_capture - INFO - label 130:
    $const132.1.2 = const(int, 0)            ['$const132.1.2']
    $const132.1.2 = const(int, 0)            ['$const132.1.2']
2025-06-13 07:34:49,956 - print_capture - INFO -     $const132.1.2 = const(int, 0)            ['$const132.1.2']
    $const132.1.2 = const(int, 0)            ['$const132.1.2']
    $const132.1.2 = const(int, 0)            ['$const132.1.2']
2025-06-13 07:34:49,956 - print_capture - INFO -     $const132.1.2 = const(int, 0)            ['$const132.1.2']
    $134compare_op.2 = exp != $const132.1.2  ['$134compare_op.2', '$const132.1.2', 'exp']
    $134compare_op.2 = exp != $const132.1.2  ['$134compare_op.2', '$const132.1.2', 'exp']
2025-06-13 07:34:49,957 - print_capture - INFO -     $134compare_op.2 = exp != $const132.1.2  ['$134compare_op.2', '$const132.1.2', 'exp']
    $134compare_op.2 = exp != $const132.1.2  ['$134compare_op.2', '$const132.1.2', 'exp']
    $134compare_op.2 = exp != $const132.1.2  ['$134compare_op.2', '$const132.1.2', 'exp']
2025-06-13 07:34:49,957 - print_capture - INFO -     $134compare_op.2 = exp != $const132.1.2  ['$134compare_op.2', '$const132.1.2', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
2025-06-13 07:34:49,957 - print_capture - INFO -     bool136 = global(bool: <class 'bool'>)   ['bool136']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
2025-06-13 07:34:49,957 - print_capture - INFO -     bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
2025-06-13 07:34:49,957 - print_capture - INFO -     $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
2025-06-13 07:34:49,957 - print_capture - INFO -     $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 178                ['$136pred']
    branch $136pred, 138, 178                ['$136pred']
2025-06-13 07:34:49,957 - print_capture - INFO -     branch $136pred, 138, 178                ['$136pred']
    branch $136pred, 138, 178                ['$136pred']
    branch $136pred, 138, 178                ['$136pred']
2025-06-13 07:34:49,958 - print_capture - INFO -     branch $136pred, 138, 178                ['$136pred']
label 138:
label 138:
2025-06-13 07:34:49,958 - print_capture - INFO - label 138:
label 138:
label 138:
2025-06-13 07:34:49,958 - print_capture - INFO - label 138:
    $const140.1.1 = const(int, 1)            ['$const140.1.1']
    $const140.1.1 = const(int, 1)            ['$const140.1.1']
2025-06-13 07:34:49,958 - print_capture - INFO -     $const140.1.1 = const(int, 1)            ['$const140.1.1']
    $const140.1.1 = const(int, 1)            ['$const140.1.1']
    $const140.1.1 = const(int, 1)            ['$const140.1.1']
2025-06-13 07:34:49,958 - print_capture - INFO -     $const140.1.1 = const(int, 1)            ['$const140.1.1']
    $142binary_and.2 = exp & $const140.1.1   ['$142binary_and.2', '$const140.1.1', 'exp']
    $142binary_and.2 = exp & $const140.1.1   ['$142binary_and.2', '$const140.1.1', 'exp']
2025-06-13 07:34:49,958 - print_capture - INFO -     $142binary_and.2 = exp & $const140.1.1   ['$142binary_and.2', '$const140.1.1', 'exp']
    $142binary_and.2 = exp & $const140.1.1   ['$142binary_and.2', '$const140.1.1', 'exp']
    $142binary_and.2 = exp & $const140.1.1   ['$142binary_and.2', '$const140.1.1', 'exp']
2025-06-13 07:34:49,958 - print_capture - INFO -     $142binary_and.2 = exp & $const140.1.1   ['$142binary_and.2', '$const140.1.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
2025-06-13 07:34:49,959 - print_capture - INFO -     bool144 = global(bool: <class 'bool'>)   ['bool144']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
2025-06-13 07:34:49,959 - print_capture - INFO -     bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
2025-06-13 07:34:49,959 - print_capture - INFO -     $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
2025-06-13 07:34:49,959 - print_capture - INFO -     $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
    branch $144pred, 146, 154                ['$144pred']
2025-06-13 07:34:49,959 - print_capture - INFO -     branch $144pred, 146, 154                ['$144pred']
    branch $144pred, 146, 154                ['$144pred']
    branch $144pred, 146, 154                ['$144pred']
2025-06-13 07:34:49,959 - print_capture - INFO -     branch $144pred, 146, 154                ['$144pred']
label 146:
label 146:
2025-06-13 07:34:49,959 - print_capture - INFO - label 146:
label 146:
label 146:
2025-06-13 07:34:49,959 - print_capture - INFO - label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
2025-06-13 07:34:49,960 - print_capture - INFO -     $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
2025-06-13 07:34:49,960 - print_capture - INFO -     $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
2025-06-13 07:34:49,960 - print_capture - INFO -     r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
2025-06-13 07:34:49,960 - print_capture - INFO -     r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
    jump 154                                 []
2025-06-13 07:34:49,960 - print_capture - INFO -     jump 154                                 []
    jump 154                                 []
    jump 154                                 []
2025-06-13 07:34:49,960 - print_capture - INFO -     jump 154                                 []
label 154:
label 154:
2025-06-13 07:34:49,960 - print_capture - INFO - label 154:
label 154:
label 154:
2025-06-13 07:34:49,960 - print_capture - INFO - label 154:
    $const156.1.1 = const(int, 1)            ['$const156.1.1']
    $const156.1.1 = const(int, 1)            ['$const156.1.1']
2025-06-13 07:34:49,960 - print_capture - INFO -     $const156.1.1 = const(int, 1)            ['$const156.1.1']
    $const156.1.1 = const(int, 1)            ['$const156.1.1']
    $const156.1.1 = const(int, 1)            ['$const156.1.1']
2025-06-13 07:34:49,960 - print_capture - INFO -     $const156.1.1 = const(int, 1)            ['$const156.1.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1.1', 'exp']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1.1', 'exp']
2025-06-13 07:34:49,961 - print_capture - INFO -     $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1.1', 'exp']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1.1', 'exp']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1.1', 'exp']
2025-06-13 07:34:49,961 - print_capture - INFO -     $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
2025-06-13 07:34:49,961 - print_capture - INFO -     exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
2025-06-13 07:34:49,961 - print_capture - INFO -     exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
2025-06-13 07:34:49,961 - print_capture - INFO -     $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
2025-06-13 07:34:49,961 - print_capture - INFO -     $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
2025-06-13 07:34:49,961 - print_capture - INFO -     a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
2025-06-13 07:34:49,961 - print_capture - INFO -     a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    $const172.7.2 = const(int, 0)            ['$const172.7.2']
    $const172.7.2 = const(int, 0)            ['$const172.7.2']
2025-06-13 07:34:49,961 - print_capture - INFO -     $const172.7.2 = const(int, 0)            ['$const172.7.2']
    $const172.7.2 = const(int, 0)            ['$const172.7.2']
    $const172.7.2 = const(int, 0)            ['$const172.7.2']
2025-06-13 07:34:49,961 - print_capture - INFO -     $const172.7.2 = const(int, 0)            ['$const172.7.2']
    $174compare_op.8 = exp != $const172.7.2  ['$174compare_op.8', '$const172.7.2', 'exp']
    $174compare_op.8 = exp != $const172.7.2  ['$174compare_op.8', '$const172.7.2', 'exp']
2025-06-13 07:34:49,961 - print_capture - INFO -     $174compare_op.8 = exp != $const172.7.2  ['$174compare_op.8', '$const172.7.2', 'exp']
    $174compare_op.8 = exp != $const172.7.2  ['$174compare_op.8', '$const172.7.2', 'exp']
    $174compare_op.8 = exp != $const172.7.2  ['$174compare_op.8', '$const172.7.2', 'exp']
2025-06-13 07:34:49,961 - print_capture - INFO -     $174compare_op.8 = exp != $const172.7.2  ['$174compare_op.8', '$const172.7.2', 'exp']
    bool176 = global(bool: <class 'bool'>)   ['bool176']
    bool176 = global(bool: <class 'bool'>)   ['bool176']
2025-06-13 07:34:49,961 - print_capture - INFO -     bool176 = global(bool: <class 'bool'>)   ['bool176']
    bool176 = global(bool: <class 'bool'>)   ['bool176']
    bool176 = global(bool: <class 'bool'>)   ['bool176']
2025-06-13 07:34:49,961 - print_capture - INFO -     bool176 = global(bool: <class 'bool'>)   ['bool176']
    $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
    $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
2025-06-13 07:34:49,961 - print_capture - INFO -     $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
    $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
    $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
2025-06-13 07:34:49,961 - print_capture - INFO -     $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
    branch $176pred, 138, 178                ['$176pred']
    branch $176pred, 138, 178                ['$176pred']
2025-06-13 07:34:49,961 - print_capture - INFO -     branch $176pred, 138, 178                ['$176pred']
    branch $176pred, 138, 178                ['$176pred']
    branch $176pred, 138, 178                ['$176pred']
2025-06-13 07:34:49,961 - print_capture - INFO -     branch $176pred, 138, 178                ['$176pred']
label 178:
label 178:
2025-06-13 07:34:49,961 - print_capture - INFO - label 178:
label 178:
label 178:
2025-06-13 07:34:49,961 - print_capture - INFO - label 178:
    bool180 = global(bool: <class 'bool'>)   ['bool180']
    bool180 = global(bool: <class 'bool'>)   ['bool180']
2025-06-13 07:34:49,961 - print_capture - INFO -     bool180 = global(bool: <class 'bool'>)   ['bool180']
    bool180 = global(bool: <class 'bool'>)   ['bool180']
    bool180 = global(bool: <class 'bool'>)   ['bool180']
2025-06-13 07:34:49,961 - print_capture - INFO -     bool180 = global(bool: <class 'bool'>)   ['bool180']
    $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
    $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
2025-06-13 07:34:49,961 - print_capture - INFO -     $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
    $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
    $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
2025-06-13 07:34:49,961 - print_capture - INFO -     $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
    branch $180pred, 182, 190                ['$180pred']
    branch $180pred, 182, 190                ['$180pred']
2025-06-13 07:34:49,961 - print_capture - INFO -     branch $180pred, 182, 190                ['$180pred']
    branch $180pred, 182, 190                ['$180pred']
    branch $180pred, 182, 190                ['$180pred']
2025-06-13 07:34:49,961 - print_capture - INFO -     branch $180pred, 182, 190                ['$180pred']
label 182:
label 182:
2025-06-13 07:34:49,961 - print_capture - INFO - label 182:
label 182:
label 182:
2025-06-13 07:34:49,961 - print_capture - INFO - label 182:
    $const182.0.8 = const(float, 1.0)        ['$const182.0.8']
    $const182.0.8 = const(float, 1.0)        ['$const182.0.8']
2025-06-13 07:34:49,961 - print_capture - INFO -     $const182.0.8 = const(float, 1.0)        ['$const182.0.8']
    $const182.0.8 = const(float, 1.0)        ['$const182.0.8']
    $const182.0.8 = const(float, 1.0)        ['$const182.0.8']
2025-06-13 07:34:49,961 - print_capture - INFO -     $const182.0.8 = const(float, 1.0)        ['$const182.0.8']
    $186binary_true_divide.2 = $const182.0.8 / r ['$186binary_true_divide.2', '$const182.0.8', 'r']
    $186binary_true_divide.2 = $const182.0.8 / r ['$186binary_true_divide.2', '$const182.0.8', 'r']
2025-06-13 07:34:49,961 - print_capture - INFO -     $186binary_true_divide.2 = $const182.0.8 / r ['$186binary_true_divide.2', '$const182.0.8', 'r']
    $186binary_true_divide.2 = $const182.0.8 / r ['$186binary_true_divide.2', '$const182.0.8', 'r']
    $186binary_true_divide.2 = $const182.0.8 / r ['$186binary_true_divide.2', '$const182.0.8', 'r']
2025-06-13 07:34:49,961 - print_capture - INFO -     $186binary_true_divide.2 = $const182.0.8 / r ['$186binary_true_divide.2', '$const182.0.8', 'r']
    $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
    $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
2025-06-13 07:34:49,961 - print_capture - INFO -     $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
    $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
    $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
2025-06-13 07:34:49,961 - print_capture - INFO -     $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
    return $188return_value.3                ['$188return_value.3']
    return $188return_value.3                ['$188return_value.3']
2025-06-13 07:34:49,961 - print_capture - INFO -     return $188return_value.3                ['$188return_value.3']
    return $188return_value.3                ['$188return_value.3']
    return $188return_value.3                ['$188return_value.3']
2025-06-13 07:34:49,961 - print_capture - INFO -     return $188return_value.3                ['$188return_value.3']
label 190:
label 190:
2025-06-13 07:34:49,961 - print_capture - INFO - label 190:
label 190:
label 190:
2025-06-13 07:34:49,961 - print_capture - INFO - label 190:
    $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
    $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
2025-06-13 07:34:49,961 - print_capture - INFO -     $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
    $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
    $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
2025-06-13 07:34:49,961 - print_capture - INFO -     $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
    return $192return_value.1                ['$192return_value.1']
    return $192return_value.1                ['$192return_value.1']
2025-06-13 07:34:49,961 - print_capture - INFO -     return $192return_value.1                ['$192return_value.1']
    return $192return_value.1                ['$192return_value.1']
    return $192return_value.1                ['$192return_value.1']
2025-06-13 07:34:49,961 - print_capture - INFO -     return $192return_value.1                ['$192return_value.1']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:50,008 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:50,008 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# --- LINE 2436 --- 
# --- LINE 2436 --- 
2025-06-13 07:34:50,008 - print_capture - INFO - # --- LINE 2436 --- 
# --- LINE 2436 --- 
# --- LINE 2436 --- 
2025-06-13 07:34:50,008 - print_capture - INFO - # --- LINE 2436 --- 
# label 0
# label 0
2025-06-13 07:34:50,008 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:50,008 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: complex64
#   x = arg(0, name=x)  :: complex64
2025-06-13 07:34:50,008 - print_capture - INFO - #   x = arg(0, name=x)  :: complex64
#   x = arg(0, name=x)  :: complex64
#   x = arg(0, name=x)  :: complex64
2025-06-13 07:34:50,008 - print_capture - INFO - #   x = arg(0, name=x)  :: complex64


2025-06-13 07:34:50,008 - print_capture - INFO - 


2025-06-13 07:34:50,008 - print_capture - INFO - 
@numba.vectorize(
@numba.vectorize(
2025-06-13 07:34:50,008 - print_capture - INFO - @numba.vectorize(
@numba.vectorize(
@numba.vectorize(
2025-06-13 07:34:50,008 - print_capture - INFO - @numba.vectorize(


2025-06-13 07:34:50,008 - print_capture - INFO - 


2025-06-13 07:34:50,008 - print_capture - INFO - 
    # --- LINE 2437 --- 
    # --- LINE 2437 --- 
2025-06-13 07:34:50,008 - print_capture - INFO -     # --- LINE 2437 --- 
    # --- LINE 2437 --- 
    # --- LINE 2437 --- 
2025-06-13 07:34:50,008 - print_capture - INFO -     # --- LINE 2437 --- 


2025-06-13 07:34:50,008 - print_capture - INFO - 


2025-06-13 07:34:50,008 - print_capture - INFO - 
    ["float32(complex64)", "float64(complex128)"], nopython=True, cache=True, identity=0
    ["float32(complex64)", "float64(complex128)"], nopython=True, cache=True, identity=0
2025-06-13 07:34:50,008 - print_capture - INFO -     ["float32(complex64)", "float64(complex128)"], nopython=True, cache=True, identity=0
    ["float32(complex64)", "float64(complex128)"], nopython=True, cache=True, identity=0
    ["float32(complex64)", "float64(complex128)"], nopython=True, cache=True, identity=0
2025-06-13 07:34:50,008 - print_capture - INFO -     ["float32(complex64)", "float64(complex128)"], nopython=True, cache=True, identity=0


2025-06-13 07:34:50,008 - print_capture - INFO - 


2025-06-13 07:34:50,008 - print_capture - INFO - 
# --- LINE 2438 --- 
# --- LINE 2438 --- 
2025-06-13 07:34:50,008 - print_capture - INFO - # --- LINE 2438 --- 
# --- LINE 2438 --- 
# --- LINE 2438 --- 
2025-06-13 07:34:50,008 - print_capture - INFO - # --- LINE 2438 --- 


2025-06-13 07:34:50,008 - print_capture - INFO - 


2025-06-13 07:34:50,008 - print_capture - INFO - 
)  # type: ignore
)  # type: ignore
2025-06-13 07:34:50,008 - print_capture - INFO - )  # type: ignore
)  # type: ignore
)  # type: ignore
2025-06-13 07:34:50,008 - print_capture - INFO - )  # type: ignore


2025-06-13 07:34:50,008 - print_capture - INFO - 


2025-06-13 07:34:50,008 - print_capture - INFO - 
# --- LINE 2439 --- 
# --- LINE 2439 --- 
2025-06-13 07:34:50,008 - print_capture - INFO - # --- LINE 2439 --- 
# --- LINE 2439 --- 
# --- LINE 2439 --- 
2025-06-13 07:34:50,008 - print_capture - INFO - # --- LINE 2439 --- 


2025-06-13 07:34:50,008 - print_capture - INFO - 


2025-06-13 07:34:50,009 - print_capture - INFO - 
def _cabs2(x: _ComplexLike_co) -> _FloatLike_co:  # pragma: no cover
def _cabs2(x: _ComplexLike_co) -> _FloatLike_co:  # pragma: no cover
2025-06-13 07:34:50,009 - print_capture - INFO - def _cabs2(x: _ComplexLike_co) -> _FloatLike_co:  # pragma: no cover
def _cabs2(x: _ComplexLike_co) -> _FloatLike_co:  # pragma: no cover
def _cabs2(x: _ComplexLike_co) -> _FloatLike_co:  # pragma: no cover
2025-06-13 07:34:50,009 - print_capture - INFO - def _cabs2(x: _ComplexLike_co) -> _FloatLike_co:  # pragma: no cover


2025-06-13 07:34:50,009 - print_capture - INFO - 


2025-06-13 07:34:50,009 - print_capture - INFO - 
    # --- LINE 2440 --- 
    # --- LINE 2440 --- 
2025-06-13 07:34:50,009 - print_capture - INFO -     # --- LINE 2440 --- 
    # --- LINE 2440 --- 
    # --- LINE 2440 --- 
2025-06-13 07:34:50,009 - print_capture - INFO -     # --- LINE 2440 --- 


2025-06-13 07:34:50,009 - print_capture - INFO - 


2025-06-13 07:34:50,009 - print_capture - INFO - 
    """Efficiently compute abs2 on complex inputs"""
    """Efficiently compute abs2 on complex inputs"""
2025-06-13 07:34:50,009 - print_capture - INFO -     """Efficiently compute abs2 on complex inputs"""
    """Efficiently compute abs2 on complex inputs"""
    """Efficiently compute abs2 on complex inputs"""
2025-06-13 07:34:50,009 - print_capture - INFO -     """Efficiently compute abs2 on complex inputs"""


2025-06-13 07:34:50,009 - print_capture - INFO - 


2025-06-13 07:34:50,009 - print_capture - INFO - 
    # --- LINE 2441 --- 
    # --- LINE 2441 --- 
2025-06-13 07:34:50,009 - print_capture - INFO -     # --- LINE 2441 --- 
    # --- LINE 2441 --- 
    # --- LINE 2441 --- 
2025-06-13 07:34:50,009 - print_capture - INFO -     # --- LINE 2441 --- 
    #   $4load_attr.1 = getattr(value=x, attr=real)  :: float32
    #   $4load_attr.1 = getattr(value=x, attr=real)  :: float32
2025-06-13 07:34:50,009 - print_capture - INFO -     #   $4load_attr.1 = getattr(value=x, attr=real)  :: float32
    #   $4load_attr.1 = getattr(value=x, attr=real)  :: float32
    #   $4load_attr.1 = getattr(value=x, attr=real)  :: float32
2025-06-13 07:34:50,009 - print_capture - INFO -     #   $4load_attr.1 = getattr(value=x, attr=real)  :: float32
    #   $const6.2.1 = const(int, 2)  :: Literal[int](2)
    #   $const6.2.1 = const(int, 2)  :: Literal[int](2)
2025-06-13 07:34:50,009 - print_capture - INFO -     #   $const6.2.1 = const(int, 2)  :: Literal[int](2)
    #   $const6.2.1 = const(int, 2)  :: Literal[int](2)
    #   $const6.2.1 = const(int, 2)  :: Literal[int](2)
2025-06-13 07:34:50,009 - print_capture - INFO -     #   $const6.2.1 = const(int, 2)  :: Literal[int](2)
    #   $8binary_power.3 = $4load_attr.1 ** $const6.2.1  :: float32
    #   $8binary_power.3 = $4load_attr.1 ** $const6.2.1  :: float32
2025-06-13 07:34:50,009 - print_capture - INFO -     #   $8binary_power.3 = $4load_attr.1 ** $const6.2.1  :: float32
    #   $8binary_power.3 = $4load_attr.1 ** $const6.2.1  :: float32
    #   $8binary_power.3 = $4load_attr.1 ** $const6.2.1  :: float32
2025-06-13 07:34:50,009 - print_capture - INFO -     #   $8binary_power.3 = $4load_attr.1 ** $const6.2.1  :: float32
    #   del $const6.2.1
    #   del $const6.2.1
2025-06-13 07:34:50,009 - print_capture - INFO -     #   del $const6.2.1
    #   del $const6.2.1
    #   del $const6.2.1
2025-06-13 07:34:50,009 - print_capture - INFO -     #   del $const6.2.1
    #   del $4load_attr.1
    #   del $4load_attr.1
2025-06-13 07:34:50,009 - print_capture - INFO -     #   del $4load_attr.1
    #   del $4load_attr.1
    #   del $4load_attr.1
2025-06-13 07:34:50,009 - print_capture - INFO -     #   del $4load_attr.1
    #   $12load_attr.5 = getattr(value=x, attr=imag)  :: float32
    #   $12load_attr.5 = getattr(value=x, attr=imag)  :: float32
2025-06-13 07:34:50,009 - print_capture - INFO -     #   $12load_attr.5 = getattr(value=x, attr=imag)  :: float32
    #   $12load_attr.5 = getattr(value=x, attr=imag)  :: float32
    #   $12load_attr.5 = getattr(value=x, attr=imag)  :: float32
2025-06-13 07:34:50,009 - print_capture - INFO -     #   $12load_attr.5 = getattr(value=x, attr=imag)  :: float32
    #   del x
    #   del x
2025-06-13 07:34:50,009 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:50,009 - print_capture - INFO -     #   del x
    #   $const14.6.1 = const(int, 2)  :: Literal[int](2)
    #   $const14.6.1 = const(int, 2)  :: Literal[int](2)
2025-06-13 07:34:50,009 - print_capture - INFO -     #   $const14.6.1 = const(int, 2)  :: Literal[int](2)
    #   $const14.6.1 = const(int, 2)  :: Literal[int](2)
    #   $const14.6.1 = const(int, 2)  :: Literal[int](2)
2025-06-13 07:34:50,009 - print_capture - INFO -     #   $const14.6.1 = const(int, 2)  :: Literal[int](2)
    #   $16binary_power.7 = $12load_attr.5 ** $const14.6.1  :: float32
    #   $16binary_power.7 = $12load_attr.5 ** $const14.6.1  :: float32
2025-06-13 07:34:50,009 - print_capture - INFO -     #   $16binary_power.7 = $12load_attr.5 ** $const14.6.1  :: float32
    #   $16binary_power.7 = $12load_attr.5 ** $const14.6.1  :: float32
    #   $16binary_power.7 = $12load_attr.5 ** $const14.6.1  :: float32
2025-06-13 07:34:50,009 - print_capture - INFO -     #   $16binary_power.7 = $12load_attr.5 ** $const14.6.1  :: float32
    #   del $const14.6.1
    #   del $const14.6.1
2025-06-13 07:34:50,009 - print_capture - INFO -     #   del $const14.6.1
    #   del $const14.6.1
    #   del $const14.6.1
2025-06-13 07:34:50,009 - print_capture - INFO -     #   del $const14.6.1
    #   del $12load_attr.5
    #   del $12load_attr.5
2025-06-13 07:34:50,009 - print_capture - INFO -     #   del $12load_attr.5
    #   del $12load_attr.5
    #   del $12load_attr.5
2025-06-13 07:34:50,009 - print_capture - INFO -     #   del $12load_attr.5
    #   $18binary_add.8 = $8binary_power.3 + $16binary_power.7  :: float32
    #   $18binary_add.8 = $8binary_power.3 + $16binary_power.7  :: float32
2025-06-13 07:34:50,009 - print_capture - INFO -     #   $18binary_add.8 = $8binary_power.3 + $16binary_power.7  :: float32
    #   $18binary_add.8 = $8binary_power.3 + $16binary_power.7  :: float32
    #   $18binary_add.8 = $8binary_power.3 + $16binary_power.7  :: float32
2025-06-13 07:34:50,009 - print_capture - INFO -     #   $18binary_add.8 = $8binary_power.3 + $16binary_power.7  :: float32
    #   del $8binary_power.3
    #   del $8binary_power.3
2025-06-13 07:34:50,009 - print_capture - INFO -     #   del $8binary_power.3
    #   del $8binary_power.3
    #   del $8binary_power.3
2025-06-13 07:34:50,009 - print_capture - INFO -     #   del $8binary_power.3
    #   del $16binary_power.7
    #   del $16binary_power.7
2025-06-13 07:34:50,009 - print_capture - INFO -     #   del $16binary_power.7
    #   del $16binary_power.7
    #   del $16binary_power.7
2025-06-13 07:34:50,009 - print_capture - INFO -     #   del $16binary_power.7
    #   $20return_value.9 = cast(value=$18binary_add.8)  :: float32
    #   $20return_value.9 = cast(value=$18binary_add.8)  :: float32
2025-06-13 07:34:50,009 - print_capture - INFO -     #   $20return_value.9 = cast(value=$18binary_add.8)  :: float32
    #   $20return_value.9 = cast(value=$18binary_add.8)  :: float32
    #   $20return_value.9 = cast(value=$18binary_add.8)  :: float32
2025-06-13 07:34:50,009 - print_capture - INFO -     #   $20return_value.9 = cast(value=$18binary_add.8)  :: float32
    #   del $18binary_add.8
    #   del $18binary_add.8
2025-06-13 07:34:50,009 - print_capture - INFO -     #   del $18binary_add.8
    #   del $18binary_add.8
    #   del $18binary_add.8
2025-06-13 07:34:50,009 - print_capture - INFO -     #   del $18binary_add.8
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:50,009 - print_capture - INFO -     #   return $20return_value.9
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:50,010 - print_capture - INFO -     #   return $20return_value.9


2025-06-13 07:34:50,010 - print_capture - INFO - 


2025-06-13 07:34:50,010 - print_capture - INFO - 
    return x.real**2 + x.imag**2
    return x.real**2 + x.imag**2
2025-06-13 07:34:50,010 - print_capture - INFO -     return x.real**2 + x.imag**2
    return x.real**2 + x.imag**2
    return x.real**2 + x.imag**2
2025-06-13 07:34:50,010 - print_capture - INFO -     return x.real**2 + x.imag**2


2025-06-13 07:34:50,010 - print_capture - INFO - 


2025-06-13 07:34:50,010 - print_capture - INFO - 
label 0:
label 0:
2025-06-13 07:34:50,022 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:50,023 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:50,023 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:50,023 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $4load_attr.1 = getattr(value=x, attr=real) ['$4load_attr.1', 'x']
    $4load_attr.1 = getattr(value=x, attr=real) ['$4load_attr.1', 'x']
2025-06-13 07:34:50,023 - print_capture - INFO -     $4load_attr.1 = getattr(value=x, attr=real) ['$4load_attr.1', 'x']
    $4load_attr.1 = getattr(value=x, attr=real) ['$4load_attr.1', 'x']
    $4load_attr.1 = getattr(value=x, attr=real) ['$4load_attr.1', 'x']
2025-06-13 07:34:50,023 - print_capture - INFO -     $4load_attr.1 = getattr(value=x, attr=real) ['$4load_attr.1', 'x']
    $const6.2.1 = const(int, 2)              ['$const6.2.1']
    $const6.2.1 = const(int, 2)              ['$const6.2.1']
2025-06-13 07:34:50,023 - print_capture - INFO -     $const6.2.1 = const(int, 2)              ['$const6.2.1']
    $const6.2.1 = const(int, 2)              ['$const6.2.1']
    $const6.2.1 = const(int, 2)              ['$const6.2.1']
2025-06-13 07:34:50,023 - print_capture - INFO -     $const6.2.1 = const(int, 2)              ['$const6.2.1']
    $8binary_power.3 = $4load_attr.1 ** $const6.2.1 ['$4load_attr.1', '$8binary_power.3', '$const6.2.1']
    $8binary_power.3 = $4load_attr.1 ** $const6.2.1 ['$4load_attr.1', '$8binary_power.3', '$const6.2.1']
2025-06-13 07:34:50,023 - print_capture - INFO -     $8binary_power.3 = $4load_attr.1 ** $const6.2.1 ['$4load_attr.1', '$8binary_power.3', '$const6.2.1']
    $8binary_power.3 = $4load_attr.1 ** $const6.2.1 ['$4load_attr.1', '$8binary_power.3', '$const6.2.1']
    $8binary_power.3 = $4load_attr.1 ** $const6.2.1 ['$4load_attr.1', '$8binary_power.3', '$const6.2.1']
2025-06-13 07:34:50,023 - print_capture - INFO -     $8binary_power.3 = $4load_attr.1 ** $const6.2.1 ['$4load_attr.1', '$8binary_power.3', '$const6.2.1']
    $12load_attr.5 = getattr(value=x, attr=imag) ['$12load_attr.5', 'x']
    $12load_attr.5 = getattr(value=x, attr=imag) ['$12load_attr.5', 'x']
2025-06-13 07:34:50,023 - print_capture - INFO -     $12load_attr.5 = getattr(value=x, attr=imag) ['$12load_attr.5', 'x']
    $12load_attr.5 = getattr(value=x, attr=imag) ['$12load_attr.5', 'x']
    $12load_attr.5 = getattr(value=x, attr=imag) ['$12load_attr.5', 'x']
2025-06-13 07:34:50,023 - print_capture - INFO -     $12load_attr.5 = getattr(value=x, attr=imag) ['$12load_attr.5', 'x']
    $const14.6.1 = const(int, 2)             ['$const14.6.1']
    $const14.6.1 = const(int, 2)             ['$const14.6.1']
2025-06-13 07:34:50,023 - print_capture - INFO -     $const14.6.1 = const(int, 2)             ['$const14.6.1']
    $const14.6.1 = const(int, 2)             ['$const14.6.1']
    $const14.6.1 = const(int, 2)             ['$const14.6.1']
2025-06-13 07:34:50,023 - print_capture - INFO -     $const14.6.1 = const(int, 2)             ['$const14.6.1']
    $16binary_power.7 = $12load_attr.5 ** $const14.6.1 ['$12load_attr.5', '$16binary_power.7', '$const14.6.1']
    $16binary_power.7 = $12load_attr.5 ** $const14.6.1 ['$12load_attr.5', '$16binary_power.7', '$const14.6.1']
2025-06-13 07:34:50,023 - print_capture - INFO -     $16binary_power.7 = $12load_attr.5 ** $const14.6.1 ['$12load_attr.5', '$16binary_power.7', '$const14.6.1']
    $16binary_power.7 = $12load_attr.5 ** $const14.6.1 ['$12load_attr.5', '$16binary_power.7', '$const14.6.1']
    $16binary_power.7 = $12load_attr.5 ** $const14.6.1 ['$12load_attr.5', '$16binary_power.7', '$const14.6.1']
2025-06-13 07:34:50,023 - print_capture - INFO -     $16binary_power.7 = $12load_attr.5 ** $const14.6.1 ['$12load_attr.5', '$16binary_power.7', '$const14.6.1']
    $18binary_add.8 = $8binary_power.3 + $16binary_power.7 ['$16binary_power.7', '$18binary_add.8', '$8binary_power.3']
    $18binary_add.8 = $8binary_power.3 + $16binary_power.7 ['$16binary_power.7', '$18binary_add.8', '$8binary_power.3']
2025-06-13 07:34:50,023 - print_capture - INFO -     $18binary_add.8 = $8binary_power.3 + $16binary_power.7 ['$16binary_power.7', '$18binary_add.8', '$8binary_power.3']
    $18binary_add.8 = $8binary_power.3 + $16binary_power.7 ['$16binary_power.7', '$18binary_add.8', '$8binary_power.3']
    $18binary_add.8 = $8binary_power.3 + $16binary_power.7 ['$16binary_power.7', '$18binary_add.8', '$8binary_power.3']
2025-06-13 07:34:50,023 - print_capture - INFO -     $18binary_add.8 = $8binary_power.3 + $16binary_power.7 ['$16binary_power.7', '$18binary_add.8', '$8binary_power.3']
    $20return_value.9 = cast(value=$18binary_add.8) ['$18binary_add.8', '$20return_value.9']
    $20return_value.9 = cast(value=$18binary_add.8) ['$18binary_add.8', '$20return_value.9']
2025-06-13 07:34:50,023 - print_capture - INFO -     $20return_value.9 = cast(value=$18binary_add.8) ['$18binary_add.8', '$20return_value.9']
    $20return_value.9 = cast(value=$18binary_add.8) ['$18binary_add.8', '$20return_value.9']
    $20return_value.9 = cast(value=$18binary_add.8) ['$18binary_add.8', '$20return_value.9']
2025-06-13 07:34:50,023 - print_capture - INFO -     $20return_value.9 = cast(value=$18binary_add.8) ['$18binary_add.8', '$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:50,023 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']
2025-06-13 07:34:50,023 - print_capture - INFO -     return $20return_value.9                 ['$20return_value.9']
label 0:
label 0:
2025-06-13 07:34:50,029 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:50,029 - print_capture - INFO - label 0:
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:50,029 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
    a = arg(0, name=a)                       ['a']
2025-06-13 07:34:50,029 - print_capture - INFO -     a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    b = arg(1, name=b)                       ['b']
2025-06-13 07:34:50,029 - print_capture - INFO -     b = arg(1, name=b)                       ['b']
    b = arg(1, name=b)                       ['b']
    b = arg(1, name=b)                       ['b']
2025-06-13 07:34:50,029 - print_capture - INFO -     b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
2025-06-13 07:34:50,029 - print_capture - INFO -     $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
2025-06-13 07:34:50,029 - print_capture - INFO -     $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1.1 = const(int, 1)              ['$const4.1.1']
    $const4.1.1 = const(int, 1)              ['$const4.1.1']
2025-06-13 07:34:50,029 - print_capture - INFO -     $const4.1.1 = const(int, 1)              ['$const4.1.1']
    $const4.1.1 = const(int, 1)              ['$const4.1.1']
    $const4.1.1 = const(int, 1)              ['$const4.1.1']
2025-06-13 07:34:50,029 - print_capture - INFO -     $const4.1.1 = const(int, 1)              ['$const4.1.1']
    r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1.1', 'r']
    r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1.1', 'r']
2025-06-13 07:34:50,029 - print_capture - INFO -     r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1.1', 'r']
    r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1.1', 'r']
    r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1.1', 'r']
2025-06-13 07:34:50,029 - print_capture - INFO -     r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
2025-06-13 07:34:50,029 - print_capture - INFO -     $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
2025-06-13 07:34:50,030 - print_capture - INFO -     $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
2025-06-13 07:34:50,030 - print_capture - INFO -     a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
2025-06-13 07:34:50,030 - print_capture - INFO -     a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7.2 = const(int, 0)             ['$const20.7.2']
    $const20.7.2 = const(int, 0)             ['$const20.7.2']
2025-06-13 07:34:50,030 - print_capture - INFO -     $const20.7.2 = const(int, 0)             ['$const20.7.2']
    $const20.7.2 = const(int, 0)             ['$const20.7.2']
    $const20.7.2 = const(int, 0)             ['$const20.7.2']
2025-06-13 07:34:50,030 - print_capture - INFO -     $const20.7.2 = const(int, 0)             ['$const20.7.2']
    $22compare_op.8 = b < $const20.7.2       ['$22compare_op.8', '$const20.7.2', 'b']
    $22compare_op.8 = b < $const20.7.2       ['$22compare_op.8', '$const20.7.2', 'b']
2025-06-13 07:34:50,030 - print_capture - INFO -     $22compare_op.8 = b < $const20.7.2       ['$22compare_op.8', '$const20.7.2', 'b']
    $22compare_op.8 = b < $const20.7.2       ['$22compare_op.8', '$const20.7.2', 'b']
    $22compare_op.8 = b < $const20.7.2       ['$22compare_op.8', '$const20.7.2', 'b']
2025-06-13 07:34:50,030 - print_capture - INFO -     $22compare_op.8 = b < $const20.7.2       ['$22compare_op.8', '$const20.7.2', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
2025-06-13 07:34:50,030 - print_capture - INFO -     bool24 = global(bool: <class 'bool'>)    ['bool24']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
2025-06-13 07:34:50,030 - print_capture - INFO -     bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
2025-06-13 07:34:50,030 - print_capture - INFO -     $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
2025-06-13 07:34:50,030 - print_capture - INFO -     $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
    branch $24pred, 26, 98                   ['$24pred']
2025-06-13 07:34:50,030 - print_capture - INFO -     branch $24pred, 26, 98                   ['$24pred']
    branch $24pred, 26, 98                   ['$24pred']
    branch $24pred, 26, 98                   ['$24pred']
2025-06-13 07:34:50,030 - print_capture - INFO -     branch $24pred, 26, 98                   ['$24pred']
label 26:
label 26:
2025-06-13 07:34:50,030 - print_capture - INFO - label 26:
label 26:
label 26:
2025-06-13 07:34:50,030 - print_capture - INFO - label 26:
    invert = const(bool, True)               ['invert']
    invert = const(bool, True)               ['invert']
2025-06-13 07:34:50,030 - print_capture - INFO -     invert = const(bool, True)               ['invert']
    invert = const(bool, True)               ['invert']
    invert = const(bool, True)               ['invert']
2025-06-13 07:34:50,030 - print_capture - INFO -     invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
2025-06-13 07:34:50,030 - print_capture - INFO -     exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
2025-06-13 07:34:50,030 - print_capture - INFO -     exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4.2 = const(int, 0)             ['$const38.4.2']
    $const38.4.2 = const(int, 0)             ['$const38.4.2']
2025-06-13 07:34:50,030 - print_capture - INFO -     $const38.4.2 = const(int, 0)             ['$const38.4.2']
    $const38.4.2 = const(int, 0)             ['$const38.4.2']
    $const38.4.2 = const(int, 0)             ['$const38.4.2']
2025-06-13 07:34:50,030 - print_capture - INFO -     $const38.4.2 = const(int, 0)             ['$const38.4.2']
    $40compare_op.5 = exp < $const38.4.2     ['$40compare_op.5', '$const38.4.2', 'exp']
    $40compare_op.5 = exp < $const38.4.2     ['$40compare_op.5', '$const38.4.2', 'exp']
2025-06-13 07:34:50,030 - print_capture - INFO -     $40compare_op.5 = exp < $const38.4.2     ['$40compare_op.5', '$const38.4.2', 'exp']
    $40compare_op.5 = exp < $const38.4.2     ['$40compare_op.5', '$const38.4.2', 'exp']
    $40compare_op.5 = exp < $const38.4.2     ['$40compare_op.5', '$const38.4.2', 'exp']
2025-06-13 07:34:50,030 - print_capture - INFO -     $40compare_op.5 = exp < $const38.4.2     ['$40compare_op.5', '$const38.4.2', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
2025-06-13 07:34:50,030 - print_capture - INFO -     bool42 = global(bool: <class 'bool'>)    ['bool42']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
2025-06-13 07:34:50,030 - print_capture - INFO -     bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
2025-06-13 07:34:50,030 - print_capture - INFO -     $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
2025-06-13 07:34:50,030 - print_capture - INFO -     $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
    branch $42pred, 44, 48                   ['$42pred']
2025-06-13 07:34:50,030 - print_capture - INFO -     branch $42pred, 44, 48                   ['$42pred']
    branch $42pred, 44, 48                   ['$42pred']
    branch $42pred, 44, 48                   ['$42pred']
2025-06-13 07:34:50,030 - print_capture - INFO -     branch $42pred, 44, 48                   ['$42pred']
label 44:
label 44:
2025-06-13 07:34:50,030 - print_capture - INFO - label 44:
label 44:
label 44:
2025-06-13 07:34:50,030 - print_capture - INFO - label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
2025-06-13 07:34:50,030 - print_capture - INFO -     $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
2025-06-13 07:34:50,030 - print_capture - INFO -     $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
2025-06-13 07:34:50,030 - print_capture - INFO -     raise $44load_global.0                   ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
2025-06-13 07:34:50,030 - print_capture - INFO -     raise $44load_global.0                   ['$44load_global.0']
label 48:
label 48:
2025-06-13 07:34:50,030 - print_capture - INFO - label 48:
label 48:
label 48:
2025-06-13 07:34:50,030 - print_capture - INFO - label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
2025-06-13 07:34:50,030 - print_capture - INFO -     $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
2025-06-13 07:34:50,030 - print_capture - INFO -     $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
2025-06-13 07:34:50,030 - print_capture - INFO -     bool50 = global(bool: <class 'bool'>)    ['bool50']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
2025-06-13 07:34:50,030 - print_capture - INFO -     bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
2025-06-13 07:34:50,031 - print_capture - INFO -     $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
2025-06-13 07:34:50,031 - print_capture - INFO -     $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 96                   ['$50pred']
    branch $50pred, 52, 96                   ['$50pred']
2025-06-13 07:34:50,031 - print_capture - INFO -     branch $50pred, 52, 96                   ['$50pred']
    branch $50pred, 52, 96                   ['$50pred']
    branch $50pred, 52, 96                   ['$50pred']
2025-06-13 07:34:50,031 - print_capture - INFO -     branch $50pred, 52, 96                   ['$50pred']
label 52:
label 52:
2025-06-13 07:34:50,031 - print_capture - INFO - label 52:
label 52:
label 52:
2025-06-13 07:34:50,031 - print_capture - INFO - label 52:
    $const54.1.2 = const(int, 0)             ['$const54.1.2']
    $const54.1.2 = const(int, 0)             ['$const54.1.2']
2025-06-13 07:34:50,031 - print_capture - INFO -     $const54.1.2 = const(int, 0)             ['$const54.1.2']
    $const54.1.2 = const(int, 0)             ['$const54.1.2']
    $const54.1.2 = const(int, 0)             ['$const54.1.2']
2025-06-13 07:34:50,031 - print_capture - INFO -     $const54.1.2 = const(int, 0)             ['$const54.1.2']
    $56compare_op.2 = a.1 == $const54.1.2    ['$56compare_op.2', '$const54.1.2', 'a.1']
    $56compare_op.2 = a.1 == $const54.1.2    ['$56compare_op.2', '$const54.1.2', 'a.1']
2025-06-13 07:34:50,031 - print_capture - INFO -     $56compare_op.2 = a.1 == $const54.1.2    ['$56compare_op.2', '$const54.1.2', 'a.1']
    $56compare_op.2 = a.1 == $const54.1.2    ['$56compare_op.2', '$const54.1.2', 'a.1']
    $56compare_op.2 = a.1 == $const54.1.2    ['$56compare_op.2', '$const54.1.2', 'a.1']
2025-06-13 07:34:50,031 - print_capture - INFO -     $56compare_op.2 = a.1 == $const54.1.2    ['$56compare_op.2', '$const54.1.2', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
2025-06-13 07:34:50,031 - print_capture - INFO -     bool58 = global(bool: <class 'bool'>)    ['bool58']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
2025-06-13 07:34:50,031 - print_capture - INFO -     bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
2025-06-13 07:34:50,031 - print_capture - INFO -     $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
2025-06-13 07:34:50,031 - print_capture - INFO -     $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
    branch $58pred, 60, 76                   ['$58pred']
2025-06-13 07:34:50,031 - print_capture - INFO -     branch $58pred, 60, 76                   ['$58pred']
    branch $58pred, 60, 76                   ['$58pred']
    branch $58pred, 60, 76                   ['$58pred']
2025-06-13 07:34:50,031 - print_capture - INFO -     branch $58pred, 60, 76                   ['$58pred']
label 60:
label 60:
2025-06-13 07:34:50,031 - print_capture - INFO - label 60:
label 60:
label 60:
2025-06-13 07:34:50,031 - print_capture - INFO - label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
2025-06-13 07:34:50,031 - print_capture - INFO -     $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
2025-06-13 07:34:50,031 - print_capture - INFO -     $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
2025-06-13 07:34:50,031 - print_capture - INFO -     bool62 = global(bool: <class 'bool'>)    ['bool62']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
2025-06-13 07:34:50,031 - print_capture - INFO -     bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
2025-06-13 07:34:50,031 - print_capture - INFO -     $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
2025-06-13 07:34:50,031 - print_capture - INFO -     $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
    branch $62pred, 64, 68                   ['$62pred']
2025-06-13 07:34:50,031 - print_capture - INFO -     branch $62pred, 64, 68                   ['$62pred']
    branch $62pred, 64, 68                   ['$62pred']
    branch $62pred, 64, 68                   ['$62pred']
2025-06-13 07:34:50,031 - print_capture - INFO -     branch $62pred, 64, 68                   ['$62pred']
label 64:
label 64:
2025-06-13 07:34:50,031 - print_capture - INFO - label 64:
label 64:
label 64:
2025-06-13 07:34:50,031 - print_capture - INFO - label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
2025-06-13 07:34:50,031 - print_capture - INFO -     $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
2025-06-13 07:34:50,031 - print_capture - INFO -     $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
2025-06-13 07:34:50,031 - print_capture - INFO -     $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
2025-06-13 07:34:50,031 - print_capture - INFO -     $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
2025-06-13 07:34:50,031 - print_capture - INFO -     return $66return_value.1                 ['$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
2025-06-13 07:34:50,031 - print_capture - INFO -     return $66return_value.1                 ['$66return_value.1']
label 68:
label 68:
2025-06-13 07:34:50,031 - print_capture - INFO - label 68:
label 68:
label 68:
2025-06-13 07:34:50,031 - print_capture - INFO - label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
2025-06-13 07:34:50,031 - print_capture - INFO -     $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
2025-06-13 07:34:50,031 - print_capture - INFO -     $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1.4 = const(str, 0 cannot be raised to a negative power) ['$const70.1.4']
    $const70.1.4 = const(str, 0 cannot be raised to a negative power) ['$const70.1.4']
2025-06-13 07:34:50,031 - print_capture - INFO -     $const70.1.4 = const(str, 0 cannot be raised to a negative power) ['$const70.1.4']
    $const70.1.4 = const(str, 0 cannot be raised to a negative power) ['$const70.1.4']
    $const70.1.4 = const(str, 0 cannot be raised to a negative power) ['$const70.1.4']
2025-06-13 07:34:50,031 - print_capture - INFO -     $const70.1.4 = const(str, 0 cannot be raised to a negative power) ['$const70.1.4']
    $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1.4']
    $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1.4']
2025-06-13 07:34:50,031 - print_capture - INFO -     $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1.4']
    $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1.4']
    $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1.4']
2025-06-13 07:34:50,031 - print_capture - INFO -     $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1.4']
    raise $72call_function.2                 ['$72call_function.2']
    raise $72call_function.2                 ['$72call_function.2']
2025-06-13 07:34:50,032 - print_capture - INFO -     raise $72call_function.2                 ['$72call_function.2']
    raise $72call_function.2                 ['$72call_function.2']
    raise $72call_function.2                 ['$72call_function.2']
2025-06-13 07:34:50,032 - print_capture - INFO -     raise $72call_function.2                 ['$72call_function.2']
label 76:
label 76:
2025-06-13 07:34:50,032 - print_capture - INFO - label 76:
label 76:
label 76:
2025-06-13 07:34:50,032 - print_capture - INFO - label 76:
    $const78.1.1 = const(int, 1)             ['$const78.1.1']
    $const78.1.1 = const(int, 1)             ['$const78.1.1']
2025-06-13 07:34:50,032 - print_capture - INFO -     $const78.1.1 = const(int, 1)             ['$const78.1.1']
    $const78.1.1 = const(int, 1)             ['$const78.1.1']
    $const78.1.1 = const(int, 1)             ['$const78.1.1']
2025-06-13 07:34:50,032 - print_capture - INFO -     $const78.1.1 = const(int, 1)             ['$const78.1.1']
    $80compare_op.2 = a.1 != $const78.1.1    ['$80compare_op.2', '$const78.1.1', 'a.1']
    $80compare_op.2 = a.1 != $const78.1.1    ['$80compare_op.2', '$const78.1.1', 'a.1']
2025-06-13 07:34:50,032 - print_capture - INFO -     $80compare_op.2 = a.1 != $const78.1.1    ['$80compare_op.2', '$const78.1.1', 'a.1']
    $80compare_op.2 = a.1 != $const78.1.1    ['$80compare_op.2', '$const78.1.1', 'a.1']
    $80compare_op.2 = a.1 != $const78.1.1    ['$80compare_op.2', '$const78.1.1', 'a.1']
2025-06-13 07:34:50,032 - print_capture - INFO -     $80compare_op.2 = a.1 != $const78.1.1    ['$80compare_op.2', '$const78.1.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
2025-06-13 07:34:50,032 - print_capture - INFO -     bool82 = global(bool: <class 'bool'>)    ['bool82']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
2025-06-13 07:34:50,032 - print_capture - INFO -     bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
2025-06-13 07:34:50,032 - print_capture - INFO -     $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
2025-06-13 07:34:50,032 - print_capture - INFO -     $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 96                   ['$82pred']
    branch $82pred, 84, 96                   ['$82pred']
2025-06-13 07:34:50,032 - print_capture - INFO -     branch $82pred, 84, 96                   ['$82pred']
    branch $82pred, 84, 96                   ['$82pred']
    branch $82pred, 84, 96                   ['$82pred']
2025-06-13 07:34:50,032 - print_capture - INFO -     branch $82pred, 84, 96                   ['$82pred']
label 84:
label 84:
2025-06-13 07:34:50,032 - print_capture - INFO - label 84:
label 84:
label 84:
2025-06-13 07:34:50,032 - print_capture - INFO - label 84:
    $const86.1.5 = const(int, -1)            ['$const86.1.5']
    $const86.1.5 = const(int, -1)            ['$const86.1.5']
2025-06-13 07:34:50,032 - print_capture - INFO -     $const86.1.5 = const(int, -1)            ['$const86.1.5']
    $const86.1.5 = const(int, -1)            ['$const86.1.5']
    $const86.1.5 = const(int, -1)            ['$const86.1.5']
2025-06-13 07:34:50,032 - print_capture - INFO -     $const86.1.5 = const(int, -1)            ['$const86.1.5']
    $88compare_op.2 = a.1 != $const86.1.5    ['$88compare_op.2', '$const86.1.5', 'a.1']
    $88compare_op.2 = a.1 != $const86.1.5    ['$88compare_op.2', '$const86.1.5', 'a.1']
2025-06-13 07:34:50,032 - print_capture - INFO -     $88compare_op.2 = a.1 != $const86.1.5    ['$88compare_op.2', '$const86.1.5', 'a.1']
    $88compare_op.2 = a.1 != $const86.1.5    ['$88compare_op.2', '$const86.1.5', 'a.1']
    $88compare_op.2 = a.1 != $const86.1.5    ['$88compare_op.2', '$const86.1.5', 'a.1']
2025-06-13 07:34:50,032 - print_capture - INFO -     $88compare_op.2 = a.1 != $const86.1.5    ['$88compare_op.2', '$const86.1.5', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
2025-06-13 07:34:50,032 - print_capture - INFO -     bool90 = global(bool: <class 'bool'>)    ['bool90']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
2025-06-13 07:34:50,032 - print_capture - INFO -     bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
2025-06-13 07:34:50,032 - print_capture - INFO -     $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
2025-06-13 07:34:50,032 - print_capture - INFO -     $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 96                   ['$90pred']
    branch $90pred, 92, 96                   ['$90pred']
2025-06-13 07:34:50,032 - print_capture - INFO -     branch $90pred, 92, 96                   ['$90pred']
    branch $90pred, 92, 96                   ['$90pred']
    branch $90pred, 92, 96                   ['$90pred']
2025-06-13 07:34:50,032 - print_capture - INFO -     branch $90pred, 92, 96                   ['$90pred']
label 92:
label 92:
2025-06-13 07:34:50,032 - print_capture - INFO - label 92:
label 92:
label 92:
2025-06-13 07:34:50,032 - print_capture - INFO - label 92:
    $const92.0.2 = const(int, 0)             ['$const92.0.2']
    $const92.0.2 = const(int, 0)             ['$const92.0.2']
2025-06-13 07:34:50,032 - print_capture - INFO -     $const92.0.2 = const(int, 0)             ['$const92.0.2']
    $const92.0.2 = const(int, 0)             ['$const92.0.2']
    $const92.0.2 = const(int, 0)             ['$const92.0.2']
2025-06-13 07:34:50,032 - print_capture - INFO -     $const92.0.2 = const(int, 0)             ['$const92.0.2']
    $94return_value.1 = cast(value=$const92.0.2) ['$94return_value.1', '$const92.0.2']
    $94return_value.1 = cast(value=$const92.0.2) ['$94return_value.1', '$const92.0.2']
2025-06-13 07:34:50,032 - print_capture - INFO -     $94return_value.1 = cast(value=$const92.0.2) ['$94return_value.1', '$const92.0.2']
    $94return_value.1 = cast(value=$const92.0.2) ['$94return_value.1', '$const92.0.2']
    $94return_value.1 = cast(value=$const92.0.2) ['$94return_value.1', '$const92.0.2']
2025-06-13 07:34:50,032 - print_capture - INFO -     $94return_value.1 = cast(value=$const92.0.2) ['$94return_value.1', '$const92.0.2']
    return $94return_value.1                 ['$94return_value.1']
    return $94return_value.1                 ['$94return_value.1']
2025-06-13 07:34:50,032 - print_capture - INFO -     return $94return_value.1                 ['$94return_value.1']
    return $94return_value.1                 ['$94return_value.1']
    return $94return_value.1                 ['$94return_value.1']
2025-06-13 07:34:50,032 - print_capture - INFO -     return $94return_value.1                 ['$94return_value.1']
label 96:
label 96:
2025-06-13 07:34:50,032 - print_capture - INFO - label 96:
label 96:
label 96:
2025-06-13 07:34:50,032 - print_capture - INFO - label 96:
    jump 106                                 []
    jump 106                                 []
2025-06-13 07:34:50,032 - print_capture - INFO -     jump 106                                 []
    jump 106                                 []
    jump 106                                 []
2025-06-13 07:34:50,032 - print_capture - INFO -     jump 106                                 []
label 98:
label 98:
2025-06-13 07:34:50,032 - print_capture - INFO - label 98:
label 98:
label 98:
2025-06-13 07:34:50,032 - print_capture - INFO - label 98:
    invert = const(bool, False)              ['invert']
    invert = const(bool, False)              ['invert']
2025-06-13 07:34:50,032 - print_capture - INFO -     invert = const(bool, False)              ['invert']
    invert = const(bool, False)              ['invert']
    invert = const(bool, False)              ['invert']
2025-06-13 07:34:50,032 - print_capture - INFO -     invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    exp = b                                  ['b', 'exp']
2025-06-13 07:34:50,032 - print_capture - INFO -     exp = b                                  ['b', 'exp']
    exp = b                                  ['b', 'exp']
    exp = b                                  ['b', 'exp']
2025-06-13 07:34:50,032 - print_capture - INFO -     exp = b                                  ['b', 'exp']
    jump 106                                 []
    jump 106                                 []
2025-06-13 07:34:50,033 - print_capture - INFO -     jump 106                                 []
    jump 106                                 []
    jump 106                                 []
2025-06-13 07:34:50,033 - print_capture - INFO -     jump 106                                 []
label 106:
label 106:
2025-06-13 07:34:50,033 - print_capture - INFO - label 106:
label 106:
label 106:
2025-06-13 07:34:50,033 - print_capture - INFO - label 106:
    $const108.1.7 = const(int, 65536)        ['$const108.1.7']
    $const108.1.7 = const(int, 65536)        ['$const108.1.7']
2025-06-13 07:34:50,033 - print_capture - INFO -     $const108.1.7 = const(int, 65536)        ['$const108.1.7']
    $const108.1.7 = const(int, 65536)        ['$const108.1.7']
    $const108.1.7 = const(int, 65536)        ['$const108.1.7']
2025-06-13 07:34:50,033 - print_capture - INFO -     $const108.1.7 = const(int, 65536)        ['$const108.1.7']
    $110compare_op.2 = exp > $const108.1.7   ['$110compare_op.2', '$const108.1.7', 'exp']
    $110compare_op.2 = exp > $const108.1.7   ['$110compare_op.2', '$const108.1.7', 'exp']
2025-06-13 07:34:50,033 - print_capture - INFO -     $110compare_op.2 = exp > $const108.1.7   ['$110compare_op.2', '$const108.1.7', 'exp']
    $110compare_op.2 = exp > $const108.1.7   ['$110compare_op.2', '$const108.1.7', 'exp']
    $110compare_op.2 = exp > $const108.1.7   ['$110compare_op.2', '$const108.1.7', 'exp']
2025-06-13 07:34:50,033 - print_capture - INFO -     $110compare_op.2 = exp > $const108.1.7   ['$110compare_op.2', '$const108.1.7', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
2025-06-13 07:34:50,033 - print_capture - INFO -     bool112 = global(bool: <class 'bool'>)   ['bool112']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
2025-06-13 07:34:50,033 - print_capture - INFO -     bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
2025-06-13 07:34:50,033 - print_capture - INFO -     $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
2025-06-13 07:34:50,033 - print_capture - INFO -     $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
    branch $112pred, 114, 130                ['$112pred']
2025-06-13 07:34:50,033 - print_capture - INFO -     branch $112pred, 114, 130                ['$112pred']
    branch $112pred, 114, 130                ['$112pred']
    branch $112pred, 114, 130                ['$112pred']
2025-06-13 07:34:50,033 - print_capture - INFO -     branch $112pred, 114, 130                ['$112pred']
label 114:
label 114:
2025-06-13 07:34:50,033 - print_capture - INFO - label 114:
label 114:
label 114:
2025-06-13 07:34:50,033 - print_capture - INFO - label 114:
    $114load_global.0 = global(math: <module 'math' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $114load_global.0 = global(math: <module 'math' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>) ['$114load_global.0']
2025-06-13 07:34:50,033 - print_capture - INFO -     $114load_global.0 = global(math: <module 'math' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $114load_global.0 = global(math: <module 'math' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $114load_global.0 = global(math: <module 'math' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>) ['$114load_global.0']
2025-06-13 07:34:50,033 - print_capture - INFO -     $114load_global.0 = global(math: <module 'math' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/lib-dynload/math.cpython-310-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
2025-06-13 07:34:50,033 - print_capture - INFO -     $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
2025-06-13 07:34:50,033 - print_capture - INFO -     $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
2025-06-13 07:34:50,033 - print_capture - INFO -     $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
2025-06-13 07:34:50,033 - print_capture - INFO -     $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
2025-06-13 07:34:50,033 - print_capture - INFO -     $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
2025-06-13 07:34:50,033 - print_capture - INFO -     $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
2025-06-13 07:34:50,033 - print_capture - INFO -     $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
2025-06-13 07:34:50,033 - print_capture - INFO -     $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
2025-06-13 07:34:50,033 - print_capture - INFO -     $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
2025-06-13 07:34:50,033 - print_capture - INFO -     $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
2025-06-13 07:34:50,033 - print_capture - INFO -     return $128return_value.7                ['$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
2025-06-13 07:34:50,033 - print_capture - INFO -     return $128return_value.7                ['$128return_value.7']
label 130:
label 130:
2025-06-13 07:34:50,033 - print_capture - INFO - label 130:
label 130:
label 130:
2025-06-13 07:34:50,033 - print_capture - INFO - label 130:
    $const132.1.2 = const(int, 0)            ['$const132.1.2']
    $const132.1.2 = const(int, 0)            ['$const132.1.2']
2025-06-13 07:34:50,033 - print_capture - INFO -     $const132.1.2 = const(int, 0)            ['$const132.1.2']
    $const132.1.2 = const(int, 0)            ['$const132.1.2']
    $const132.1.2 = const(int, 0)            ['$const132.1.2']
2025-06-13 07:34:50,033 - print_capture - INFO -     $const132.1.2 = const(int, 0)            ['$const132.1.2']
    $134compare_op.2 = exp != $const132.1.2  ['$134compare_op.2', '$const132.1.2', 'exp']
    $134compare_op.2 = exp != $const132.1.2  ['$134compare_op.2', '$const132.1.2', 'exp']
2025-06-13 07:34:50,033 - print_capture - INFO -     $134compare_op.2 = exp != $const132.1.2  ['$134compare_op.2', '$const132.1.2', 'exp']
    $134compare_op.2 = exp != $const132.1.2  ['$134compare_op.2', '$const132.1.2', 'exp']
    $134compare_op.2 = exp != $const132.1.2  ['$134compare_op.2', '$const132.1.2', 'exp']
2025-06-13 07:34:50,033 - print_capture - INFO -     $134compare_op.2 = exp != $const132.1.2  ['$134compare_op.2', '$const132.1.2', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
2025-06-13 07:34:50,033 - print_capture - INFO -     bool136 = global(bool: <class 'bool'>)   ['bool136']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
2025-06-13 07:34:50,033 - print_capture - INFO -     bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
2025-06-13 07:34:50,033 - print_capture - INFO -     $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
2025-06-13 07:34:50,033 - print_capture - INFO -     $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 178                ['$136pred']
    branch $136pred, 138, 178                ['$136pred']
2025-06-13 07:34:50,034 - print_capture - INFO -     branch $136pred, 138, 178                ['$136pred']
    branch $136pred, 138, 178                ['$136pred']
    branch $136pred, 138, 178                ['$136pred']
2025-06-13 07:34:50,034 - print_capture - INFO -     branch $136pred, 138, 178                ['$136pred']
label 138:
label 138:
2025-06-13 07:34:50,034 - print_capture - INFO - label 138:
label 138:
label 138:
2025-06-13 07:34:50,034 - print_capture - INFO - label 138:
    $const140.1.1 = const(int, 1)            ['$const140.1.1']
    $const140.1.1 = const(int, 1)            ['$const140.1.1']
2025-06-13 07:34:50,034 - print_capture - INFO -     $const140.1.1 = const(int, 1)            ['$const140.1.1']
    $const140.1.1 = const(int, 1)            ['$const140.1.1']
    $const140.1.1 = const(int, 1)            ['$const140.1.1']
2025-06-13 07:34:50,034 - print_capture - INFO -     $const140.1.1 = const(int, 1)            ['$const140.1.1']
    $142binary_and.2 = exp & $const140.1.1   ['$142binary_and.2', '$const140.1.1', 'exp']
    $142binary_and.2 = exp & $const140.1.1   ['$142binary_and.2', '$const140.1.1', 'exp']
2025-06-13 07:34:50,034 - print_capture - INFO -     $142binary_and.2 = exp & $const140.1.1   ['$142binary_and.2', '$const140.1.1', 'exp']
    $142binary_and.2 = exp & $const140.1.1   ['$142binary_and.2', '$const140.1.1', 'exp']
    $142binary_and.2 = exp & $const140.1.1   ['$142binary_and.2', '$const140.1.1', 'exp']
2025-06-13 07:34:50,034 - print_capture - INFO -     $142binary_and.2 = exp & $const140.1.1   ['$142binary_and.2', '$const140.1.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
2025-06-13 07:34:50,034 - print_capture - INFO -     bool144 = global(bool: <class 'bool'>)   ['bool144']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
2025-06-13 07:34:50,034 - print_capture - INFO -     bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
2025-06-13 07:34:50,034 - print_capture - INFO -     $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
2025-06-13 07:34:50,034 - print_capture - INFO -     $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
    branch $144pred, 146, 154                ['$144pred']
2025-06-13 07:34:50,034 - print_capture - INFO -     branch $144pred, 146, 154                ['$144pred']
    branch $144pred, 146, 154                ['$144pred']
    branch $144pred, 146, 154                ['$144pred']
2025-06-13 07:34:50,034 - print_capture - INFO -     branch $144pred, 146, 154                ['$144pred']
label 146:
label 146:
2025-06-13 07:34:50,034 - print_capture - INFO - label 146:
label 146:
label 146:
2025-06-13 07:34:50,034 - print_capture - INFO - label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
2025-06-13 07:34:50,034 - print_capture - INFO -     $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
2025-06-13 07:34:50,034 - print_capture - INFO -     $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
2025-06-13 07:34:50,034 - print_capture - INFO -     r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
2025-06-13 07:34:50,034 - print_capture - INFO -     r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
    jump 154                                 []
2025-06-13 07:34:50,034 - print_capture - INFO -     jump 154                                 []
    jump 154                                 []
    jump 154                                 []
2025-06-13 07:34:50,034 - print_capture - INFO -     jump 154                                 []
label 154:
label 154:
2025-06-13 07:34:50,034 - print_capture - INFO - label 154:
label 154:
label 154:
2025-06-13 07:34:50,034 - print_capture - INFO - label 154:
    $const156.1.1 = const(int, 1)            ['$const156.1.1']
    $const156.1.1 = const(int, 1)            ['$const156.1.1']
2025-06-13 07:34:50,034 - print_capture - INFO -     $const156.1.1 = const(int, 1)            ['$const156.1.1']
    $const156.1.1 = const(int, 1)            ['$const156.1.1']
    $const156.1.1 = const(int, 1)            ['$const156.1.1']
2025-06-13 07:34:50,034 - print_capture - INFO -     $const156.1.1 = const(int, 1)            ['$const156.1.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1.1', 'exp']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1.1', 'exp']
2025-06-13 07:34:50,034 - print_capture - INFO -     $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1.1', 'exp']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1.1', 'exp']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1.1', 'exp']
2025-06-13 07:34:50,034 - print_capture - INFO -     $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
2025-06-13 07:34:50,034 - print_capture - INFO -     exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
2025-06-13 07:34:50,034 - print_capture - INFO -     exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
2025-06-13 07:34:50,034 - print_capture - INFO -     $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
2025-06-13 07:34:50,034 - print_capture - INFO -     $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
2025-06-13 07:34:50,034 - print_capture - INFO -     a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
2025-06-13 07:34:50,034 - print_capture - INFO -     a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    $const172.7.2 = const(int, 0)            ['$const172.7.2']
    $const172.7.2 = const(int, 0)            ['$const172.7.2']
2025-06-13 07:34:50,034 - print_capture - INFO -     $const172.7.2 = const(int, 0)            ['$const172.7.2']
    $const172.7.2 = const(int, 0)            ['$const172.7.2']
    $const172.7.2 = const(int, 0)            ['$const172.7.2']
2025-06-13 07:34:50,034 - print_capture - INFO -     $const172.7.2 = const(int, 0)            ['$const172.7.2']
    $174compare_op.8 = exp != $const172.7.2  ['$174compare_op.8', '$const172.7.2', 'exp']
    $174compare_op.8 = exp != $const172.7.2  ['$174compare_op.8', '$const172.7.2', 'exp']
2025-06-13 07:34:50,034 - print_capture - INFO -     $174compare_op.8 = exp != $const172.7.2  ['$174compare_op.8', '$const172.7.2', 'exp']
    $174compare_op.8 = exp != $const172.7.2  ['$174compare_op.8', '$const172.7.2', 'exp']
    $174compare_op.8 = exp != $const172.7.2  ['$174compare_op.8', '$const172.7.2', 'exp']
2025-06-13 07:34:50,034 - print_capture - INFO -     $174compare_op.8 = exp != $const172.7.2  ['$174compare_op.8', '$const172.7.2', 'exp']
    bool176 = global(bool: <class 'bool'>)   ['bool176']
    bool176 = global(bool: <class 'bool'>)   ['bool176']
2025-06-13 07:34:50,034 - print_capture - INFO -     bool176 = global(bool: <class 'bool'>)   ['bool176']
    bool176 = global(bool: <class 'bool'>)   ['bool176']
    bool176 = global(bool: <class 'bool'>)   ['bool176']
2025-06-13 07:34:50,034 - print_capture - INFO -     bool176 = global(bool: <class 'bool'>)   ['bool176']
    $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
    $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
2025-06-13 07:34:50,034 - print_capture - INFO -     $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
    $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
    $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
2025-06-13 07:34:50,035 - print_capture - INFO -     $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
    branch $176pred, 138, 178                ['$176pred']
    branch $176pred, 138, 178                ['$176pred']
2025-06-13 07:34:50,035 - print_capture - INFO -     branch $176pred, 138, 178                ['$176pred']
    branch $176pred, 138, 178                ['$176pred']
    branch $176pred, 138, 178                ['$176pred']
2025-06-13 07:34:50,035 - print_capture - INFO -     branch $176pred, 138, 178                ['$176pred']
label 178:
label 178:
2025-06-13 07:34:50,035 - print_capture - INFO - label 178:
label 178:
label 178:
2025-06-13 07:34:50,035 - print_capture - INFO - label 178:
    bool180 = global(bool: <class 'bool'>)   ['bool180']
    bool180 = global(bool: <class 'bool'>)   ['bool180']
2025-06-13 07:34:50,035 - print_capture - INFO -     bool180 = global(bool: <class 'bool'>)   ['bool180']
    bool180 = global(bool: <class 'bool'>)   ['bool180']
    bool180 = global(bool: <class 'bool'>)   ['bool180']
2025-06-13 07:34:50,035 - print_capture - INFO -     bool180 = global(bool: <class 'bool'>)   ['bool180']
    $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
    $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
2025-06-13 07:34:50,035 - print_capture - INFO -     $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
    $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
    $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
2025-06-13 07:34:50,035 - print_capture - INFO -     $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
    branch $180pred, 182, 190                ['$180pred']
    branch $180pred, 182, 190                ['$180pred']
2025-06-13 07:34:50,035 - print_capture - INFO -     branch $180pred, 182, 190                ['$180pred']
    branch $180pred, 182, 190                ['$180pred']
    branch $180pred, 182, 190                ['$180pred']
2025-06-13 07:34:50,035 - print_capture - INFO -     branch $180pred, 182, 190                ['$180pred']
label 182:
label 182:
2025-06-13 07:34:50,035 - print_capture - INFO - label 182:
label 182:
label 182:
2025-06-13 07:34:50,035 - print_capture - INFO - label 182:
    $const182.0.8 = const(float, 1.0)        ['$const182.0.8']
    $const182.0.8 = const(float, 1.0)        ['$const182.0.8']
2025-06-13 07:34:50,035 - print_capture - INFO -     $const182.0.8 = const(float, 1.0)        ['$const182.0.8']
    $const182.0.8 = const(float, 1.0)        ['$const182.0.8']
    $const182.0.8 = const(float, 1.0)        ['$const182.0.8']
2025-06-13 07:34:50,035 - print_capture - INFO -     $const182.0.8 = const(float, 1.0)        ['$const182.0.8']
    $186binary_true_divide.2 = $const182.0.8 / r ['$186binary_true_divide.2', '$const182.0.8', 'r']
    $186binary_true_divide.2 = $const182.0.8 / r ['$186binary_true_divide.2', '$const182.0.8', 'r']
2025-06-13 07:34:50,035 - print_capture - INFO -     $186binary_true_divide.2 = $const182.0.8 / r ['$186binary_true_divide.2', '$const182.0.8', 'r']
    $186binary_true_divide.2 = $const182.0.8 / r ['$186binary_true_divide.2', '$const182.0.8', 'r']
    $186binary_true_divide.2 = $const182.0.8 / r ['$186binary_true_divide.2', '$const182.0.8', 'r']
2025-06-13 07:34:50,035 - print_capture - INFO -     $186binary_true_divide.2 = $const182.0.8 / r ['$186binary_true_divide.2', '$const182.0.8', 'r']
    $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
    $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
2025-06-13 07:34:50,035 - print_capture - INFO -     $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
    $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
    $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
2025-06-13 07:34:50,035 - print_capture - INFO -     $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
    return $188return_value.3                ['$188return_value.3']
    return $188return_value.3                ['$188return_value.3']
2025-06-13 07:34:50,035 - print_capture - INFO -     return $188return_value.3                ['$188return_value.3']
    return $188return_value.3                ['$188return_value.3']
    return $188return_value.3                ['$188return_value.3']
2025-06-13 07:34:50,035 - print_capture - INFO -     return $188return_value.3                ['$188return_value.3']
label 190:
label 190:
2025-06-13 07:34:50,035 - print_capture - INFO - label 190:
label 190:
label 190:
2025-06-13 07:34:50,035 - print_capture - INFO - label 190:
    $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
    $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
2025-06-13 07:34:50,035 - print_capture - INFO -     $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
    $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
    $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
2025-06-13 07:34:50,035 - print_capture - INFO -     $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
    return $192return_value.1                ['$192return_value.1']
    return $192return_value.1                ['$192return_value.1']
2025-06-13 07:34:50,035 - print_capture - INFO -     return $192return_value.1                ['$192return_value.1']
    return $192return_value.1                ['$192return_value.1']
    return $192return_value.1                ['$192return_value.1']
2025-06-13 07:34:50,035 - print_capture - INFO -     return $192return_value.1                ['$192return_value.1']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:50,080 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:50,080 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# --- LINE 2436 --- 
# --- LINE 2436 --- 
2025-06-13 07:34:50,080 - print_capture - INFO - # --- LINE 2436 --- 
# --- LINE 2436 --- 
# --- LINE 2436 --- 
2025-06-13 07:34:50,080 - print_capture - INFO - # --- LINE 2436 --- 
# label 0
# label 0
2025-06-13 07:34:50,080 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:50,080 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: complex128
#   x = arg(0, name=x)  :: complex128
2025-06-13 07:34:50,080 - print_capture - INFO - #   x = arg(0, name=x)  :: complex128
#   x = arg(0, name=x)  :: complex128
#   x = arg(0, name=x)  :: complex128
2025-06-13 07:34:50,080 - print_capture - INFO - #   x = arg(0, name=x)  :: complex128


2025-06-13 07:34:50,080 - print_capture - INFO - 


2025-06-13 07:34:50,080 - print_capture - INFO - 
@numba.vectorize(
@numba.vectorize(
2025-06-13 07:34:50,080 - print_capture - INFO - @numba.vectorize(
@numba.vectorize(
@numba.vectorize(
2025-06-13 07:34:50,080 - print_capture - INFO - @numba.vectorize(


2025-06-13 07:34:50,080 - print_capture - INFO - 


2025-06-13 07:34:50,080 - print_capture - INFO - 
    # --- LINE 2437 --- 
    # --- LINE 2437 --- 
2025-06-13 07:34:50,080 - print_capture - INFO -     # --- LINE 2437 --- 
    # --- LINE 2437 --- 
    # --- LINE 2437 --- 
2025-06-13 07:34:50,080 - print_capture - INFO -     # --- LINE 2437 --- 


2025-06-13 07:34:50,080 - print_capture - INFO - 


2025-06-13 07:34:50,080 - print_capture - INFO - 
    ["float32(complex64)", "float64(complex128)"], nopython=True, cache=True, identity=0
    ["float32(complex64)", "float64(complex128)"], nopython=True, cache=True, identity=0
2025-06-13 07:34:50,080 - print_capture - INFO -     ["float32(complex64)", "float64(complex128)"], nopython=True, cache=True, identity=0
    ["float32(complex64)", "float64(complex128)"], nopython=True, cache=True, identity=0
    ["float32(complex64)", "float64(complex128)"], nopython=True, cache=True, identity=0
2025-06-13 07:34:50,080 - print_capture - INFO -     ["float32(complex64)", "float64(complex128)"], nopython=True, cache=True, identity=0


2025-06-13 07:34:50,080 - print_capture - INFO - 


2025-06-13 07:34:50,081 - print_capture - INFO - 
# --- LINE 2438 --- 
# --- LINE 2438 --- 
2025-06-13 07:34:50,081 - print_capture - INFO - # --- LINE 2438 --- 
# --- LINE 2438 --- 
# --- LINE 2438 --- 
2025-06-13 07:34:50,081 - print_capture - INFO - # --- LINE 2438 --- 


2025-06-13 07:34:50,081 - print_capture - INFO - 


2025-06-13 07:34:50,081 - print_capture - INFO - 
)  # type: ignore
)  # type: ignore
2025-06-13 07:34:50,081 - print_capture - INFO - )  # type: ignore
)  # type: ignore
)  # type: ignore
2025-06-13 07:34:50,081 - print_capture - INFO - )  # type: ignore


2025-06-13 07:34:50,081 - print_capture - INFO - 


2025-06-13 07:34:50,081 - print_capture - INFO - 
# --- LINE 2439 --- 
# --- LINE 2439 --- 
2025-06-13 07:34:50,081 - print_capture - INFO - # --- LINE 2439 --- 
# --- LINE 2439 --- 
# --- LINE 2439 --- 
2025-06-13 07:34:50,081 - print_capture - INFO - # --- LINE 2439 --- 


2025-06-13 07:34:50,081 - print_capture - INFO - 


2025-06-13 07:34:50,081 - print_capture - INFO - 
def _cabs2(x: _ComplexLike_co) -> _FloatLike_co:  # pragma: no cover
def _cabs2(x: _ComplexLike_co) -> _FloatLike_co:  # pragma: no cover
2025-06-13 07:34:50,081 - print_capture - INFO - def _cabs2(x: _ComplexLike_co) -> _FloatLike_co:  # pragma: no cover
def _cabs2(x: _ComplexLike_co) -> _FloatLike_co:  # pragma: no cover
def _cabs2(x: _ComplexLike_co) -> _FloatLike_co:  # pragma: no cover
2025-06-13 07:34:50,081 - print_capture - INFO - def _cabs2(x: _ComplexLike_co) -> _FloatLike_co:  # pragma: no cover


2025-06-13 07:34:50,081 - print_capture - INFO - 


2025-06-13 07:34:50,081 - print_capture - INFO - 
    # --- LINE 2440 --- 
    # --- LINE 2440 --- 
2025-06-13 07:34:50,081 - print_capture - INFO -     # --- LINE 2440 --- 
    # --- LINE 2440 --- 
    # --- LINE 2440 --- 
2025-06-13 07:34:50,081 - print_capture - INFO -     # --- LINE 2440 --- 


2025-06-13 07:34:50,081 - print_capture - INFO - 


2025-06-13 07:34:50,081 - print_capture - INFO - 
    """Efficiently compute abs2 on complex inputs"""
    """Efficiently compute abs2 on complex inputs"""
2025-06-13 07:34:50,081 - print_capture - INFO -     """Efficiently compute abs2 on complex inputs"""
    """Efficiently compute abs2 on complex inputs"""
    """Efficiently compute abs2 on complex inputs"""
2025-06-13 07:34:50,081 - print_capture - INFO -     """Efficiently compute abs2 on complex inputs"""


2025-06-13 07:34:50,081 - print_capture - INFO - 


2025-06-13 07:34:50,081 - print_capture - INFO - 
    # --- LINE 2441 --- 
    # --- LINE 2441 --- 
2025-06-13 07:34:50,081 - print_capture - INFO -     # --- LINE 2441 --- 
    # --- LINE 2441 --- 
    # --- LINE 2441 --- 
2025-06-13 07:34:50,081 - print_capture - INFO -     # --- LINE 2441 --- 
    #   $4load_attr.1 = getattr(value=x, attr=real)  :: float64
    #   $4load_attr.1 = getattr(value=x, attr=real)  :: float64
2025-06-13 07:34:50,081 - print_capture - INFO -     #   $4load_attr.1 = getattr(value=x, attr=real)  :: float64
    #   $4load_attr.1 = getattr(value=x, attr=real)  :: float64
    #   $4load_attr.1 = getattr(value=x, attr=real)  :: float64
2025-06-13 07:34:50,081 - print_capture - INFO -     #   $4load_attr.1 = getattr(value=x, attr=real)  :: float64
    #   $const6.2.1 = const(int, 2)  :: Literal[int](2)
    #   $const6.2.1 = const(int, 2)  :: Literal[int](2)
2025-06-13 07:34:50,081 - print_capture - INFO -     #   $const6.2.1 = const(int, 2)  :: Literal[int](2)
    #   $const6.2.1 = const(int, 2)  :: Literal[int](2)
    #   $const6.2.1 = const(int, 2)  :: Literal[int](2)
2025-06-13 07:34:50,081 - print_capture - INFO -     #   $const6.2.1 = const(int, 2)  :: Literal[int](2)
    #   $8binary_power.3 = $4load_attr.1 ** $const6.2.1  :: float64
    #   $8binary_power.3 = $4load_attr.1 ** $const6.2.1  :: float64
2025-06-13 07:34:50,081 - print_capture - INFO -     #   $8binary_power.3 = $4load_attr.1 ** $const6.2.1  :: float64
    #   $8binary_power.3 = $4load_attr.1 ** $const6.2.1  :: float64
    #   $8binary_power.3 = $4load_attr.1 ** $const6.2.1  :: float64
2025-06-13 07:34:50,081 - print_capture - INFO -     #   $8binary_power.3 = $4load_attr.1 ** $const6.2.1  :: float64
    #   del $const6.2.1
    #   del $const6.2.1
2025-06-13 07:34:50,081 - print_capture - INFO -     #   del $const6.2.1
    #   del $const6.2.1
    #   del $const6.2.1
2025-06-13 07:34:50,081 - print_capture - INFO -     #   del $const6.2.1
    #   del $4load_attr.1
    #   del $4load_attr.1
2025-06-13 07:34:50,081 - print_capture - INFO -     #   del $4load_attr.1
    #   del $4load_attr.1
    #   del $4load_attr.1
2025-06-13 07:34:50,081 - print_capture - INFO -     #   del $4load_attr.1
    #   $12load_attr.5 = getattr(value=x, attr=imag)  :: float64
    #   $12load_attr.5 = getattr(value=x, attr=imag)  :: float64
2025-06-13 07:34:50,081 - print_capture - INFO -     #   $12load_attr.5 = getattr(value=x, attr=imag)  :: float64
    #   $12load_attr.5 = getattr(value=x, attr=imag)  :: float64
    #   $12load_attr.5 = getattr(value=x, attr=imag)  :: float64
2025-06-13 07:34:50,081 - print_capture - INFO -     #   $12load_attr.5 = getattr(value=x, attr=imag)  :: float64
    #   del x
    #   del x
2025-06-13 07:34:50,081 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:50,081 - print_capture - INFO -     #   del x
    #   $const14.6.1 = const(int, 2)  :: Literal[int](2)
    #   $const14.6.1 = const(int, 2)  :: Literal[int](2)
2025-06-13 07:34:50,081 - print_capture - INFO -     #   $const14.6.1 = const(int, 2)  :: Literal[int](2)
    #   $const14.6.1 = const(int, 2)  :: Literal[int](2)
    #   $const14.6.1 = const(int, 2)  :: Literal[int](2)
2025-06-13 07:34:50,081 - print_capture - INFO -     #   $const14.6.1 = const(int, 2)  :: Literal[int](2)
    #   $16binary_power.7 = $12load_attr.5 ** $const14.6.1  :: float64
    #   $16binary_power.7 = $12load_attr.5 ** $const14.6.1  :: float64
2025-06-13 07:34:50,081 - print_capture - INFO -     #   $16binary_power.7 = $12load_attr.5 ** $const14.6.1  :: float64
    #   $16binary_power.7 = $12load_attr.5 ** $const14.6.1  :: float64
    #   $16binary_power.7 = $12load_attr.5 ** $const14.6.1  :: float64
2025-06-13 07:34:50,081 - print_capture - INFO -     #   $16binary_power.7 = $12load_attr.5 ** $const14.6.1  :: float64
    #   del $const14.6.1
    #   del $const14.6.1
2025-06-13 07:34:50,081 - print_capture - INFO -     #   del $const14.6.1
    #   del $const14.6.1
    #   del $const14.6.1
2025-06-13 07:34:50,081 - print_capture - INFO -     #   del $const14.6.1
    #   del $12load_attr.5
    #   del $12load_attr.5
2025-06-13 07:34:50,081 - print_capture - INFO -     #   del $12load_attr.5
    #   del $12load_attr.5
    #   del $12load_attr.5
2025-06-13 07:34:50,082 - print_capture - INFO -     #   del $12load_attr.5
    #   $18binary_add.8 = $8binary_power.3 + $16binary_power.7  :: float64
    #   $18binary_add.8 = $8binary_power.3 + $16binary_power.7  :: float64
2025-06-13 07:34:50,082 - print_capture - INFO -     #   $18binary_add.8 = $8binary_power.3 + $16binary_power.7  :: float64
    #   $18binary_add.8 = $8binary_power.3 + $16binary_power.7  :: float64
    #   $18binary_add.8 = $8binary_power.3 + $16binary_power.7  :: float64
2025-06-13 07:34:50,082 - print_capture - INFO -     #   $18binary_add.8 = $8binary_power.3 + $16binary_power.7  :: float64
    #   del $8binary_power.3
    #   del $8binary_power.3
2025-06-13 07:34:50,082 - print_capture - INFO -     #   del $8binary_power.3
    #   del $8binary_power.3
    #   del $8binary_power.3
2025-06-13 07:34:50,082 - print_capture - INFO -     #   del $8binary_power.3
    #   del $16binary_power.7
    #   del $16binary_power.7
2025-06-13 07:34:50,082 - print_capture - INFO -     #   del $16binary_power.7
    #   del $16binary_power.7
    #   del $16binary_power.7
2025-06-13 07:34:50,082 - print_capture - INFO -     #   del $16binary_power.7
    #   $20return_value.9 = cast(value=$18binary_add.8)  :: float64
    #   $20return_value.9 = cast(value=$18binary_add.8)  :: float64
2025-06-13 07:34:50,082 - print_capture - INFO -     #   $20return_value.9 = cast(value=$18binary_add.8)  :: float64
    #   $20return_value.9 = cast(value=$18binary_add.8)  :: float64
    #   $20return_value.9 = cast(value=$18binary_add.8)  :: float64
2025-06-13 07:34:50,082 - print_capture - INFO -     #   $20return_value.9 = cast(value=$18binary_add.8)  :: float64
    #   del $18binary_add.8
    #   del $18binary_add.8
2025-06-13 07:34:50,082 - print_capture - INFO -     #   del $18binary_add.8
    #   del $18binary_add.8
    #   del $18binary_add.8
2025-06-13 07:34:50,082 - print_capture - INFO -     #   del $18binary_add.8
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:50,082 - print_capture - INFO -     #   return $20return_value.9
    #   return $20return_value.9
    #   return $20return_value.9
2025-06-13 07:34:50,082 - print_capture - INFO -     #   return $20return_value.9


2025-06-13 07:34:50,082 - print_capture - INFO - 


2025-06-13 07:34:50,082 - print_capture - INFO - 
    return x.real**2 + x.imag**2
    return x.real**2 + x.imag**2
2025-06-13 07:34:50,082 - print_capture - INFO -     return x.real**2 + x.imag**2
    return x.real**2 + x.imag**2
    return x.real**2 + x.imag**2
2025-06-13 07:34:50,082 - print_capture - INFO -     return x.real**2 + x.imag**2


2025-06-13 07:34:50,082 - print_capture - INFO - 


2025-06-13 07:34:50,082 - print_capture - INFO - 
label 0:
label 0:
2025-06-13 07:34:50,096 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:50,096 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:50,096 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:50,096 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
2025-06-13 07:34:50,097 - print_capture - INFO -     $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
2025-06-13 07:34:50,097 - print_capture - INFO -     $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=cos) ['$2load_global.0', '$4load_method.1']
    $4load_method.1 = getattr(value=$2load_global.0, attr=cos) ['$2load_global.0', '$4load_method.1']
2025-06-13 07:34:50,097 - print_capture - INFO -     $4load_method.1 = getattr(value=$2load_global.0, attr=cos) ['$2load_global.0', '$4load_method.1']
    $4load_method.1 = getattr(value=$2load_global.0, attr=cos) ['$2load_global.0', '$4load_method.1']
    $4load_method.1 = getattr(value=$2load_global.0, attr=cos) ['$2load_global.0', '$4load_method.1']
2025-06-13 07:34:50,097 - print_capture - INFO -     $4load_method.1 = getattr(value=$2load_global.0, attr=cos) ['$2load_global.0', '$4load_method.1']
    $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'x']
    $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'x']
2025-06-13 07:34:50,097 - print_capture - INFO -     $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'x']
    $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'x']
    $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'x']
2025-06-13 07:34:50,097 - print_capture - INFO -     $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'x']
    $const10.4.1 = const(complex, 1j)        ['$const10.4.1']
    $const10.4.1 = const(complex, 1j)        ['$const10.4.1']
2025-06-13 07:34:50,097 - print_capture - INFO -     $const10.4.1 = const(complex, 1j)        ['$const10.4.1']
    $const10.4.1 = const(complex, 1j)        ['$const10.4.1']
    $const10.4.1 = const(complex, 1j)        ['$const10.4.1']
2025-06-13 07:34:50,097 - print_capture - INFO -     $const10.4.1 = const(complex, 1j)        ['$const10.4.1']
    $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$12load_global.5']
    $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$12load_global.5']
2025-06-13 07:34:50,097 - print_capture - INFO -     $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$12load_global.5']
    $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$12load_global.5']
    $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$12load_global.5']
2025-06-13 07:34:50,097 - print_capture - INFO -     $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$12load_global.5']
    $14load_method.6 = getattr(value=$12load_global.5, attr=sin) ['$12load_global.5', '$14load_method.6']
    $14load_method.6 = getattr(value=$12load_global.5, attr=sin) ['$12load_global.5', '$14load_method.6']
2025-06-13 07:34:50,097 - print_capture - INFO -     $14load_method.6 = getattr(value=$12load_global.5, attr=sin) ['$12load_global.5', '$14load_method.6']
    $14load_method.6 = getattr(value=$12load_global.5, attr=sin) ['$12load_global.5', '$14load_method.6']
    $14load_method.6 = getattr(value=$12load_global.5, attr=sin) ['$12load_global.5', '$14load_method.6']
2025-06-13 07:34:50,097 - print_capture - INFO -     $14load_method.6 = getattr(value=$12load_global.5, attr=sin) ['$12load_global.5', '$14load_method.6']
    $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_method.6', '$18call_method.8', 'x']
    $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_method.6', '$18call_method.8', 'x']
2025-06-13 07:34:50,097 - print_capture - INFO -     $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_method.6', '$18call_method.8', 'x']
    $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_method.6', '$18call_method.8', 'x']
    $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_method.6', '$18call_method.8', 'x']
2025-06-13 07:34:50,097 - print_capture - INFO -     $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_method.6', '$18call_method.8', 'x']
    $20binary_multiply.9 = $const10.4.1 * $18call_method.8 ['$18call_method.8', '$20binary_multiply.9', '$const10.4.1']
    $20binary_multiply.9 = $const10.4.1 * $18call_method.8 ['$18call_method.8', '$20binary_multiply.9', '$const10.4.1']
2025-06-13 07:34:50,097 - print_capture - INFO -     $20binary_multiply.9 = $const10.4.1 * $18call_method.8 ['$18call_method.8', '$20binary_multiply.9', '$const10.4.1']
    $20binary_multiply.9 = $const10.4.1 * $18call_method.8 ['$18call_method.8', '$20binary_multiply.9', '$const10.4.1']
    $20binary_multiply.9 = $const10.4.1 * $18call_method.8 ['$18call_method.8', '$20binary_multiply.9', '$const10.4.1']
2025-06-13 07:34:50,097 - print_capture - INFO -     $20binary_multiply.9 = $const10.4.1 * $18call_method.8 ['$18call_method.8', '$20binary_multiply.9', '$const10.4.1']
    $22binary_add.10 = $8call_method.3 + $20binary_multiply.9 ['$20binary_multiply.9', '$22binary_add.10', '$8call_method.3']
    $22binary_add.10 = $8call_method.3 + $20binary_multiply.9 ['$20binary_multiply.9', '$22binary_add.10', '$8call_method.3']
2025-06-13 07:34:50,097 - print_capture - INFO -     $22binary_add.10 = $8call_method.3 + $20binary_multiply.9 ['$20binary_multiply.9', '$22binary_add.10', '$8call_method.3']
    $22binary_add.10 = $8call_method.3 + $20binary_multiply.9 ['$20binary_multiply.9', '$22binary_add.10', '$8call_method.3']
    $22binary_add.10 = $8call_method.3 + $20binary_multiply.9 ['$20binary_multiply.9', '$22binary_add.10', '$8call_method.3']
2025-06-13 07:34:50,097 - print_capture - INFO -     $22binary_add.10 = $8call_method.3 + $20binary_multiply.9 ['$20binary_multiply.9', '$22binary_add.10', '$8call_method.3']
    $24return_value.11 = cast(value=$22binary_add.10) ['$22binary_add.10', '$24return_value.11']
    $24return_value.11 = cast(value=$22binary_add.10) ['$22binary_add.10', '$24return_value.11']
2025-06-13 07:34:50,097 - print_capture - INFO -     $24return_value.11 = cast(value=$22binary_add.10) ['$22binary_add.10', '$24return_value.11']
    $24return_value.11 = cast(value=$22binary_add.10) ['$22binary_add.10', '$24return_value.11']
    $24return_value.11 = cast(value=$22binary_add.10) ['$22binary_add.10', '$24return_value.11']
2025-06-13 07:34:50,097 - print_capture - INFO -     $24return_value.11 = cast(value=$22binary_add.10) ['$22binary_add.10', '$24return_value.11']
    return $24return_value.11                ['$24return_value.11']
    return $24return_value.11                ['$24return_value.11']
2025-06-13 07:34:50,097 - print_capture - INFO -     return $24return_value.11                ['$24return_value.11']
    return $24return_value.11                ['$24return_value.11']
    return $24return_value.11                ['$24return_value.11']
2025-06-13 07:34:50,097 - print_capture - INFO -     return $24return_value.11                ['$24return_value.11']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:50,112 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:50,112 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# --- LINE 2488 --- 
# --- LINE 2488 --- 
2025-06-13 07:34:50,112 - print_capture - INFO - # --- LINE 2488 --- 
# --- LINE 2488 --- 
# --- LINE 2488 --- 
2025-06-13 07:34:50,112 - print_capture - INFO - # --- LINE 2488 --- 
# label 0
# label 0
2025-06-13 07:34:50,112 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:50,112 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: float32
#   x = arg(0, name=x)  :: float32
2025-06-13 07:34:50,112 - print_capture - INFO - #   x = arg(0, name=x)  :: float32
#   x = arg(0, name=x)  :: float32
#   x = arg(0, name=x)  :: float32
2025-06-13 07:34:50,112 - print_capture - INFO - #   x = arg(0, name=x)  :: float32


2025-06-13 07:34:50,112 - print_capture - INFO - 


2025-06-13 07:34:50,112 - print_capture - INFO - 
@numba.vectorize(
@numba.vectorize(
2025-06-13 07:34:50,112 - print_capture - INFO - @numba.vectorize(
@numba.vectorize(
@numba.vectorize(
2025-06-13 07:34:50,112 - print_capture - INFO - @numba.vectorize(


2025-06-13 07:34:50,112 - print_capture - INFO - 


2025-06-13 07:34:50,112 - print_capture - INFO - 
    # --- LINE 2489 --- 
    # --- LINE 2489 --- 
2025-06-13 07:34:50,112 - print_capture - INFO -     # --- LINE 2489 --- 
    # --- LINE 2489 --- 
    # --- LINE 2489 --- 
2025-06-13 07:34:50,112 - print_capture - INFO -     # --- LINE 2489 --- 


2025-06-13 07:34:50,112 - print_capture - INFO - 


2025-06-13 07:34:50,112 - print_capture - INFO - 
    ["complex64(float32)", "complex128(float64)"], nopython=True, cache=True, identity=1
    ["complex64(float32)", "complex128(float64)"], nopython=True, cache=True, identity=1
2025-06-13 07:34:50,112 - print_capture - INFO -     ["complex64(float32)", "complex128(float64)"], nopython=True, cache=True, identity=1
    ["complex64(float32)", "complex128(float64)"], nopython=True, cache=True, identity=1
    ["complex64(float32)", "complex128(float64)"], nopython=True, cache=True, identity=1
2025-06-13 07:34:50,112 - print_capture - INFO -     ["complex64(float32)", "complex128(float64)"], nopython=True, cache=True, identity=1


2025-06-13 07:34:50,112 - print_capture - INFO - 


2025-06-13 07:34:50,112 - print_capture - INFO - 
# --- LINE 2490 --- 
# --- LINE 2490 --- 
2025-06-13 07:34:50,112 - print_capture - INFO - # --- LINE 2490 --- 
# --- LINE 2490 --- 
# --- LINE 2490 --- 
2025-06-13 07:34:50,112 - print_capture - INFO - # --- LINE 2490 --- 


2025-06-13 07:34:50,112 - print_capture - INFO - 


2025-06-13 07:34:50,112 - print_capture - INFO - 
)  # type: ignore
)  # type: ignore
2025-06-13 07:34:50,112 - print_capture - INFO - )  # type: ignore
)  # type: ignore
)  # type: ignore
2025-06-13 07:34:50,112 - print_capture - INFO - )  # type: ignore


2025-06-13 07:34:50,112 - print_capture - INFO - 


2025-06-13 07:34:50,112 - print_capture - INFO - 
# --- LINE 2491 --- 
# --- LINE 2491 --- 
2025-06-13 07:34:50,112 - print_capture - INFO - # --- LINE 2491 --- 
# --- LINE 2491 --- 
# --- LINE 2491 --- 
2025-06-13 07:34:50,112 - print_capture - INFO - # --- LINE 2491 --- 


2025-06-13 07:34:50,112 - print_capture - INFO - 


2025-06-13 07:34:50,112 - print_capture - INFO - 
def _phasor_angles(x) -> np.complexfloating[Any, Any]:
def _phasor_angles(x) -> np.complexfloating[Any, Any]:
2025-06-13 07:34:50,112 - print_capture - INFO - def _phasor_angles(x) -> np.complexfloating[Any, Any]:
def _phasor_angles(x) -> np.complexfloating[Any, Any]:
def _phasor_angles(x) -> np.complexfloating[Any, Any]:
2025-06-13 07:34:50,112 - print_capture - INFO - def _phasor_angles(x) -> np.complexfloating[Any, Any]:


2025-06-13 07:34:50,112 - print_capture - INFO - 


2025-06-13 07:34:50,112 - print_capture - INFO - 
    # --- LINE 2492 --- 
    # --- LINE 2492 --- 
2025-06-13 07:34:50,112 - print_capture - INFO -     # --- LINE 2492 --- 
    # --- LINE 2492 --- 
    # --- LINE 2492 --- 
2025-06-13 07:34:50,112 - print_capture - INFO -     # --- LINE 2492 --- 
    #   $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:50,112 - print_capture - INFO -     #   $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:50,113 - print_capture - INFO -     #   $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $4load_method.1 = getattr(value=$2load_global.0, attr=cos)  :: Function(<ufunc 'cos'>)
    #   $4load_method.1 = getattr(value=$2load_global.0, attr=cos)  :: Function(<ufunc 'cos'>)
2025-06-13 07:34:50,113 - print_capture - INFO -     #   $4load_method.1 = getattr(value=$2load_global.0, attr=cos)  :: Function(<ufunc 'cos'>)
    #   $4load_method.1 = getattr(value=$2load_global.0, attr=cos)  :: Function(<ufunc 'cos'>)
    #   $4load_method.1 = getattr(value=$2load_global.0, attr=cos)  :: Function(<ufunc 'cos'>)
2025-06-13 07:34:50,113 - print_capture - INFO -     #   $4load_method.1 = getattr(value=$2load_global.0, attr=cos)  :: Function(<ufunc 'cos'>)
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del $2load_global.0
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del $2load_global.0
    #   $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float32,) -> float32
    #   $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float32,) -> float32
2025-06-13 07:34:50,113 - print_capture - INFO -     #   $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float32,) -> float32
    #   $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float32,) -> float32
    #   $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float32,) -> float32
2025-06-13 07:34:50,113 - print_capture - INFO -     #   $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float32,) -> float32
    #   del $4load_method.1
    #   del $4load_method.1
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del $4load_method.1
    #   del $4load_method.1
    #   del $4load_method.1
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del $4load_method.1
    #   $const10.4.1 = const(complex, 1j)  :: complex128
    #   $const10.4.1 = const(complex, 1j)  :: complex128
2025-06-13 07:34:50,113 - print_capture - INFO -     #   $const10.4.1 = const(complex, 1j)  :: complex128
    #   $const10.4.1 = const(complex, 1j)  :: complex128
    #   $const10.4.1 = const(complex, 1j)  :: complex128
2025-06-13 07:34:50,113 - print_capture - INFO -     #   $const10.4.1 = const(complex, 1j)  :: complex128
    #   $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:50,113 - print_capture - INFO -     #   $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:50,113 - print_capture - INFO -     #   $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $14load_method.6 = getattr(value=$12load_global.5, attr=sin)  :: Function(<ufunc 'sin'>)
    #   $14load_method.6 = getattr(value=$12load_global.5, attr=sin)  :: Function(<ufunc 'sin'>)
2025-06-13 07:34:50,113 - print_capture - INFO -     #   $14load_method.6 = getattr(value=$12load_global.5, attr=sin)  :: Function(<ufunc 'sin'>)
    #   $14load_method.6 = getattr(value=$12load_global.5, attr=sin)  :: Function(<ufunc 'sin'>)
    #   $14load_method.6 = getattr(value=$12load_global.5, attr=sin)  :: Function(<ufunc 'sin'>)
2025-06-13 07:34:50,113 - print_capture - INFO -     #   $14load_method.6 = getattr(value=$12load_global.5, attr=sin)  :: Function(<ufunc 'sin'>)
    #   del $12load_global.5
    #   del $12load_global.5
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del $12load_global.5
    #   del $12load_global.5
    #   del $12load_global.5
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del $12load_global.5
    #   $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float32,) -> float32
    #   $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float32,) -> float32
2025-06-13 07:34:50,113 - print_capture - INFO -     #   $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float32,) -> float32
    #   $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float32,) -> float32
    #   $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float32,) -> float32
2025-06-13 07:34:50,113 - print_capture - INFO -     #   $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float32,) -> float32
    #   del x
    #   del x
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del x
    #   del $14load_method.6
    #   del $14load_method.6
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del $14load_method.6
    #   del $14load_method.6
    #   del $14load_method.6
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del $14load_method.6
    #   $20binary_multiply.9 = $const10.4.1 * $18call_method.8  :: complex128
    #   $20binary_multiply.9 = $const10.4.1 * $18call_method.8  :: complex128
2025-06-13 07:34:50,113 - print_capture - INFO -     #   $20binary_multiply.9 = $const10.4.1 * $18call_method.8  :: complex128
    #   $20binary_multiply.9 = $const10.4.1 * $18call_method.8  :: complex128
    #   $20binary_multiply.9 = $const10.4.1 * $18call_method.8  :: complex128
2025-06-13 07:34:50,113 - print_capture - INFO -     #   $20binary_multiply.9 = $const10.4.1 * $18call_method.8  :: complex128
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del $const10.4.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del $const10.4.1
    #   del $18call_method.8
    #   del $18call_method.8
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del $18call_method.8
    #   del $18call_method.8
    #   del $18call_method.8
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del $18call_method.8
    #   $22binary_add.10 = $8call_method.3 + $20binary_multiply.9  :: complex128
    #   $22binary_add.10 = $8call_method.3 + $20binary_multiply.9  :: complex128
2025-06-13 07:34:50,113 - print_capture - INFO -     #   $22binary_add.10 = $8call_method.3 + $20binary_multiply.9  :: complex128
    #   $22binary_add.10 = $8call_method.3 + $20binary_multiply.9  :: complex128
    #   $22binary_add.10 = $8call_method.3 + $20binary_multiply.9  :: complex128
2025-06-13 07:34:50,113 - print_capture - INFO -     #   $22binary_add.10 = $8call_method.3 + $20binary_multiply.9  :: complex128
    #   del $8call_method.3
    #   del $8call_method.3
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del $8call_method.3
    #   del $8call_method.3
    #   del $8call_method.3
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del $8call_method.3
    #   del $20binary_multiply.9
    #   del $20binary_multiply.9
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del $20binary_multiply.9
    #   del $20binary_multiply.9
    #   del $20binary_multiply.9
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del $20binary_multiply.9
    #   $24return_value.11 = cast(value=$22binary_add.10)  :: complex64
    #   $24return_value.11 = cast(value=$22binary_add.10)  :: complex64
2025-06-13 07:34:50,113 - print_capture - INFO -     #   $24return_value.11 = cast(value=$22binary_add.10)  :: complex64
    #   $24return_value.11 = cast(value=$22binary_add.10)  :: complex64
    #   $24return_value.11 = cast(value=$22binary_add.10)  :: complex64
2025-06-13 07:34:50,113 - print_capture - INFO -     #   $24return_value.11 = cast(value=$22binary_add.10)  :: complex64
    #   del $22binary_add.10
    #   del $22binary_add.10
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del $22binary_add.10
    #   del $22binary_add.10
    #   del $22binary_add.10
2025-06-13 07:34:50,113 - print_capture - INFO -     #   del $22binary_add.10
    #   return $24return_value.11
    #   return $24return_value.11
2025-06-13 07:34:50,113 - print_capture - INFO -     #   return $24return_value.11
    #   return $24return_value.11
    #   return $24return_value.11
2025-06-13 07:34:50,113 - print_capture - INFO -     #   return $24return_value.11


2025-06-13 07:34:50,113 - print_capture - INFO - 


2025-06-13 07:34:50,113 - print_capture - INFO - 
    return np.cos(x) + 1j * np.sin(x)  # type: ignore
    return np.cos(x) + 1j * np.sin(x)  # type: ignore
2025-06-13 07:34:50,113 - print_capture - INFO -     return np.cos(x) + 1j * np.sin(x)  # type: ignore
    return np.cos(x) + 1j * np.sin(x)  # type: ignore
    return np.cos(x) + 1j * np.sin(x)  # type: ignore
2025-06-13 07:34:50,113 - print_capture - INFO -     return np.cos(x) + 1j * np.sin(x)  # type: ignore


2025-06-13 07:34:50,113 - print_capture - INFO - 


2025-06-13 07:34:50,113 - print_capture - INFO - 
label 0:
label 0:
2025-06-13 07:34:50,129 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:34:50,129 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:50,129 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:34:50,130 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
2025-06-13 07:34:50,130 - print_capture - INFO -     $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
2025-06-13 07:34:50,130 - print_capture - INFO -     $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=cos) ['$2load_global.0', '$4load_method.1']
    $4load_method.1 = getattr(value=$2load_global.0, attr=cos) ['$2load_global.0', '$4load_method.1']
2025-06-13 07:34:50,130 - print_capture - INFO -     $4load_method.1 = getattr(value=$2load_global.0, attr=cos) ['$2load_global.0', '$4load_method.1']
    $4load_method.1 = getattr(value=$2load_global.0, attr=cos) ['$2load_global.0', '$4load_method.1']
    $4load_method.1 = getattr(value=$2load_global.0, attr=cos) ['$2load_global.0', '$4load_method.1']
2025-06-13 07:34:50,130 - print_capture - INFO -     $4load_method.1 = getattr(value=$2load_global.0, attr=cos) ['$2load_global.0', '$4load_method.1']
    $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'x']
    $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'x']
2025-06-13 07:34:50,130 - print_capture - INFO -     $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'x']
    $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'x']
    $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'x']
2025-06-13 07:34:50,130 - print_capture - INFO -     $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'x']
    $const10.4.1 = const(complex, 1j)        ['$const10.4.1']
    $const10.4.1 = const(complex, 1j)        ['$const10.4.1']
2025-06-13 07:34:50,130 - print_capture - INFO -     $const10.4.1 = const(complex, 1j)        ['$const10.4.1']
    $const10.4.1 = const(complex, 1j)        ['$const10.4.1']
    $const10.4.1 = const(complex, 1j)        ['$const10.4.1']
2025-06-13 07:34:50,130 - print_capture - INFO -     $const10.4.1 = const(complex, 1j)        ['$const10.4.1']
    $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$12load_global.5']
    $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$12load_global.5']
2025-06-13 07:34:50,130 - print_capture - INFO -     $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$12load_global.5']
    $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$12load_global.5']
    $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$12load_global.5']
2025-06-13 07:34:50,130 - print_capture - INFO -     $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$12load_global.5']
    $14load_method.6 = getattr(value=$12load_global.5, attr=sin) ['$12load_global.5', '$14load_method.6']
    $14load_method.6 = getattr(value=$12load_global.5, attr=sin) ['$12load_global.5', '$14load_method.6']
2025-06-13 07:34:50,130 - print_capture - INFO -     $14load_method.6 = getattr(value=$12load_global.5, attr=sin) ['$12load_global.5', '$14load_method.6']
    $14load_method.6 = getattr(value=$12load_global.5, attr=sin) ['$12load_global.5', '$14load_method.6']
    $14load_method.6 = getattr(value=$12load_global.5, attr=sin) ['$12load_global.5', '$14load_method.6']
2025-06-13 07:34:50,130 - print_capture - INFO -     $14load_method.6 = getattr(value=$12load_global.5, attr=sin) ['$12load_global.5', '$14load_method.6']
    $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_method.6', '$18call_method.8', 'x']
    $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_method.6', '$18call_method.8', 'x']
2025-06-13 07:34:50,130 - print_capture - INFO -     $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_method.6', '$18call_method.8', 'x']
    $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_method.6', '$18call_method.8', 'x']
    $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_method.6', '$18call_method.8', 'x']
2025-06-13 07:34:50,130 - print_capture - INFO -     $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_method.6', '$18call_method.8', 'x']
    $20binary_multiply.9 = $const10.4.1 * $18call_method.8 ['$18call_method.8', '$20binary_multiply.9', '$const10.4.1']
    $20binary_multiply.9 = $const10.4.1 * $18call_method.8 ['$18call_method.8', '$20binary_multiply.9', '$const10.4.1']
2025-06-13 07:34:50,130 - print_capture - INFO -     $20binary_multiply.9 = $const10.4.1 * $18call_method.8 ['$18call_method.8', '$20binary_multiply.9', '$const10.4.1']
    $20binary_multiply.9 = $const10.4.1 * $18call_method.8 ['$18call_method.8', '$20binary_multiply.9', '$const10.4.1']
    $20binary_multiply.9 = $const10.4.1 * $18call_method.8 ['$18call_method.8', '$20binary_multiply.9', '$const10.4.1']
2025-06-13 07:34:50,130 - print_capture - INFO -     $20binary_multiply.9 = $const10.4.1 * $18call_method.8 ['$18call_method.8', '$20binary_multiply.9', '$const10.4.1']
    $22binary_add.10 = $8call_method.3 + $20binary_multiply.9 ['$20binary_multiply.9', '$22binary_add.10', '$8call_method.3']
    $22binary_add.10 = $8call_method.3 + $20binary_multiply.9 ['$20binary_multiply.9', '$22binary_add.10', '$8call_method.3']
2025-06-13 07:34:50,130 - print_capture - INFO -     $22binary_add.10 = $8call_method.3 + $20binary_multiply.9 ['$20binary_multiply.9', '$22binary_add.10', '$8call_method.3']
    $22binary_add.10 = $8call_method.3 + $20binary_multiply.9 ['$20binary_multiply.9', '$22binary_add.10', '$8call_method.3']
    $22binary_add.10 = $8call_method.3 + $20binary_multiply.9 ['$20binary_multiply.9', '$22binary_add.10', '$8call_method.3']
2025-06-13 07:34:50,130 - print_capture - INFO -     $22binary_add.10 = $8call_method.3 + $20binary_multiply.9 ['$20binary_multiply.9', '$22binary_add.10', '$8call_method.3']
    $24return_value.11 = cast(value=$22binary_add.10) ['$22binary_add.10', '$24return_value.11']
    $24return_value.11 = cast(value=$22binary_add.10) ['$22binary_add.10', '$24return_value.11']
2025-06-13 07:34:50,130 - print_capture - INFO -     $24return_value.11 = cast(value=$22binary_add.10) ['$22binary_add.10', '$24return_value.11']
    $24return_value.11 = cast(value=$22binary_add.10) ['$22binary_add.10', '$24return_value.11']
    $24return_value.11 = cast(value=$22binary_add.10) ['$22binary_add.10', '$24return_value.11']
2025-06-13 07:34:50,130 - print_capture - INFO -     $24return_value.11 = cast(value=$22binary_add.10) ['$22binary_add.10', '$24return_value.11']
    return $24return_value.11                ['$24return_value.11']
    return $24return_value.11                ['$24return_value.11']
2025-06-13 07:34:50,130 - print_capture - INFO -     return $24return_value.11                ['$24return_value.11']
    return $24return_value.11                ['$24return_value.11']
    return $24return_value.11                ['$24return_value.11']
2025-06-13 07:34:50,130 - print_capture - INFO -     return $24return_value.11                ['$24return_value.11']
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:50,144 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
2025-06-13 07:34:50,144 - print_capture - INFO - # File: /root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/librosa/util/utils.py
# --- LINE 2488 --- 
# --- LINE 2488 --- 
2025-06-13 07:34:50,144 - print_capture - INFO - # --- LINE 2488 --- 
# --- LINE 2488 --- 
# --- LINE 2488 --- 
2025-06-13 07:34:50,144 - print_capture - INFO - # --- LINE 2488 --- 
# label 0
# label 0
2025-06-13 07:34:50,144 - print_capture - INFO - # label 0
# label 0
# label 0
2025-06-13 07:34:50,145 - print_capture - INFO - # label 0
#   x = arg(0, name=x)  :: float64
#   x = arg(0, name=x)  :: float64
2025-06-13 07:34:50,145 - print_capture - INFO - #   x = arg(0, name=x)  :: float64
#   x = arg(0, name=x)  :: float64
#   x = arg(0, name=x)  :: float64
2025-06-13 07:34:50,145 - print_capture - INFO - #   x = arg(0, name=x)  :: float64


2025-06-13 07:34:50,145 - print_capture - INFO - 


2025-06-13 07:34:50,145 - print_capture - INFO - 
@numba.vectorize(
@numba.vectorize(
2025-06-13 07:34:50,145 - print_capture - INFO - @numba.vectorize(
@numba.vectorize(
@numba.vectorize(
2025-06-13 07:34:50,145 - print_capture - INFO - @numba.vectorize(


2025-06-13 07:34:50,145 - print_capture - INFO - 


2025-06-13 07:34:50,145 - print_capture - INFO - 
    # --- LINE 2489 --- 
    # --- LINE 2489 --- 
2025-06-13 07:34:50,145 - print_capture - INFO -     # --- LINE 2489 --- 
    # --- LINE 2489 --- 
    # --- LINE 2489 --- 
2025-06-13 07:34:50,145 - print_capture - INFO -     # --- LINE 2489 --- 


2025-06-13 07:34:50,145 - print_capture - INFO - 


2025-06-13 07:34:50,145 - print_capture - INFO - 
    ["complex64(float32)", "complex128(float64)"], nopython=True, cache=True, identity=1
    ["complex64(float32)", "complex128(float64)"], nopython=True, cache=True, identity=1
2025-06-13 07:34:50,145 - print_capture - INFO -     ["complex64(float32)", "complex128(float64)"], nopython=True, cache=True, identity=1
    ["complex64(float32)", "complex128(float64)"], nopython=True, cache=True, identity=1
    ["complex64(float32)", "complex128(float64)"], nopython=True, cache=True, identity=1
2025-06-13 07:34:50,145 - print_capture - INFO -     ["complex64(float32)", "complex128(float64)"], nopython=True, cache=True, identity=1


2025-06-13 07:34:50,145 - print_capture - INFO - 


2025-06-13 07:34:50,145 - print_capture - INFO - 
# --- LINE 2490 --- 
# --- LINE 2490 --- 
2025-06-13 07:34:50,145 - print_capture - INFO - # --- LINE 2490 --- 
# --- LINE 2490 --- 
# --- LINE 2490 --- 
2025-06-13 07:34:50,145 - print_capture - INFO - # --- LINE 2490 --- 


2025-06-13 07:34:50,145 - print_capture - INFO - 


2025-06-13 07:34:50,145 - print_capture - INFO - 
)  # type: ignore
)  # type: ignore
2025-06-13 07:34:50,145 - print_capture - INFO - )  # type: ignore
)  # type: ignore
)  # type: ignore
2025-06-13 07:34:50,145 - print_capture - INFO - )  # type: ignore


2025-06-13 07:34:50,145 - print_capture - INFO - 


2025-06-13 07:34:50,145 - print_capture - INFO - 
# --- LINE 2491 --- 
# --- LINE 2491 --- 
2025-06-13 07:34:50,145 - print_capture - INFO - # --- LINE 2491 --- 
# --- LINE 2491 --- 
# --- LINE 2491 --- 
2025-06-13 07:34:50,145 - print_capture - INFO - # --- LINE 2491 --- 


2025-06-13 07:34:50,145 - print_capture - INFO - 


2025-06-13 07:34:50,145 - print_capture - INFO - 
def _phasor_angles(x) -> np.complexfloating[Any, Any]:
def _phasor_angles(x) -> np.complexfloating[Any, Any]:
2025-06-13 07:34:50,145 - print_capture - INFO - def _phasor_angles(x) -> np.complexfloating[Any, Any]:
def _phasor_angles(x) -> np.complexfloating[Any, Any]:
def _phasor_angles(x) -> np.complexfloating[Any, Any]:
2025-06-13 07:34:50,145 - print_capture - INFO - def _phasor_angles(x) -> np.complexfloating[Any, Any]:


2025-06-13 07:34:50,145 - print_capture - INFO - 


2025-06-13 07:34:50,145 - print_capture - INFO - 
    # --- LINE 2492 --- 
    # --- LINE 2492 --- 
2025-06-13 07:34:50,145 - print_capture - INFO -     # --- LINE 2492 --- 
    # --- LINE 2492 --- 
    # --- LINE 2492 --- 
2025-06-13 07:34:50,145 - print_capture - INFO -     # --- LINE 2492 --- 
    #   $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:50,145 - print_capture - INFO -     #   $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:50,145 - print_capture - INFO -     #   $2load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $4load_method.1 = getattr(value=$2load_global.0, attr=cos)  :: Function(<ufunc 'cos'>)
    #   $4load_method.1 = getattr(value=$2load_global.0, attr=cos)  :: Function(<ufunc 'cos'>)
2025-06-13 07:34:50,145 - print_capture - INFO -     #   $4load_method.1 = getattr(value=$2load_global.0, attr=cos)  :: Function(<ufunc 'cos'>)
    #   $4load_method.1 = getattr(value=$2load_global.0, attr=cos)  :: Function(<ufunc 'cos'>)
    #   $4load_method.1 = getattr(value=$2load_global.0, attr=cos)  :: Function(<ufunc 'cos'>)
2025-06-13 07:34:50,145 - print_capture - INFO -     #   $4load_method.1 = getattr(value=$2load_global.0, attr=cos)  :: Function(<ufunc 'cos'>)
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:50,145 - print_capture - INFO -     #   del $2load_global.0
    #   del $2load_global.0
    #   del $2load_global.0
2025-06-13 07:34:50,145 - print_capture - INFO -     #   del $2load_global.0
    #   $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float64,) -> float64
    #   $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float64,) -> float64
2025-06-13 07:34:50,145 - print_capture - INFO -     #   $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float64,) -> float64
    #   $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float64,) -> float64
    #   $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float64,) -> float64
2025-06-13 07:34:50,145 - print_capture - INFO -     #   $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float64,) -> float64
    #   del $4load_method.1
    #   del $4load_method.1
2025-06-13 07:34:50,145 - print_capture - INFO -     #   del $4load_method.1
    #   del $4load_method.1
    #   del $4load_method.1
2025-06-13 07:34:50,145 - print_capture - INFO -     #   del $4load_method.1
    #   $const10.4.1 = const(complex, 1j)  :: complex128
    #   $const10.4.1 = const(complex, 1j)  :: complex128
2025-06-13 07:34:50,145 - print_capture - INFO -     #   $const10.4.1 = const(complex, 1j)  :: complex128
    #   $const10.4.1 = const(complex, 1j)  :: complex128
    #   $const10.4.1 = const(complex, 1j)  :: complex128
2025-06-13 07:34:50,145 - print_capture - INFO -     #   $const10.4.1 = const(complex, 1j)  :: complex128
    #   $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:50,145 - print_capture - INFO -     #   $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-06-13 07:34:50,146 - print_capture - INFO -     #   $12load_global.5 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)  :: Module(<module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>)
    #   $14load_method.6 = getattr(value=$12load_global.5, attr=sin)  :: Function(<ufunc 'sin'>)
    #   $14load_method.6 = getattr(value=$12load_global.5, attr=sin)  :: Function(<ufunc 'sin'>)
2025-06-13 07:34:50,146 - print_capture - INFO -     #   $14load_method.6 = getattr(value=$12load_global.5, attr=sin)  :: Function(<ufunc 'sin'>)
    #   $14load_method.6 = getattr(value=$12load_global.5, attr=sin)  :: Function(<ufunc 'sin'>)
    #   $14load_method.6 = getattr(value=$12load_global.5, attr=sin)  :: Function(<ufunc 'sin'>)
2025-06-13 07:34:50,146 - print_capture - INFO -     #   $14load_method.6 = getattr(value=$12load_global.5, attr=sin)  :: Function(<ufunc 'sin'>)
    #   del $12load_global.5
    #   del $12load_global.5
2025-06-13 07:34:50,146 - print_capture - INFO -     #   del $12load_global.5
    #   del $12load_global.5
    #   del $12load_global.5
2025-06-13 07:34:50,146 - print_capture - INFO -     #   del $12load_global.5
    #   $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float64,) -> float64
    #   $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float64,) -> float64
2025-06-13 07:34:50,146 - print_capture - INFO -     #   $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float64,) -> float64
    #   $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float64,) -> float64
    #   $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float64,) -> float64
2025-06-13 07:34:50,146 - print_capture - INFO -     #   $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)  :: (float64,) -> float64
    #   del x
    #   del x
2025-06-13 07:34:50,146 - print_capture - INFO -     #   del x
    #   del x
    #   del x
2025-06-13 07:34:50,146 - print_capture - INFO -     #   del x
    #   del $14load_method.6
    #   del $14load_method.6
2025-06-13 07:34:50,146 - print_capture - INFO -     #   del $14load_method.6
    #   del $14load_method.6
    #   del $14load_method.6
2025-06-13 07:34:50,146 - print_capture - INFO -     #   del $14load_method.6
    #   $20binary_multiply.9 = $const10.4.1 * $18call_method.8  :: complex128
    #   $20binary_multiply.9 = $const10.4.1 * $18call_method.8  :: complex128
2025-06-13 07:34:50,146 - print_capture - INFO -     #   $20binary_multiply.9 = $const10.4.1 * $18call_method.8  :: complex128
    #   $20binary_multiply.9 = $const10.4.1 * $18call_method.8  :: complex128
    #   $20binary_multiply.9 = $const10.4.1 * $18call_method.8  :: complex128
2025-06-13 07:34:50,146 - print_capture - INFO -     #   $20binary_multiply.9 = $const10.4.1 * $18call_method.8  :: complex128
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:50,146 - print_capture - INFO -     #   del $const10.4.1
    #   del $const10.4.1
    #   del $const10.4.1
2025-06-13 07:34:50,146 - print_capture - INFO -     #   del $const10.4.1
    #   del $18call_method.8
    #   del $18call_method.8
2025-06-13 07:34:50,146 - print_capture - INFO -     #   del $18call_method.8
    #   del $18call_method.8
    #   del $18call_method.8
2025-06-13 07:34:50,146 - print_capture - INFO -     #   del $18call_method.8
    #   $22binary_add.10 = $8call_method.3 + $20binary_multiply.9  :: complex128
    #   $22binary_add.10 = $8call_method.3 + $20binary_multiply.9  :: complex128
2025-06-13 07:34:50,146 - print_capture - INFO -     #   $22binary_add.10 = $8call_method.3 + $20binary_multiply.9  :: complex128
    #   $22binary_add.10 = $8call_method.3 + $20binary_multiply.9  :: complex128
    #   $22binary_add.10 = $8call_method.3 + $20binary_multiply.9  :: complex128
2025-06-13 07:34:50,146 - print_capture - INFO -     #   $22binary_add.10 = $8call_method.3 + $20binary_multiply.9  :: complex128
    #   del $8call_method.3
    #   del $8call_method.3
2025-06-13 07:34:50,146 - print_capture - INFO -     #   del $8call_method.3
    #   del $8call_method.3
    #   del $8call_method.3
2025-06-13 07:34:50,146 - print_capture - INFO -     #   del $8call_method.3
    #   del $20binary_multiply.9
    #   del $20binary_multiply.9
2025-06-13 07:34:50,146 - print_capture - INFO -     #   del $20binary_multiply.9
    #   del $20binary_multiply.9
    #   del $20binary_multiply.9
2025-06-13 07:34:50,146 - print_capture - INFO -     #   del $20binary_multiply.9
    #   $24return_value.11 = cast(value=$22binary_add.10)  :: complex128
    #   $24return_value.11 = cast(value=$22binary_add.10)  :: complex128
2025-06-13 07:34:50,146 - print_capture - INFO -     #   $24return_value.11 = cast(value=$22binary_add.10)  :: complex128
    #   $24return_value.11 = cast(value=$22binary_add.10)  :: complex128
    #   $24return_value.11 = cast(value=$22binary_add.10)  :: complex128
2025-06-13 07:34:50,146 - print_capture - INFO -     #   $24return_value.11 = cast(value=$22binary_add.10)  :: complex128
    #   del $22binary_add.10
    #   del $22binary_add.10
2025-06-13 07:34:50,146 - print_capture - INFO -     #   del $22binary_add.10
    #   del $22binary_add.10
    #   del $22binary_add.10
2025-06-13 07:34:50,146 - print_capture - INFO -     #   del $22binary_add.10
    #   return $24return_value.11
    #   return $24return_value.11
2025-06-13 07:34:50,146 - print_capture - INFO -     #   return $24return_value.11
    #   return $24return_value.11
    #   return $24return_value.11
2025-06-13 07:34:50,146 - print_capture - INFO -     #   return $24return_value.11


2025-06-13 07:34:50,146 - print_capture - INFO - 


2025-06-13 07:34:50,146 - print_capture - INFO - 
    return np.cos(x) + 1j * np.sin(x)  # type: ignore
    return np.cos(x) + 1j * np.sin(x)  # type: ignore
2025-06-13 07:34:50,146 - print_capture - INFO -     return np.cos(x) + 1j * np.sin(x)  # type: ignore
    return np.cos(x) + 1j * np.sin(x)  # type: ignore
    return np.cos(x) + 1j * np.sin(x)  # type: ignore
2025-06-13 07:34:50,146 - print_capture - INFO -     return np.cos(x) + 1j * np.sin(x)  # type: ignore


2025-06-13 07:34:50,146 - print_capture - INFO - 


2025-06-13 07:34:50,146 - print_capture - INFO - 
2025-06-13 07:34:50,159 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 07:34:50,159 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 07:34:50,161 - server - INFO - Starting transcription...
2025-06-13 07:34:50,188 - server - ERROR - Error during transcription: Audio tagging resolution at_time_res must be an integer multiple of 0.4 second, e.g., 0.4, 0.8, 1.2, etc, current at_time_res=3.00.
2025-06-13 07:34:58,931 - server - INFO - Shutting down application
Starting Whisper-AT Transcription Server
2025-06-13 07:35:40,848 - print_capture - INFO - Starting Whisper-AT Transcription Server
2025-06-13 07:35:41,756 - server - INFO - Loading Whisper-AT model: base
2025-06-13 07:35:42,541 - server - INFO - Model loaded successfully
label 0:
label 0:
2025-06-13 07:35:55,278 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:35:55,278 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:35:55,278 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:35:55,278 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 07:35:55,278 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 07:35:55,278 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 07:35:55,278 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 07:35:55,278 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:35:55,278 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:35:55,278 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
2025-06-13 07:35:55,278 - print_capture - INFO -     x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
2025-06-13 07:35:55,278 - print_capture - INFO -     x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
2025-06-13 07:35:55,278 - print_capture - INFO -     $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
2025-06-13 07:35:55,278 - print_capture - INFO -     $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
2025-06-13 07:35:55,278 - print_capture - INFO -     $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
2025-06-13 07:35:55,278 - print_capture - INFO -     $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
2025-06-13 07:35:55,278 - print_capture - INFO -     bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
2025-06-13 07:35:55,278 - print_capture - INFO -     bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
2025-06-13 07:35:55,278 - print_capture - INFO -     $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
2025-06-13 07:35:55,278 - print_capture - INFO -     $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
2025-06-13 07:35:55,279 - print_capture - INFO -     $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
2025-06-13 07:35:55,279 - print_capture - INFO -     $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
2025-06-13 07:35:55,279 - print_capture - INFO -     branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
2025-06-13 07:35:55,279 - print_capture - INFO -     branch $22pred, 24, 32                   ['$22pred']
label 24:
label 24:
2025-06-13 07:35:55,279 - print_capture - INFO - label 24:
label 24:
label 24:
2025-06-13 07:35:55,279 - print_capture - INFO - label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
2025-06-13 07:35:55,279 - print_capture - INFO -     $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
2025-06-13 07:35:55,279 - print_capture - INFO -     $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
2025-06-13 07:35:55,279 - print_capture - INFO -     bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
2025-06-13 07:35:55,279 - print_capture - INFO -     bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
2025-06-13 07:35:55,279 - print_capture - INFO -     $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
2025-06-13 07:35:55,279 - print_capture - INFO -     $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
2025-06-13 07:35:55,279 - print_capture - INFO -     branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
2025-06-13 07:35:55,279 - print_capture - INFO -     branch $28pred, 30, 40                   ['$28pred']
label 30:
label 30:
2025-06-13 07:35:55,279 - print_capture - INFO - label 30:
label 30:
label 30:
2025-06-13 07:35:55,279 - print_capture - INFO - label 30:
    jump 36                                  []
    jump 36                                  []
2025-06-13 07:35:55,279 - print_capture - INFO -     jump 36                                  []
    jump 36                                  []
    jump 36                                  []
2025-06-13 07:35:55,279 - print_capture - INFO -     jump 36                                  []
label 32:
label 32:
2025-06-13 07:35:55,279 - print_capture - INFO - label 32:
label 32:
label 32:
2025-06-13 07:35:55,279 - print_capture - INFO - label 32:
    jump 40                                  []
    jump 40                                  []
2025-06-13 07:35:55,279 - print_capture - INFO -     jump 40                                  []
    jump 40                                  []
    jump 40                                  []
2025-06-13 07:35:55,279 - print_capture - INFO -     jump 40                                  []
label 36:
label 36:
2025-06-13 07:35:55,279 - print_capture - INFO - label 36:
label 36:
label 36:
2025-06-13 07:35:55,279 - print_capture - INFO - label 36:
    x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
2025-06-13 07:35:55,279 - print_capture - INFO -     x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
2025-06-13 07:35:55,279 - print_capture - INFO -     x0 = const(int, 0)                       ['x0']
    jump 40                                  []
    jump 40                                  []
2025-06-13 07:35:55,279 - print_capture - INFO -     jump 40                                  []
    jump 40                                  []
    jump 40                                  []
2025-06-13 07:35:55,279 - print_capture - INFO -     jump 40                                  []
label 40:
label 40:
2025-06-13 07:35:55,279 - print_capture - INFO - label 40:
label 40:
label 40:
2025-06-13 07:35:55,279 - print_capture - INFO - label 40:
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
2025-06-13 07:35:55,279 - print_capture - INFO -     $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
2025-06-13 07:35:55,279 - print_capture - INFO -     $const42.1.2 = const(int, -1)            ['$const42.1.2']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
2025-06-13 07:35:55,279 - print_capture - INFO -     x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
2025-06-13 07:35:55,279 - print_capture - INFO -     x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
2025-06-13 07:35:55,279 - print_capture - INFO -     $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
2025-06-13 07:35:55,279 - print_capture - INFO -     $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
2025-06-13 07:35:55,279 - print_capture - INFO -     $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
2025-06-13 07:35:55,279 - print_capture - INFO -     $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
2025-06-13 07:35:55,279 - print_capture - INFO -     bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
2025-06-13 07:35:55,279 - print_capture - INFO -     bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
2025-06-13 07:35:55,280 - print_capture - INFO -     $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
2025-06-13 07:35:55,280 - print_capture - INFO -     $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
2025-06-13 07:35:55,280 - print_capture - INFO -     $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
2025-06-13 07:35:55,280 - print_capture - INFO -     $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
2025-06-13 07:35:55,280 - print_capture - INFO -     branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
2025-06-13 07:35:55,280 - print_capture - INFO -     branch $60pred, 62, 70                   ['$60pred']
label 62:
label 62:
2025-06-13 07:35:55,280 - print_capture - INFO - label 62:
label 62:
label 62:
2025-06-13 07:35:55,280 - print_capture - INFO - label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
2025-06-13 07:35:55,280 - print_capture - INFO -     $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
2025-06-13 07:35:55,280 - print_capture - INFO -     $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 07:35:55,280 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 07:35:55,280 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
2025-06-13 07:35:55,280 - print_capture - INFO -     $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
2025-06-13 07:35:55,280 - print_capture - INFO -     $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
2025-06-13 07:35:55,280 - print_capture - INFO -     branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
2025-06-13 07:35:55,280 - print_capture - INFO -     branch $66pred, 68, 78                   ['$66pred']
label 68:
label 68:
2025-06-13 07:35:55,280 - print_capture - INFO - label 68:
label 68:
label 68:
2025-06-13 07:35:55,280 - print_capture - INFO - label 68:
    jump 74                                  []
    jump 74                                  []
2025-06-13 07:35:55,280 - print_capture - INFO -     jump 74                                  []
    jump 74                                  []
    jump 74                                  []
2025-06-13 07:35:55,280 - print_capture - INFO -     jump 74                                  []
label 70:
label 70:
2025-06-13 07:35:55,280 - print_capture - INFO - label 70:
label 70:
label 70:
2025-06-13 07:35:55,280 - print_capture - INFO - label 70:
    jump 78                                  []
    jump 78                                  []
2025-06-13 07:35:55,280 - print_capture - INFO -     jump 78                                  []
    jump 78                                  []
    jump 78                                  []
2025-06-13 07:35:55,280 - print_capture - INFO -     jump 78                                  []
label 74:
label 74:
2025-06-13 07:35:55,280 - print_capture - INFO - label 74:
label 74:
label 74:
2025-06-13 07:35:55,280 - print_capture - INFO - label 74:
    x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
2025-06-13 07:35:55,280 - print_capture - INFO -     x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
2025-06-13 07:35:55,280 - print_capture - INFO -     x1 = const(int, 0)                       ['x1']
    jump 78                                  []
    jump 78                                  []
2025-06-13 07:35:55,280 - print_capture - INFO -     jump 78                                  []
    jump 78                                  []
    jump 78                                  []
2025-06-13 07:35:55,280 - print_capture - INFO -     jump 78                                  []
label 78:
label 78:
2025-06-13 07:35:55,280 - print_capture - INFO - label 78:
label 78:
label 78:
2025-06-13 07:35:55,280 - print_capture - INFO - label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
2025-06-13 07:35:55,280 - print_capture - INFO -     bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
2025-06-13 07:35:55,280 - print_capture - INFO -     bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
2025-06-13 07:35:55,280 - print_capture - INFO -     $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
2025-06-13 07:35:55,280 - print_capture - INFO -     $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
2025-06-13 07:35:55,280 - print_capture - INFO -     branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
2025-06-13 07:35:55,280 - print_capture - INFO -     branch $80pred, 82, 102                  ['$80pred']
label 82:
label 82:
2025-06-13 07:35:55,280 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 07:35:55,280 - print_capture - INFO - label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
2025-06-13 07:35:55,280 - print_capture - INFO -     $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
2025-06-13 07:35:55,281 - print_capture - INFO -     $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
2025-06-13 07:35:55,281 - print_capture - INFO -     $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
2025-06-13 07:35:55,281 - print_capture - INFO -     $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
2025-06-13 07:35:55,281 - print_capture - INFO -     $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
2025-06-13 07:35:55,281 - print_capture - INFO -     $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
2025-06-13 07:35:55,281 - print_capture - INFO -     $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
2025-06-13 07:35:55,281 - print_capture - INFO -     $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
2025-06-13 07:35:55,281 - print_capture - INFO -     $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
2025-06-13 07:35:55,281 - print_capture - INFO -     $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
2025-06-13 07:35:55,281 - print_capture - INFO -     $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
2025-06-13 07:35:55,281 - print_capture - INFO -     $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
2025-06-13 07:35:55,281 - print_capture - INFO -     $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
2025-06-13 07:35:55,281 - print_capture - INFO -     $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
2025-06-13 07:35:55,281 - print_capture - INFO -     $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
2025-06-13 07:35:55,281 - print_capture - INFO -     $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
2025-06-13 07:35:55,281 - print_capture - INFO -     return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
2025-06-13 07:35:55,281 - print_capture - INFO -     return $100return_value.9                ['$100return_value.9']
label 102:
label 102:
2025-06-13 07:35:55,281 - print_capture - INFO - label 102:
label 102:
label 102:
2025-06-13 07:35:55,281 - print_capture - INFO - label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
2025-06-13 07:35:55,281 - print_capture - INFO -     $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
2025-06-13 07:35:55,281 - print_capture - INFO -     $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
2025-06-13 07:35:55,281 - print_capture - INFO -     $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
2025-06-13 07:35:55,281 - print_capture - INFO -     $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
2025-06-13 07:35:55,281 - print_capture - INFO -     $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
2025-06-13 07:35:55,281 - print_capture - INFO -     $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
2025-06-13 07:35:55,281 - print_capture - INFO -     $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
2025-06-13 07:35:55,281 - print_capture - INFO -     $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
2025-06-13 07:35:55,281 - print_capture - INFO -     $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
2025-06-13 07:35:55,281 - print_capture - INFO -     $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
2025-06-13 07:35:55,281 - print_capture - INFO -     $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
2025-06-13 07:35:55,281 - print_capture - INFO -     $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
2025-06-13 07:35:55,281 - print_capture - INFO -     $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
2025-06-13 07:35:55,281 - print_capture - INFO -     $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
2025-06-13 07:35:55,281 - print_capture - INFO -     $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
2025-06-13 07:35:55,281 - print_capture - INFO -     $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
2025-06-13 07:35:55,281 - print_capture - INFO -     return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
2025-06-13 07:35:55,281 - print_capture - INFO -     return $120return_value.9                ['$120return_value.9']
label 0:
label 0:
2025-06-13 07:35:55,422 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:35:55,422 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:35:55,422 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:35:55,422 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:35:55,422 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:35:55,422 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:35:55,422 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:35:55,422 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 07:35:55,422 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 07:35:55,422 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 07:35:55,422 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 07:35:55,422 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 07:35:55,422 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 07:35:55,422 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 07:35:55,422 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 07:35:55,422 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 07:35:55,422 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 07:35:55,422 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 07:35:55,422 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 07:35:55,422 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 07:35:55,423 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 07:35:55,423 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 07:35:55,423 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 07:35:55,423 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 07:35:55,423 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 07:35:55,423 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 07:35:55,423 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 07:35:55,423 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 07:35:55,423 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 07:35:55,423 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
label 0:
label 0:
2025-06-13 07:35:55,423 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:35:55,423 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:35:55,423 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:35:55,423 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:35:55,423 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:35:55,424 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:35:55,424 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:35:55,424 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 07:35:55,424 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 07:35:55,424 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 07:35:55,424 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 07:35:55,424 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 07:35:55,424 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 07:35:55,424 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 07:35:55,424 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 07:35:55,424 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 07:35:55,424 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 07:35:55,424 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 07:35:55,424 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 07:35:55,424 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 07:35:55,424 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 07:35:55,424 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 07:35:55,424 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 07:35:55,424 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 07:35:55,424 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 07:35:55,424 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 07:35:55,424 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 07:35:55,424 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 07:35:55,424 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 07:35:55,424 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
2025-06-13 07:35:55,554 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 07:35:55,554 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 07:35:55,556 - server - INFO - Starting transcription...
2025-06-13 07:35:55,589 - server - ERROR - Error during transcription: Audio tagging resolution at_time_res must be an integer multiple of 0.4 second, e.g., 0.4, 0.8, 1.2, etc, current at_time_res=3.00.
2025-06-13 07:36:12,562 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 07:36:12,562 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 07:36:12,563 - server - INFO - Starting transcription...
2025-06-13 07:36:13,333 - server - ERROR - Error during transcription: 'Whisper' object has no attribute 'parse_at_label'
2025-06-13 07:36:24,387 - server - INFO - Shutting down application
Starting Whisper-AT Transcription Server
2025-06-13 07:36:58,732 - print_capture - INFO - Starting Whisper-AT Transcription Server
2025-06-13 07:36:59,645 - server - INFO - Loading Whisper-AT model: base
2025-06-13 07:37:00,423 - server - INFO - Model loaded successfully
label 0:
label 0:
2025-06-13 07:37:09,867 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:37:09,867 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:37:09,867 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:37:09,867 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 07:37:09,867 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 07:37:09,867 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 07:37:09,867 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 07:37:09,867 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:37:09,867 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:37:09,867 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
2025-06-13 07:37:09,867 - print_capture - INFO -     x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
2025-06-13 07:37:09,867 - print_capture - INFO -     x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
2025-06-13 07:37:09,867 - print_capture - INFO -     $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
2025-06-13 07:37:09,867 - print_capture - INFO -     $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
2025-06-13 07:37:09,867 - print_capture - INFO -     $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
2025-06-13 07:37:09,867 - print_capture - INFO -     $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
2025-06-13 07:37:09,867 - print_capture - INFO -     bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
2025-06-13 07:37:09,867 - print_capture - INFO -     bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
2025-06-13 07:37:09,867 - print_capture - INFO -     $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
2025-06-13 07:37:09,867 - print_capture - INFO -     $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
2025-06-13 07:37:09,867 - print_capture - INFO -     $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
2025-06-13 07:37:09,867 - print_capture - INFO -     $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
2025-06-13 07:37:09,867 - print_capture - INFO -     branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
2025-06-13 07:37:09,867 - print_capture - INFO -     branch $22pred, 24, 32                   ['$22pred']
label 24:
label 24:
2025-06-13 07:37:09,867 - print_capture - INFO - label 24:
label 24:
label 24:
2025-06-13 07:37:09,867 - print_capture - INFO - label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
2025-06-13 07:37:09,867 - print_capture - INFO -     $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
2025-06-13 07:37:09,867 - print_capture - INFO -     $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
2025-06-13 07:37:09,867 - print_capture - INFO -     bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
2025-06-13 07:37:09,868 - print_capture - INFO -     bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
2025-06-13 07:37:09,868 - print_capture - INFO -     $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
2025-06-13 07:37:09,868 - print_capture - INFO -     $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
2025-06-13 07:37:09,868 - print_capture - INFO -     branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
2025-06-13 07:37:09,868 - print_capture - INFO -     branch $28pred, 30, 40                   ['$28pred']
label 30:
label 30:
2025-06-13 07:37:09,868 - print_capture - INFO - label 30:
label 30:
label 30:
2025-06-13 07:37:09,868 - print_capture - INFO - label 30:
    jump 36                                  []
    jump 36                                  []
2025-06-13 07:37:09,868 - print_capture - INFO -     jump 36                                  []
    jump 36                                  []
    jump 36                                  []
2025-06-13 07:37:09,868 - print_capture - INFO -     jump 36                                  []
label 32:
label 32:
2025-06-13 07:37:09,868 - print_capture - INFO - label 32:
label 32:
label 32:
2025-06-13 07:37:09,868 - print_capture - INFO - label 32:
    jump 40                                  []
    jump 40                                  []
2025-06-13 07:37:09,868 - print_capture - INFO -     jump 40                                  []
    jump 40                                  []
    jump 40                                  []
2025-06-13 07:37:09,868 - print_capture - INFO -     jump 40                                  []
label 36:
label 36:
2025-06-13 07:37:09,868 - print_capture - INFO - label 36:
label 36:
label 36:
2025-06-13 07:37:09,868 - print_capture - INFO - label 36:
    x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
2025-06-13 07:37:09,868 - print_capture - INFO -     x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
2025-06-13 07:37:09,868 - print_capture - INFO -     x0 = const(int, 0)                       ['x0']
    jump 40                                  []
    jump 40                                  []
2025-06-13 07:37:09,868 - print_capture - INFO -     jump 40                                  []
    jump 40                                  []
    jump 40                                  []
2025-06-13 07:37:09,868 - print_capture - INFO -     jump 40                                  []
label 40:
label 40:
2025-06-13 07:37:09,868 - print_capture - INFO - label 40:
label 40:
label 40:
2025-06-13 07:37:09,868 - print_capture - INFO - label 40:
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
2025-06-13 07:37:09,868 - print_capture - INFO -     $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
2025-06-13 07:37:09,868 - print_capture - INFO -     $const42.1.2 = const(int, -1)            ['$const42.1.2']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
2025-06-13 07:37:09,868 - print_capture - INFO -     x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
2025-06-13 07:37:09,868 - print_capture - INFO -     x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
2025-06-13 07:37:09,868 - print_capture - INFO -     $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
2025-06-13 07:37:09,868 - print_capture - INFO -     $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
2025-06-13 07:37:09,868 - print_capture - INFO -     $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
2025-06-13 07:37:09,868 - print_capture - INFO -     $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
2025-06-13 07:37:09,868 - print_capture - INFO -     bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
2025-06-13 07:37:09,868 - print_capture - INFO -     bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
2025-06-13 07:37:09,868 - print_capture - INFO -     $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
2025-06-13 07:37:09,868 - print_capture - INFO -     $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
2025-06-13 07:37:09,868 - print_capture - INFO -     $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
2025-06-13 07:37:09,868 - print_capture - INFO -     $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
2025-06-13 07:37:09,868 - print_capture - INFO -     branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
2025-06-13 07:37:09,868 - print_capture - INFO -     branch $60pred, 62, 70                   ['$60pred']
label 62:
label 62:
2025-06-13 07:37:09,868 - print_capture - INFO - label 62:
label 62:
label 62:
2025-06-13 07:37:09,868 - print_capture - INFO - label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
2025-06-13 07:37:09,868 - print_capture - INFO -     $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
2025-06-13 07:37:09,869 - print_capture - INFO -     $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 07:37:09,869 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 07:37:09,869 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
2025-06-13 07:37:09,869 - print_capture - INFO -     $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
2025-06-13 07:37:09,869 - print_capture - INFO -     $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
2025-06-13 07:37:09,869 - print_capture - INFO -     branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
2025-06-13 07:37:09,869 - print_capture - INFO -     branch $66pred, 68, 78                   ['$66pred']
label 68:
label 68:
2025-06-13 07:37:09,869 - print_capture - INFO - label 68:
label 68:
label 68:
2025-06-13 07:37:09,869 - print_capture - INFO - label 68:
    jump 74                                  []
    jump 74                                  []
2025-06-13 07:37:09,869 - print_capture - INFO -     jump 74                                  []
    jump 74                                  []
    jump 74                                  []
2025-06-13 07:37:09,869 - print_capture - INFO -     jump 74                                  []
label 70:
label 70:
2025-06-13 07:37:09,869 - print_capture - INFO - label 70:
label 70:
label 70:
2025-06-13 07:37:09,869 - print_capture - INFO - label 70:
    jump 78                                  []
    jump 78                                  []
2025-06-13 07:37:09,869 - print_capture - INFO -     jump 78                                  []
    jump 78                                  []
    jump 78                                  []
2025-06-13 07:37:09,869 - print_capture - INFO -     jump 78                                  []
label 74:
label 74:
2025-06-13 07:37:09,869 - print_capture - INFO - label 74:
label 74:
label 74:
2025-06-13 07:37:09,869 - print_capture - INFO - label 74:
    x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
2025-06-13 07:37:09,869 - print_capture - INFO -     x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
2025-06-13 07:37:09,869 - print_capture - INFO -     x1 = const(int, 0)                       ['x1']
    jump 78                                  []
    jump 78                                  []
2025-06-13 07:37:09,869 - print_capture - INFO -     jump 78                                  []
    jump 78                                  []
    jump 78                                  []
2025-06-13 07:37:09,869 - print_capture - INFO -     jump 78                                  []
label 78:
label 78:
2025-06-13 07:37:09,869 - print_capture - INFO - label 78:
label 78:
label 78:
2025-06-13 07:37:09,869 - print_capture - INFO - label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
2025-06-13 07:37:09,869 - print_capture - INFO -     bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
2025-06-13 07:37:09,869 - print_capture - INFO -     bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
2025-06-13 07:37:09,869 - print_capture - INFO -     $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
2025-06-13 07:37:09,869 - print_capture - INFO -     $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
2025-06-13 07:37:09,869 - print_capture - INFO -     branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
2025-06-13 07:37:09,869 - print_capture - INFO -     branch $80pred, 82, 102                  ['$80pred']
label 82:
label 82:
2025-06-13 07:37:09,869 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 07:37:09,869 - print_capture - INFO - label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
2025-06-13 07:37:09,869 - print_capture - INFO -     $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
2025-06-13 07:37:09,869 - print_capture - INFO -     $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
2025-06-13 07:37:09,869 - print_capture - INFO -     $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
2025-06-13 07:37:09,869 - print_capture - INFO -     $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
2025-06-13 07:37:09,869 - print_capture - INFO -     $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
2025-06-13 07:37:09,869 - print_capture - INFO -     $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
2025-06-13 07:37:09,869 - print_capture - INFO -     $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
2025-06-13 07:37:09,869 - print_capture - INFO -     $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
2025-06-13 07:37:09,869 - print_capture - INFO -     $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
2025-06-13 07:37:09,869 - print_capture - INFO -     $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
2025-06-13 07:37:09,870 - print_capture - INFO -     $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
2025-06-13 07:37:09,870 - print_capture - INFO -     $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
2025-06-13 07:37:09,870 - print_capture - INFO -     $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
2025-06-13 07:37:09,870 - print_capture - INFO -     $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
2025-06-13 07:37:09,870 - print_capture - INFO -     $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
2025-06-13 07:37:09,870 - print_capture - INFO -     $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
2025-06-13 07:37:09,870 - print_capture - INFO -     return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
2025-06-13 07:37:09,870 - print_capture - INFO -     return $100return_value.9                ['$100return_value.9']
label 102:
label 102:
2025-06-13 07:37:09,870 - print_capture - INFO - label 102:
label 102:
label 102:
2025-06-13 07:37:09,870 - print_capture - INFO - label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
2025-06-13 07:37:09,870 - print_capture - INFO -     $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
2025-06-13 07:37:09,870 - print_capture - INFO -     $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
2025-06-13 07:37:09,870 - print_capture - INFO -     $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
2025-06-13 07:37:09,870 - print_capture - INFO -     $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
2025-06-13 07:37:09,870 - print_capture - INFO -     $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
2025-06-13 07:37:09,870 - print_capture - INFO -     $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
2025-06-13 07:37:09,870 - print_capture - INFO -     $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
2025-06-13 07:37:09,870 - print_capture - INFO -     $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
2025-06-13 07:37:09,870 - print_capture - INFO -     $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
2025-06-13 07:37:09,870 - print_capture - INFO -     $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
2025-06-13 07:37:09,870 - print_capture - INFO -     $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
2025-06-13 07:37:09,870 - print_capture - INFO -     $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
2025-06-13 07:37:09,870 - print_capture - INFO -     $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
2025-06-13 07:37:09,870 - print_capture - INFO -     $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
2025-06-13 07:37:09,870 - print_capture - INFO -     $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
2025-06-13 07:37:09,870 - print_capture - INFO -     $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
2025-06-13 07:37:09,870 - print_capture - INFO -     return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
2025-06-13 07:37:09,870 - print_capture - INFO -     return $120return_value.9                ['$120return_value.9']
label 0:
label 0:
2025-06-13 07:37:10,010 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:37:10,010 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:37:10,010 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:37:10,010 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:37:10,010 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:37:10,010 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:37:10,010 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:37:10,010 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 07:37:10,010 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 07:37:10,010 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 07:37:10,010 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 07:37:10,010 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 07:37:10,010 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 07:37:10,010 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 07:37:10,010 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 07:37:10,010 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 07:37:10,010 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 07:37:10,010 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 07:37:10,011 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 07:37:10,011 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 07:37:10,011 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 07:37:10,011 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 07:37:10,011 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 07:37:10,011 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 07:37:10,011 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 07:37:10,011 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 07:37:10,011 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 07:37:10,011 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 07:37:10,011 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 07:37:10,011 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
label 0:
label 0:
2025-06-13 07:37:10,011 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:37:10,011 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:37:10,011 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:37:10,012 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:37:10,012 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:37:10,012 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:37:10,012 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:37:10,012 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 07:37:10,012 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 07:37:10,012 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 07:37:10,012 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 07:37:10,012 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 07:37:10,012 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 07:37:10,012 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 07:37:10,012 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 07:37:10,012 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 07:37:10,012 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 07:37:10,012 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 07:37:10,012 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 07:37:10,012 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 07:37:10,012 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 07:37:10,012 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 07:37:10,012 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 07:37:10,012 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 07:37:10,012 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 07:37:10,012 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 07:37:10,012 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 07:37:10,012 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 07:37:10,012 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 07:37:10,012 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
2025-06-13 07:37:10,144 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 07:37:10,144 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 07:37:10,145 - server - INFO - Starting transcription...
2025-06-13 07:37:59,329 - server - INFO - Original audio sampling rate: 16000 Hz
2025-06-13 07:37:59,329 - server - INFO - Starting transcription...
2025-06-13 07:38:19,391 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 07:38:19,391 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 07:38:19,393 - server - INFO - Starting transcription...
2025-06-13 07:38:37,948 - server - INFO - Original audio sampling rate: 16000 Hz
2025-06-13 07:38:37,948 - server - INFO - Starting transcription...
2025-06-13 07:39:05,779 - server - INFO - Original audio sampling rate: 16000 Hz
2025-06-13 07:39:05,780 - server - INFO - Starting transcription...
2025-06-13 07:39:14,053 - server - INFO - Original audio sampling rate: 16000 Hz
2025-06-13 07:39:14,053 - server - INFO - Starting transcription...
2025-06-13 07:39:23,192 - server - INFO - Shutting down application
Starting Whisper-AT Transcription Server
2025-06-13 07:40:11,616 - print_capture - INFO - Starting Whisper-AT Transcription Server
2025-06-13 07:40:12,542 - server - INFO - Loading Whisper-AT model: medium.en
2025-06-13 07:42:15,558 - server - INFO - Model loaded successfully
label 0:
label 0:
2025-06-13 07:42:18,985 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:42:18,985 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:42:18,985 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:42:18,985 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 07:42:18,985 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 07:42:18,985 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 07:42:18,985 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 07:42:18,985 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:42:18,985 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:42:18,985 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
2025-06-13 07:42:18,985 - print_capture - INFO -     x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
2025-06-13 07:42:18,985 - print_capture - INFO -     x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
2025-06-13 07:42:18,985 - print_capture - INFO -     $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
2025-06-13 07:42:18,985 - print_capture - INFO -     $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
2025-06-13 07:42:18,985 - print_capture - INFO -     $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
2025-06-13 07:42:18,985 - print_capture - INFO -     $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
2025-06-13 07:42:18,985 - print_capture - INFO -     bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
2025-06-13 07:42:18,985 - print_capture - INFO -     bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
2025-06-13 07:42:18,985 - print_capture - INFO -     $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
2025-06-13 07:42:18,985 - print_capture - INFO -     $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
2025-06-13 07:42:18,985 - print_capture - INFO -     $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
2025-06-13 07:42:18,985 - print_capture - INFO -     $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
2025-06-13 07:42:18,985 - print_capture - INFO -     branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
2025-06-13 07:42:18,985 - print_capture - INFO -     branch $22pred, 24, 32                   ['$22pred']
label 24:
label 24:
2025-06-13 07:42:18,985 - print_capture - INFO - label 24:
label 24:
label 24:
2025-06-13 07:42:18,985 - print_capture - INFO - label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
2025-06-13 07:42:18,985 - print_capture - INFO -     $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
2025-06-13 07:42:18,985 - print_capture - INFO -     $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
2025-06-13 07:42:18,985 - print_capture - INFO -     bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
2025-06-13 07:42:18,985 - print_capture - INFO -     bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
2025-06-13 07:42:18,985 - print_capture - INFO -     $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
2025-06-13 07:42:18,986 - print_capture - INFO -     $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
2025-06-13 07:42:18,986 - print_capture - INFO -     branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
2025-06-13 07:42:18,986 - print_capture - INFO -     branch $28pred, 30, 40                   ['$28pred']
label 30:
label 30:
2025-06-13 07:42:18,986 - print_capture - INFO - label 30:
label 30:
label 30:
2025-06-13 07:42:18,986 - print_capture - INFO - label 30:
    jump 36                                  []
    jump 36                                  []
2025-06-13 07:42:18,986 - print_capture - INFO -     jump 36                                  []
    jump 36                                  []
    jump 36                                  []
2025-06-13 07:42:18,986 - print_capture - INFO -     jump 36                                  []
label 32:
label 32:
2025-06-13 07:42:18,986 - print_capture - INFO - label 32:
label 32:
label 32:
2025-06-13 07:42:18,986 - print_capture - INFO - label 32:
    jump 40                                  []
    jump 40                                  []
2025-06-13 07:42:18,986 - print_capture - INFO -     jump 40                                  []
    jump 40                                  []
    jump 40                                  []
2025-06-13 07:42:18,986 - print_capture - INFO -     jump 40                                  []
label 36:
label 36:
2025-06-13 07:42:18,986 - print_capture - INFO - label 36:
label 36:
label 36:
2025-06-13 07:42:18,986 - print_capture - INFO - label 36:
    x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
2025-06-13 07:42:18,986 - print_capture - INFO -     x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
2025-06-13 07:42:18,986 - print_capture - INFO -     x0 = const(int, 0)                       ['x0']
    jump 40                                  []
    jump 40                                  []
2025-06-13 07:42:18,986 - print_capture - INFO -     jump 40                                  []
    jump 40                                  []
    jump 40                                  []
2025-06-13 07:42:18,986 - print_capture - INFO -     jump 40                                  []
label 40:
label 40:
2025-06-13 07:42:18,986 - print_capture - INFO - label 40:
label 40:
label 40:
2025-06-13 07:42:18,986 - print_capture - INFO - label 40:
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
2025-06-13 07:42:18,986 - print_capture - INFO -     $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
2025-06-13 07:42:18,986 - print_capture - INFO -     $const42.1.2 = const(int, -1)            ['$const42.1.2']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
2025-06-13 07:42:18,986 - print_capture - INFO -     x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
2025-06-13 07:42:18,986 - print_capture - INFO -     x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
2025-06-13 07:42:18,986 - print_capture - INFO -     $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
2025-06-13 07:42:18,986 - print_capture - INFO -     $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
2025-06-13 07:42:18,986 - print_capture - INFO -     $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
2025-06-13 07:42:18,986 - print_capture - INFO -     $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
2025-06-13 07:42:18,986 - print_capture - INFO -     bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
2025-06-13 07:42:18,986 - print_capture - INFO -     bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
2025-06-13 07:42:18,986 - print_capture - INFO -     $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
2025-06-13 07:42:18,986 - print_capture - INFO -     $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
2025-06-13 07:42:18,986 - print_capture - INFO -     $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
2025-06-13 07:42:18,986 - print_capture - INFO -     $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
2025-06-13 07:42:18,986 - print_capture - INFO -     branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
2025-06-13 07:42:18,986 - print_capture - INFO -     branch $60pred, 62, 70                   ['$60pred']
label 62:
label 62:
2025-06-13 07:42:18,986 - print_capture - INFO - label 62:
label 62:
label 62:
2025-06-13 07:42:18,986 - print_capture - INFO - label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
2025-06-13 07:42:18,986 - print_capture - INFO -     $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
2025-06-13 07:42:18,986 - print_capture - INFO -     $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 07:42:18,986 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 07:42:18,987 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
2025-06-13 07:42:18,987 - print_capture - INFO -     $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
2025-06-13 07:42:18,987 - print_capture - INFO -     $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
2025-06-13 07:42:18,987 - print_capture - INFO -     branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
2025-06-13 07:42:18,987 - print_capture - INFO -     branch $66pred, 68, 78                   ['$66pred']
label 68:
label 68:
2025-06-13 07:42:18,987 - print_capture - INFO - label 68:
label 68:
label 68:
2025-06-13 07:42:18,987 - print_capture - INFO - label 68:
    jump 74                                  []
    jump 74                                  []
2025-06-13 07:42:18,987 - print_capture - INFO -     jump 74                                  []
    jump 74                                  []
    jump 74                                  []
2025-06-13 07:42:18,987 - print_capture - INFO -     jump 74                                  []
label 70:
label 70:
2025-06-13 07:42:18,987 - print_capture - INFO - label 70:
label 70:
label 70:
2025-06-13 07:42:18,987 - print_capture - INFO - label 70:
    jump 78                                  []
    jump 78                                  []
2025-06-13 07:42:18,987 - print_capture - INFO -     jump 78                                  []
    jump 78                                  []
    jump 78                                  []
2025-06-13 07:42:18,987 - print_capture - INFO -     jump 78                                  []
label 74:
label 74:
2025-06-13 07:42:18,987 - print_capture - INFO - label 74:
label 74:
label 74:
2025-06-13 07:42:18,987 - print_capture - INFO - label 74:
    x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
2025-06-13 07:42:18,987 - print_capture - INFO -     x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
2025-06-13 07:42:18,987 - print_capture - INFO -     x1 = const(int, 0)                       ['x1']
    jump 78                                  []
    jump 78                                  []
2025-06-13 07:42:18,987 - print_capture - INFO -     jump 78                                  []
    jump 78                                  []
    jump 78                                  []
2025-06-13 07:42:18,987 - print_capture - INFO -     jump 78                                  []
label 78:
label 78:
2025-06-13 07:42:18,987 - print_capture - INFO - label 78:
label 78:
label 78:
2025-06-13 07:42:18,987 - print_capture - INFO - label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
2025-06-13 07:42:18,987 - print_capture - INFO -     bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
2025-06-13 07:42:18,987 - print_capture - INFO -     bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
2025-06-13 07:42:18,987 - print_capture - INFO -     $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
2025-06-13 07:42:18,987 - print_capture - INFO -     $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
2025-06-13 07:42:18,987 - print_capture - INFO -     branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
2025-06-13 07:42:18,987 - print_capture - INFO -     branch $80pred, 82, 102                  ['$80pred']
label 82:
label 82:
2025-06-13 07:42:18,987 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 07:42:18,987 - print_capture - INFO - label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
2025-06-13 07:42:18,987 - print_capture - INFO -     $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
2025-06-13 07:42:18,987 - print_capture - INFO -     $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
2025-06-13 07:42:18,987 - print_capture - INFO -     $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
2025-06-13 07:42:18,987 - print_capture - INFO -     $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
2025-06-13 07:42:18,987 - print_capture - INFO -     $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
2025-06-13 07:42:18,987 - print_capture - INFO -     $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
2025-06-13 07:42:18,987 - print_capture - INFO -     $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
2025-06-13 07:42:18,987 - print_capture - INFO -     $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
2025-06-13 07:42:18,987 - print_capture - INFO -     $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
2025-06-13 07:42:18,987 - print_capture - INFO -     $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
2025-06-13 07:42:18,987 - print_capture - INFO -     $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
2025-06-13 07:42:18,988 - print_capture - INFO -     $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
2025-06-13 07:42:18,988 - print_capture - INFO -     $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
2025-06-13 07:42:18,988 - print_capture - INFO -     $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
2025-06-13 07:42:18,988 - print_capture - INFO -     $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
2025-06-13 07:42:18,988 - print_capture - INFO -     $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
2025-06-13 07:42:18,988 - print_capture - INFO -     return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
2025-06-13 07:42:18,988 - print_capture - INFO -     return $100return_value.9                ['$100return_value.9']
label 102:
label 102:
2025-06-13 07:42:18,988 - print_capture - INFO - label 102:
label 102:
label 102:
2025-06-13 07:42:18,988 - print_capture - INFO - label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
2025-06-13 07:42:18,988 - print_capture - INFO -     $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
2025-06-13 07:42:18,988 - print_capture - INFO -     $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
2025-06-13 07:42:18,988 - print_capture - INFO -     $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
2025-06-13 07:42:18,988 - print_capture - INFO -     $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
2025-06-13 07:42:18,988 - print_capture - INFO -     $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
2025-06-13 07:42:18,988 - print_capture - INFO -     $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
2025-06-13 07:42:18,988 - print_capture - INFO -     $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
2025-06-13 07:42:18,988 - print_capture - INFO -     $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
2025-06-13 07:42:18,988 - print_capture - INFO -     $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
2025-06-13 07:42:18,988 - print_capture - INFO -     $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
2025-06-13 07:42:18,988 - print_capture - INFO -     $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
2025-06-13 07:42:18,988 - print_capture - INFO -     $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
2025-06-13 07:42:18,988 - print_capture - INFO -     $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
2025-06-13 07:42:18,988 - print_capture - INFO -     $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
2025-06-13 07:42:18,988 - print_capture - INFO -     $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
2025-06-13 07:42:18,988 - print_capture - INFO -     $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
2025-06-13 07:42:18,988 - print_capture - INFO -     return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
2025-06-13 07:42:18,988 - print_capture - INFO -     return $120return_value.9                ['$120return_value.9']
label 0:
label 0:
2025-06-13 07:42:19,117 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:42:19,117 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:42:19,117 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:42:19,117 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:42:19,117 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:42:19,117 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:42:19,117 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:42:19,117 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 07:42:19,117 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 07:42:19,117 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 07:42:19,117 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 07:42:19,117 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 07:42:19,117 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 07:42:19,117 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 07:42:19,118 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 07:42:19,118 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 07:42:19,118 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 07:42:19,118 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 07:42:19,118 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 07:42:19,118 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 07:42:19,118 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 07:42:19,118 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 07:42:19,118 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 07:42:19,118 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 07:42:19,118 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 07:42:19,118 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 07:42:19,118 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 07:42:19,118 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 07:42:19,118 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 07:42:19,118 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
label 0:
label 0:
2025-06-13 07:42:19,119 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 07:42:19,119 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:42:19,119 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 07:42:19,119 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:42:19,119 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 07:42:19,119 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:42:19,119 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 07:42:19,119 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 07:42:19,119 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 07:42:19,119 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 07:42:19,119 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 07:42:19,119 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 07:42:19,119 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 07:42:19,119 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 07:42:19,119 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 07:42:19,119 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 07:42:19,119 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 07:42:19,119 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 07:42:19,119 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 07:42:19,119 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 07:42:19,119 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 07:42:19,119 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 07:42:19,119 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 07:42:19,119 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 07:42:19,119 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 07:42:19,119 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 07:42:19,119 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 07:42:19,119 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 07:42:19,119 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 07:42:19,119 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
2025-06-13 07:42:19,295 - server - INFO - Original audio sampling rate: 16000 Hz
2025-06-13 07:42:19,296 - server - INFO - Starting transcription...
2025-06-13 07:42:30,917 - server - INFO - Original audio sampling rate: 16000 Hz
2025-06-13 07:42:30,917 - server - INFO - Starting transcription...
2025-06-13 07:42:42,329 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 07:42:42,329 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 07:42:42,331 - server - INFO - Starting transcription...
2025-06-13 07:43:07,478 - server - INFO - Shutting down application
Starting Whisper-AT Transcription Server
2025-06-13 08:34:21,191 - print_capture - INFO - Starting Whisper-AT Transcription Server
2025-06-13 08:34:22,086 - server - INFO - Loading Whisper-AT model: small.en
2025-06-13 08:34:24,073 - server - INFO - Model loaded successfully
label 0:
label 0:
2025-06-13 08:35:44,178 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 08:35:44,178 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 08:35:44,178 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 08:35:44,178 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 08:35:44,178 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 08:35:44,178 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 08:35:44,178 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 08:35:44,178 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 08:35:44,178 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 08:35:44,178 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
2025-06-13 08:35:44,178 - print_capture - INFO -     x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
2025-06-13 08:35:44,178 - print_capture - INFO -     x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
2025-06-13 08:35:44,178 - print_capture - INFO -     $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
2025-06-13 08:35:44,178 - print_capture - INFO -     $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
2025-06-13 08:35:44,178 - print_capture - INFO -     $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
2025-06-13 08:35:44,178 - print_capture - INFO -     $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
2025-06-13 08:35:44,178 - print_capture - INFO -     bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
2025-06-13 08:35:44,178 - print_capture - INFO -     bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
2025-06-13 08:35:44,178 - print_capture - INFO -     $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
2025-06-13 08:35:44,178 - print_capture - INFO -     $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
2025-06-13 08:35:44,178 - print_capture - INFO -     $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
2025-06-13 08:35:44,178 - print_capture - INFO -     $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
2025-06-13 08:35:44,178 - print_capture - INFO -     branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
2025-06-13 08:35:44,178 - print_capture - INFO -     branch $22pred, 24, 32                   ['$22pred']
label 24:
label 24:
2025-06-13 08:35:44,178 - print_capture - INFO - label 24:
label 24:
label 24:
2025-06-13 08:35:44,178 - print_capture - INFO - label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
2025-06-13 08:35:44,178 - print_capture - INFO -     $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
2025-06-13 08:35:44,179 - print_capture - INFO -     $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
2025-06-13 08:35:44,179 - print_capture - INFO -     bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
2025-06-13 08:35:44,179 - print_capture - INFO -     bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
2025-06-13 08:35:44,179 - print_capture - INFO -     $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
2025-06-13 08:35:44,179 - print_capture - INFO -     $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
2025-06-13 08:35:44,179 - print_capture - INFO -     branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
2025-06-13 08:35:44,179 - print_capture - INFO -     branch $28pred, 30, 40                   ['$28pred']
label 30:
label 30:
2025-06-13 08:35:44,179 - print_capture - INFO - label 30:
label 30:
label 30:
2025-06-13 08:35:44,179 - print_capture - INFO - label 30:
    jump 36                                  []
    jump 36                                  []
2025-06-13 08:35:44,179 - print_capture - INFO -     jump 36                                  []
    jump 36                                  []
    jump 36                                  []
2025-06-13 08:35:44,179 - print_capture - INFO -     jump 36                                  []
label 32:
label 32:
2025-06-13 08:35:44,179 - print_capture - INFO - label 32:
label 32:
label 32:
2025-06-13 08:35:44,179 - print_capture - INFO - label 32:
    jump 40                                  []
    jump 40                                  []
2025-06-13 08:35:44,179 - print_capture - INFO -     jump 40                                  []
    jump 40                                  []
    jump 40                                  []
2025-06-13 08:35:44,179 - print_capture - INFO -     jump 40                                  []
label 36:
label 36:
2025-06-13 08:35:44,179 - print_capture - INFO - label 36:
label 36:
label 36:
2025-06-13 08:35:44,179 - print_capture - INFO - label 36:
    x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
2025-06-13 08:35:44,179 - print_capture - INFO -     x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
2025-06-13 08:35:44,179 - print_capture - INFO -     x0 = const(int, 0)                       ['x0']
    jump 40                                  []
    jump 40                                  []
2025-06-13 08:35:44,179 - print_capture - INFO -     jump 40                                  []
    jump 40                                  []
    jump 40                                  []
2025-06-13 08:35:44,179 - print_capture - INFO -     jump 40                                  []
label 40:
label 40:
2025-06-13 08:35:44,179 - print_capture - INFO - label 40:
label 40:
label 40:
2025-06-13 08:35:44,179 - print_capture - INFO - label 40:
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
2025-06-13 08:35:44,179 - print_capture - INFO -     $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
2025-06-13 08:35:44,179 - print_capture - INFO -     $const42.1.2 = const(int, -1)            ['$const42.1.2']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
2025-06-13 08:35:44,179 - print_capture - INFO -     x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
2025-06-13 08:35:44,179 - print_capture - INFO -     x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
2025-06-13 08:35:44,179 - print_capture - INFO -     $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
2025-06-13 08:35:44,179 - print_capture - INFO -     $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
2025-06-13 08:35:44,179 - print_capture - INFO -     $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
2025-06-13 08:35:44,179 - print_capture - INFO -     $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
2025-06-13 08:35:44,179 - print_capture - INFO -     bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
2025-06-13 08:35:44,179 - print_capture - INFO -     bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
2025-06-13 08:35:44,179 - print_capture - INFO -     $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
2025-06-13 08:35:44,179 - print_capture - INFO -     $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
2025-06-13 08:35:44,179 - print_capture - INFO -     $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
2025-06-13 08:35:44,179 - print_capture - INFO -     $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
2025-06-13 08:35:44,179 - print_capture - INFO -     branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
2025-06-13 08:35:44,179 - print_capture - INFO -     branch $60pred, 62, 70                   ['$60pred']
label 62:
label 62:
2025-06-13 08:35:44,179 - print_capture - INFO - label 62:
label 62:
label 62:
2025-06-13 08:35:44,179 - print_capture - INFO - label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
2025-06-13 08:35:44,179 - print_capture - INFO -     $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
2025-06-13 08:35:44,180 - print_capture - INFO -     $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 08:35:44,180 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 08:35:44,180 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
2025-06-13 08:35:44,180 - print_capture - INFO -     $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
2025-06-13 08:35:44,180 - print_capture - INFO -     $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
2025-06-13 08:35:44,180 - print_capture - INFO -     branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
2025-06-13 08:35:44,180 - print_capture - INFO -     branch $66pred, 68, 78                   ['$66pred']
label 68:
label 68:
2025-06-13 08:35:44,180 - print_capture - INFO - label 68:
label 68:
label 68:
2025-06-13 08:35:44,180 - print_capture - INFO - label 68:
    jump 74                                  []
    jump 74                                  []
2025-06-13 08:35:44,180 - print_capture - INFO -     jump 74                                  []
    jump 74                                  []
    jump 74                                  []
2025-06-13 08:35:44,180 - print_capture - INFO -     jump 74                                  []
label 70:
label 70:
2025-06-13 08:35:44,180 - print_capture - INFO - label 70:
label 70:
label 70:
2025-06-13 08:35:44,180 - print_capture - INFO - label 70:
    jump 78                                  []
    jump 78                                  []
2025-06-13 08:35:44,180 - print_capture - INFO -     jump 78                                  []
    jump 78                                  []
    jump 78                                  []
2025-06-13 08:35:44,180 - print_capture - INFO -     jump 78                                  []
label 74:
label 74:
2025-06-13 08:35:44,180 - print_capture - INFO - label 74:
label 74:
label 74:
2025-06-13 08:35:44,180 - print_capture - INFO - label 74:
    x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
2025-06-13 08:35:44,180 - print_capture - INFO -     x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
2025-06-13 08:35:44,180 - print_capture - INFO -     x1 = const(int, 0)                       ['x1']
    jump 78                                  []
    jump 78                                  []
2025-06-13 08:35:44,180 - print_capture - INFO -     jump 78                                  []
    jump 78                                  []
    jump 78                                  []
2025-06-13 08:35:44,180 - print_capture - INFO -     jump 78                                  []
label 78:
label 78:
2025-06-13 08:35:44,180 - print_capture - INFO - label 78:
label 78:
label 78:
2025-06-13 08:35:44,180 - print_capture - INFO - label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
2025-06-13 08:35:44,180 - print_capture - INFO -     bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
2025-06-13 08:35:44,180 - print_capture - INFO -     bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
2025-06-13 08:35:44,180 - print_capture - INFO -     $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
2025-06-13 08:35:44,180 - print_capture - INFO -     $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
2025-06-13 08:35:44,180 - print_capture - INFO -     branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
2025-06-13 08:35:44,180 - print_capture - INFO -     branch $80pred, 82, 102                  ['$80pred']
label 82:
label 82:
2025-06-13 08:35:44,180 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 08:35:44,180 - print_capture - INFO - label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
2025-06-13 08:35:44,180 - print_capture - INFO -     $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
2025-06-13 08:35:44,180 - print_capture - INFO -     $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
2025-06-13 08:35:44,180 - print_capture - INFO -     $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
2025-06-13 08:35:44,180 - print_capture - INFO -     $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
2025-06-13 08:35:44,180 - print_capture - INFO -     $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
2025-06-13 08:35:44,180 - print_capture - INFO -     $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
2025-06-13 08:35:44,180 - print_capture - INFO -     $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
2025-06-13 08:35:44,180 - print_capture - INFO -     $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
2025-06-13 08:35:44,180 - print_capture - INFO -     $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
2025-06-13 08:35:44,180 - print_capture - INFO -     $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
2025-06-13 08:35:44,181 - print_capture - INFO -     $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
2025-06-13 08:35:44,181 - print_capture - INFO -     $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
2025-06-13 08:35:44,181 - print_capture - INFO -     $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
2025-06-13 08:35:44,181 - print_capture - INFO -     $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
2025-06-13 08:35:44,181 - print_capture - INFO -     $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
2025-06-13 08:35:44,181 - print_capture - INFO -     $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
2025-06-13 08:35:44,181 - print_capture - INFO -     return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
2025-06-13 08:35:44,181 - print_capture - INFO -     return $100return_value.9                ['$100return_value.9']
label 102:
label 102:
2025-06-13 08:35:44,181 - print_capture - INFO - label 102:
label 102:
label 102:
2025-06-13 08:35:44,181 - print_capture - INFO - label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
2025-06-13 08:35:44,181 - print_capture - INFO -     $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
2025-06-13 08:35:44,181 - print_capture - INFO -     $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
2025-06-13 08:35:44,181 - print_capture - INFO -     $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
2025-06-13 08:35:44,181 - print_capture - INFO -     $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
2025-06-13 08:35:44,181 - print_capture - INFO -     $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
2025-06-13 08:35:44,181 - print_capture - INFO -     $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
2025-06-13 08:35:44,181 - print_capture - INFO -     $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
2025-06-13 08:35:44,181 - print_capture - INFO -     $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
2025-06-13 08:35:44,181 - print_capture - INFO -     $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
2025-06-13 08:35:44,181 - print_capture - INFO -     $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
2025-06-13 08:35:44,181 - print_capture - INFO -     $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
2025-06-13 08:35:44,181 - print_capture - INFO -     $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
2025-06-13 08:35:44,181 - print_capture - INFO -     $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
2025-06-13 08:35:44,181 - print_capture - INFO -     $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
2025-06-13 08:35:44,181 - print_capture - INFO -     $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
2025-06-13 08:35:44,181 - print_capture - INFO -     $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
2025-06-13 08:35:44,181 - print_capture - INFO -     return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
2025-06-13 08:35:44,181 - print_capture - INFO -     return $120return_value.9                ['$120return_value.9']
label 0:
label 0:
2025-06-13 08:35:44,330 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 08:35:44,330 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 08:35:44,330 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 08:35:44,330 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 08:35:44,330 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 08:35:44,330 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 08:35:44,330 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 08:35:44,330 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 08:35:44,330 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 08:35:44,330 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 08:35:44,330 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 08:35:44,330 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 08:35:44,330 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 08:35:44,330 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 08:35:44,330 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 08:35:44,330 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 08:35:44,330 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 08:35:44,331 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 08:35:44,331 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 08:35:44,331 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 08:35:44,331 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 08:35:44,331 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 08:35:44,331 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 08:35:44,331 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 08:35:44,331 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 08:35:44,331 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 08:35:44,331 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 08:35:44,331 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 08:35:44,331 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 08:35:44,331 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
label 0:
label 0:
2025-06-13 08:35:44,331 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 08:35:44,331 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 08:35:44,332 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 08:35:44,332 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 08:35:44,332 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 08:35:44,332 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 08:35:44,332 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 08:35:44,332 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 08:35:44,332 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 08:35:44,332 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 08:35:44,332 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 08:35:44,332 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 08:35:44,332 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 08:35:44,332 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 08:35:44,332 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 08:35:44,332 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 08:35:44,332 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 08:35:44,332 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 08:35:44,332 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 08:35:44,332 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 08:35:44,332 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 08:35:44,332 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 08:35:44,332 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 08:35:44,332 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 08:35:44,332 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 08:35:44,332 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 08:35:44,332 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 08:35:44,332 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 08:35:44,332 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 08:35:44,332 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
2025-06-13 08:35:44,461 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 08:35:44,461 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 08:35:44,463 - server - INFO - Starting transcription...
Starting Whisper-AT Transcription Server
2025-06-13 08:36:09,223 - print_capture - INFO - Starting Whisper-AT Transcription Server
2025-06-13 08:37:02,919 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 08:37:02,919 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 08:37:02,920 - server - INFO - Starting transcription...
2025-06-13 08:37:21,596 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 08:37:21,596 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 08:37:21,598 - server - INFO - Starting transcription...
2025-06-13 08:37:51,499 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 08:37:51,499 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 08:37:51,510 - server - INFO - Starting transcription...
2025-06-13 08:38:33,904 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 08:38:33,904 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 08:38:33,914 - server - INFO - Starting transcription...
2025-06-13 08:39:35,023 - server - INFO - Original audio sampling rate: 16000 Hz
2025-06-13 08:39:35,024 - server - INFO - Starting transcription...
2025-06-13 08:40:06,019 - server - INFO - Original audio sampling rate: 16000 Hz
2025-06-13 08:40:06,019 - server - INFO - Starting transcription...
2025-06-13 08:40:30,139 - server - INFO - Original audio sampling rate: 16000 Hz
2025-06-13 08:40:30,139 - server - INFO - Starting transcription...
2025-06-13 08:41:12,056 - server - INFO - Original audio sampling rate: 16000 Hz
2025-06-13 08:41:12,056 - server - INFO - Starting transcription...
2025-06-13 08:42:35,243 - server - INFO - Original audio sampling rate: 16000 Hz
2025-06-13 08:42:35,243 - server - INFO - Starting transcription...
2025-06-13 08:43:01,328 - server - INFO - Original audio sampling rate: 16000 Hz
2025-06-13 08:43:01,328 - server - INFO - Starting transcription...
2025-06-13 08:46:38,552 - server - INFO - Original audio sampling rate: 16000 Hz
2025-06-13 08:46:38,553 - server - INFO - Starting transcription...
2025-06-13 08:56:46,689 - server - INFO - Original audio sampling rate: 16000 Hz
2025-06-13 08:56:46,689 - server - INFO - Starting transcription...
2025-06-13 08:56:59,312 - server - INFO - Original audio sampling rate: 16000 Hz
2025-06-13 08:56:59,312 - server - INFO - Starting transcription...
2025-06-13 08:57:56,913 - server - INFO - Original audio sampling rate: 16000 Hz
2025-06-13 08:57:56,913 - server - INFO - Starting transcription...
2025-06-13 08:58:13,688 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 08:58:13,689 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 08:58:13,690 - server - INFO - Starting transcription...
2025-06-13 08:58:40,613 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 08:58:40,613 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 08:58:40,614 - server - INFO - Starting transcription...
2025-06-13 08:58:46,319 - server - INFO - Original audio sampling rate: 16000 Hz
2025-06-13 08:58:46,319 - server - INFO - Starting transcription...
2025-06-13 08:58:52,914 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 08:58:52,914 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 08:58:52,915 - server - INFO - Starting transcription...
2025-06-13 08:59:40,991 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 08:59:40,991 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 08:59:40,992 - server - INFO - Starting transcription...
2025-06-13 09:00:08,740 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:00:08,741 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:00:08,742 - server - INFO - Starting transcription...
2025-06-13 09:00:40,050 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:00:40,050 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:00:40,052 - server - INFO - Starting transcription...
2025-06-13 09:05:40,273 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:05:40,273 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:05:40,274 - server - INFO - Starting transcription...
2025-06-13 09:05:43,128 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:05:43,128 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:05:43,130 - server - INFO - Starting transcription...
2025-06-13 09:05:43,944 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:05:43,944 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:05:43,946 - server - INFO - Starting transcription...
2025-06-13 09:05:44,779 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:05:44,779 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:05:44,781 - server - INFO - Starting transcription...
2025-06-13 09:05:46,561 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:05:46,561 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:05:46,563 - server - INFO - Starting transcription...
2025-06-13 09:05:56,108 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:05:56,109 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:05:56,110 - server - INFO - Starting transcription...
2025-06-13 09:05:58,208 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:05:58,208 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:05:58,210 - server - INFO - Starting transcription...
2025-06-13 09:06:01,276 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:06:01,276 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:06:01,278 - server - INFO - Starting transcription...
2025-06-13 09:06:04,956 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:06:04,956 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:06:04,957 - server - INFO - Starting transcription...
2025-06-13 09:06:09,923 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:06:09,923 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:06:09,924 - server - INFO - Starting transcription...
2025-06-13 09:06:16,916 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:06:16,916 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:06:16,918 - server - INFO - Starting transcription...
2025-06-13 09:06:18,252 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:06:18,252 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:06:18,253 - server - INFO - Starting transcription...
2025-06-13 09:06:23,493 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:06:23,493 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:06:23,495 - server - INFO - Starting transcription...
2025-06-13 09:06:28,161 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:06:28,161 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:06:28,162 - server - INFO - Starting transcription...
2025-06-13 09:06:28,993 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:06:28,993 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:06:28,995 - server - INFO - Starting transcription...
2025-06-13 09:06:31,377 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:06:31,377 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:06:31,379 - server - INFO - Starting transcription...
2025-06-13 09:06:32,208 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:06:32,208 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:06:32,209 - server - INFO - Starting transcription...
2025-06-13 09:06:33,058 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:06:33,058 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:06:33,059 - server - INFO - Starting transcription...
2025-06-13 09:06:37,433 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:06:37,433 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:06:37,434 - server - INFO - Starting transcription...
2025-06-13 09:06:46,636 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:06:46,636 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:06:46,639 - server - INFO - Starting transcription...
2025-06-13 09:06:50,658 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:06:50,658 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:06:50,660 - server - INFO - Starting transcription...
2025-06-13 09:06:56,048 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:06:56,048 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:06:56,049 - server - INFO - Starting transcription...
2025-06-13 09:06:56,758 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:06:56,758 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:06:56,759 - server - INFO - Starting transcription...
2025-06-13 09:07:03,725 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:07:03,725 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:07:03,727 - server - INFO - Starting transcription...
2025-06-13 09:07:07,068 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:07:07,068 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:07:07,070 - server - INFO - Starting transcription...
2025-06-13 09:07:11,687 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:07:11,687 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:07:11,689 - server - INFO - Starting transcription...
2025-06-13 09:07:16,232 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:07:16,232 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:07:16,233 - server - INFO - Starting transcription...
2025-06-13 09:08:57,079 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:08:57,079 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:08:57,081 - server - INFO - Starting transcription...
2025-06-13 09:09:22,471 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:09:22,471 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:09:22,472 - server - INFO - Starting transcription...
2025-06-13 09:09:32,342 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:09:32,342 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:09:32,343 - server - INFO - Starting transcription...
2025-06-13 09:10:10,337 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:10:10,338 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:10:10,339 - server - INFO - Starting transcription...
2025-06-13 09:11:08,018 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:11:08,018 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:11:08,020 - server - INFO - Starting transcription...
2025-06-13 09:11:58,638 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:11:58,639 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:11:58,640 - server - INFO - Starting transcription...
2025-06-13 09:12:27,284 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:12:27,285 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:12:27,289 - server - INFO - Starting transcription...
2025-06-13 09:21:57,422 - server - INFO - Shutting down application
2025-06-13 09:21:58,462 - server - INFO - Loading Whisper-AT model: small
2025-06-13 09:22:00,234 - server - INFO - Model loaded successfully
2025-06-13 09:22:20,128 - server - INFO - Shutting down application
Starting Whisper-AT Transcription Server
2025-06-13 09:22:24,079 - print_capture - INFO - Starting Whisper-AT Transcription Server
2025-06-13 09:22:25,001 - server - INFO - Loading Whisper-AT model: small
2025-06-13 09:22:26,733 - server - INFO - Model loaded successfully
label 0:
label 0:
2025-06-13 09:22:55,881 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 09:22:55,881 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 09:22:55,881 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 09:22:55,881 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 09:22:55,881 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 09:22:55,881 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 09:22:55,881 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 09:22:55,881 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 09:22:55,881 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 09:22:55,882 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
2025-06-13 09:22:55,882 - print_capture - INFO -     x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
2025-06-13 09:22:55,882 - print_capture - INFO -     x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
2025-06-13 09:22:55,882 - print_capture - INFO -     $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
2025-06-13 09:22:55,882 - print_capture - INFO -     $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
2025-06-13 09:22:55,882 - print_capture - INFO -     $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
2025-06-13 09:22:55,882 - print_capture - INFO -     $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
2025-06-13 09:22:55,882 - print_capture - INFO -     bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
2025-06-13 09:22:55,882 - print_capture - INFO -     bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
2025-06-13 09:22:55,882 - print_capture - INFO -     $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
2025-06-13 09:22:55,882 - print_capture - INFO -     $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
2025-06-13 09:22:55,882 - print_capture - INFO -     $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
2025-06-13 09:22:55,882 - print_capture - INFO -     $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
2025-06-13 09:22:55,882 - print_capture - INFO -     branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
2025-06-13 09:22:55,882 - print_capture - INFO -     branch $22pred, 24, 32                   ['$22pred']
label 24:
label 24:
2025-06-13 09:22:55,882 - print_capture - INFO - label 24:
label 24:
label 24:
2025-06-13 09:22:55,882 - print_capture - INFO - label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
2025-06-13 09:22:55,882 - print_capture - INFO -     $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
2025-06-13 09:22:55,882 - print_capture - INFO -     $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
2025-06-13 09:22:55,882 - print_capture - INFO -     bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
2025-06-13 09:22:55,882 - print_capture - INFO -     bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
2025-06-13 09:22:55,882 - print_capture - INFO -     $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
2025-06-13 09:22:55,882 - print_capture - INFO -     $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
2025-06-13 09:22:55,882 - print_capture - INFO -     branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
2025-06-13 09:22:55,882 - print_capture - INFO -     branch $28pred, 30, 40                   ['$28pred']
label 30:
label 30:
2025-06-13 09:22:55,882 - print_capture - INFO - label 30:
label 30:
label 30:
2025-06-13 09:22:55,882 - print_capture - INFO - label 30:
    jump 36                                  []
    jump 36                                  []
2025-06-13 09:22:55,882 - print_capture - INFO -     jump 36                                  []
    jump 36                                  []
    jump 36                                  []
2025-06-13 09:22:55,882 - print_capture - INFO -     jump 36                                  []
label 32:
label 32:
2025-06-13 09:22:55,882 - print_capture - INFO - label 32:
label 32:
label 32:
2025-06-13 09:22:55,882 - print_capture - INFO - label 32:
    jump 40                                  []
    jump 40                                  []
2025-06-13 09:22:55,882 - print_capture - INFO -     jump 40                                  []
    jump 40                                  []
    jump 40                                  []
2025-06-13 09:22:55,882 - print_capture - INFO -     jump 40                                  []
label 36:
label 36:
2025-06-13 09:22:55,882 - print_capture - INFO - label 36:
label 36:
label 36:
2025-06-13 09:22:55,882 - print_capture - INFO - label 36:
    x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
2025-06-13 09:22:55,882 - print_capture - INFO -     x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
2025-06-13 09:22:55,882 - print_capture - INFO -     x0 = const(int, 0)                       ['x0']
    jump 40                                  []
    jump 40                                  []
2025-06-13 09:22:55,882 - print_capture - INFO -     jump 40                                  []
    jump 40                                  []
    jump 40                                  []
2025-06-13 09:22:55,882 - print_capture - INFO -     jump 40                                  []
label 40:
label 40:
2025-06-13 09:22:55,882 - print_capture - INFO - label 40:
label 40:
label 40:
2025-06-13 09:22:55,883 - print_capture - INFO - label 40:
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
2025-06-13 09:22:55,883 - print_capture - INFO -     $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
2025-06-13 09:22:55,883 - print_capture - INFO -     $const42.1.2 = const(int, -1)            ['$const42.1.2']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
2025-06-13 09:22:55,883 - print_capture - INFO -     x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
2025-06-13 09:22:55,883 - print_capture - INFO -     x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
2025-06-13 09:22:55,883 - print_capture - INFO -     $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
2025-06-13 09:22:55,883 - print_capture - INFO -     $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
2025-06-13 09:22:55,883 - print_capture - INFO -     $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
2025-06-13 09:22:55,883 - print_capture - INFO -     $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
2025-06-13 09:22:55,883 - print_capture - INFO -     bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
2025-06-13 09:22:55,883 - print_capture - INFO -     bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
2025-06-13 09:22:55,883 - print_capture - INFO -     $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
2025-06-13 09:22:55,883 - print_capture - INFO -     $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
2025-06-13 09:22:55,883 - print_capture - INFO -     $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
2025-06-13 09:22:55,883 - print_capture - INFO -     $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
2025-06-13 09:22:55,883 - print_capture - INFO -     branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
2025-06-13 09:22:55,883 - print_capture - INFO -     branch $60pred, 62, 70                   ['$60pred']
label 62:
label 62:
2025-06-13 09:22:55,883 - print_capture - INFO - label 62:
label 62:
label 62:
2025-06-13 09:22:55,883 - print_capture - INFO - label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
2025-06-13 09:22:55,883 - print_capture - INFO -     $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
2025-06-13 09:22:55,883 - print_capture - INFO -     $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 09:22:55,883 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 09:22:55,883 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
2025-06-13 09:22:55,883 - print_capture - INFO -     $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
2025-06-13 09:22:55,883 - print_capture - INFO -     $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
2025-06-13 09:22:55,883 - print_capture - INFO -     branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
2025-06-13 09:22:55,883 - print_capture - INFO -     branch $66pred, 68, 78                   ['$66pred']
label 68:
label 68:
2025-06-13 09:22:55,883 - print_capture - INFO - label 68:
label 68:
label 68:
2025-06-13 09:22:55,883 - print_capture - INFO - label 68:
    jump 74                                  []
    jump 74                                  []
2025-06-13 09:22:55,883 - print_capture - INFO -     jump 74                                  []
    jump 74                                  []
    jump 74                                  []
2025-06-13 09:22:55,883 - print_capture - INFO -     jump 74                                  []
label 70:
label 70:
2025-06-13 09:22:55,883 - print_capture - INFO - label 70:
label 70:
label 70:
2025-06-13 09:22:55,883 - print_capture - INFO - label 70:
    jump 78                                  []
    jump 78                                  []
2025-06-13 09:22:55,883 - print_capture - INFO -     jump 78                                  []
    jump 78                                  []
    jump 78                                  []
2025-06-13 09:22:55,883 - print_capture - INFO -     jump 78                                  []
label 74:
label 74:
2025-06-13 09:22:55,883 - print_capture - INFO - label 74:
label 74:
label 74:
2025-06-13 09:22:55,883 - print_capture - INFO - label 74:
    x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
2025-06-13 09:22:55,883 - print_capture - INFO -     x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
2025-06-13 09:22:55,883 - print_capture - INFO -     x1 = const(int, 0)                       ['x1']
    jump 78                                  []
    jump 78                                  []
2025-06-13 09:22:55,883 - print_capture - INFO -     jump 78                                  []
    jump 78                                  []
    jump 78                                  []
2025-06-13 09:22:55,883 - print_capture - INFO -     jump 78                                  []
label 78:
label 78:
2025-06-13 09:22:55,884 - print_capture - INFO - label 78:
label 78:
label 78:
2025-06-13 09:22:55,884 - print_capture - INFO - label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
2025-06-13 09:22:55,884 - print_capture - INFO -     bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
2025-06-13 09:22:55,884 - print_capture - INFO -     bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
2025-06-13 09:22:55,884 - print_capture - INFO -     $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
2025-06-13 09:22:55,884 - print_capture - INFO -     $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
2025-06-13 09:22:55,884 - print_capture - INFO -     branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
2025-06-13 09:22:55,884 - print_capture - INFO -     branch $80pred, 82, 102                  ['$80pred']
label 82:
label 82:
2025-06-13 09:22:55,884 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 09:22:55,884 - print_capture - INFO - label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
2025-06-13 09:22:55,884 - print_capture - INFO -     $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
2025-06-13 09:22:55,884 - print_capture - INFO -     $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
2025-06-13 09:22:55,884 - print_capture - INFO -     $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
2025-06-13 09:22:55,884 - print_capture - INFO -     $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
2025-06-13 09:22:55,884 - print_capture - INFO -     $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
2025-06-13 09:22:55,884 - print_capture - INFO -     $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
2025-06-13 09:22:55,884 - print_capture - INFO -     $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
2025-06-13 09:22:55,884 - print_capture - INFO -     $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
2025-06-13 09:22:55,884 - print_capture - INFO -     $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
2025-06-13 09:22:55,884 - print_capture - INFO -     $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
2025-06-13 09:22:55,884 - print_capture - INFO -     $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
2025-06-13 09:22:55,884 - print_capture - INFO -     $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
2025-06-13 09:22:55,884 - print_capture - INFO -     $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
2025-06-13 09:22:55,884 - print_capture - INFO -     $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
2025-06-13 09:22:55,884 - print_capture - INFO -     $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
2025-06-13 09:22:55,884 - print_capture - INFO -     $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
2025-06-13 09:22:55,884 - print_capture - INFO -     return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
2025-06-13 09:22:55,884 - print_capture - INFO -     return $100return_value.9                ['$100return_value.9']
label 102:
label 102:
2025-06-13 09:22:55,884 - print_capture - INFO - label 102:
label 102:
label 102:
2025-06-13 09:22:55,884 - print_capture - INFO - label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
2025-06-13 09:22:55,884 - print_capture - INFO -     $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
2025-06-13 09:22:55,884 - print_capture - INFO -     $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
2025-06-13 09:22:55,884 - print_capture - INFO -     $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
2025-06-13 09:22:55,884 - print_capture - INFO -     $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
2025-06-13 09:22:55,884 - print_capture - INFO -     $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
2025-06-13 09:22:55,884 - print_capture - INFO -     $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
2025-06-13 09:22:55,884 - print_capture - INFO -     $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
2025-06-13 09:22:55,884 - print_capture - INFO -     $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
2025-06-13 09:22:55,885 - print_capture - INFO -     $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
2025-06-13 09:22:55,885 - print_capture - INFO -     $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
2025-06-13 09:22:55,885 - print_capture - INFO -     $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
2025-06-13 09:22:55,885 - print_capture - INFO -     $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
2025-06-13 09:22:55,885 - print_capture - INFO -     $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
2025-06-13 09:22:55,885 - print_capture - INFO -     $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
2025-06-13 09:22:55,885 - print_capture - INFO -     $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
2025-06-13 09:22:55,885 - print_capture - INFO -     $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
2025-06-13 09:22:55,885 - print_capture - INFO -     return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
2025-06-13 09:22:55,885 - print_capture - INFO -     return $120return_value.9                ['$120return_value.9']
label 0:
label 0:
2025-06-13 09:22:56,025 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 09:22:56,025 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 09:22:56,025 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 09:22:56,025 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 09:22:56,025 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 09:22:56,025 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 09:22:56,025 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 09:22:56,025 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 09:22:56,025 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 09:22:56,025 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 09:22:56,025 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 09:22:56,025 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 09:22:56,025 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 09:22:56,025 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 09:22:56,025 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 09:22:56,025 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 09:22:56,025 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 09:22:56,025 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 09:22:56,026 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 09:22:56,026 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 09:22:56,026 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 09:22:56,026 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 09:22:56,026 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 09:22:56,026 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 09:22:56,026 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 09:22:56,026 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 09:22:56,026 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 09:22:56,026 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 09:22:56,026 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 09:22:56,026 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
label 0:
label 0:
2025-06-13 09:22:56,026 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 09:22:56,026 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 09:22:56,026 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 09:22:56,027 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 09:22:56,027 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 09:22:56,027 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 09:22:56,027 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 09:22:56,027 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 09:22:56,027 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 09:22:56,027 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 09:22:56,027 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 09:22:56,027 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 09:22:56,027 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 09:22:56,027 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 09:22:56,027 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 09:22:56,027 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 09:22:56,027 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 09:22:56,027 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 09:22:56,027 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 09:22:56,027 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 09:22:56,027 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 09:22:56,027 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 09:22:56,027 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 09:22:56,027 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 09:22:56,027 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 09:22:56,027 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 09:22:56,027 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 09:22:56,027 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 09:22:56,027 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 09:22:56,027 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
2025-06-13 09:22:56,158 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:22:56,158 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:22:56,160 - server - INFO - Starting transcription...
2025-06-13 09:22:59,583 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:22:59,583 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:22:59,585 - server - INFO - Starting transcription...
2025-06-13 09:23:00,458 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:23:00,458 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:23:00,459 - server - INFO - Starting transcription...
2025-06-13 09:23:01,313 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:23:01,313 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:23:01,314 - server - INFO - Starting transcription...
2025-06-13 09:23:02,782 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:23:02,783 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:23:02,784 - server - INFO - Starting transcription...
2025-06-13 09:23:12,561 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:23:12,561 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:23:12,562 - server - INFO - Starting transcription...
2025-06-13 09:23:14,794 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:23:14,794 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:23:14,796 - server - INFO - Starting transcription...
2025-06-13 09:23:17,900 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:23:17,900 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:23:17,902 - server - INFO - Starting transcription...
2025-06-13 09:23:21,746 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:23:21,746 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:23:21,747 - server - INFO - Starting transcription...
2025-06-13 09:23:26,857 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:23:26,858 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:23:26,859 - server - INFO - Starting transcription...
2025-06-13 09:23:33,894 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:23:33,894 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:23:33,895 - server - INFO - Starting transcription...
2025-06-13 09:23:35,352 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:23:35,352 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:23:35,354 - server - INFO - Starting transcription...
2025-06-13 09:23:40,599 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:23:40,599 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:23:40,601 - server - INFO - Starting transcription...
2025-06-13 09:23:45,535 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:23:45,535 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:23:45,536 - server - INFO - Starting transcription...
2025-06-13 09:23:46,410 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:23:46,410 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:23:46,412 - server - INFO - Starting transcription...
2025-06-13 09:23:48,702 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:23:48,702 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:23:48,703 - server - INFO - Starting transcription...
2025-06-13 09:23:49,626 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:23:49,626 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:23:49,628 - server - INFO - Starting transcription...
2025-06-13 09:23:50,510 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:23:50,510 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:23:50,511 - server - INFO - Starting transcription...
2025-06-13 09:23:54,826 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:23:54,826 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:23:54,827 - server - INFO - Starting transcription...
2025-06-13 09:23:59,520 - server - INFO - Shutting down application
2025-06-13 09:24:00,648 - server - INFO - Loading Whisper-AT model: small
2025-06-13 09:24:02,434 - server - INFO - Model loaded successfully
label 0:
label 0:
2025-06-13 09:24:03,905 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 09:24:03,906 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 09:24:03,906 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 09:24:03,906 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 09:24:03,906 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
    threshold = arg(1, name=threshold)       ['threshold']
2025-06-13 09:24:03,906 - print_capture - INFO -     threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 09:24:03,906 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
2025-06-13 09:24:03,906 - print_capture - INFO -     zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 09:24:03,906 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 09:24:03,906 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
2025-06-13 09:24:03,906 - print_capture - INFO -     x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
2025-06-13 09:24:03,906 - print_capture - INFO -     x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
2025-06-13 09:24:03,906 - print_capture - INFO -     $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
2025-06-13 09:24:03,906 - print_capture - INFO -     $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
2025-06-13 09:24:03,906 - print_capture - INFO -     $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
2025-06-13 09:24:03,906 - print_capture - INFO -     $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
2025-06-13 09:24:03,906 - print_capture - INFO -     bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
2025-06-13 09:24:03,906 - print_capture - INFO -     bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
2025-06-13 09:24:03,906 - print_capture - INFO -     $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
2025-06-13 09:24:03,906 - print_capture - INFO -     $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
2025-06-13 09:24:03,906 - print_capture - INFO -     $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
2025-06-13 09:24:03,906 - print_capture - INFO -     $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
2025-06-13 09:24:03,906 - print_capture - INFO -     branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
    branch $22pred, 24, 32                   ['$22pred']
2025-06-13 09:24:03,906 - print_capture - INFO -     branch $22pred, 24, 32                   ['$22pred']
label 24:
label 24:
2025-06-13 09:24:03,906 - print_capture - INFO - label 24:
label 24:
label 24:
2025-06-13 09:24:03,906 - print_capture - INFO - label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
2025-06-13 09:24:03,906 - print_capture - INFO -     $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
2025-06-13 09:24:03,906 - print_capture - INFO -     $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
2025-06-13 09:24:03,906 - print_capture - INFO -     bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
2025-06-13 09:24:03,907 - print_capture - INFO -     bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
2025-06-13 09:24:03,907 - print_capture - INFO -     $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
2025-06-13 09:24:03,907 - print_capture - INFO -     $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
2025-06-13 09:24:03,907 - print_capture - INFO -     branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
    branch $28pred, 30, 40                   ['$28pred']
2025-06-13 09:24:03,907 - print_capture - INFO -     branch $28pred, 30, 40                   ['$28pred']
label 30:
label 30:
2025-06-13 09:24:03,907 - print_capture - INFO - label 30:
label 30:
label 30:
2025-06-13 09:24:03,907 - print_capture - INFO - label 30:
    jump 36                                  []
    jump 36                                  []
2025-06-13 09:24:03,907 - print_capture - INFO -     jump 36                                  []
    jump 36                                  []
    jump 36                                  []
2025-06-13 09:24:03,907 - print_capture - INFO -     jump 36                                  []
label 32:
label 32:
2025-06-13 09:24:03,907 - print_capture - INFO - label 32:
label 32:
label 32:
2025-06-13 09:24:03,907 - print_capture - INFO - label 32:
    jump 40                                  []
    jump 40                                  []
2025-06-13 09:24:03,907 - print_capture - INFO -     jump 40                                  []
    jump 40                                  []
    jump 40                                  []
2025-06-13 09:24:03,907 - print_capture - INFO -     jump 40                                  []
label 36:
label 36:
2025-06-13 09:24:03,907 - print_capture - INFO - label 36:
label 36:
label 36:
2025-06-13 09:24:03,907 - print_capture - INFO - label 36:
    x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
2025-06-13 09:24:03,907 - print_capture - INFO -     x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
    x0 = const(int, 0)                       ['x0']
2025-06-13 09:24:03,907 - print_capture - INFO -     x0 = const(int, 0)                       ['x0']
    jump 40                                  []
    jump 40                                  []
2025-06-13 09:24:03,907 - print_capture - INFO -     jump 40                                  []
    jump 40                                  []
    jump 40                                  []
2025-06-13 09:24:03,907 - print_capture - INFO -     jump 40                                  []
label 40:
label 40:
2025-06-13 09:24:03,907 - print_capture - INFO - label 40:
label 40:
label 40:
2025-06-13 09:24:03,907 - print_capture - INFO - label 40:
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
2025-06-13 09:24:03,907 - print_capture - INFO -     $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
2025-06-13 09:24:03,907 - print_capture - INFO -     $const42.1.2 = const(int, -1)            ['$const42.1.2']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
2025-06-13 09:24:03,907 - print_capture - INFO -     x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
2025-06-13 09:24:03,907 - print_capture - INFO -     x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
2025-06-13 09:24:03,907 - print_capture - INFO -     $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
2025-06-13 09:24:03,907 - print_capture - INFO -     $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
2025-06-13 09:24:03,907 - print_capture - INFO -     $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
2025-06-13 09:24:03,907 - print_capture - INFO -     $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
2025-06-13 09:24:03,907 - print_capture - INFO -     bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
2025-06-13 09:24:03,907 - print_capture - INFO -     bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
2025-06-13 09:24:03,907 - print_capture - INFO -     $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
2025-06-13 09:24:03,907 - print_capture - INFO -     $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
2025-06-13 09:24:03,907 - print_capture - INFO -     $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
2025-06-13 09:24:03,907 - print_capture - INFO -     $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
2025-06-13 09:24:03,908 - print_capture - INFO -     branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
    branch $60pred, 62, 70                   ['$60pred']
2025-06-13 09:24:03,908 - print_capture - INFO -     branch $60pred, 62, 70                   ['$60pred']
label 62:
label 62:
2025-06-13 09:24:03,908 - print_capture - INFO - label 62:
label 62:
label 62:
2025-06-13 09:24:03,908 - print_capture - INFO - label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
2025-06-13 09:24:03,908 - print_capture - INFO -     $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
2025-06-13 09:24:03,908 - print_capture - INFO -     $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 09:24:03,908 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
2025-06-13 09:24:03,908 - print_capture - INFO -     bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
2025-06-13 09:24:03,908 - print_capture - INFO -     $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
2025-06-13 09:24:03,908 - print_capture - INFO -     $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
2025-06-13 09:24:03,908 - print_capture - INFO -     branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
    branch $66pred, 68, 78                   ['$66pred']
2025-06-13 09:24:03,908 - print_capture - INFO -     branch $66pred, 68, 78                   ['$66pred']
label 68:
label 68:
2025-06-13 09:24:03,908 - print_capture - INFO - label 68:
label 68:
label 68:
2025-06-13 09:24:03,908 - print_capture - INFO - label 68:
    jump 74                                  []
    jump 74                                  []
2025-06-13 09:24:03,908 - print_capture - INFO -     jump 74                                  []
    jump 74                                  []
    jump 74                                  []
2025-06-13 09:24:03,908 - print_capture - INFO -     jump 74                                  []
label 70:
label 70:
2025-06-13 09:24:03,908 - print_capture - INFO - label 70:
label 70:
label 70:
2025-06-13 09:24:03,908 - print_capture - INFO - label 70:
    jump 78                                  []
    jump 78                                  []
2025-06-13 09:24:03,908 - print_capture - INFO -     jump 78                                  []
    jump 78                                  []
    jump 78                                  []
2025-06-13 09:24:03,908 - print_capture - INFO -     jump 78                                  []
label 74:
label 74:
2025-06-13 09:24:03,908 - print_capture - INFO - label 74:
label 74:
label 74:
2025-06-13 09:24:03,908 - print_capture - INFO - label 74:
    x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
2025-06-13 09:24:03,908 - print_capture - INFO -     x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
    x1 = const(int, 0)                       ['x1']
2025-06-13 09:24:03,908 - print_capture - INFO -     x1 = const(int, 0)                       ['x1']
    jump 78                                  []
    jump 78                                  []
2025-06-13 09:24:03,908 - print_capture - INFO -     jump 78                                  []
    jump 78                                  []
    jump 78                                  []
2025-06-13 09:24:03,908 - print_capture - INFO -     jump 78                                  []
label 78:
label 78:
2025-06-13 09:24:03,908 - print_capture - INFO - label 78:
label 78:
label 78:
2025-06-13 09:24:03,908 - print_capture - INFO - label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
2025-06-13 09:24:03,908 - print_capture - INFO -     bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
2025-06-13 09:24:03,908 - print_capture - INFO -     bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
2025-06-13 09:24:03,908 - print_capture - INFO -     $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
2025-06-13 09:24:03,908 - print_capture - INFO -     $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
2025-06-13 09:24:03,908 - print_capture - INFO -     branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
    branch $80pred, 82, 102                  ['$80pred']
2025-06-13 09:24:03,908 - print_capture - INFO -     branch $80pred, 82, 102                  ['$80pred']
label 82:
label 82:
2025-06-13 09:24:03,908 - print_capture - INFO - label 82:
label 82:
label 82:
2025-06-13 09:24:03,909 - print_capture - INFO - label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
2025-06-13 09:24:03,909 - print_capture - INFO -     $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
2025-06-13 09:24:03,909 - print_capture - INFO -     $82load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
2025-06-13 09:24:03,909 - print_capture - INFO -     $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
2025-06-13 09:24:03,909 - print_capture - INFO -     $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
2025-06-13 09:24:03,909 - print_capture - INFO -     $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
2025-06-13 09:24:03,909 - print_capture - INFO -     $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
2025-06-13 09:24:03,909 - print_capture - INFO -     $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
2025-06-13 09:24:03,909 - print_capture - INFO -     $90load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
2025-06-13 09:24:03,909 - print_capture - INFO -     $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
2025-06-13 09:24:03,909 - print_capture - INFO -     $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
2025-06-13 09:24:03,909 - print_capture - INFO -     $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
2025-06-13 09:24:03,909 - print_capture - INFO -     $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
2025-06-13 09:24:03,909 - print_capture - INFO -     $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
2025-06-13 09:24:03,909 - print_capture - INFO -     $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
2025-06-13 09:24:03,909 - print_capture - INFO -     $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
2025-06-13 09:24:03,909 - print_capture - INFO -     $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
2025-06-13 09:24:03,909 - print_capture - INFO -     return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
    return $100return_value.9                ['$100return_value.9']
2025-06-13 09:24:03,909 - print_capture - INFO -     return $100return_value.9                ['$100return_value.9']
label 102:
label 102:
2025-06-13 09:24:03,909 - print_capture - INFO - label 102:
label 102:
label 102:
2025-06-13 09:24:03,909 - print_capture - INFO - label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
2025-06-13 09:24:03,909 - print_capture - INFO -     $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
2025-06-13 09:24:03,909 - print_capture - INFO -     $102load_global.0 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
2025-06-13 09:24:03,909 - print_capture - INFO -     $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
2025-06-13 09:24:03,909 - print_capture - INFO -     $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
2025-06-13 09:24:03,909 - print_capture - INFO -     $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
2025-06-13 09:24:03,909 - print_capture - INFO -     $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
2025-06-13 09:24:03,909 - print_capture - INFO -     $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
2025-06-13 09:24:03,909 - print_capture - INFO -     $110load_global.4 = global(np: <module 'numpy' from '/root/anaconda3/envs/wh_at_env/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
2025-06-13 09:24:03,909 - print_capture - INFO -     $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
2025-06-13 09:24:03,909 - print_capture - INFO -     $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
2025-06-13 09:24:03,909 - print_capture - INFO -     $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
2025-06-13 09:24:03,910 - print_capture - INFO -     $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
2025-06-13 09:24:03,910 - print_capture - INFO -     $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
2025-06-13 09:24:03,910 - print_capture - INFO -     $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
2025-06-13 09:24:03,910 - print_capture - INFO -     $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
2025-06-13 09:24:03,910 - print_capture - INFO -     $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
2025-06-13 09:24:03,910 - print_capture - INFO -     return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
    return $120return_value.9                ['$120return_value.9']
2025-06-13 09:24:03,910 - print_capture - INFO -     return $120return_value.9                ['$120return_value.9']
label 0:
label 0:
2025-06-13 09:24:04,051 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 09:24:04,051 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 09:24:04,051 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 09:24:04,051 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 09:24:04,051 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 09:24:04,051 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 09:24:04,051 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 09:24:04,051 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 09:24:04,051 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 09:24:04,051 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 09:24:04,051 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 09:24:04,051 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 09:24:04,051 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 09:24:04,051 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 09:24:04,051 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 09:24:04,051 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 09:24:04,051 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 09:24:04,051 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 09:24:04,051 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 09:24:04,051 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 09:24:04,051 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 09:24:04,051 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 09:24:04,052 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 09:24:04,052 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 09:24:04,052 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 09:24:04,052 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 09:24:04,052 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 09:24:04,052 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 09:24:04,052 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 09:24:04,052 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
label 0:
label 0:
2025-06-13 09:24:04,052 - print_capture - INFO - label 0:
label 0:
label 0:
2025-06-13 09:24:04,052 - print_capture - INFO - label 0:
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 09:24:04,052 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
    x = arg(0, name=x)                       ['x']
2025-06-13 09:24:04,053 - print_capture - INFO -     x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 09:24:04,053 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
2025-06-13 09:24:04,053 - print_capture - INFO -     $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 09:24:04,053 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
2025-06-13 09:24:04,053 - print_capture - INFO -     $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 09:24:04,053 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
2025-06-13 09:24:04,053 - print_capture - INFO -     $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 09:24:04,053 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
2025-06-13 09:24:04,053 - print_capture - INFO -     $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 09:24:04,053 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
2025-06-13 09:24:04,053 - print_capture - INFO -     $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 09:24:04,053 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
2025-06-13 09:24:04,053 - print_capture - INFO -     $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 09:24:04,053 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
2025-06-13 09:24:04,053 - print_capture - INFO -     $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 09:24:04,053 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
2025-06-13 09:24:04,053 - print_capture - INFO -     $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 09:24:04,053 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
2025-06-13 09:24:04,053 - print_capture - INFO -     $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 09:24:04,053 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
2025-06-13 09:24:04,053 - print_capture - INFO -     $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 09:24:04,053 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
2025-06-13 09:24:04,053 - print_capture - INFO -     $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 09:24:04,053 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
2025-06-13 09:24:04,053 - print_capture - INFO -     $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 09:24:04,053 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
    return $32return_value.15                ['$32return_value.15']
2025-06-13 09:24:04,053 - print_capture - INFO -     return $32return_value.15                ['$32return_value.15']
2025-06-13 09:24:04,186 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:24:04,186 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:24:04,189 - server - INFO - Starting transcription...
2025-06-13 09:24:08,887 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:24:08,887 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:24:08,889 - server - INFO - Starting transcription...
2025-06-13 09:24:14,474 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:24:14,474 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:24:14,475 - server - INFO - Starting transcription...
2025-06-13 09:24:15,171 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:24:15,171 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:24:15,172 - server - INFO - Starting transcription...
2025-06-13 09:24:22,155 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:24:22,155 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:24:22,157 - server - INFO - Starting transcription...
2025-06-13 09:24:25,671 - server - INFO - Original audio sampling rate: 8000 Hz
2025-06-13 09:24:25,671 - server - INFO - Converting audio to 16000 Hz...
2025-06-13 09:24:25,673 - server - INFO - Starting transcription...
